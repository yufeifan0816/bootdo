2019-06-04 15:30:01 -Starting BootdoApplication on LAPTOP-ELP5M68R with PID 8264 (D:\workspace\bootdo\bootdo\target\classes started by Lenovo in D:\workspace\bootdo\bootdo)
2019-06-04 15:30:01 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-06-04 15:30:01 -The following profiles are active: dev
2019-06-04 15:30:01 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@3ba68ab1: startup date [Tue Jun 04 15:30:01 CST 2019]; root of context hierarchy
2019-06-04 15:30:04 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-06-04 15:30:05 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$61f8357e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-04 15:30:05 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$54516425] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-04 15:30:05 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-04 15:30:05 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-04 15:30:05 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-04 15:30:05 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-06-04 15:30:05 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-06-04 15:30:05 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-04 15:30:05 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-04 15:30:05 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-04 15:30:05 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-04 15:30:06 -Tomcat initialized with port(s): 8888 (http)
2019-06-04 15:30:06 -Initializing ProtocolHandler ["http-nio-8888"]
2019-06-04 15:30:06 -Starting service [Tomcat]
2019-06-04 15:30:06 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-06-04 15:30:06 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [F:\yff\jdk1.8\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;D:\app\Lenovo\product\11.2.0\dbhome_1\bin;\bin;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\iCLS\;C:\Program Files\Intel\Intel(R) Management Engine Components\iCLS\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;F:\yff\jdk1.8\BIN;D:\Program Files\develop\apache-maven-3.3.9\BIN;D:\Program Files\matlab\v81\runtime\win64;D:\Program Files\matlab\v81\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;F:\yff\redis64;D:\Program Files\Notepad++;D:\Program Files\mysql-5.7.24-winx64\BIN;D:\Program Files\matlab\v81\bin\win64;D:\Program Files\matlab\v81\runtime\win64;D:\Program Files\develop\SVN\bin;D:\Program Files\develop\apache-tomcat-8.5.8-ltcins-common-4280\bin;D:\Program Files\develop\apache-tomcat-8.5.8-ltcins-common-4080\bin;D:\Program Files\develop\zookeeper-3.4.10\BIN;D:\Program Files\develop\Git\cmd;C:\Users\Lenovo\AppData\Local\Microsoft\WindowsApps;C:\Users\Lenovo\AppData\Local\GitHubDesktop\bin;.]
2019-06-04 15:30:06 -Initializing Spring embedded WebApplicationContext
2019-06-04 15:30:06 -Root WebApplicationContext: initialization completed in 4364 ms
2019-06-04 15:30:06 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-06-04 15:30:06 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-06-04 15:30:06 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-06-04 15:30:06 -Mapping filter: 'requestContextFilter' to: [/*]
2019-06-04 15:30:06 -Filter xssFilter was not registered (disabled)
2019-06-04 15:30:06 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-06-04 15:30:06 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-06-04 15:30:06 -Servlet statViewServlet mapped to [/druid/*]
2019-06-04 15:30:06 -Servlet dispatcherServlet mapped to [/]
2019-06-04 15:30:06 -{dataSource-1} inited
2019-06-04 15:30:07 -ProcessEngine default created
2019-06-04 15:30:08 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@3ba68ab1: startup date [Tue Jun 04 15:30:01 CST 2019]; root of context hierarchy
2019-06-04 15:30:08 -Using default implementation for ThreadExecutor
2019-06-04 15:30:08 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-06-04 15:30:08 -Quartz Scheduler v.2.2.1 created.
2019-06-04 15:30:08 -RAMJobStore initialized.
2019-06-04 15:30:08 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-06-04 15:30:08 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-06-04 15:30:08 -Quartz scheduler version: 2.2.1
2019-06-04 15:30:08 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@2cb97328
2019-06-04 15:30:08 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-06-04 15:30:08 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-06-04 15:30:09 -Mapped "{[/activiti/model/{id}],methods=[DELETE]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.ModelController.remove(java.lang.String)
2019-06-04 15:30:09 -Mapped "{[/activiti/model/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.activiti.controller.ModelController.list(int,int)
2019-06-04 15:30:09 -Mapped "{[/activiti/model/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.ModelController.batchRemove(java.lang.String[])
2019-06-04 15:30:09 -Mapped "{[/activiti/model],methods=[GET]}" onto org.springframework.web.servlet.ModelAndView com.bootdo.activiti.controller.ModelController.model()
2019-06-04 15:30:09 -Mapped "{[/activiti/model/deploy/{id}],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.ModelController.deploy(java.lang.String) throws java.lang.Exception
2019-06-04 15:30:09 -Mapped "{[/activiti/model/add]}" onto public void com.bootdo.activiti.controller.ModelController.newModel(javax.servlet.http.HttpServletResponse) throws java.io.UnsupportedEncodingException
2019-06-04 15:30:09 -Mapped "{[/activiti/model/export/{id}],methods=[GET]}" onto public void com.bootdo.activiti.controller.ModelController.exportToXml(java.lang.String,javax.servlet.http.HttpServletResponse)
2019-06-04 15:30:09 -Mapped "{[/activiti/model/{modelId}/save],methods=[PUT]}" onto public void com.bootdo.activiti.controller.ModelController.saveModel(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2019-06-04 15:30:09 -Mapped "{[/activiti/editor/stencilset],methods=[GET],produces=[application/json;charset=utf-8]}" onto public java.lang.String com.bootdo.activiti.controller.ModelController.getStencilset()
2019-06-04 15:30:09 -Mapped "{[/activiti/model/{modelId}/json],methods=[GET]}" onto public com.fasterxml.jackson.databind.node.ObjectNode com.bootdo.activiti.controller.ModelController.getEditorJson(java.lang.String)
2019-06-04 15:30:09 -Mapped "{[/activiti/model/edit/{id}],methods=[GET]}" onto public void com.bootdo.activiti.controller.ModelController.edit(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-06-04 15:30:09 -Mapped "{[/activiti/process/add],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.activiti.controller.ProcessController.add()
2019-06-04 15:30:09 -Mapped "{[/activiti/process/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.ProcessController.remove(java.lang.String)
2019-06-04 15:30:09 -Mapped "{[/activiti/process/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.activiti.controller.ProcessController.list(int,int)
2019-06-04 15:30:09 -Mapped "{[/activiti/process/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.ProcessController.batchRemove(java.lang.String[])
2019-06-04 15:30:09 -Mapped "{[/activiti/process],methods=[GET]}" onto org.springframework.web.servlet.ModelAndView com.bootdo.activiti.controller.ProcessController.process()
2019-06-04 15:30:09 -Mapped "{[/activiti/process/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.ProcessController.deploy(java.lang.String,java.lang.String,org.springframework.web.multipart.MultipartFile)
2019-06-04 15:30:09 -Mapped "{[/activiti/process/convertToModel/{procDefId}]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.ProcessController.convertToModel(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes) throws java.io.UnsupportedEncodingException,javax.xml.stream.XMLStreamException
2019-06-04 15:30:09 -Mapped "{[/activiti/process/resource/read/{xml}/{id}]}" onto public void com.bootdo.activiti.controller.ProcessController.resourceRead(java.lang.String,java.lang.String,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-06-04 15:30:09 -Mapped "{[/act/salary/form],methods=[GET]}" onto java.lang.String com.bootdo.activiti.controller.SalaryController.add()
2019-06-04 15:30:09 -Mapped "{[/act/salary/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.SalaryController.remove(java.lang.String)
2019-06-04 15:30:09 -Mapped "{[/act/salary/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.SalaryController.remove(java.lang.String[])
2019-06-04 15:30:09 -Mapped "{[/act/salary/update]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.SalaryController.update(com.bootdo.activiti.domain.SalaryDO)
2019-06-04 15:30:09 -Mapped "{[/act/salary/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.activiti.controller.SalaryController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-04 15:30:09 -Mapped "{[/act/salary/form/{taskId}],methods=[GET]}" onto java.lang.String com.bootdo.activiti.controller.SalaryController.edit(java.lang.String,org.springframework.ui.Model)
2019-06-04 15:30:09 -Mapped "{[/act/salary/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.SalaryController.saveOrUpdate(com.bootdo.activiti.domain.SalaryDO)
2019-06-04 15:30:09 -Mapped "{[/act/salary],methods=[GET]}" onto java.lang.String com.bootdo.activiti.controller.SalaryController.Salary()
2019-06-04 15:30:09 -Mapped "{[/activiti/task/form/{procDefId}/{taskId}],methods=[GET]}" onto public void com.bootdo.activiti.controller.TaskController.form(java.lang.String,java.lang.String,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-06-04 15:30:09 -Mapped "{[/activiti/task/gotoList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.activiti.controller.TaskController.list(int,int)
2019-06-04 15:30:09 -Mapped "{[/activiti/task/goto],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.activiti.controller.TaskController.gotoTask()
2019-06-04 15:30:09 -Mapped "{[/activiti/task/trace/photo/{procDefId}/{execId}]}" onto public void com.bootdo.activiti.controller.TaskController.tracePhoto(java.lang.String,java.lang.String,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-06-04 15:30:09 -Mapped "{[/activiti/task/todo],methods=[GET]}" onto org.springframework.web.servlet.ModelAndView com.bootdo.activiti.controller.TaskController.todo()
2019-06-04 15:30:09 -Mapped "{[/activiti/task/todoList],methods=[GET]}" onto java.util.List<com.bootdo.activiti.vo.TaskVO> com.bootdo.activiti.controller.TaskController.todoList()
2019-06-04 15:30:09 -Mapped "{[/activiti/task/form/{procDefId}],methods=[GET]}" onto public void com.bootdo.activiti.controller.TaskController.startForm(java.lang.String,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-06-04 15:30:09 -Mapped "{[/blog/open/post/{cid}],methods=[GET]}" onto java.lang.String com.bootdo.blog.controller.BlogController.post(java.lang.Long,org.springframework.ui.Model)
2019-06-04 15:30:09 -Mapped "{[/blog/open/page/{categories}],methods=[GET]}" onto java.lang.String com.bootdo.blog.controller.BlogController.about(java.lang.String,org.springframework.ui.Model)
2019-06-04 15:30:09 -Mapped "{[/blog/open/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.blog.controller.BlogController.opentList(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-04 15:30:09 -Mapped "{[/blog],methods=[GET]}" onto java.lang.String com.bootdo.blog.controller.BlogController.blog()
2019-06-04 15:30:09 -Mapped "{[/blog/bContent/add],methods=[GET]}" onto java.lang.String com.bootdo.blog.controller.ContentController.add()
2019-06-04 15:30:09 -Mapped "{[/blog/bContent/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.blog.controller.ContentController.remove(java.lang.Long)
2019-06-04 15:30:09 -Mapped "{[/blog/bContent/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.blog.controller.ContentController.remove(java.lang.Long[])
2019-06-04 15:30:09 -Mapped "{[/blog/bContent/update]}" onto public com.bootdo.common.utils.R com.bootdo.blog.controller.ContentController.update(com.bootdo.blog.domain.ContentDO)
2019-06-04 15:30:09 -Mapped "{[/blog/bContent/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.blog.controller.ContentController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-04 15:30:09 -Mapped "{[/blog/bContent/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.blog.controller.ContentController.save(com.bootdo.blog.domain.ContentDO)
2019-06-04 15:30:09 -Mapped "{[/blog/bContent/edit/{cid}],methods=[GET]}" onto java.lang.String com.bootdo.blog.controller.ContentController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-04 15:30:09 -Mapped "{[/blog/bContent],methods=[GET]}" onto java.lang.String com.bootdo.blog.controller.ContentController.bContent()
2019-06-04 15:30:09 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-06-04 15:30:09 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-06-04 15:30:09 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-06-04 15:30:09 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-06-04 15:30:09 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-04 15:30:09 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-06-04 15:30:09 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-06-04 15:30:09 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-04 15:30:09 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-06-04 15:30:09 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-06-04 15:30:09 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-06-04 15:30:09 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-06-04 15:30:09 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-06-04 15:30:09 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-06-04 15:30:09 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-06-04 15:30:09 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-04 15:30:09 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-06-04 15:30:09 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-06-04 15:30:09 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-04 15:30:09 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-06-04 15:30:09 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-06-04 15:30:09 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-04 15:30:09 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-06-04 15:30:09 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-06-04 15:30:09 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-06-04 15:30:09 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-06-04 15:30:09 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-06-04 15:30:09 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-06-04 15:30:09 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-06-04 15:30:09 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-06-04 15:30:09 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-06-04 15:30:09 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-04 15:30:09 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-06-04 15:30:09 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-06-04 15:30:09 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-04 15:30:09 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-06-04 15:30:09 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-06-04 15:30:09 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-06-04 15:30:09 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-06-04 15:30:09 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-04 15:30:09 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-06-04 15:30:09 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-06-04 15:30:09 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-06-04 15:30:09 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-06-04 15:30:09 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-06-04 15:30:09 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-06-04 15:30:09 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-06-04 15:30:09 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-06-04 15:30:09 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-04 15:30:09 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-06-04 15:30:09 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-06-04 15:30:09 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-04 15:30:09 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-06-04 15:30:09 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-06-04 15:30:09 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-04 15:30:09 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-06-04 15:30:09 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-06-04 15:30:09 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-06-04 15:30:09 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-06-04 15:30:09 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-06-04 15:30:09 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-06-04 15:30:09 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-06-04 15:30:09 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-06-04 15:30:09 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-06-04 15:30:09 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-04 15:30:09 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-06-04 15:30:09 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-06-04 15:30:09 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String)
2019-06-04 15:30:09 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-06-04 15:30:09 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-06-04 15:30:09 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-06-04 15:30:09 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-06-04 15:30:09 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-06-04 15:30:09 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-06-04 15:30:09 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-04 15:30:09 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-06-04 15:30:09 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-06-04 15:30:09 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-06-04 15:30:09 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-06-04 15:30:09 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-06-04 15:30:09 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-06-04 15:30:09 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-06-04 15:30:09 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-06-04 15:30:09 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-06-04 15:30:09 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-06-04 15:30:09 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-06-04 15:30:09 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-06-04 15:30:09 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-04 15:30:09 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-06-04 15:30:09 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-06-04 15:30:09 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-06-04 15:30:09 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-06-04 15:30:09 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-04 15:30:09 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-06-04 15:30:09 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-06-04 15:30:09 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-06-04 15:30:09 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-04 15:30:09 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-06-04 15:30:09 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-06-04 15:30:09 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-06-04 15:30:09 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-06-04 15:30:09 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-06-04 15:30:09 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-06-04 15:30:09 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-06-04 15:30:09 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-06-04 15:30:09 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-06-04 15:30:09 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-06-04 15:30:09 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-06-04 15:30:09 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-06-04 15:30:09 -Mapped "{[/wxServer],methods=[GET]}" onto public void org.weixin4j.spring.web.WeixinJieruController.get(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-06-04 15:30:09 -Mapped "{[/wxServer],methods=[POST]}" onto public void org.weixin4j.spring.web.WeixinJieruController.post(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-06-04 15:30:09 -Mapped "{[/weixin/weixinUser/add],methods=[GET]}" onto java.lang.String com.bootdo.weixin.controller.WeixinUserController.add()
2019-06-04 15:30:09 -Mapped "{[/weixin/weixinUser/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.weixin.controller.WeixinUserController.remove(java.lang.Long)
2019-06-04 15:30:09 -Mapped "{[/weixin/weixinUser/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.weixin.controller.WeixinUserController.remove(java.lang.Long[])
2019-06-04 15:30:09 -Mapped "{[/weixin/weixinUser/update]}" onto public com.bootdo.common.utils.R com.bootdo.weixin.controller.WeixinUserController.update(com.bootdo.weixin.domain.WeixinUserDO)
2019-06-04 15:30:09 -Mapped "{[/weixin/weixinUser/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.weixin.controller.WeixinUserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-04 15:30:09 -Mapped "{[/weixin/weixinUser/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.weixin.controller.WeixinUserController.save(com.bootdo.weixin.domain.WeixinUserDO)
2019-06-04 15:30:09 -Mapped "{[/weixin/weixinUser/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.weixin.controller.WeixinUserController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-04 15:30:09 -Mapped "{[/weixin/weixinUser],methods=[GET]}" onto java.lang.String com.bootdo.weixin.controller.WeixinUserController.WeixinUser()
2019-06-04 15:30:09 -Mapped "{[/xjbg/order/add],methods=[GET]}" onto java.lang.String com.bootdo.xjbg.controller.OrderController.add()
2019-06-04 15:30:09 -Mapped "{[/xjbg/order/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.xjbg.controller.OrderController.remove(java.lang.Long)
2019-06-04 15:30:09 -Mapped "{[/xjbg/order/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.xjbg.controller.OrderController.remove(java.lang.Long[])
2019-06-04 15:30:09 -Mapped "{[/xjbg/order/update]}" onto public com.bootdo.common.utils.R com.bootdo.xjbg.controller.OrderController.update(com.bootdo.xjbg.domain.OrderDO)
2019-06-04 15:30:09 -Mapped "{[/xjbg/order/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.xjbg.controller.OrderController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-04 15:30:09 -Mapped "{[/xjbg/order/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.xjbg.controller.OrderController.save(com.bootdo.xjbg.domain.OrderDO)
2019-06-04 15:30:09 -Mapped "{[/xjbg/order/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.xjbg.controller.OrderController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-04 15:30:09 -Mapped "{[/xjbg/order],methods=[GET]}" onto java.lang.String com.bootdo.xjbg.controller.OrderController.Order()
2019-06-04 15:30:09 -Mapped "{[/xjbg/orderItem/add],methods=[GET]}" onto java.lang.String com.bootdo.xjbg.controller.OrderItemController.add()
2019-06-04 15:30:09 -Mapped "{[/xjbg/orderItem/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.xjbg.controller.OrderItemController.remove(java.lang.Long)
2019-06-04 15:30:09 -Mapped "{[/xjbg/orderItem/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.xjbg.controller.OrderItemController.remove(java.lang.Long[])
2019-06-04 15:30:09 -Mapped "{[/xjbg/orderItem/update]}" onto public com.bootdo.common.utils.R com.bootdo.xjbg.controller.OrderItemController.update(com.bootdo.xjbg.domain.OrderItemDO)
2019-06-04 15:30:09 -Mapped "{[/xjbg/orderItem/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.xjbg.controller.OrderItemController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-04 15:30:09 -Mapped "{[/xjbg/orderItem/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.xjbg.controller.OrderItemController.save(com.bootdo.xjbg.domain.OrderItemDO)
2019-06-04 15:30:09 -Mapped "{[/xjbg/orderItem/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.xjbg.controller.OrderItemController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-04 15:30:09 -Mapped "{[/xjbg/orderItem],methods=[GET]}" onto java.lang.String com.bootdo.xjbg.controller.OrderItemController.OrderItem()
2019-06-04 15:30:09 -Mapped "{[/xjbg/product/add],methods=[GET]}" onto java.lang.String com.bootdo.xjbg.controller.ProductController.add()
2019-06-04 15:30:09 -Mapped "{[/xjbg/product/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.xjbg.controller.ProductController.remove(java.lang.Long)
2019-06-04 15:30:09 -Mapped "{[/xjbg/product/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.xjbg.controller.ProductController.remove(java.lang.Long[])
2019-06-04 15:30:09 -Mapped "{[/xjbg/product/update]}" onto public com.bootdo.common.utils.R com.bootdo.xjbg.controller.ProductController.update(com.bootdo.xjbg.domain.ProductDO,org.springframework.web.multipart.MultipartFile[])
2019-06-04 15:30:09 -Mapped "{[/xjbg/product/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.xjbg.controller.ProductController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-04 15:30:09 -Mapped "{[/xjbg/product/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.xjbg.controller.ProductController.save(com.bootdo.xjbg.domain.ProductDO,org.springframework.web.multipart.MultipartFile[])
2019-06-04 15:30:09 -Mapped "{[/xjbg/product/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.xjbg.controller.ProductController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-04 15:30:09 -Mapped "{[/xjbg/product],methods=[GET]}" onto java.lang.String com.bootdo.xjbg.controller.ProductController.Product()
2019-06-04 15:30:09 -Mapped "{[/xjbg/room/add],methods=[GET]}" onto java.lang.String com.bootdo.xjbg.controller.RoomController.add(org.springframework.ui.Model)
2019-06-04 15:30:09 -Mapped "{[/xjbg/room/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.xjbg.controller.RoomController.remove(java.lang.Integer[])
2019-06-04 15:30:09 -Mapped "{[/xjbg/room/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.xjbg.controller.RoomController.remove(java.lang.Integer)
2019-06-04 15:30:09 -Mapped "{[/xjbg/room/update]}" onto public com.bootdo.common.utils.R com.bootdo.xjbg.controller.RoomController.update(com.bootdo.xjbg.domain.RoomDO)
2019-06-04 15:30:09 -Mapped "{[/xjbg/room/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.xjbg.controller.RoomController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-04 15:30:09 -Mapped "{[/xjbg/room/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.xjbg.controller.RoomController.save(com.bootdo.xjbg.domain.RoomDO)
2019-06-04 15:30:09 -Mapped "{[/xjbg/room/operation/{roomId}],methods=[GET]}" onto java.lang.String com.bootdo.xjbg.controller.RoomController.operation(java.lang.Integer,org.springframework.ui.Model)
2019-06-04 15:30:09 -Mapped "{[/xjbg/room/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.xjbg.controller.RoomController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-06-04 15:30:09 -Mapped "{[/xjbg/room],methods=[GET]}" onto java.lang.String com.bootdo.xjbg.controller.RoomController.Room(org.springframework.ui.Model)
2019-06-04 15:30:09 -Mapped "{[/xjbg/room/roomMng],methods=[GET]}" onto java.lang.String com.bootdo.xjbg.controller.RoomController.roomMng(org.springframework.ui.Model)
2019-06-04 15:30:09 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-06-04 15:30:09 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-06-04 15:30:09 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-06-04 15:30:09 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-06-04 15:30:09 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-06-04 15:30:09 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-06-04 15:30:09 -Initializing ExecutorService  'brokerChannelExecutor'
2019-06-04 15:30:10 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-06-04 15:30:10 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@3ba68ab1: startup date [Tue Jun 04 15:30:01 CST 2019]; root of context hierarchy
2019-06-04 15:30:10 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-06-04 15:30:10 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-06-04 15:30:10 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-06-04 15:30:10 -Mapped URL path [/productPic/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-06-04 15:30:10 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-06-04 15:30:10 -[THYMELEAF][restartedMain] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-06-04 15:30:11 -LiveReload server is running on port 35729
2019-06-04 15:30:11 -Registering beans for JMX exposure on startup
2019-06-04 15:30:11 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-06-04 15:30:11 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-06-04 15:30:11 -Starting beans in phase 2147483647
2019-06-04 15:30:11 -Context refreshed
2019-06-04 15:30:11 -Found 1 custom documentation plugin(s)
2019-06-04 15:30:11 -Scanning for api listing references
2019-06-04 15:30:12 -Generating unique operation named: removeUsingPOST_1
2019-06-04 15:30:12 -Generating unique operation named: addUsingGET_1
2019-06-04 15:30:12 -Generating unique operation named: editUsingGET_1
2019-06-04 15:30:12 -Generating unique operation named: listUsingGET_1
2019-06-04 15:30:12 -Generating unique operation named: removeUsingPOST_2
2019-06-04 15:30:12 -Generating unique operation named: removeUsingPOST_3
2019-06-04 15:30:12 -Generating unique operation named: saveUsingPOST_1
2019-06-04 15:30:12 -Generating unique operation named: updateUsingGET_1
2019-06-04 15:30:12 -Generating unique operation named: updateUsingHEAD_1
2019-06-04 15:30:12 -Generating unique operation named: updateUsingPOST_1
2019-06-04 15:30:12 -Generating unique operation named: updateUsingPUT_1
2019-06-04 15:30:12 -Generating unique operation named: updateUsingPATCH_1
2019-06-04 15:30:12 -Generating unique operation named: updateUsingDELETE_1
2019-06-04 15:30:12 -Generating unique operation named: updateUsingOPTIONS_1
2019-06-04 15:30:12 -Generating unique operation named: updateUsingTRACE_1
2019-06-04 15:30:12 -Generating unique operation named: addUsingGET_2
2019-06-04 15:30:12 -Generating unique operation named: editUsingGET_2
2019-06-04 15:30:12 -Generating unique operation named: listUsingGET_2
2019-06-04 15:30:12 -Generating unique operation named: removeUsingPOST_4
2019-06-04 15:30:12 -Generating unique operation named: removeUsingPOST_5
2019-06-04 15:30:12 -Generating unique operation named: saveUsingPOST_2
2019-06-04 15:30:12 -Generating unique operation named: updateUsingGET_2
2019-06-04 15:30:12 -Generating unique operation named: updateUsingHEAD_2
2019-06-04 15:30:12 -Generating unique operation named: updateUsingPOST_2
2019-06-04 15:30:12 -Generating unique operation named: updateUsingPUT_2
2019-06-04 15:30:12 -Generating unique operation named: updateUsingPATCH_2
2019-06-04 15:30:12 -Generating unique operation named: updateUsingDELETE_2
2019-06-04 15:30:12 -Generating unique operation named: updateUsingOPTIONS_2
2019-06-04 15:30:12 -Generating unique operation named: updateUsingTRACE_2
2019-06-04 15:30:12 -Generating unique operation named: addUsingGET_3
2019-06-04 15:30:12 -Generating unique operation named: editUsingGET_3
2019-06-04 15:30:12 -Generating unique operation named: listUsingGET_3
2019-06-04 15:30:12 -Generating unique operation named: removeUsingPOST_6
2019-06-04 15:30:12 -Generating unique operation named: removeUsingPOST_7
2019-06-04 15:30:12 -Generating unique operation named: saveUsingPOST_3
2019-06-04 15:30:12 -Generating unique operation named: updateUsingGET_3
2019-06-04 15:30:12 -Generating unique operation named: updateUsingHEAD_3
2019-06-04 15:30:12 -Generating unique operation named: updateUsingPOST_3
2019-06-04 15:30:12 -Generating unique operation named: updateUsingPUT_3
2019-06-04 15:30:12 -Generating unique operation named: updateUsingPATCH_3
2019-06-04 15:30:12 -Generating unique operation named: updateUsingDELETE_3
2019-06-04 15:30:12 -Generating unique operation named: updateUsingOPTIONS_3
2019-06-04 15:30:12 -Generating unique operation named: updateUsingTRACE_3
2019-06-04 15:30:12 -Generating unique operation named: editUsingGET_4
2019-06-04 15:30:12 -Generating unique operation named: listUsingGET_4
2019-06-04 15:30:12 -Generating unique operation named: updateUsingPOST_4
2019-06-04 15:30:12 -Generating unique operation named: addUsingGET_4
2019-06-04 15:30:12 -Generating unique operation named: editUsingGET_5
2019-06-04 15:30:12 -Generating unique operation named: infoUsingGET_1
2019-06-04 15:30:12 -Generating unique operation named: infoUsingHEAD_1
2019-06-04 15:30:12 -Generating unique operation named: infoUsingPOST_1
2019-06-04 15:30:12 -Generating unique operation named: infoUsingPUT_1
2019-06-04 15:30:12 -Generating unique operation named: infoUsingPATCH_1
2019-06-04 15:30:12 -Generating unique operation named: infoUsingDELETE_1
2019-06-04 15:30:12 -Generating unique operation named: infoUsingOPTIONS_1
2019-06-04 15:30:12 -Generating unique operation named: infoUsingTRACE_1
2019-06-04 15:30:12 -Generating unique operation named: listUsingGET_5
2019-06-04 15:30:12 -Generating unique operation named: removeUsingPOST_8
2019-06-04 15:30:12 -Generating unique operation named: removeUsingPOST_9
2019-06-04 15:30:12 -Generating unique operation named: saveUsingPOST_4
2019-06-04 15:30:12 -Generating unique operation named: updateUsingPOST_5
2019-06-04 15:30:12 -Generating unique operation named: listUsingGET_6
2019-06-04 15:30:12 -Generating unique operation named: removeUsingPOST_10
2019-06-04 15:30:12 -Generating unique operation named: welcomeUsingGET_1
2019-06-04 15:30:12 -Generating unique operation named: addUsingGET_5
2019-06-04 15:30:12 -Generating unique operation named: editUsingGET_6
2019-06-04 15:30:12 -Generating unique operation named: listUsingGET_7
2019-06-04 15:30:12 -Generating unique operation named: removeUsingPOST_11
2019-06-04 15:30:12 -Generating unique operation named: saveUsingPOST_5
2019-06-04 15:30:12 -Generating unique operation named: treeUsingGET_1
2019-06-04 15:30:12 -Generating unique operation named: treeUsingGET_2
2019-06-04 15:30:12 -Generating unique operation named: updateUsingPOST_6
2019-06-04 15:30:12 -Generating unique operation named: batchRemoveUsingPOST_1
2019-06-04 15:30:12 -Generating unique operation named: editUsingGET_7
2019-06-04 15:30:12 -Generating unique operation named: listUsingGET_8
2019-06-04 15:30:12 -Generating unique operation named: addUsingGET_6
2019-06-04 15:30:12 -Generating unique operation named: editUsingGET_8
2019-06-04 15:30:12 -Generating unique operation named: listUsingGET_9
2019-06-04 15:30:12 -Generating unique operation named: removeUsingPOST_12
2019-06-04 15:30:12 -Generating unique operation named: removeUsingPOST_13
2019-06-04 15:30:12 -Generating unique operation named: saveUsingPOST_6
2019-06-04 15:30:12 -Generating unique operation named: updateUsingGET_4
2019-06-04 15:30:12 -Generating unique operation named: updateUsingHEAD_4
2019-06-04 15:30:12 -Generating unique operation named: updateUsingPOST_7
2019-06-04 15:30:12 -Generating unique operation named: updateUsingPUT_4
2019-06-04 15:30:12 -Generating unique operation named: updateUsingPATCH_4
2019-06-04 15:30:12 -Generating unique operation named: updateUsingDELETE_4
2019-06-04 15:30:12 -Generating unique operation named: updateUsingOPTIONS_4
2019-06-04 15:30:12 -Generating unique operation named: updateUsingTRACE_4
2019-06-04 15:30:12 -Generating unique operation named: addUsingGET_7
2019-06-04 15:30:12 -Generating unique operation named: editUsingGET_9
2019-06-04 15:30:12 -Generating unique operation named: listUsingGET_10
2019-06-04 15:30:12 -Generating unique operation named: removeUsingPOST_14
2019-06-04 15:30:12 -Generating unique operation named: removeUsingPOST_15
2019-06-04 15:30:12 -Generating unique operation named: saveUsingPOST_7
2019-06-04 15:30:12 -Generating unique operation named: updateUsingGET_5
2019-06-04 15:30:12 -Generating unique operation named: updateUsingHEAD_5
2019-06-04 15:30:12 -Generating unique operation named: updateUsingPOST_8
2019-06-04 15:30:12 -Generating unique operation named: updateUsingPUT_5
2019-06-04 15:30:12 -Generating unique operation named: updateUsingPATCH_5
2019-06-04 15:30:12 -Generating unique operation named: updateUsingDELETE_5
2019-06-04 15:30:12 -Generating unique operation named: updateUsingOPTIONS_5
2019-06-04 15:30:12 -Generating unique operation named: updateUsingTRACE_5
2019-06-04 15:30:12 -Generating unique operation named: addUsingGET_8
2019-06-04 15:30:12 -Generating unique operation named: editUsingGET_10
2019-06-04 15:30:12 -Generating unique operation named: listUsingGET_11
2019-06-04 15:30:12 -Generating unique operation named: removeUsingPOST_16
2019-06-04 15:30:12 -Generating unique operation named: removeUsingPOST_17
2019-06-04 15:30:12 -Generating unique operation named: saveUsingPOST_8
2019-06-04 15:30:12 -Generating unique operation named: updateUsingGET_6
2019-06-04 15:30:12 -Generating unique operation named: updateUsingHEAD_6
2019-06-04 15:30:12 -Generating unique operation named: updateUsingPOST_9
2019-06-04 15:30:12 -Generating unique operation named: updateUsingPUT_6
2019-06-04 15:30:12 -Generating unique operation named: updateUsingPATCH_6
2019-06-04 15:30:12 -Generating unique operation named: updateUsingDELETE_6
2019-06-04 15:30:12 -Generating unique operation named: updateUsingOPTIONS_6
2019-06-04 15:30:12 -Generating unique operation named: updateUsingTRACE_6
2019-06-04 15:30:12 -Generating unique operation named: addUsingGET_9
2019-06-04 15:30:12 -Generating unique operation named: batchRemoveUsingPOST_2
2019-06-04 15:30:12 -Generating unique operation named: deployUsingPOST_1
2019-06-04 15:30:12 -Generating unique operation named: listUsingGET_12
2019-06-04 15:30:12 -Generating unique operation named: removeUsingPOST_18
2019-06-04 15:30:12 -Generating unique operation named: addUsingGET_10
2019-06-04 15:30:12 -Generating unique operation named: editUsingGET_11
2019-06-04 15:30:12 -Generating unique operation named: listUsingGET_13
2019-06-04 15:30:12 -Generating unique operation named: removeUsingPOST_19
2019-06-04 15:30:12 -Generating unique operation named: removeUsingPOST_20
2019-06-04 15:30:12 -Trying to infer dataType org.springframework.web.multipart.MultipartFile[]
2019-06-04 15:30:12 -Generating unique operation named: saveUsingPOST_9
2019-06-04 15:30:12 -Trying to infer dataType org.springframework.web.multipart.MultipartFile[]
2019-06-04 15:30:12 -Generating unique operation named: updateUsingGET_7
2019-06-04 15:30:12 -Trying to infer dataType org.springframework.web.multipart.MultipartFile[]
2019-06-04 15:30:12 -Generating unique operation named: updateUsingHEAD_7
2019-06-04 15:30:12 -Trying to infer dataType org.springframework.web.multipart.MultipartFile[]
2019-06-04 15:30:12 -Generating unique operation named: updateUsingPOST_10
2019-06-04 15:30:12 -Trying to infer dataType org.springframework.web.multipart.MultipartFile[]
2019-06-04 15:30:12 -Generating unique operation named: updateUsingPUT_7
2019-06-04 15:30:12 -Trying to infer dataType org.springframework.web.multipart.MultipartFile[]
2019-06-04 15:30:12 -Generating unique operation named: updateUsingPATCH_7
2019-06-04 15:30:12 -Trying to infer dataType org.springframework.web.multipart.MultipartFile[]
2019-06-04 15:30:12 -Generating unique operation named: updateUsingDELETE_7
2019-06-04 15:30:12 -Trying to infer dataType org.springframework.web.multipart.MultipartFile[]
2019-06-04 15:30:12 -Generating unique operation named: updateUsingOPTIONS_7
2019-06-04 15:30:12 -Trying to infer dataType org.springframework.web.multipart.MultipartFile[]
2019-06-04 15:30:12 -Generating unique operation named: updateUsingTRACE_7
2019-06-04 15:30:12 -Generating unique operation named: addUsingGET_11
2019-06-04 15:30:12 -Generating unique operation named: batchRemoveUsingPOST_3
2019-06-04 15:30:12 -Generating unique operation named: editUsingGET_12
2019-06-04 15:30:12 -Generating unique operation named: listUsingGET_14
2019-06-04 15:30:12 -Generating unique operation named: saveUsingPOST_10
2019-06-04 15:30:12 -Generating unique operation named: saveUsingPOST_11
2019-06-04 15:30:12 -Generating unique operation named: updateUsingPOST_11
2019-06-04 15:30:12 -Generating unique operation named: addUsingGET_12
2019-06-04 15:30:12 -Generating unique operation named: editUsingGET_13
2019-06-04 15:30:12 -Generating unique operation named: listUsingGET_15
2019-06-04 15:30:12 -Generating unique operation named: removeUsingPOST_21
2019-06-04 15:30:12 -Generating unique operation named: removeUsingPOST_22
2019-06-04 15:30:12 -Generating unique operation named: saveUsingPOST_12
2019-06-04 15:30:12 -Generating unique operation named: updateUsingGET_8
2019-06-04 15:30:12 -Generating unique operation named: updateUsingHEAD_8
2019-06-04 15:30:12 -Generating unique operation named: updateUsingPOST_12
2019-06-04 15:30:12 -Generating unique operation named: updateUsingPUT_8
2019-06-04 15:30:12 -Generating unique operation named: updateUsingPATCH_8
2019-06-04 15:30:12 -Generating unique operation named: updateUsingDELETE_8
2019-06-04 15:30:12 -Generating unique operation named: updateUsingOPTIONS_8
2019-06-04 15:30:12 -Generating unique operation named: updateUsingTRACE_8
2019-06-04 15:30:12 -Generating unique operation named: addUsingGET_13
2019-06-04 15:30:12 -Generating unique operation named: editUsingGET_14
2019-06-04 15:30:12 -Generating unique operation named: listUsingGET_16
2019-06-04 15:30:12 -Generating unique operation named: removeUsingPOST_23
2019-06-04 15:30:12 -Generating unique operation named: removeUsingPOST_24
2019-06-04 15:30:12 -Generating unique operation named: updateUsingGET_9
2019-06-04 15:30:12 -Generating unique operation named: updateUsingHEAD_9
2019-06-04 15:30:12 -Generating unique operation named: updateUsingPOST_13
2019-06-04 15:30:12 -Generating unique operation named: updateUsingPUT_9
2019-06-04 15:30:12 -Generating unique operation named: updateUsingPATCH_9
2019-06-04 15:30:12 -Generating unique operation named: updateUsingDELETE_9
2019-06-04 15:30:12 -Generating unique operation named: updateUsingOPTIONS_9
2019-06-04 15:30:12 -Generating unique operation named: updateUsingTRACE_9
2019-06-04 15:30:12 -Generating unique operation named: listUsingGET_17
2019-06-04 15:30:12 -Generating unique operation named: listUsingHEAD_1
2019-06-04 15:30:12 -Generating unique operation named: listUsingPOST_1
2019-06-04 15:30:12 -Generating unique operation named: listUsingPUT_1
2019-06-04 15:30:12 -Generating unique operation named: listUsingPATCH_1
2019-06-04 15:30:12 -Generating unique operation named: listUsingDELETE_1
2019-06-04 15:30:12 -Generating unique operation named: listUsingOPTIONS_1
2019-06-04 15:30:12 -Generating unique operation named: listUsingTRACE_1
2019-06-04 15:30:12 -Generating unique operation named: listUsingGET_18
2019-06-04 15:30:12 -Generating unique operation named: addUsingGET_14
2019-06-04 15:30:12 -Generating unique operation named: batchRemoveUsingPOST_4
2019-06-04 15:30:12 -Generating unique operation named: editUsingGET_15
2019-06-04 15:30:12 -Generating unique operation named: listUsingGET_19
2019-06-04 15:30:12 -Generating unique operation named: removeUsingPOST_25
2019-06-04 15:30:12 -Generating unique operation named: saveUsingPOST_13
2019-06-04 15:30:12 -Generating unique operation named: treeUsingGET_3
2019-06-04 15:30:12 -Generating unique operation named: treeViewUsingGET_1
2019-06-04 15:30:12 -Generating unique operation named: updateUsingPOST_14
2019-06-04 15:30:13 -Generating unique operation named: addUsingGET_15
2019-06-04 15:30:13 -Generating unique operation named: editUsingGET_16
2019-06-04 15:30:13 -Generating unique operation named: listUsingGET_20
2019-06-04 15:30:13 -Generating unique operation named: removeUsingPOST_26
2019-06-04 15:30:13 -Generating unique operation named: removeUsingPOST_27
2019-06-04 15:30:13 -Generating unique operation named: saveUsingPOST_14
2019-06-04 15:30:13 -Generating unique operation named: updateUsingGET_10
2019-06-04 15:30:13 -Generating unique operation named: updateUsingHEAD_10
2019-06-04 15:30:13 -Generating unique operation named: updateUsingPOST_15
2019-06-04 15:30:13 -Generating unique operation named: updateUsingPUT_10
2019-06-04 15:30:13 -Generating unique operation named: updateUsingPATCH_10
2019-06-04 15:30:13 -Generating unique operation named: updateUsingDELETE_10
2019-06-04 15:30:13 -Generating unique operation named: updateUsingOPTIONS_10
2019-06-04 15:30:13 -Generating unique operation named: updateUsingTRACE_10
2019-06-04 15:30:13 -Starting Quartz Scheduler now
2019-06-04 15:30:13 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-06-04 15:30:13 -Starting...
2019-06-04 15:30:13 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-06-04 15:30:13 -Started.
2019-06-04 15:30:13 -Starting ProtocolHandler ["http-nio-8888"]
2019-06-04 15:30:13 -Using a shared selector for servlet write/read
2019-06-04 15:30:13 -Tomcat started on port(s): 8888 (http) with context path ''
2019-06-04 15:30:13 -Started BootdoApplication in 11.814 seconds (JVM running for 13.224)
2019-06-04 15:30:13 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-06-04 15:30:13 -==> Parameters: 
2019-06-04 15:30:13 -<==      Total: 1
2019-06-04 15:31:09 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 2, active threads = 1, queued tasks = 1, completed tasks = 0]
2019-06-04 15:32:44 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-06-04 15:32:44 -FrameworkServlet 'dispatcherServlet': initialization started
2019-06-04 15:32:44 -FrameworkServlet 'dispatcherServlet': initialization completed in 31 ms
2019-06-04 15:32:44 -Enabling session validation scheduler...
2019-06-04 15:32:44 -请求地址 : http://localhost:8888/
2019-06-04 15:32:44 -HTTP METHOD : GET
2019-06-04 15:32:44 -CLASS_METHOD : com.bootdo.system.controller.LoginController.welcome
2019-06-04 15:32:44 -参数 : [{}]
2019-06-04 15:32:44 -耗时 : 2
2019-06-04 15:32:44 -返回值 : redirect:/blog
2019-06-04 15:32:44 -请求地址 : http://localhost:8888/blog
2019-06-04 15:32:44 -HTTP METHOD : GET
2019-06-04 15:32:44 -CLASS_METHOD : com.bootdo.blog.controller.BlogController.blog
2019-06-04 15:32:44 -参数 : []
2019-06-04 15:32:44 -耗时 : 0
2019-06-04 15:32:44 -返回值 : blog/index/main
2019-06-04 15:32:45 -请求地址 : http://localhost:8888/blog/open/list
2019-06-04 15:32:45 -HTTP METHOD : GET
2019-06-04 15:32:45 -CLASS_METHOD : com.bootdo.blog.controller.BlogController.opentList
2019-06-04 15:32:45 -参数 : [{type=article, limit=10, offset=0}]
2019-06-04 15:32:45 -==>  Preparing: select `cid`,`title`,`slug`,`created`,`modified`,`content`,`type`,`tags`,`categories`,`hits`,`comments_num`,`allow_comment`,`allow_ping`,`allow_feed`,`status`,`author`,`gtm_create`,`gtm_modified` from blog_content WHERE type = ? order by cid desc limit 0, 10 
2019-06-04 15:32:45 -==> Parameters: article(String)
2019-06-04 15:32:45 -<==      Total: 10
2019-06-04 15:32:45 -==>  Preparing: select count(*) from blog_content WHERE type = ? 
2019-06-04 15:32:45 -==> Parameters: article(String)
2019-06-04 15:32:45 -<==      Total: 1
2019-06-04 15:32:45 -耗时 : 27
2019-06-04 15:32:45 -返回值 : com.bootdo.common.utils.PageUtils@121523b9
2019-06-04 15:32:46 -请求地址 : http://localhost:8888/login
2019-06-04 15:32:46 -HTTP METHOD : GET
2019-06-04 15:32:46 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-06-04 15:32:46 -参数 : [{}]
2019-06-04 15:32:46 -耗时 : 0
2019-06-04 15:32:46 -返回值 : login
2019-06-04 15:32:47 -请求地址 : http://localhost:8888/login
2019-06-04 15:32:47 -HTTP METHOD : POST
2019-06-04 15:32:47 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-06-04 15:32:47 -参数 : [admin, 111111]
2019-06-04 15:32:47 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-06-04 15:32:47 -==> Parameters: admin(String)
2019-06-04 15:32:47 -<==      Total: 1
2019-06-04 15:32:47 -耗时 : 18
2019-06-04 15:32:47 -返回值 : {msg=操作成功, code=0}
2019-06-04 15:32:48 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-06-04 15:32:48 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-04 15:32:48 -==> Parameters: 1(Long), admin(String), 登录(String), 18(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-06-04 15:32:48.024(Timestamp)
2019-06-04 15:32:48 -请求地址 : http://localhost:8888/index
2019-06-04 15:32:48 -HTTP METHOD : GET
2019-06-04 15:32:48 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-06-04 15:32:48 -参数 : [{}]
2019-06-04 15:32:48 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-06-04 15:32:48 -==> Parameters: 1(Long)
2019-06-04 15:32:48 -<==    Updates: 1
2019-06-04 15:32:48 -<==      Total: 34
2019-06-04 15:32:48 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-06-04 15:32:48 -==> Parameters: 144(Long)
2019-06-04 15:32:48 -<==      Total: 1
2019-06-04 15:32:48 -耗时 : 160
2019-06-04 15:32:48 -返回值 : index_v1
2019-06-04 15:32:48 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-04 15:32:48 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 160(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-commenting","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user","url":"/weixin/weixinUser"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"109","text":"用户管理"}],"hasChildren":true,"hasParent":false,"id":"109","parentId":"0","text":"微信管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","text":"基础管理"},{"attributes":{"icon":"fa fa-hotel","url":""},"checked":false,"children":[{"attributes":{"icon":"","url":"/xjbg/room/roomMng"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"105","text":"开房"},{"attributes":{"icon":"fa fa-bed","url":"/xjbg/room"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"106","parentId":"105","text":"房间管理"},{"attributes":{"icon":"","url":"/xjbg/product"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"105","text":"商品管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"欣吉宾馆"},{"attributes":{"icon":"fa fa-desktop"},"checked":false,"children":[{"attributes":{"icon":"fa fa-user","url":"sys/user/"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"6","parentId":"3","text":"用户管理"},{"attributes":{"icon":"fa fa-paw","url":"sys/role"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"7","parentId":"3","text":"角色管理"},{"attributes":{"icon":"fa fa-th-list","url":"sys/menu/"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"3","text":"系统菜单"},{"attributes":{"icon":"fa fa-users","url":"/system/sysDept"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"73","parentId":"3","text":"部门管理"}],"hasChildren":true,"hasParent":false,"id":"3","parentId":"0","text":"系统管理"},{"attributes":{"icon":"fa fa-gear","url":""},"checked":false,"children":[{"attributes":{"icon":"","url":"/swagger-ui.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"104","parentId":"77","text":"swagger"},{"attributes":{"icon":"fa fa-code","url":"common/generator"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"48","parentId":"77","text":"代码生成"},{"attributes":{"icon":"fa fa-hourglass-1","url":"common/job"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"72","parentId":"77","text":"计划任务"}],"hasChildren":true,"hasParent":false,"id":"77","parentId":"0","text":"系统工具"},{"attributes":{"icon":"fa fa-laptop","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-pencil-square","url":"oa/notify"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"85","parentId":"84","text":"通知公告"},{"attributes":{"icon":"fa fa-envelope-square","url":"oa/notify/selfNotify"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"90","parentId":"84","text":"我的通知"}],"hasChildren":true,"hasParent":false,"id":"84","parentId":"0","text":"办公管理"},{"attributes":{"icon":"fa fa-video-camera","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user","url":"sys/online"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"92","parentId":"91","text":"在线用户"},{"attributes":{"icon":"fa fa-warning","url":"common/log"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"27","parentId":"91","text":"系统日志"},{"attributes":{"icon":"fa fa-caret-square-o-right","url":"/druid/index.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"57","parentId":"91","text":"运行监控"}],"hasChildren":true,"hasParent":false,"id":"91","parentId":"0","text":"系统监控"},{"attributes":{"icon":"fa fa-rss","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-edit","url":"/blog/bContent/add"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"68","parentId":"49","text":"发布文章"},{"attributes":{"icon":"fa fa-file-image-o","url":"blog/bContent"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"50","parentId":"49","text":"文章列表"}],"hasChildren":true,"hasParent":false,"id":"49","parentId":"0","text":"博客管理"},{"attributes":{"icon":"fa fa-print","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-flag","url":"activiti/process"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"96","parentId":"93","text":"流程管理"},{"attributes":{"icon":"","url":"activiti/task/todo"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"101","parentId":"93","text":"待办任务"},{"attr(String), 127.0.0.1(String), 2019-06-04 15:32:48.229(Timestamp)
2019-06-04 15:32:48 -<==    Updates: 1
2019-06-04 15:32:48 -请求地址 : http://localhost:8888/main
2019-06-04 15:32:48 -HTTP METHOD : GET
2019-06-04 15:32:48 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-04 15:32:48 -参数 : []
2019-06-04 15:32:48 -耗时 : 0
2019-06-04 15:32:48 -返回值 : main
2019-06-04 15:32:48 -请求地址 : http://localhost:8888/oa/notify/message
2019-06-04 15:32:48 -HTTP METHOD : GET
2019-06-04 15:32:48 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-06-04 15:32:48 -参数 : []
2019-06-04 15:32:48 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-06-04 15:32:48 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-06-04 15:32:48 -<==      Total: 0
2019-06-04 15:32:48 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-06-04 15:32:48 -==> Parameters: 1(Long), 0(String)
2019-06-04 15:32:48 -<==      Total: 1
2019-06-04 15:32:48 -耗时 : 11
2019-06-04 15:32:48 -返回值 : com.bootdo.common.utils.PageUtils@77daef70
2019-06-04 15:32:48 -请求地址 : http://localhost:8888/main
2019-06-04 15:32:48 -HTTP METHOD : GET
2019-06-04 15:32:48 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-04 15:32:48 -参数 : []
2019-06-04 15:32:48 -耗时 : 0
2019-06-04 15:32:48 -返回值 : main
2019-06-04 15:33:01 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-06-04 15:33:01 -==> Parameters: 1(Long)
2019-06-04 15:33:01 -<==      Total: 58
2019-06-04 15:33:01 -请求地址 : http://localhost:8888/xjbg/room/roomMng
2019-06-04 15:33:01 -HTTP METHOD : GET
2019-06-04 15:33:01 -CLASS_METHOD : com.bootdo.xjbg.controller.RoomController.roomMng
2019-06-04 15:33:01 -参数 : [{}]
2019-06-04 15:33:01 -==>  Preparing: select `id`,`room_no`,`room_type`,`floor`,`room_state`,`price`,`create_time`,`update_time`,`create_user`,`update_user` from xjbg_room 
2019-06-04 15:33:01 -==> Parameters: 
2019-06-04 15:33:01 -<==      Total: 8
2019-06-04 15:33:01 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 15:33:01 -==> Parameters: room_type(String)
2019-06-04 15:33:01 -<==      Total: 7
2019-06-04 15:33:01 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 15:33:01 -==> Parameters: floor(String)
2019-06-04 15:33:01 -<==      Total: 5
2019-06-04 15:33:01 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 15:33:01 -==> Parameters: room_state(String)
2019-06-04 15:33:01 -<==      Total: 2
2019-06-04 15:33:01 -==>  Preparing: select * from sys_user 
2019-06-04 15:33:01 -==> Parameters: 
2019-06-04 15:33:01 -<==      Total: 11
2019-06-04 15:33:01 -耗时 : 23
2019-06-04 15:33:01 -返回值 : xjbg/room/roomMng
2019-06-04 15:33:02 -请求地址 : http://localhost:8888/xjbg/room/operation/1
2019-06-04 15:33:02 -HTTP METHOD : GET
2019-06-04 15:33:02 -CLASS_METHOD : com.bootdo.xjbg.controller.RoomController.operation
2019-06-04 15:33:02 -参数 : [1, {}]
2019-06-04 15:33:02 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 15:33:02 -==> Parameters: room_type(String)
2019-06-04 15:33:02 -<==      Total: 7
2019-06-04 15:33:02 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 15:33:02 -==> Parameters: floor(String)
2019-06-04 15:33:02 -<==      Total: 5
2019-06-04 15:33:02 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 15:33:02 -==> Parameters: room_state(String)
2019-06-04 15:33:02 -<==      Total: 2
2019-06-04 15:33:02 -==>  Preparing: select * from sys_user 
2019-06-04 15:33:02 -==> Parameters: 
2019-06-04 15:33:02 -<==      Total: 11
2019-06-04 15:33:02 -==>  Preparing: select `id`,`product_name`,`purchase_price`,`selling_price`,`product_pic`,`create_time`,`create_user`,`update_time`,`update_user` from xjbg_product order by id desc 
2019-06-04 15:33:02 -==> Parameters: 
2019-06-04 15:33:02 -<==      Total: 5
2019-06-04 15:33:02 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 15:33:02 -==> Parameters: order_type(String)
2019-06-04 15:33:02 -<==      Total: 3
2019-06-04 15:33:02 -==>  Preparing: select `id`,`room_no`,`room_type`,`floor`,`room_state`,`price`,`create_time`,`update_time`,`create_user`,`update_user` from xjbg_room where id = ? 
2019-06-04 15:33:02 -==> Parameters: 1(Integer)
2019-06-04 15:33:02 -<==      Total: 1
2019-06-04 15:33:02 -耗时 : 24
2019-06-04 15:33:02 -返回值 : xjbg/room/operation
2019-06-04 15:33:11 -请求地址 : http://localhost:8888/xjbg/room/operation/1
2019-06-04 15:33:11 -HTTP METHOD : GET
2019-06-04 15:33:11 -CLASS_METHOD : com.bootdo.xjbg.controller.RoomController.operation
2019-06-04 15:33:11 -参数 : [1, {}]
2019-06-04 15:33:11 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 15:33:11 -==> Parameters: room_type(String)
2019-06-04 15:33:11 -<==      Total: 7
2019-06-04 15:33:11 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 15:33:11 -==> Parameters: floor(String)
2019-06-04 15:33:11 -<==      Total: 5
2019-06-04 15:33:11 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 15:33:11 -==> Parameters: room_state(String)
2019-06-04 15:33:11 -<==      Total: 2
2019-06-04 15:33:11 -==>  Preparing: select * from sys_user 
2019-06-04 15:33:11 -==> Parameters: 
2019-06-04 15:33:11 -<==      Total: 11
2019-06-04 15:33:11 -==>  Preparing: select `id`,`product_name`,`purchase_price`,`selling_price`,`product_pic`,`create_time`,`create_user`,`update_time`,`update_user` from xjbg_product order by id desc 
2019-06-04 15:33:11 -==> Parameters: 
2019-06-04 15:33:11 -<==      Total: 5
2019-06-04 15:33:11 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 15:33:11 -==> Parameters: order_type(String)
2019-06-04 15:33:11 -<==      Total: 3
2019-06-04 15:33:11 -==>  Preparing: select `id`,`room_no`,`room_type`,`floor`,`room_state`,`price`,`create_time`,`update_time`,`create_user`,`update_user` from xjbg_room where id = ? 
2019-06-04 15:33:11 -==> Parameters: 1(Integer)
2019-06-04 15:33:11 -<==      Total: 1
2019-06-04 15:33:11 -耗时 : 10
2019-06-04 15:33:11 -返回值 : xjbg/room/operation
2019-06-04 15:34:58 -请求地址 : http://localhost:8888/index
2019-06-04 15:34:58 -HTTP METHOD : GET
2019-06-04 15:34:58 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-06-04 15:34:58 -参数 : [{}]
2019-06-04 15:34:58 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-06-04 15:34:58 -==> Parameters: 1(Long)
2019-06-04 15:34:58 -<==      Total: 34
2019-06-04 15:34:58 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-06-04 15:34:58 -==> Parameters: 144(Long)
2019-06-04 15:34:58 -<==      Total: 1
2019-06-04 15:34:58 -耗时 : 8
2019-06-04 15:34:58 -返回值 : index_v1
2019-06-04 15:34:58 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-04 15:34:58 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 8(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-commenting","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user","url":"/weixin/weixinUser"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"109","text":"用户管理"}],"hasChildren":true,"hasParent":false,"id":"109","parentId":"0","text":"微信管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","text":"基础管理"},{"attributes":{"icon":"fa fa-hotel","url":""},"checked":false,"children":[{"attributes":{"icon":"","url":"/xjbg/room/roomMng"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"105","text":"开房"},{"attributes":{"icon":"fa fa-bed","url":"/xjbg/room"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"106","parentId":"105","text":"房间管理"},{"attributes":{"icon":"","url":"/xjbg/product"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"105","text":"商品管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"欣吉宾馆"},{"attributes":{"icon":"fa fa-desktop"},"checked":false,"children":[{"attributes":{"icon":"fa fa-user","url":"sys/user/"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"6","parentId":"3","text":"用户管理"},{"attributes":{"icon":"fa fa-paw","url":"sys/role"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"7","parentId":"3","text":"角色管理"},{"attributes":{"icon":"fa fa-th-list","url":"sys/menu/"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"3","text":"系统菜单"},{"attributes":{"icon":"fa fa-users","url":"/system/sysDept"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"73","parentId":"3","text":"部门管理"}],"hasChildren":true,"hasParent":false,"id":"3","parentId":"0","text":"系统管理"},{"attributes":{"icon":"fa fa-gear","url":""},"checked":false,"children":[{"attributes":{"icon":"","url":"/swagger-ui.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"104","parentId":"77","text":"swagger"},{"attributes":{"icon":"fa fa-code","url":"common/generator"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"48","parentId":"77","text":"代码生成"},{"attributes":{"icon":"fa fa-hourglass-1","url":"common/job"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"72","parentId":"77","text":"计划任务"}],"hasChildren":true,"hasParent":false,"id":"77","parentId":"0","text":"系统工具"},{"attributes":{"icon":"fa fa-laptop","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-pencil-square","url":"oa/notify"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"85","parentId":"84","text":"通知公告"},{"attributes":{"icon":"fa fa-envelope-square","url":"oa/notify/selfNotify"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"90","parentId":"84","text":"我的通知"}],"hasChildren":true,"hasParent":false,"id":"84","parentId":"0","text":"办公管理"},{"attributes":{"icon":"fa fa-video-camera","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user","url":"sys/online"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"92","parentId":"91","text":"在线用户"},{"attributes":{"icon":"fa fa-warning","url":"common/log"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"27","parentId":"91","text":"系统日志"},{"attributes":{"icon":"fa fa-caret-square-o-right","url":"/druid/index.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"57","parentId":"91","text":"运行监控"}],"hasChildren":true,"hasParent":false,"id":"91","parentId":"0","text":"系统监控"},{"attributes":{"icon":"fa fa-rss","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-edit","url":"/blog/bContent/add"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"68","parentId":"49","text":"发布文章"},{"attributes":{"icon":"fa fa-file-image-o","url":"blog/bContent"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"50","parentId":"49","text":"文章列表"}],"hasChildren":true,"hasParent":false,"id":"49","parentId":"0","text":"博客管理"},{"attributes":{"icon":"fa fa-print","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-flag","url":"activiti/process"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"96","parentId":"93","text":"流程管理"},{"attributes":{"icon":"","url":"activiti/task/todo"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"101","parentId":"93","text":"待办任务"},{"attr(String), 127.0.0.1(String), 2019-06-04 15:34:58.206(Timestamp)
2019-06-04 15:34:58 -请求地址 : http://localhost:8888/main
2019-06-04 15:34:58 -HTTP METHOD : GET
2019-06-04 15:34:58 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-04 15:34:58 -参数 : []
2019-06-04 15:34:58 -耗时 : 0
2019-06-04 15:34:58 -返回值 : main
2019-06-04 15:34:58 -请求地址 : http://localhost:8888/oa/notify/message
2019-06-04 15:34:58 -HTTP METHOD : GET
2019-06-04 15:34:58 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-06-04 15:34:58 -参数 : []
2019-06-04 15:34:58 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-06-04 15:34:58 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-06-04 15:34:58 -<==      Total: 0
2019-06-04 15:34:58 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-06-04 15:34:58 -==> Parameters: 1(Long), 0(String)
2019-06-04 15:34:58 -<==      Total: 1
2019-06-04 15:34:58 -耗时 : 5
2019-06-04 15:34:58 -返回值 : com.bootdo.common.utils.PageUtils@6c16c04b
2019-06-04 15:34:58 -请求地址 : http://localhost:8888/main
2019-06-04 15:34:58 -HTTP METHOD : GET
2019-06-04 15:34:58 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-04 15:34:58 -参数 : []
2019-06-04 15:34:58 -耗时 : 0
2019-06-04 15:34:58 -返回值 : main
2019-06-04 15:34:58 -<==    Updates: 1
2019-06-04 15:34:59 -请求地址 : http://localhost:8888/index
2019-06-04 15:34:59 -HTTP METHOD : GET
2019-06-04 15:34:59 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-06-04 15:34:59 -参数 : [{}]
2019-06-04 15:34:59 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-06-04 15:34:59 -==> Parameters: 1(Long)
2019-06-04 15:34:59 -<==      Total: 34
2019-06-04 15:34:59 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-06-04 15:34:59 -==> Parameters: 144(Long)
2019-06-04 15:34:59 -<==      Total: 1
2019-06-04 15:34:59 -耗时 : 14
2019-06-04 15:34:59 -返回值 : index_v1
2019-06-04 15:34:59 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-04 15:34:59 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 14(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-commenting","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user","url":"/weixin/weixinUser"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"109","text":"用户管理"}],"hasChildren":true,"hasParent":false,"id":"109","parentId":"0","text":"微信管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","text":"基础管理"},{"attributes":{"icon":"fa fa-hotel","url":""},"checked":false,"children":[{"attributes":{"icon":"","url":"/xjbg/room/roomMng"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"105","text":"开房"},{"attributes":{"icon":"fa fa-bed","url":"/xjbg/room"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"106","parentId":"105","text":"房间管理"},{"attributes":{"icon":"","url":"/xjbg/product"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"105","text":"商品管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"欣吉宾馆"},{"attributes":{"icon":"fa fa-desktop"},"checked":false,"children":[{"attributes":{"icon":"fa fa-user","url":"sys/user/"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"6","parentId":"3","text":"用户管理"},{"attributes":{"icon":"fa fa-paw","url":"sys/role"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"7","parentId":"3","text":"角色管理"},{"attributes":{"icon":"fa fa-th-list","url":"sys/menu/"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"3","text":"系统菜单"},{"attributes":{"icon":"fa fa-users","url":"/system/sysDept"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"73","parentId":"3","text":"部门管理"}],"hasChildren":true,"hasParent":false,"id":"3","parentId":"0","text":"系统管理"},{"attributes":{"icon":"fa fa-gear","url":""},"checked":false,"children":[{"attributes":{"icon":"","url":"/swagger-ui.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"104","parentId":"77","text":"swagger"},{"attributes":{"icon":"fa fa-code","url":"common/generator"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"48","parentId":"77","text":"代码生成"},{"attributes":{"icon":"fa fa-hourglass-1","url":"common/job"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"72","parentId":"77","text":"计划任务"}],"hasChildren":true,"hasParent":false,"id":"77","parentId":"0","text":"系统工具"},{"attributes":{"icon":"fa fa-laptop","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-pencil-square","url":"oa/notify"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"85","parentId":"84","text":"通知公告"},{"attributes":{"icon":"fa fa-envelope-square","url":"oa/notify/selfNotify"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"90","parentId":"84","text":"我的通知"}],"hasChildren":true,"hasParent":false,"id":"84","parentId":"0","text":"办公管理"},{"attributes":{"icon":"fa fa-video-camera","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user","url":"sys/online"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"92","parentId":"91","text":"在线用户"},{"attributes":{"icon":"fa fa-warning","url":"common/log"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"27","parentId":"91","text":"系统日志"},{"attributes":{"icon":"fa fa-caret-square-o-right","url":"/druid/index.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"57","parentId":"91","text":"运行监控"}],"hasChildren":true,"hasParent":false,"id":"91","parentId":"0","text":"系统监控"},{"attributes":{"icon":"fa fa-rss","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-edit","url":"/blog/bContent/add"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"68","parentId":"49","text":"发布文章"},{"attributes":{"icon":"fa fa-file-image-o","url":"blog/bContent"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"50","parentId":"49","text":"文章列表"}],"hasChildren":true,"hasParent":false,"id":"49","parentId":"0","text":"博客管理"},{"attributes":{"icon":"fa fa-print","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-flag","url":"activiti/process"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"96","parentId":"93","text":"流程管理"},{"attributes":{"icon":"","url":"activiti/task/todo"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"101","parentId":"93","text":"待办任务"},{"attr(String), 127.0.0.1(String), 2019-06-04 15:34:59.969(Timestamp)
2019-06-04 15:34:59 -<==    Updates: 1
2019-06-04 15:35:00 -请求地址 : http://localhost:8888/main
2019-06-04 15:35:00 -HTTP METHOD : GET
2019-06-04 15:35:00 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-04 15:35:00 -参数 : []
2019-06-04 15:35:00 -耗时 : 0
2019-06-04 15:35:00 -返回值 : main
2019-06-04 15:35:01 -请求地址 : http://localhost:8888/oa/notify/message
2019-06-04 15:35:01 -HTTP METHOD : GET
2019-06-04 15:35:01 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-06-04 15:35:01 -参数 : []
2019-06-04 15:35:01 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-06-04 15:35:01 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-06-04 15:35:01 -<==      Total: 0
2019-06-04 15:35:01 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-06-04 15:35:01 -==> Parameters: 1(Long), 0(String)
2019-06-04 15:35:01 -<==      Total: 1
2019-06-04 15:35:01 -耗时 : 4
2019-06-04 15:35:01 -返回值 : com.bootdo.common.utils.PageUtils@22b03a41
2019-06-04 15:35:01 -请求地址 : http://localhost:8888/main
2019-06-04 15:35:01 -HTTP METHOD : GET
2019-06-04 15:35:01 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-04 15:35:01 -参数 : []
2019-06-04 15:35:01 -耗时 : 0
2019-06-04 15:35:01 -返回值 : main
2019-06-04 15:35:02 -请求地址 : http://localhost:8888/index
2019-06-04 15:35:02 -HTTP METHOD : GET
2019-06-04 15:35:02 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-06-04 15:35:02 -参数 : [{}]
2019-06-04 15:35:02 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-06-04 15:35:02 -==> Parameters: 1(Long)
2019-06-04 15:35:02 -<==      Total: 34
2019-06-04 15:35:02 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-06-04 15:35:02 -==> Parameters: 144(Long)
2019-06-04 15:35:02 -<==      Total: 1
2019-06-04 15:35:02 -耗时 : 9
2019-06-04 15:35:02 -返回值 : index_v1
2019-06-04 15:35:02 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-04 15:35:02 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 9(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-commenting","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user","url":"/weixin/weixinUser"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"109","text":"用户管理"}],"hasChildren":true,"hasParent":false,"id":"109","parentId":"0","text":"微信管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","text":"基础管理"},{"attributes":{"icon":"fa fa-hotel","url":""},"checked":false,"children":[{"attributes":{"icon":"","url":"/xjbg/room/roomMng"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"105","text":"开房"},{"attributes":{"icon":"fa fa-bed","url":"/xjbg/room"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"106","parentId":"105","text":"房间管理"},{"attributes":{"icon":"","url":"/xjbg/product"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"105","text":"商品管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"欣吉宾馆"},{"attributes":{"icon":"fa fa-desktop"},"checked":false,"children":[{"attributes":{"icon":"fa fa-user","url":"sys/user/"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"6","parentId":"3","text":"用户管理"},{"attributes":{"icon":"fa fa-paw","url":"sys/role"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"7","parentId":"3","text":"角色管理"},{"attributes":{"icon":"fa fa-th-list","url":"sys/menu/"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"3","text":"系统菜单"},{"attributes":{"icon":"fa fa-users","url":"/system/sysDept"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"73","parentId":"3","text":"部门管理"}],"hasChildren":true,"hasParent":false,"id":"3","parentId":"0","text":"系统管理"},{"attributes":{"icon":"fa fa-gear","url":""},"checked":false,"children":[{"attributes":{"icon":"","url":"/swagger-ui.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"104","parentId":"77","text":"swagger"},{"attributes":{"icon":"fa fa-code","url":"common/generator"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"48","parentId":"77","text":"代码生成"},{"attributes":{"icon":"fa fa-hourglass-1","url":"common/job"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"72","parentId":"77","text":"计划任务"}],"hasChildren":true,"hasParent":false,"id":"77","parentId":"0","text":"系统工具"},{"attributes":{"icon":"fa fa-laptop","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-pencil-square","url":"oa/notify"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"85","parentId":"84","text":"通知公告"},{"attributes":{"icon":"fa fa-envelope-square","url":"oa/notify/selfNotify"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"90","parentId":"84","text":"我的通知"}],"hasChildren":true,"hasParent":false,"id":"84","parentId":"0","text":"办公管理"},{"attributes":{"icon":"fa fa-video-camera","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user","url":"sys/online"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"92","parentId":"91","text":"在线用户"},{"attributes":{"icon":"fa fa-warning","url":"common/log"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"27","parentId":"91","text":"系统日志"},{"attributes":{"icon":"fa fa-caret-square-o-right","url":"/druid/index.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"57","parentId":"91","text":"运行监控"}],"hasChildren":true,"hasParent":false,"id":"91","parentId":"0","text":"系统监控"},{"attributes":{"icon":"fa fa-rss","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-edit","url":"/blog/bContent/add"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"68","parentId":"49","text":"发布文章"},{"attributes":{"icon":"fa fa-file-image-o","url":"blog/bContent"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"50","parentId":"49","text":"文章列表"}],"hasChildren":true,"hasParent":false,"id":"49","parentId":"0","text":"博客管理"},{"attributes":{"icon":"fa fa-print","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-flag","url":"activiti/process"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"96","parentId":"93","text":"流程管理"},{"attributes":{"icon":"","url":"activiti/task/todo"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"101","parentId":"93","text":"待办任务"},{"attr(String), 127.0.0.1(String), 2019-06-04 15:35:02.528(Timestamp)
2019-06-04 15:35:02 -<==    Updates: 1
2019-06-04 15:35:02 -请求地址 : http://localhost:8888/main
2019-06-04 15:35:02 -HTTP METHOD : GET
2019-06-04 15:35:02 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-04 15:35:02 -参数 : []
2019-06-04 15:35:02 -耗时 : 0
2019-06-04 15:35:02 -返回值 : main
2019-06-04 15:35:02 -请求地址 : http://localhost:8888/oa/notify/message
2019-06-04 15:35:02 -HTTP METHOD : GET
2019-06-04 15:35:02 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-06-04 15:35:02 -参数 : []
2019-06-04 15:35:02 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-06-04 15:35:02 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-06-04 15:35:02 -<==      Total: 0
2019-06-04 15:35:02 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-06-04 15:35:02 -==> Parameters: 1(Long), 0(String)
2019-06-04 15:35:02 -<==      Total: 1
2019-06-04 15:35:02 -耗时 : 4
2019-06-04 15:35:02 -返回值 : com.bootdo.common.utils.PageUtils@529d4f05
2019-06-04 15:35:02 -请求地址 : http://localhost:8888/main
2019-06-04 15:35:02 -HTTP METHOD : GET
2019-06-04 15:35:02 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-04 15:35:02 -参数 : []
2019-06-04 15:35:02 -耗时 : 0
2019-06-04 15:35:02 -返回值 : main
2019-06-04 15:35:04 -请求地址 : http://localhost:8888/xjbg/room/roomMng
2019-06-04 15:35:04 -HTTP METHOD : GET
2019-06-04 15:35:04 -CLASS_METHOD : com.bootdo.xjbg.controller.RoomController.roomMng
2019-06-04 15:35:04 -参数 : [{}]
2019-06-04 15:35:04 -==>  Preparing: select `id`,`room_no`,`room_type`,`floor`,`room_state`,`price`,`create_time`,`update_time`,`create_user`,`update_user` from xjbg_room 
2019-06-04 15:35:04 -==> Parameters: 
2019-06-04 15:35:04 -<==      Total: 8
2019-06-04 15:35:04 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 15:35:04 -==> Parameters: room_type(String)
2019-06-04 15:35:04 -<==      Total: 7
2019-06-04 15:35:04 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 15:35:04 -==> Parameters: floor(String)
2019-06-04 15:35:04 -<==      Total: 5
2019-06-04 15:35:04 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 15:35:04 -==> Parameters: room_state(String)
2019-06-04 15:35:04 -<==      Total: 2
2019-06-04 15:35:04 -==>  Preparing: select * from sys_user 
2019-06-04 15:35:04 -==> Parameters: 
2019-06-04 15:35:04 -<==      Total: 11
2019-06-04 15:35:04 -耗时 : 9
2019-06-04 15:35:04 -返回值 : xjbg/room/roomMng
2019-06-04 15:35:04 -请求地址 : http://localhost:8888/xjbg/room/operation/1
2019-06-04 15:35:04 -HTTP METHOD : GET
2019-06-04 15:35:04 -CLASS_METHOD : com.bootdo.xjbg.controller.RoomController.operation
2019-06-04 15:35:04 -参数 : [1, {}]
2019-06-04 15:35:04 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 15:35:04 -==> Parameters: room_type(String)
2019-06-04 15:35:04 -<==      Total: 7
2019-06-04 15:35:04 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 15:35:04 -==> Parameters: floor(String)
2019-06-04 15:35:04 -<==      Total: 5
2019-06-04 15:35:04 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 15:35:04 -==> Parameters: room_state(String)
2019-06-04 15:35:04 -<==      Total: 2
2019-06-04 15:35:04 -==>  Preparing: select * from sys_user 
2019-06-04 15:35:04 -==> Parameters: 
2019-06-04 15:35:04 -<==      Total: 11
2019-06-04 15:35:04 -==>  Preparing: select `id`,`product_name`,`purchase_price`,`selling_price`,`product_pic`,`create_time`,`create_user`,`update_time`,`update_user` from xjbg_product order by id desc 
2019-06-04 15:35:04 -==> Parameters: 
2019-06-04 15:35:04 -<==      Total: 5
2019-06-04 15:35:04 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 15:35:04 -==> Parameters: order_type(String)
2019-06-04 15:35:04 -<==      Total: 3
2019-06-04 15:35:04 -==>  Preparing: select `id`,`room_no`,`room_type`,`floor`,`room_state`,`price`,`create_time`,`update_time`,`create_user`,`update_user` from xjbg_room where id = ? 
2019-06-04 15:35:04 -==> Parameters: 1(Integer)
2019-06-04 15:35:04 -<==      Total: 1
2019-06-04 15:35:04 -耗时 : 13
2019-06-04 15:35:04 -返回值 : xjbg/room/operation
2019-06-04 15:35:36 -请求地址 : http://localhost:8888/index
2019-06-04 15:35:36 -HTTP METHOD : GET
2019-06-04 15:35:36 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-06-04 15:35:36 -参数 : [{}]
2019-06-04 15:35:36 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-06-04 15:35:36 -==> Parameters: 1(Long)
2019-06-04 15:35:36 -<==      Total: 34
2019-06-04 15:35:36 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-06-04 15:35:36 -==> Parameters: 144(Long)
2019-06-04 15:35:36 -<==      Total: 1
2019-06-04 15:35:36 -耗时 : 4
2019-06-04 15:35:36 -返回值 : index_v1
2019-06-04 15:35:36 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-04 15:35:36 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 4(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-commenting","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user","url":"/weixin/weixinUser"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"109","text":"用户管理"}],"hasChildren":true,"hasParent":false,"id":"109","parentId":"0","text":"微信管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","text":"基础管理"},{"attributes":{"icon":"fa fa-hotel","url":""},"checked":false,"children":[{"attributes":{"icon":"","url":"/xjbg/room/roomMng"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"105","text":"开房"},{"attributes":{"icon":"fa fa-bed","url":"/xjbg/room"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"106","parentId":"105","text":"房间管理"},{"attributes":{"icon":"","url":"/xjbg/product"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"105","text":"商品管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"欣吉宾馆"},{"attributes":{"icon":"fa fa-desktop"},"checked":false,"children":[{"attributes":{"icon":"fa fa-user","url":"sys/user/"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"6","parentId":"3","text":"用户管理"},{"attributes":{"icon":"fa fa-paw","url":"sys/role"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"7","parentId":"3","text":"角色管理"},{"attributes":{"icon":"fa fa-th-list","url":"sys/menu/"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"3","text":"系统菜单"},{"attributes":{"icon":"fa fa-users","url":"/system/sysDept"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"73","parentId":"3","text":"部门管理"}],"hasChildren":true,"hasParent":false,"id":"3","parentId":"0","text":"系统管理"},{"attributes":{"icon":"fa fa-gear","url":""},"checked":false,"children":[{"attributes":{"icon":"","url":"/swagger-ui.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"104","parentId":"77","text":"swagger"},{"attributes":{"icon":"fa fa-code","url":"common/generator"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"48","parentId":"77","text":"代码生成"},{"attributes":{"icon":"fa fa-hourglass-1","url":"common/job"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"72","parentId":"77","text":"计划任务"}],"hasChildren":true,"hasParent":false,"id":"77","parentId":"0","text":"系统工具"},{"attributes":{"icon":"fa fa-laptop","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-pencil-square","url":"oa/notify"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"85","parentId":"84","text":"通知公告"},{"attributes":{"icon":"fa fa-envelope-square","url":"oa/notify/selfNotify"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"90","parentId":"84","text":"我的通知"}],"hasChildren":true,"hasParent":false,"id":"84","parentId":"0","text":"办公管理"},{"attributes":{"icon":"fa fa-video-camera","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user","url":"sys/online"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"92","parentId":"91","text":"在线用户"},{"attributes":{"icon":"fa fa-warning","url":"common/log"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"27","parentId":"91","text":"系统日志"},{"attributes":{"icon":"fa fa-caret-square-o-right","url":"/druid/index.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"57","parentId":"91","text":"运行监控"}],"hasChildren":true,"hasParent":false,"id":"91","parentId":"0","text":"系统监控"},{"attributes":{"icon":"fa fa-rss","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-edit","url":"/blog/bContent/add"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"68","parentId":"49","text":"发布文章"},{"attributes":{"icon":"fa fa-file-image-o","url":"blog/bContent"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"50","parentId":"49","text":"文章列表"}],"hasChildren":true,"hasParent":false,"id":"49","parentId":"0","text":"博客管理"},{"attributes":{"icon":"fa fa-print","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-flag","url":"activiti/process"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"96","parentId":"93","text":"流程管理"},{"attributes":{"icon":"","url":"activiti/task/todo"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"101","parentId":"93","text":"待办任务"},{"attr(String), 127.0.0.1(String), 2019-06-04 15:35:36.224(Timestamp)
2019-06-04 15:35:36 -<==    Updates: 1
2019-06-04 15:35:36 -请求地址 : http://localhost:8888/main
2019-06-04 15:35:36 -HTTP METHOD : GET
2019-06-04 15:35:36 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-04 15:35:36 -参数 : []
2019-06-04 15:35:36 -耗时 : 1
2019-06-04 15:35:36 -返回值 : main
2019-06-04 15:35:36 -请求地址 : http://localhost:8888/oa/notify/message
2019-06-04 15:35:36 -HTTP METHOD : GET
2019-06-04 15:35:36 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-06-04 15:35:36 -参数 : []
2019-06-04 15:35:36 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-06-04 15:35:36 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-06-04 15:35:36 -<==      Total: 0
2019-06-04 15:35:36 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-06-04 15:35:36 -==> Parameters: 1(Long), 0(String)
2019-06-04 15:35:36 -<==      Total: 1
2019-06-04 15:35:36 -耗时 : 2
2019-06-04 15:35:36 -返回值 : com.bootdo.common.utils.PageUtils@9b6104e
2019-06-04 15:35:36 -请求地址 : http://localhost:8888/main
2019-06-04 15:35:36 -HTTP METHOD : GET
2019-06-04 15:35:36 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-04 15:35:36 -参数 : []
2019-06-04 15:35:36 -耗时 : 0
2019-06-04 15:35:36 -返回值 : main
2019-06-04 15:35:39 -请求地址 : http://localhost:8888/xjbg/room/roomMng
2019-06-04 15:35:39 -HTTP METHOD : GET
2019-06-04 15:35:39 -CLASS_METHOD : com.bootdo.xjbg.controller.RoomController.roomMng
2019-06-04 15:35:39 -参数 : [{}]
2019-06-04 15:35:39 -==>  Preparing: select `id`,`room_no`,`room_type`,`floor`,`room_state`,`price`,`create_time`,`update_time`,`create_user`,`update_user` from xjbg_room 
2019-06-04 15:35:39 -==> Parameters: 
2019-06-04 15:35:39 -<==      Total: 8
2019-06-04 15:35:39 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 15:35:39 -==> Parameters: room_type(String)
2019-06-04 15:35:39 -<==      Total: 7
2019-06-04 15:35:39 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 15:35:39 -==> Parameters: floor(String)
2019-06-04 15:35:39 -<==      Total: 5
2019-06-04 15:35:39 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 15:35:39 -==> Parameters: room_state(String)
2019-06-04 15:35:39 -<==      Total: 2
2019-06-04 15:35:39 -==>  Preparing: select * from sys_user 
2019-06-04 15:35:39 -==> Parameters: 
2019-06-04 15:35:39 -<==      Total: 11
2019-06-04 15:35:39 -耗时 : 9
2019-06-04 15:35:39 -返回值 : xjbg/room/roomMng
2019-06-04 15:35:40 -请求地址 : http://localhost:8888/xjbg/room/operation/1
2019-06-04 15:35:40 -HTTP METHOD : GET
2019-06-04 15:35:40 -CLASS_METHOD : com.bootdo.xjbg.controller.RoomController.operation
2019-06-04 15:35:40 -参数 : [1, {}]
2019-06-04 15:35:40 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 15:35:40 -==> Parameters: room_type(String)
2019-06-04 15:35:40 -<==      Total: 7
2019-06-04 15:35:40 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 15:35:40 -==> Parameters: floor(String)
2019-06-04 15:35:40 -<==      Total: 5
2019-06-04 15:35:40 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 15:35:40 -==> Parameters: room_state(String)
2019-06-04 15:35:40 -<==      Total: 2
2019-06-04 15:35:40 -==>  Preparing: select * from sys_user 
2019-06-04 15:35:40 -==> Parameters: 
2019-06-04 15:35:40 -<==      Total: 11
2019-06-04 15:35:40 -==>  Preparing: select `id`,`product_name`,`purchase_price`,`selling_price`,`product_pic`,`create_time`,`create_user`,`update_time`,`update_user` from xjbg_product order by id desc 
2019-06-04 15:35:40 -==> Parameters: 
2019-06-04 15:35:40 -<==      Total: 5
2019-06-04 15:35:40 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 15:35:40 -==> Parameters: order_type(String)
2019-06-04 15:35:40 -<==      Total: 3
2019-06-04 15:35:40 -==>  Preparing: select `id`,`room_no`,`room_type`,`floor`,`room_state`,`price`,`create_time`,`update_time`,`create_user`,`update_user` from xjbg_room where id = ? 
2019-06-04 15:35:40 -==> Parameters: 1(Integer)
2019-06-04 15:35:40 -<==      Total: 1
2019-06-04 15:35:40 -耗时 : 15
2019-06-04 15:35:40 -返回值 : xjbg/room/operation
2019-06-04 15:41:34 -请求地址 : http://localhost:8888/xjbg/room/operation/1
2019-06-04 15:41:34 -HTTP METHOD : GET
2019-06-04 15:41:34 -CLASS_METHOD : com.bootdo.xjbg.controller.RoomController.operation
2019-06-04 15:41:34 -参数 : [1, {}]
2019-06-04 15:41:34 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 15:41:34 -==> Parameters: room_type(String)
2019-06-04 15:41:34 -<==      Total: 7
2019-06-04 15:41:34 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 15:41:34 -==> Parameters: floor(String)
2019-06-04 15:41:34 -<==      Total: 5
2019-06-04 15:41:34 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 15:41:34 -==> Parameters: room_state(String)
2019-06-04 15:41:34 -<==      Total: 2
2019-06-04 15:41:34 -==>  Preparing: select * from sys_user 
2019-06-04 15:41:34 -==> Parameters: 
2019-06-04 15:41:34 -<==      Total: 11
2019-06-04 15:41:34 -==>  Preparing: select `id`,`product_name`,`purchase_price`,`selling_price`,`product_pic`,`create_time`,`create_user`,`update_time`,`update_user` from xjbg_product order by id desc 
2019-06-04 15:41:34 -==> Parameters: 
2019-06-04 15:41:34 -<==      Total: 5
2019-06-04 15:41:34 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 15:41:34 -==> Parameters: order_type(String)
2019-06-04 15:41:34 -<==      Total: 3
2019-06-04 15:41:34 -==>  Preparing: select `id`,`room_no`,`room_type`,`floor`,`room_state`,`price`,`create_time`,`update_time`,`create_user`,`update_user` from xjbg_room where id = ? 
2019-06-04 15:41:34 -==> Parameters: 1(Integer)
2019-06-04 15:41:34 -<==      Total: 1
2019-06-04 15:41:34 -耗时 : 12
2019-06-04 15:41:34 -返回值 : xjbg/room/operation
2019-06-04 15:43:01 -请求地址 : http://localhost:8888/index
2019-06-04 15:43:01 -HTTP METHOD : GET
2019-06-04 15:43:01 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-06-04 15:43:01 -参数 : [{}]
2019-06-04 15:43:01 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-06-04 15:43:01 -==> Parameters: 1(Long)
2019-06-04 15:43:01 -<==      Total: 34
2019-06-04 15:43:01 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-06-04 15:43:01 -==> Parameters: 144(Long)
2019-06-04 15:43:01 -<==      Total: 1
2019-06-04 15:43:01 -耗时 : 5
2019-06-04 15:43:01 -返回值 : index_v1
2019-06-04 15:43:01 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-04 15:43:01 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 5(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-commenting","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user","url":"/weixin/weixinUser"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"109","text":"用户管理"}],"hasChildren":true,"hasParent":false,"id":"109","parentId":"0","text":"微信管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","text":"基础管理"},{"attributes":{"icon":"fa fa-hotel","url":""},"checked":false,"children":[{"attributes":{"icon":"","url":"/xjbg/room/roomMng"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"105","text":"开房"},{"attributes":{"icon":"fa fa-bed","url":"/xjbg/room"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"106","parentId":"105","text":"房间管理"},{"attributes":{"icon":"","url":"/xjbg/product"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"105","text":"商品管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"欣吉宾馆"},{"attributes":{"icon":"fa fa-desktop"},"checked":false,"children":[{"attributes":{"icon":"fa fa-user","url":"sys/user/"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"6","parentId":"3","text":"用户管理"},{"attributes":{"icon":"fa fa-paw","url":"sys/role"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"7","parentId":"3","text":"角色管理"},{"attributes":{"icon":"fa fa-th-list","url":"sys/menu/"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"3","text":"系统菜单"},{"attributes":{"icon":"fa fa-users","url":"/system/sysDept"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"73","parentId":"3","text":"部门管理"}],"hasChildren":true,"hasParent":false,"id":"3","parentId":"0","text":"系统管理"},{"attributes":{"icon":"fa fa-gear","url":""},"checked":false,"children":[{"attributes":{"icon":"","url":"/swagger-ui.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"104","parentId":"77","text":"swagger"},{"attributes":{"icon":"fa fa-code","url":"common/generator"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"48","parentId":"77","text":"代码生成"},{"attributes":{"icon":"fa fa-hourglass-1","url":"common/job"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"72","parentId":"77","text":"计划任务"}],"hasChildren":true,"hasParent":false,"id":"77","parentId":"0","text":"系统工具"},{"attributes":{"icon":"fa fa-laptop","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-pencil-square","url":"oa/notify"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"85","parentId":"84","text":"通知公告"},{"attributes":{"icon":"fa fa-envelope-square","url":"oa/notify/selfNotify"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"90","parentId":"84","text":"我的通知"}],"hasChildren":true,"hasParent":false,"id":"84","parentId":"0","text":"办公管理"},{"attributes":{"icon":"fa fa-video-camera","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user","url":"sys/online"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"92","parentId":"91","text":"在线用户"},{"attributes":{"icon":"fa fa-warning","url":"common/log"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"27","parentId":"91","text":"系统日志"},{"attributes":{"icon":"fa fa-caret-square-o-right","url":"/druid/index.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"57","parentId":"91","text":"运行监控"}],"hasChildren":true,"hasParent":false,"id":"91","parentId":"0","text":"系统监控"},{"attributes":{"icon":"fa fa-rss","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-edit","url":"/blog/bContent/add"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"68","parentId":"49","text":"发布文章"},{"attributes":{"icon":"fa fa-file-image-o","url":"blog/bContent"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"50","parentId":"49","text":"文章列表"}],"hasChildren":true,"hasParent":false,"id":"49","parentId":"0","text":"博客管理"},{"attributes":{"icon":"fa fa-print","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-flag","url":"activiti/process"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"96","parentId":"93","text":"流程管理"},{"attributes":{"icon":"","url":"activiti/task/todo"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"101","parentId":"93","text":"待办任务"},{"attr(String), 127.0.0.1(String), 2019-06-04 15:43:01.16(Timestamp)
2019-06-04 15:43:01 -<==    Updates: 1
2019-06-04 15:43:01 -请求地址 : http://localhost:8888/main
2019-06-04 15:43:01 -HTTP METHOD : GET
2019-06-04 15:43:01 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-04 15:43:01 -参数 : []
2019-06-04 15:43:01 -耗时 : 0
2019-06-04 15:43:01 -返回值 : main
2019-06-04 15:43:01 -请求地址 : http://localhost:8888/oa/notify/message
2019-06-04 15:43:01 -HTTP METHOD : GET
2019-06-04 15:43:01 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-06-04 15:43:01 -参数 : []
2019-06-04 15:43:01 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-06-04 15:43:01 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-06-04 15:43:01 -<==      Total: 0
2019-06-04 15:43:01 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-06-04 15:43:01 -==> Parameters: 1(Long), 0(String)
2019-06-04 15:43:01 -<==      Total: 1
2019-06-04 15:43:01 -耗时 : 7
2019-06-04 15:43:01 -返回值 : com.bootdo.common.utils.PageUtils@20097a6d
2019-06-04 15:43:01 -请求地址 : http://localhost:8888/main
2019-06-04 15:43:01 -HTTP METHOD : GET
2019-06-04 15:43:01 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-04 15:43:01 -参数 : []
2019-06-04 15:43:01 -耗时 : 0
2019-06-04 15:43:01 -返回值 : main
2019-06-04 15:43:02 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-06-04 15:43:02 -==> Parameters: 1(Long)
2019-06-04 15:43:02 -<==      Total: 58
2019-06-04 15:43:02 -请求地址 : http://localhost:8888/weixin/weixinUser
2019-06-04 15:43:02 -HTTP METHOD : GET
2019-06-04 15:43:02 -CLASS_METHOD : com.bootdo.weixin.controller.WeixinUserController.WeixinUser
2019-06-04 15:43:02 -参数 : []
2019-06-04 15:43:02 -耗时 : 1
2019-06-04 15:43:02 -返回值 : weixin/weixinUser/weixinUser
2019-06-04 15:43:02 -请求地址 : http://localhost:8888/weixin/weixinUser/list
2019-06-04 15:43:02 -HTTP METHOD : GET
2019-06-04 15:43:02 -CLASS_METHOD : com.bootdo.weixin.controller.WeixinUserController.list
2019-06-04 15:43:02 -参数 : [{limit=10, offset=0}]
2019-06-04 15:43:02 -==>  Preparing: select `id`,`open_id`,`is_removed`,`create_time`,`remove_time` from weixin_user order by id desc limit ?, ? 
2019-06-04 15:43:02 -==> Parameters: 0(Integer), 10(Integer)
2019-06-04 15:43:02 -<==      Total: 1
2019-06-04 15:43:02 -==>  Preparing: select count(*) from weixin_user 
2019-06-04 15:43:02 -==> Parameters: 
2019-06-04 15:43:02 -<==      Total: 1
2019-06-04 15:43:02 -耗时 : 11
2019-06-04 15:43:02 -返回值 : com.bootdo.common.utils.PageUtils@1dd5a2ff
2019-06-04 15:43:05 -请求地址 : http://localhost:8888/xjbg/room/roomMng
2019-06-04 15:43:05 -HTTP METHOD : GET
2019-06-04 15:43:05 -CLASS_METHOD : com.bootdo.xjbg.controller.RoomController.roomMng
2019-06-04 15:43:05 -参数 : [{}]
2019-06-04 15:43:05 -==>  Preparing: select `id`,`room_no`,`room_type`,`floor`,`room_state`,`price`,`create_time`,`update_time`,`create_user`,`update_user` from xjbg_room 
2019-06-04 15:43:05 -==> Parameters: 
2019-06-04 15:43:05 -<==      Total: 8
2019-06-04 15:43:05 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 15:43:05 -==> Parameters: room_type(String)
2019-06-04 15:43:05 -<==      Total: 7
2019-06-04 15:43:05 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 15:43:05 -==> Parameters: floor(String)
2019-06-04 15:43:05 -<==      Total: 5
2019-06-04 15:43:05 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 15:43:05 -==> Parameters: room_state(String)
2019-06-04 15:43:05 -<==      Total: 2
2019-06-04 15:43:05 -==>  Preparing: select * from sys_user 
2019-06-04 15:43:05 -==> Parameters: 
2019-06-04 15:43:05 -<==      Total: 11
2019-06-04 15:43:05 -耗时 : 7
2019-06-04 15:43:05 -返回值 : xjbg/room/roomMng
2019-06-04 15:43:05 -请求地址 : http://localhost:8888/xjbg/room/operation/1
2019-06-04 15:43:05 -HTTP METHOD : GET
2019-06-04 15:43:05 -CLASS_METHOD : com.bootdo.xjbg.controller.RoomController.operation
2019-06-04 15:43:05 -参数 : [1, {}]
2019-06-04 15:43:05 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 15:43:05 -==> Parameters: room_type(String)
2019-06-04 15:43:05 -<==      Total: 7
2019-06-04 15:43:05 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 15:43:05 -==> Parameters: floor(String)
2019-06-04 15:43:05 -<==      Total: 5
2019-06-04 15:43:05 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 15:43:05 -==> Parameters: room_state(String)
2019-06-04 15:43:05 -<==      Total: 2
2019-06-04 15:43:05 -==>  Preparing: select * from sys_user 
2019-06-04 15:43:05 -==> Parameters: 
2019-06-04 15:43:05 -<==      Total: 11
2019-06-04 15:43:05 -==>  Preparing: select `id`,`product_name`,`purchase_price`,`selling_price`,`product_pic`,`create_time`,`create_user`,`update_time`,`update_user` from xjbg_product order by id desc 
2019-06-04 15:43:05 -==> Parameters: 
2019-06-04 15:43:05 -<==      Total: 5
2019-06-04 15:43:05 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 15:43:05 -==> Parameters: order_type(String)
2019-06-04 15:43:05 -<==      Total: 3
2019-06-04 15:43:05 -==>  Preparing: select `id`,`room_no`,`room_type`,`floor`,`room_state`,`price`,`create_time`,`update_time`,`create_user`,`update_user` from xjbg_room where id = ? 
2019-06-04 15:43:05 -==> Parameters: 1(Integer)
2019-06-04 15:43:05 -<==      Total: 1
2019-06-04 15:43:05 -耗时 : 12
2019-06-04 15:43:05 -返回值 : xjbg/room/operation
2019-06-04 15:43:55 -请求地址 : http://localhost:8888/index
2019-06-04 15:43:55 -HTTP METHOD : GET
2019-06-04 15:43:55 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-06-04 15:43:55 -参数 : [{}]
2019-06-04 15:43:55 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-06-04 15:43:55 -==> Parameters: 1(Long)
2019-06-04 15:43:55 -<==      Total: 34
2019-06-04 15:43:55 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-06-04 15:43:55 -==> Parameters: 144(Long)
2019-06-04 15:43:55 -<==      Total: 1
2019-06-04 15:43:55 -耗时 : 5
2019-06-04 15:43:55 -返回值 : index_v1
2019-06-04 15:43:55 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-04 15:43:55 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 5(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-commenting","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user","url":"/weixin/weixinUser"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"109","text":"用户管理"}],"hasChildren":true,"hasParent":false,"id":"109","parentId":"0","text":"微信管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","text":"基础管理"},{"attributes":{"icon":"fa fa-hotel","url":""},"checked":false,"children":[{"attributes":{"icon":"","url":"/xjbg/room/roomMng"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"105","text":"开房"},{"attributes":{"icon":"fa fa-bed","url":"/xjbg/room"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"106","parentId":"105","text":"房间管理"},{"attributes":{"icon":"","url":"/xjbg/product"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"105","text":"商品管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"欣吉宾馆"},{"attributes":{"icon":"fa fa-desktop"},"checked":false,"children":[{"attributes":{"icon":"fa fa-user","url":"sys/user/"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"6","parentId":"3","text":"用户管理"},{"attributes":{"icon":"fa fa-paw","url":"sys/role"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"7","parentId":"3","text":"角色管理"},{"attributes":{"icon":"fa fa-th-list","url":"sys/menu/"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"3","text":"系统菜单"},{"attributes":{"icon":"fa fa-users","url":"/system/sysDept"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"73","parentId":"3","text":"部门管理"}],"hasChildren":true,"hasParent":false,"id":"3","parentId":"0","text":"系统管理"},{"attributes":{"icon":"fa fa-gear","url":""},"checked":false,"children":[{"attributes":{"icon":"","url":"/swagger-ui.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"104","parentId":"77","text":"swagger"},{"attributes":{"icon":"fa fa-code","url":"common/generator"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"48","parentId":"77","text":"代码生成"},{"attributes":{"icon":"fa fa-hourglass-1","url":"common/job"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"72","parentId":"77","text":"计划任务"}],"hasChildren":true,"hasParent":false,"id":"77","parentId":"0","text":"系统工具"},{"attributes":{"icon":"fa fa-laptop","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-pencil-square","url":"oa/notify"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"85","parentId":"84","text":"通知公告"},{"attributes":{"icon":"fa fa-envelope-square","url":"oa/notify/selfNotify"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"90","parentId":"84","text":"我的通知"}],"hasChildren":true,"hasParent":false,"id":"84","parentId":"0","text":"办公管理"},{"attributes":{"icon":"fa fa-video-camera","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user","url":"sys/online"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"92","parentId":"91","text":"在线用户"},{"attributes":{"icon":"fa fa-warning","url":"common/log"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"27","parentId":"91","text":"系统日志"},{"attributes":{"icon":"fa fa-caret-square-o-right","url":"/druid/index.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"57","parentId":"91","text":"运行监控"}],"hasChildren":true,"hasParent":false,"id":"91","parentId":"0","text":"系统监控"},{"attributes":{"icon":"fa fa-rss","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-edit","url":"/blog/bContent/add"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"68","parentId":"49","text":"发布文章"},{"attributes":{"icon":"fa fa-file-image-o","url":"blog/bContent"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"50","parentId":"49","text":"文章列表"}],"hasChildren":true,"hasParent":false,"id":"49","parentId":"0","text":"博客管理"},{"attributes":{"icon":"fa fa-print","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-flag","url":"activiti/process"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"96","parentId":"93","text":"流程管理"},{"attributes":{"icon":"","url":"activiti/task/todo"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"101","parentId":"93","text":"待办任务"},{"attr(String), 127.0.0.1(String), 2019-06-04 15:43:55.91(Timestamp)
2019-06-04 15:43:55 -<==    Updates: 1
2019-06-04 15:43:55 -请求地址 : http://localhost:8888/main
2019-06-04 15:43:55 -HTTP METHOD : GET
2019-06-04 15:43:55 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-04 15:43:55 -参数 : []
2019-06-04 15:43:55 -耗时 : 0
2019-06-04 15:43:55 -返回值 : main
2019-06-04 15:43:56 -请求地址 : http://localhost:8888/oa/notify/message
2019-06-04 15:43:56 -HTTP METHOD : GET
2019-06-04 15:43:56 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-06-04 15:43:56 -参数 : []
2019-06-04 15:43:56 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-06-04 15:43:56 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-06-04 15:43:56 -<==      Total: 0
2019-06-04 15:43:56 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-06-04 15:43:56 -==> Parameters: 1(Long), 0(String)
2019-06-04 15:43:56 -<==      Total: 1
2019-06-04 15:43:56 -耗时 : 3
2019-06-04 15:43:56 -返回值 : com.bootdo.common.utils.PageUtils@25ff869a
2019-06-04 15:43:56 -请求地址 : http://localhost:8888/main
2019-06-04 15:43:56 -HTTP METHOD : GET
2019-06-04 15:43:56 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-04 15:43:56 -参数 : []
2019-06-04 15:43:56 -耗时 : 1
2019-06-04 15:43:56 -返回值 : main
2019-06-04 15:43:58 -请求地址 : http://localhost:8888/xjbg/room/roomMng
2019-06-04 15:43:58 -HTTP METHOD : GET
2019-06-04 15:43:58 -CLASS_METHOD : com.bootdo.xjbg.controller.RoomController.roomMng
2019-06-04 15:43:58 -参数 : [{}]
2019-06-04 15:43:58 -==>  Preparing: select `id`,`room_no`,`room_type`,`floor`,`room_state`,`price`,`create_time`,`update_time`,`create_user`,`update_user` from xjbg_room 
2019-06-04 15:43:58 -==> Parameters: 
2019-06-04 15:43:58 -<==      Total: 8
2019-06-04 15:43:58 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 15:43:58 -==> Parameters: room_type(String)
2019-06-04 15:43:58 -<==      Total: 7
2019-06-04 15:43:58 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 15:43:58 -==> Parameters: floor(String)
2019-06-04 15:43:58 -<==      Total: 5
2019-06-04 15:43:58 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 15:43:58 -==> Parameters: room_state(String)
2019-06-04 15:43:58 -<==      Total: 2
2019-06-04 15:43:58 -==>  Preparing: select * from sys_user 
2019-06-04 15:43:58 -==> Parameters: 
2019-06-04 15:43:58 -<==      Total: 11
2019-06-04 15:43:58 -耗时 : 6
2019-06-04 15:43:58 -返回值 : xjbg/room/roomMng
2019-06-04 15:43:58 -请求地址 : http://localhost:8888/xjbg/room/operation/1
2019-06-04 15:43:58 -HTTP METHOD : GET
2019-06-04 15:43:58 -CLASS_METHOD : com.bootdo.xjbg.controller.RoomController.operation
2019-06-04 15:43:58 -参数 : [1, {}]
2019-06-04 15:43:58 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 15:43:58 -==> Parameters: room_type(String)
2019-06-04 15:43:58 -<==      Total: 7
2019-06-04 15:43:58 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 15:43:58 -==> Parameters: floor(String)
2019-06-04 15:43:58 -<==      Total: 5
2019-06-04 15:43:58 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 15:43:58 -==> Parameters: room_state(String)
2019-06-04 15:43:58 -<==      Total: 2
2019-06-04 15:43:58 -==>  Preparing: select * from sys_user 
2019-06-04 15:43:58 -==> Parameters: 
2019-06-04 15:43:58 -<==      Total: 11
2019-06-04 15:43:58 -==>  Preparing: select `id`,`product_name`,`purchase_price`,`selling_price`,`product_pic`,`create_time`,`create_user`,`update_time`,`update_user` from xjbg_product order by id desc 
2019-06-04 15:43:58 -==> Parameters: 
2019-06-04 15:43:58 -<==      Total: 5
2019-06-04 15:43:58 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 15:43:58 -==> Parameters: order_type(String)
2019-06-04 15:43:58 -<==      Total: 3
2019-06-04 15:43:58 -==>  Preparing: select `id`,`room_no`,`room_type`,`floor`,`room_state`,`price`,`create_time`,`update_time`,`create_user`,`update_user` from xjbg_room where id = ? 
2019-06-04 15:43:58 -==> Parameters: 1(Integer)
2019-06-04 15:43:58 -<==      Total: 1
2019-06-04 15:43:58 -耗时 : 9
2019-06-04 15:43:58 -返回值 : xjbg/room/operation
2019-06-04 15:47:02 -请求地址 : http://localhost:8888/index
2019-06-04 15:47:02 -HTTP METHOD : GET
2019-06-04 15:47:02 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-06-04 15:47:02 -参数 : [{}]
2019-06-04 15:47:02 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-06-04 15:47:02 -==> Parameters: 1(Long)
2019-06-04 15:47:02 -<==      Total: 34
2019-06-04 15:47:02 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-06-04 15:47:02 -==> Parameters: 144(Long)
2019-06-04 15:47:02 -<==      Total: 1
2019-06-04 15:47:02 -耗时 : 5
2019-06-04 15:47:02 -返回值 : index_v1
2019-06-04 15:47:02 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-04 15:47:02 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 5(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-commenting","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user","url":"/weixin/weixinUser"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"109","text":"用户管理"}],"hasChildren":true,"hasParent":false,"id":"109","parentId":"0","text":"微信管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","text":"基础管理"},{"attributes":{"icon":"fa fa-hotel","url":""},"checked":false,"children":[{"attributes":{"icon":"","url":"/xjbg/room/roomMng"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"105","text":"开房"},{"attributes":{"icon":"fa fa-bed","url":"/xjbg/room"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"106","parentId":"105","text":"房间管理"},{"attributes":{"icon":"","url":"/xjbg/product"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"105","text":"商品管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"欣吉宾馆"},{"attributes":{"icon":"fa fa-desktop"},"checked":false,"children":[{"attributes":{"icon":"fa fa-user","url":"sys/user/"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"6","parentId":"3","text":"用户管理"},{"attributes":{"icon":"fa fa-paw","url":"sys/role"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"7","parentId":"3","text":"角色管理"},{"attributes":{"icon":"fa fa-th-list","url":"sys/menu/"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"3","text":"系统菜单"},{"attributes":{"icon":"fa fa-users","url":"/system/sysDept"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"73","parentId":"3","text":"部门管理"}],"hasChildren":true,"hasParent":false,"id":"3","parentId":"0","text":"系统管理"},{"attributes":{"icon":"fa fa-gear","url":""},"checked":false,"children":[{"attributes":{"icon":"","url":"/swagger-ui.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"104","parentId":"77","text":"swagger"},{"attributes":{"icon":"fa fa-code","url":"common/generator"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"48","parentId":"77","text":"代码生成"},{"attributes":{"icon":"fa fa-hourglass-1","url":"common/job"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"72","parentId":"77","text":"计划任务"}],"hasChildren":true,"hasParent":false,"id":"77","parentId":"0","text":"系统工具"},{"attributes":{"icon":"fa fa-laptop","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-pencil-square","url":"oa/notify"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"85","parentId":"84","text":"通知公告"},{"attributes":{"icon":"fa fa-envelope-square","url":"oa/notify/selfNotify"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"90","parentId":"84","text":"我的通知"}],"hasChildren":true,"hasParent":false,"id":"84","parentId":"0","text":"办公管理"},{"attributes":{"icon":"fa fa-video-camera","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user","url":"sys/online"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"92","parentId":"91","text":"在线用户"},{"attributes":{"icon":"fa fa-warning","url":"common/log"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"27","parentId":"91","text":"系统日志"},{"attributes":{"icon":"fa fa-caret-square-o-right","url":"/druid/index.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"57","parentId":"91","text":"运行监控"}],"hasChildren":true,"hasParent":false,"id":"91","parentId":"0","text":"系统监控"},{"attributes":{"icon":"fa fa-rss","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-edit","url":"/blog/bContent/add"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"68","parentId":"49","text":"发布文章"},{"attributes":{"icon":"fa fa-file-image-o","url":"blog/bContent"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"50","parentId":"49","text":"文章列表"}],"hasChildren":true,"hasParent":false,"id":"49","parentId":"0","text":"博客管理"},{"attributes":{"icon":"fa fa-print","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-flag","url":"activiti/process"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"96","parentId":"93","text":"流程管理"},{"attributes":{"icon":"","url":"activiti/task/todo"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"101","parentId":"93","text":"待办任务"},{"attr(String), 127.0.0.1(String), 2019-06-04 15:47:02.667(Timestamp)
2019-06-04 15:47:02 -请求地址 : http://localhost:8888/main
2019-06-04 15:47:02 -HTTP METHOD : GET
2019-06-04 15:47:02 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-04 15:47:02 -参数 : []
2019-06-04 15:47:02 -耗时 : 0
2019-06-04 15:47:02 -返回值 : main
2019-06-04 15:47:02 -<==    Updates: 1
2019-06-04 15:47:02 -请求地址 : http://localhost:8888/oa/notify/message
2019-06-04 15:47:02 -HTTP METHOD : GET
2019-06-04 15:47:02 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-06-04 15:47:02 -参数 : []
2019-06-04 15:47:02 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-06-04 15:47:02 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-06-04 15:47:02 -<==      Total: 0
2019-06-04 15:47:02 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-06-04 15:47:02 -==> Parameters: 1(Long), 0(String)
2019-06-04 15:47:02 -<==      Total: 1
2019-06-04 15:47:02 -耗时 : 4
2019-06-04 15:47:02 -返回值 : com.bootdo.common.utils.PageUtils@3819ed19
2019-06-04 15:47:02 -请求地址 : http://localhost:8888/main
2019-06-04 15:47:02 -HTTP METHOD : GET
2019-06-04 15:47:02 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-04 15:47:02 -参数 : []
2019-06-04 15:47:02 -耗时 : 1
2019-06-04 15:47:02 -返回值 : main
2019-06-04 15:47:04 -请求地址 : http://localhost:8888/xjbg/room/roomMng
2019-06-04 15:47:04 -HTTP METHOD : GET
2019-06-04 15:47:04 -CLASS_METHOD : com.bootdo.xjbg.controller.RoomController.roomMng
2019-06-04 15:47:04 -参数 : [{}]
2019-06-04 15:47:04 -==>  Preparing: select `id`,`room_no`,`room_type`,`floor`,`room_state`,`price`,`create_time`,`update_time`,`create_user`,`update_user` from xjbg_room 
2019-06-04 15:47:04 -==> Parameters: 
2019-06-04 15:47:04 -<==      Total: 8
2019-06-04 15:47:04 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 15:47:04 -==> Parameters: room_type(String)
2019-06-04 15:47:04 -<==      Total: 7
2019-06-04 15:47:04 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 15:47:04 -==> Parameters: floor(String)
2019-06-04 15:47:04 -<==      Total: 5
2019-06-04 15:47:04 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 15:47:04 -==> Parameters: room_state(String)
2019-06-04 15:47:04 -<==      Total: 2
2019-06-04 15:47:04 -==>  Preparing: select * from sys_user 
2019-06-04 15:47:04 -==> Parameters: 
2019-06-04 15:47:04 -<==      Total: 11
2019-06-04 15:47:04 -耗时 : 7
2019-06-04 15:47:04 -返回值 : xjbg/room/roomMng
2019-06-04 15:47:05 -请求地址 : http://localhost:8888/xjbg/room/operation/1
2019-06-04 15:47:05 -HTTP METHOD : GET
2019-06-04 15:47:05 -CLASS_METHOD : com.bootdo.xjbg.controller.RoomController.operation
2019-06-04 15:47:05 -参数 : [1, {}]
2019-06-04 15:47:05 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 15:47:05 -==> Parameters: room_type(String)
2019-06-04 15:47:05 -<==      Total: 7
2019-06-04 15:47:05 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 15:47:05 -==> Parameters: floor(String)
2019-06-04 15:47:05 -<==      Total: 5
2019-06-04 15:47:05 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 15:47:05 -==> Parameters: room_state(String)
2019-06-04 15:47:05 -<==      Total: 2
2019-06-04 15:47:05 -==>  Preparing: select * from sys_user 
2019-06-04 15:47:05 -==> Parameters: 
2019-06-04 15:47:05 -<==      Total: 11
2019-06-04 15:47:05 -==>  Preparing: select `id`,`product_name`,`purchase_price`,`selling_price`,`product_pic`,`create_time`,`create_user`,`update_time`,`update_user` from xjbg_product order by id desc 
2019-06-04 15:47:05 -==> Parameters: 
2019-06-04 15:47:05 -<==      Total: 5
2019-06-04 15:47:05 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 15:47:05 -==> Parameters: order_type(String)
2019-06-04 15:47:05 -<==      Total: 3
2019-06-04 15:47:05 -==>  Preparing: select `id`,`room_no`,`room_type`,`floor`,`room_state`,`price`,`create_time`,`update_time`,`create_user`,`update_user` from xjbg_room where id = ? 
2019-06-04 15:47:05 -==> Parameters: 1(Integer)
2019-06-04 15:47:05 -<==      Total: 1
2019-06-04 15:47:05 -耗时 : 12
2019-06-04 15:47:05 -返回值 : xjbg/room/operation
2019-06-04 15:50:57 -请求地址 : http://localhost:8888/index
2019-06-04 15:50:57 -HTTP METHOD : GET
2019-06-04 15:50:57 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-06-04 15:50:57 -参数 : [{}]
2019-06-04 15:50:57 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-06-04 15:50:57 -==> Parameters: 1(Long)
2019-06-04 15:50:57 -<==      Total: 34
2019-06-04 15:50:57 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-06-04 15:50:57 -==> Parameters: 144(Long)
2019-06-04 15:50:57 -<==      Total: 1
2019-06-04 15:50:57 -耗时 : 6
2019-06-04 15:50:57 -返回值 : index_v1
2019-06-04 15:50:57 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-04 15:50:57 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 6(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-commenting","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user","url":"/weixin/weixinUser"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"109","text":"用户管理"}],"hasChildren":true,"hasParent":false,"id":"109","parentId":"0","text":"微信管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","text":"基础管理"},{"attributes":{"icon":"fa fa-hotel","url":""},"checked":false,"children":[{"attributes":{"icon":"","url":"/xjbg/room/roomMng"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"105","text":"开房"},{"attributes":{"icon":"fa fa-bed","url":"/xjbg/room"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"106","parentId":"105","text":"房间管理"},{"attributes":{"icon":"","url":"/xjbg/product"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"105","text":"商品管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"欣吉宾馆"},{"attributes":{"icon":"fa fa-desktop"},"checked":false,"children":[{"attributes":{"icon":"fa fa-user","url":"sys/user/"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"6","parentId":"3","text":"用户管理"},{"attributes":{"icon":"fa fa-paw","url":"sys/role"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"7","parentId":"3","text":"角色管理"},{"attributes":{"icon":"fa fa-th-list","url":"sys/menu/"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"3","text":"系统菜单"},{"attributes":{"icon":"fa fa-users","url":"/system/sysDept"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"73","parentId":"3","text":"部门管理"}],"hasChildren":true,"hasParent":false,"id":"3","parentId":"0","text":"系统管理"},{"attributes":{"icon":"fa fa-gear","url":""},"checked":false,"children":[{"attributes":{"icon":"","url":"/swagger-ui.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"104","parentId":"77","text":"swagger"},{"attributes":{"icon":"fa fa-code","url":"common/generator"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"48","parentId":"77","text":"代码生成"},{"attributes":{"icon":"fa fa-hourglass-1","url":"common/job"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"72","parentId":"77","text":"计划任务"}],"hasChildren":true,"hasParent":false,"id":"77","parentId":"0","text":"系统工具"},{"attributes":{"icon":"fa fa-laptop","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-pencil-square","url":"oa/notify"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"85","parentId":"84","text":"通知公告"},{"attributes":{"icon":"fa fa-envelope-square","url":"oa/notify/selfNotify"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"90","parentId":"84","text":"我的通知"}],"hasChildren":true,"hasParent":false,"id":"84","parentId":"0","text":"办公管理"},{"attributes":{"icon":"fa fa-video-camera","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user","url":"sys/online"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"92","parentId":"91","text":"在线用户"},{"attributes":{"icon":"fa fa-warning","url":"common/log"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"27","parentId":"91","text":"系统日志"},{"attributes":{"icon":"fa fa-caret-square-o-right","url":"/druid/index.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"57","parentId":"91","text":"运行监控"}],"hasChildren":true,"hasParent":false,"id":"91","parentId":"0","text":"系统监控"},{"attributes":{"icon":"fa fa-rss","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-edit","url":"/blog/bContent/add"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"68","parentId":"49","text":"发布文章"},{"attributes":{"icon":"fa fa-file-image-o","url":"blog/bContent"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"50","parentId":"49","text":"文章列表"}],"hasChildren":true,"hasParent":false,"id":"49","parentId":"0","text":"博客管理"},{"attributes":{"icon":"fa fa-print","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-flag","url":"activiti/process"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"96","parentId":"93","text":"流程管理"},{"attributes":{"icon":"","url":"activiti/task/todo"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"101","parentId":"93","text":"待办任务"},{"attr(String), 127.0.0.1(String), 2019-06-04 15:50:57.491(Timestamp)
2019-06-04 15:50:57 -<==    Updates: 1
2019-06-04 15:50:57 -请求地址 : http://localhost:8888/main
2019-06-04 15:50:57 -HTTP METHOD : GET
2019-06-04 15:50:57 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-04 15:50:57 -参数 : []
2019-06-04 15:50:57 -耗时 : 0
2019-06-04 15:50:57 -返回值 : main
2019-06-04 15:50:57 -请求地址 : http://localhost:8888/oa/notify/message
2019-06-04 15:50:57 -HTTP METHOD : GET
2019-06-04 15:50:57 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-06-04 15:50:57 -参数 : []
2019-06-04 15:50:57 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-06-04 15:50:57 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-06-04 15:50:57 -<==      Total: 0
2019-06-04 15:50:57 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-06-04 15:50:57 -==> Parameters: 1(Long), 0(String)
2019-06-04 15:50:57 -<==      Total: 1
2019-06-04 15:50:57 -耗时 : 2
2019-06-04 15:50:57 -返回值 : com.bootdo.common.utils.PageUtils@73c96db5
2019-06-04 15:50:57 -请求地址 : http://localhost:8888/main
2019-06-04 15:50:57 -HTTP METHOD : GET
2019-06-04 15:50:57 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-04 15:50:57 -参数 : []
2019-06-04 15:50:57 -耗时 : 0
2019-06-04 15:50:57 -返回值 : main
2019-06-04 15:50:59 -请求地址 : http://localhost:8888/xjbg/room
2019-06-04 15:50:59 -HTTP METHOD : GET
2019-06-04 15:50:59 -CLASS_METHOD : com.bootdo.xjbg.controller.RoomController.Room
2019-06-04 15:50:59 -参数 : [{}]
2019-06-04 15:50:59 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 15:50:59 -==> Parameters: room_type(String)
2019-06-04 15:50:59 -<==      Total: 7
2019-06-04 15:50:59 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 15:50:59 -==> Parameters: floor(String)
2019-06-04 15:50:59 -<==      Total: 5
2019-06-04 15:50:59 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 15:50:59 -==> Parameters: room_state(String)
2019-06-04 15:51:00 -<==      Total: 2
2019-06-04 15:51:00 -==>  Preparing: select * from sys_user 
2019-06-04 15:51:00 -==> Parameters: 
2019-06-04 15:51:00 -<==      Total: 11
2019-06-04 15:51:00 -耗时 : 8
2019-06-04 15:51:00 -返回值 : xjbg/room/room
2019-06-04 15:51:00 -请求地址 : http://localhost:8888/xjbg/room/list
2019-06-04 15:51:00 -HTTP METHOD : GET
2019-06-04 15:51:00 -CLASS_METHOD : com.bootdo.xjbg.controller.RoomController.list
2019-06-04 15:51:00 -参数 : [{limit=10, offset=0}]
2019-06-04 15:51:00 -==>  Preparing: select `id`,`room_no`,`room_type`,`floor`,`room_state`,`price`,`create_time`,`update_time`,`create_user`,`update_user` from xjbg_room order by room_no desc limit ?, ? 
2019-06-04 15:51:00 -==> Parameters: 0(Integer), 10(Integer)
2019-06-04 15:51:00 -<==      Total: 8
2019-06-04 15:51:00 -==>  Preparing: select count(*) from xjbg_room 
2019-06-04 15:51:00 -==> Parameters: 
2019-06-04 15:51:00 -<==      Total: 1
2019-06-04 15:51:00 -耗时 : 8
2019-06-04 15:51:00 -返回值 : com.bootdo.common.utils.PageUtils@b7870e3
2019-06-04 15:51:00 -请求地址 : http://localhost:8888/xjbg/room/roomMng
2019-06-04 15:51:00 -HTTP METHOD : GET
2019-06-04 15:51:00 -CLASS_METHOD : com.bootdo.xjbg.controller.RoomController.roomMng
2019-06-04 15:51:00 -参数 : [{}]
2019-06-04 15:51:00 -==>  Preparing: select `id`,`room_no`,`room_type`,`floor`,`room_state`,`price`,`create_time`,`update_time`,`create_user`,`update_user` from xjbg_room 
2019-06-04 15:51:00 -==> Parameters: 
2019-06-04 15:51:00 -<==      Total: 8
2019-06-04 15:51:00 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 15:51:00 -==> Parameters: room_type(String)
2019-06-04 15:51:00 -<==      Total: 7
2019-06-04 15:51:00 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 15:51:00 -==> Parameters: floor(String)
2019-06-04 15:51:00 -<==      Total: 5
2019-06-04 15:51:00 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 15:51:00 -==> Parameters: room_state(String)
2019-06-04 15:51:00 -<==      Total: 2
2019-06-04 15:51:00 -==>  Preparing: select * from sys_user 
2019-06-04 15:51:00 -==> Parameters: 
2019-06-04 15:51:00 -<==      Total: 11
2019-06-04 15:51:00 -耗时 : 7
2019-06-04 15:51:00 -返回值 : xjbg/room/roomMng
2019-06-04 15:51:00 -请求地址 : http://localhost:8888/xjbg/room/operation/1
2019-06-04 15:51:00 -HTTP METHOD : GET
2019-06-04 15:51:00 -CLASS_METHOD : com.bootdo.xjbg.controller.RoomController.operation
2019-06-04 15:51:00 -参数 : [1, {}]
2019-06-04 15:51:00 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 15:51:00 -==> Parameters: room_type(String)
2019-06-04 15:51:00 -<==      Total: 7
2019-06-04 15:51:00 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 15:51:00 -==> Parameters: floor(String)
2019-06-04 15:51:00 -<==      Total: 5
2019-06-04 15:51:00 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 15:51:00 -==> Parameters: room_state(String)
2019-06-04 15:51:00 -<==      Total: 2
2019-06-04 15:51:00 -==>  Preparing: select * from sys_user 
2019-06-04 15:51:00 -==> Parameters: 
2019-06-04 15:51:00 -<==      Total: 11
2019-06-04 15:51:00 -==>  Preparing: select `id`,`product_name`,`purchase_price`,`selling_price`,`product_pic`,`create_time`,`create_user`,`update_time`,`update_user` from xjbg_product order by id desc 
2019-06-04 15:51:00 -==> Parameters: 
2019-06-04 15:51:00 -<==      Total: 5
2019-06-04 15:51:00 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 15:51:00 -==> Parameters: order_type(String)
2019-06-04 15:51:00 -<==      Total: 3
2019-06-04 15:51:00 -==>  Preparing: select `id`,`room_no`,`room_type`,`floor`,`room_state`,`price`,`create_time`,`update_time`,`create_user`,`update_user` from xjbg_room where id = ? 
2019-06-04 15:51:00 -==> Parameters: 1(Integer)
2019-06-04 15:51:00 -<==      Total: 1
2019-06-04 15:51:00 -耗时 : 8
2019-06-04 15:51:00 -返回值 : xjbg/room/operation
2019-06-04 15:53:08 -请求地址 : http://localhost:8888/index
2019-06-04 15:53:08 -HTTP METHOD : GET
2019-06-04 15:53:08 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-06-04 15:53:08 -参数 : [{}]
2019-06-04 15:53:08 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-06-04 15:53:08 -==> Parameters: 1(Long)
2019-06-04 15:53:08 -<==      Total: 34
2019-06-04 15:53:08 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-06-04 15:53:08 -==> Parameters: 144(Long)
2019-06-04 15:53:08 -<==      Total: 1
2019-06-04 15:53:08 -耗时 : 4
2019-06-04 15:53:08 -返回值 : index_v1
2019-06-04 15:53:08 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-04 15:53:08 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 4(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-commenting","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user","url":"/weixin/weixinUser"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"109","text":"用户管理"}],"hasChildren":true,"hasParent":false,"id":"109","parentId":"0","text":"微信管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","text":"基础管理"},{"attributes":{"icon":"fa fa-hotel","url":""},"checked":false,"children":[{"attributes":{"icon":"","url":"/xjbg/room/roomMng"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"105","text":"开房"},{"attributes":{"icon":"fa fa-bed","url":"/xjbg/room"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"106","parentId":"105","text":"房间管理"},{"attributes":{"icon":"","url":"/xjbg/product"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"105","text":"商品管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"欣吉宾馆"},{"attributes":{"icon":"fa fa-desktop"},"checked":false,"children":[{"attributes":{"icon":"fa fa-user","url":"sys/user/"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"6","parentId":"3","text":"用户管理"},{"attributes":{"icon":"fa fa-paw","url":"sys/role"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"7","parentId":"3","text":"角色管理"},{"attributes":{"icon":"fa fa-th-list","url":"sys/menu/"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"3","text":"系统菜单"},{"attributes":{"icon":"fa fa-users","url":"/system/sysDept"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"73","parentId":"3","text":"部门管理"}],"hasChildren":true,"hasParent":false,"id":"3","parentId":"0","text":"系统管理"},{"attributes":{"icon":"fa fa-gear","url":""},"checked":false,"children":[{"attributes":{"icon":"","url":"/swagger-ui.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"104","parentId":"77","text":"swagger"},{"attributes":{"icon":"fa fa-code","url":"common/generator"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"48","parentId":"77","text":"代码生成"},{"attributes":{"icon":"fa fa-hourglass-1","url":"common/job"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"72","parentId":"77","text":"计划任务"}],"hasChildren":true,"hasParent":false,"id":"77","parentId":"0","text":"系统工具"},{"attributes":{"icon":"fa fa-laptop","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-pencil-square","url":"oa/notify"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"85","parentId":"84","text":"通知公告"},{"attributes":{"icon":"fa fa-envelope-square","url":"oa/notify/selfNotify"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"90","parentId":"84","text":"我的通知"}],"hasChildren":true,"hasParent":false,"id":"84","parentId":"0","text":"办公管理"},{"attributes":{"icon":"fa fa-video-camera","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user","url":"sys/online"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"92","parentId":"91","text":"在线用户"},{"attributes":{"icon":"fa fa-warning","url":"common/log"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"27","parentId":"91","text":"系统日志"},{"attributes":{"icon":"fa fa-caret-square-o-right","url":"/druid/index.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"57","parentId":"91","text":"运行监控"}],"hasChildren":true,"hasParent":false,"id":"91","parentId":"0","text":"系统监控"},{"attributes":{"icon":"fa fa-rss","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-edit","url":"/blog/bContent/add"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"68","parentId":"49","text":"发布文章"},{"attributes":{"icon":"fa fa-file-image-o","url":"blog/bContent"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"50","parentId":"49","text":"文章列表"}],"hasChildren":true,"hasParent":false,"id":"49","parentId":"0","text":"博客管理"},{"attributes":{"icon":"fa fa-print","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-flag","url":"activiti/process"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"96","parentId":"93","text":"流程管理"},{"attributes":{"icon":"","url":"activiti/task/todo"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"101","parentId":"93","text":"待办任务"},{"attr(String), 127.0.0.1(String), 2019-06-04 15:53:08.161(Timestamp)
2019-06-04 15:53:08 -请求地址 : http://localhost:8888/main
2019-06-04 15:53:08 -HTTP METHOD : GET
2019-06-04 15:53:08 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-04 15:53:08 -参数 : []
2019-06-04 15:53:08 -耗时 : 0
2019-06-04 15:53:08 -返回值 : main
2019-06-04 15:53:08 -<==    Updates: 1
2019-06-04 15:53:08 -请求地址 : http://localhost:8888/oa/notify/message
2019-06-04 15:53:08 -HTTP METHOD : GET
2019-06-04 15:53:08 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-06-04 15:53:08 -参数 : []
2019-06-04 15:53:08 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-06-04 15:53:08 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-06-04 15:53:08 -请求地址 : http://localhost:8888/main
2019-06-04 15:53:08 -HTTP METHOD : GET
2019-06-04 15:53:08 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-04 15:53:08 -参数 : []
2019-06-04 15:53:08 -耗时 : 0
2019-06-04 15:53:08 -返回值 : main
2019-06-04 15:53:08 -<==      Total: 0
2019-06-04 15:53:08 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-06-04 15:53:08 -==> Parameters: 1(Long), 0(String)
2019-06-04 15:53:08 -<==      Total: 1
2019-06-04 15:53:08 -耗时 : 3
2019-06-04 15:53:08 -返回值 : com.bootdo.common.utils.PageUtils@6b727338
2019-06-04 15:53:09 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-06-04 15:53:09 -==> Parameters: 1(Long)
2019-06-04 15:53:09 -<==      Total: 58
2019-06-04 15:53:09 -请求地址 : http://localhost:8888/xjbg/room/roomMng
2019-06-04 15:53:09 -HTTP METHOD : GET
2019-06-04 15:53:09 -CLASS_METHOD : com.bootdo.xjbg.controller.RoomController.roomMng
2019-06-04 15:53:09 -参数 : [{}]
2019-06-04 15:53:09 -==>  Preparing: select `id`,`room_no`,`room_type`,`floor`,`room_state`,`price`,`create_time`,`update_time`,`create_user`,`update_user` from xjbg_room 
2019-06-04 15:53:09 -==> Parameters: 
2019-06-04 15:53:09 -<==      Total: 8
2019-06-04 15:53:09 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 15:53:09 -==> Parameters: room_type(String)
2019-06-04 15:53:09 -<==      Total: 7
2019-06-04 15:53:09 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 15:53:09 -==> Parameters: floor(String)
2019-06-04 15:53:09 -<==      Total: 5
2019-06-04 15:53:09 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 15:53:09 -==> Parameters: room_state(String)
2019-06-04 15:53:09 -<==      Total: 2
2019-06-04 15:53:09 -==>  Preparing: select * from sys_user 
2019-06-04 15:53:09 -==> Parameters: 
2019-06-04 15:53:09 -<==      Total: 11
2019-06-04 15:53:09 -耗时 : 6
2019-06-04 15:53:09 -返回值 : xjbg/room/roomMng
2019-06-04 15:53:09 -请求地址 : http://localhost:8888/xjbg/room/operation/1
2019-06-04 15:53:09 -HTTP METHOD : GET
2019-06-04 15:53:09 -CLASS_METHOD : com.bootdo.xjbg.controller.RoomController.operation
2019-06-04 15:53:09 -参数 : [1, {}]
2019-06-04 15:53:09 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 15:53:09 -==> Parameters: room_type(String)
2019-06-04 15:53:09 -<==      Total: 7
2019-06-04 15:53:09 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 15:53:09 -==> Parameters: floor(String)
2019-06-04 15:53:09 -<==      Total: 5
2019-06-04 15:53:09 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 15:53:09 -==> Parameters: room_state(String)
2019-06-04 15:53:10 -<==      Total: 2
2019-06-04 15:53:10 -==>  Preparing: select * from sys_user 
2019-06-04 15:53:10 -==> Parameters: 
2019-06-04 15:53:10 -<==      Total: 11
2019-06-04 15:53:10 -==>  Preparing: select `id`,`product_name`,`purchase_price`,`selling_price`,`product_pic`,`create_time`,`create_user`,`update_time`,`update_user` from xjbg_product order by id desc 
2019-06-04 15:53:10 -==> Parameters: 
2019-06-04 15:53:10 -<==      Total: 5
2019-06-04 15:53:10 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 15:53:10 -==> Parameters: order_type(String)
2019-06-04 15:53:10 -<==      Total: 3
2019-06-04 15:53:10 -==>  Preparing: select `id`,`room_no`,`room_type`,`floor`,`room_state`,`price`,`create_time`,`update_time`,`create_user`,`update_user` from xjbg_room where id = ? 
2019-06-04 15:53:10 -==> Parameters: 1(Integer)
2019-06-04 15:53:10 -<==      Total: 1
2019-06-04 15:53:10 -耗时 : 12
2019-06-04 15:53:10 -返回值 : xjbg/room/operation
2019-06-04 15:54:28 -请求地址 : http://localhost:8888/index
2019-06-04 15:54:28 -HTTP METHOD : GET
2019-06-04 15:54:28 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-06-04 15:54:28 -参数 : [{}]
2019-06-04 15:54:28 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-06-04 15:54:28 -==> Parameters: 1(Long)
2019-06-04 15:54:28 -<==      Total: 34
2019-06-04 15:54:28 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-06-04 15:54:28 -==> Parameters: 144(Long)
2019-06-04 15:54:28 -<==      Total: 1
2019-06-04 15:54:28 -耗时 : 6
2019-06-04 15:54:28 -返回值 : index_v1
2019-06-04 15:54:28 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-04 15:54:28 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 6(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-commenting","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user","url":"/weixin/weixinUser"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"109","text":"用户管理"}],"hasChildren":true,"hasParent":false,"id":"109","parentId":"0","text":"微信管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","text":"基础管理"},{"attributes":{"icon":"fa fa-hotel","url":""},"checked":false,"children":[{"attributes":{"icon":"","url":"/xjbg/room/roomMng"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"105","text":"开房"},{"attributes":{"icon":"fa fa-bed","url":"/xjbg/room"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"106","parentId":"105","text":"房间管理"},{"attributes":{"icon":"","url":"/xjbg/product"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"105","text":"商品管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"欣吉宾馆"},{"attributes":{"icon":"fa fa-desktop"},"checked":false,"children":[{"attributes":{"icon":"fa fa-user","url":"sys/user/"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"6","parentId":"3","text":"用户管理"},{"attributes":{"icon":"fa fa-paw","url":"sys/role"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"7","parentId":"3","text":"角色管理"},{"attributes":{"icon":"fa fa-th-list","url":"sys/menu/"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"3","text":"系统菜单"},{"attributes":{"icon":"fa fa-users","url":"/system/sysDept"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"73","parentId":"3","text":"部门管理"}],"hasChildren":true,"hasParent":false,"id":"3","parentId":"0","text":"系统管理"},{"attributes":{"icon":"fa fa-gear","url":""},"checked":false,"children":[{"attributes":{"icon":"","url":"/swagger-ui.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"104","parentId":"77","text":"swagger"},{"attributes":{"icon":"fa fa-code","url":"common/generator"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"48","parentId":"77","text":"代码生成"},{"attributes":{"icon":"fa fa-hourglass-1","url":"common/job"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"72","parentId":"77","text":"计划任务"}],"hasChildren":true,"hasParent":false,"id":"77","parentId":"0","text":"系统工具"},{"attributes":{"icon":"fa fa-laptop","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-pencil-square","url":"oa/notify"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"85","parentId":"84","text":"通知公告"},{"attributes":{"icon":"fa fa-envelope-square","url":"oa/notify/selfNotify"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"90","parentId":"84","text":"我的通知"}],"hasChildren":true,"hasParent":false,"id":"84","parentId":"0","text":"办公管理"},{"attributes":{"icon":"fa fa-video-camera","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user","url":"sys/online"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"92","parentId":"91","text":"在线用户"},{"attributes":{"icon":"fa fa-warning","url":"common/log"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"27","parentId":"91","text":"系统日志"},{"attributes":{"icon":"fa fa-caret-square-o-right","url":"/druid/index.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"57","parentId":"91","text":"运行监控"}],"hasChildren":true,"hasParent":false,"id":"91","parentId":"0","text":"系统监控"},{"attributes":{"icon":"fa fa-rss","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-edit","url":"/blog/bContent/add"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"68","parentId":"49","text":"发布文章"},{"attributes":{"icon":"fa fa-file-image-o","url":"blog/bContent"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"50","parentId":"49","text":"文章列表"}],"hasChildren":true,"hasParent":false,"id":"49","parentId":"0","text":"博客管理"},{"attributes":{"icon":"fa fa-print","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-flag","url":"activiti/process"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"96","parentId":"93","text":"流程管理"},{"attributes":{"icon":"","url":"activiti/task/todo"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"101","parentId":"93","text":"待办任务"},{"attr(String), 127.0.0.1(String), 2019-06-04 15:54:28.538(Timestamp)
2019-06-04 15:54:28 -请求地址 : http://localhost:8888/main
2019-06-04 15:54:28 -HTTP METHOD : GET
2019-06-04 15:54:28 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-04 15:54:28 -参数 : []
2019-06-04 15:54:28 -耗时 : 0
2019-06-04 15:54:28 -返回值 : main
2019-06-04 15:54:28 -<==    Updates: 1
2019-06-04 15:54:28 -请求地址 : http://localhost:8888/oa/notify/message
2019-06-04 15:54:28 -HTTP METHOD : GET
2019-06-04 15:54:28 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-06-04 15:54:28 -参数 : []
2019-06-04 15:54:28 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-06-04 15:54:28 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-06-04 15:54:28 -<==      Total: 0
2019-06-04 15:54:28 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-06-04 15:54:28 -==> Parameters: 1(Long), 0(String)
2019-06-04 15:54:28 -<==      Total: 1
2019-06-04 15:54:28 -耗时 : 3
2019-06-04 15:54:28 -返回值 : com.bootdo.common.utils.PageUtils@10ea279d
2019-06-04 15:54:28 -请求地址 : http://localhost:8888/main
2019-06-04 15:54:28 -HTTP METHOD : GET
2019-06-04 15:54:28 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-04 15:54:28 -参数 : []
2019-06-04 15:54:28 -耗时 : 0
2019-06-04 15:54:28 -返回值 : main
2019-06-04 15:54:30 -请求地址 : http://localhost:8888/xjbg/room/roomMng
2019-06-04 15:54:30 -HTTP METHOD : GET
2019-06-04 15:54:30 -CLASS_METHOD : com.bootdo.xjbg.controller.RoomController.roomMng
2019-06-04 15:54:30 -参数 : [{}]
2019-06-04 15:54:30 -==>  Preparing: select `id`,`room_no`,`room_type`,`floor`,`room_state`,`price`,`create_time`,`update_time`,`create_user`,`update_user` from xjbg_room 
2019-06-04 15:54:30 -==> Parameters: 
2019-06-04 15:54:30 -<==      Total: 8
2019-06-04 15:54:30 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 15:54:30 -==> Parameters: room_type(String)
2019-06-04 15:54:30 -<==      Total: 7
2019-06-04 15:54:30 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 15:54:30 -==> Parameters: floor(String)
2019-06-04 15:54:30 -<==      Total: 5
2019-06-04 15:54:30 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 15:54:30 -==> Parameters: room_state(String)
2019-06-04 15:54:30 -<==      Total: 2
2019-06-04 15:54:30 -==>  Preparing: select * from sys_user 
2019-06-04 15:54:30 -==> Parameters: 
2019-06-04 15:54:30 -<==      Total: 11
2019-06-04 15:54:30 -耗时 : 5
2019-06-04 15:54:30 -返回值 : xjbg/room/roomMng
2019-06-04 15:54:30 -请求地址 : http://localhost:8888/xjbg/room/operation/1
2019-06-04 15:54:30 -HTTP METHOD : GET
2019-06-04 15:54:30 -CLASS_METHOD : com.bootdo.xjbg.controller.RoomController.operation
2019-06-04 15:54:30 -参数 : [1, {}]
2019-06-04 15:54:30 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 15:54:30 -==> Parameters: room_type(String)
2019-06-04 15:54:30 -<==      Total: 7
2019-06-04 15:54:30 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 15:54:30 -==> Parameters: floor(String)
2019-06-04 15:54:30 -<==      Total: 5
2019-06-04 15:54:30 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 15:54:30 -==> Parameters: room_state(String)
2019-06-04 15:54:30 -<==      Total: 2
2019-06-04 15:54:30 -==>  Preparing: select * from sys_user 
2019-06-04 15:54:30 -==> Parameters: 
2019-06-04 15:54:30 -<==      Total: 11
2019-06-04 15:54:30 -==>  Preparing: select `id`,`product_name`,`purchase_price`,`selling_price`,`product_pic`,`create_time`,`create_user`,`update_time`,`update_user` from xjbg_product order by id desc 
2019-06-04 15:54:30 -==> Parameters: 
2019-06-04 15:54:30 -<==      Total: 5
2019-06-04 15:54:30 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 15:54:30 -==> Parameters: order_type(String)
2019-06-04 15:54:30 -<==      Total: 3
2019-06-04 15:54:30 -==>  Preparing: select `id`,`room_no`,`room_type`,`floor`,`room_state`,`price`,`create_time`,`update_time`,`create_user`,`update_user` from xjbg_room where id = ? 
2019-06-04 15:54:30 -==> Parameters: 1(Integer)
2019-06-04 15:54:30 -<==      Total: 1
2019-06-04 15:54:30 -耗时 : 13
2019-06-04 15:54:30 -返回值 : xjbg/room/operation
2019-06-04 15:55:17 -请求地址 : http://localhost:8888/index
2019-06-04 15:55:17 -HTTP METHOD : GET
2019-06-04 15:55:17 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-06-04 15:55:17 -参数 : [{}]
2019-06-04 15:55:17 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-06-04 15:55:17 -==> Parameters: 1(Long)
2019-06-04 15:55:17 -<==      Total: 34
2019-06-04 15:55:17 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-06-04 15:55:17 -==> Parameters: 144(Long)
2019-06-04 15:55:17 -<==      Total: 1
2019-06-04 15:55:17 -耗时 : 4
2019-06-04 15:55:17 -返回值 : index_v1
2019-06-04 15:55:17 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-04 15:55:17 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 4(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-commenting","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user","url":"/weixin/weixinUser"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"109","text":"用户管理"}],"hasChildren":true,"hasParent":false,"id":"109","parentId":"0","text":"微信管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","text":"基础管理"},{"attributes":{"icon":"fa fa-hotel","url":""},"checked":false,"children":[{"attributes":{"icon":"","url":"/xjbg/room/roomMng"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"105","text":"开房"},{"attributes":{"icon":"fa fa-bed","url":"/xjbg/room"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"106","parentId":"105","text":"房间管理"},{"attributes":{"icon":"","url":"/xjbg/product"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"105","text":"商品管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"欣吉宾馆"},{"attributes":{"icon":"fa fa-desktop"},"checked":false,"children":[{"attributes":{"icon":"fa fa-user","url":"sys/user/"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"6","parentId":"3","text":"用户管理"},{"attributes":{"icon":"fa fa-paw","url":"sys/role"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"7","parentId":"3","text":"角色管理"},{"attributes":{"icon":"fa fa-th-list","url":"sys/menu/"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"3","text":"系统菜单"},{"attributes":{"icon":"fa fa-users","url":"/system/sysDept"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"73","parentId":"3","text":"部门管理"}],"hasChildren":true,"hasParent":false,"id":"3","parentId":"0","text":"系统管理"},{"attributes":{"icon":"fa fa-gear","url":""},"checked":false,"children":[{"attributes":{"icon":"","url":"/swagger-ui.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"104","parentId":"77","text":"swagger"},{"attributes":{"icon":"fa fa-code","url":"common/generator"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"48","parentId":"77","text":"代码生成"},{"attributes":{"icon":"fa fa-hourglass-1","url":"common/job"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"72","parentId":"77","text":"计划任务"}],"hasChildren":true,"hasParent":false,"id":"77","parentId":"0","text":"系统工具"},{"attributes":{"icon":"fa fa-laptop","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-pencil-square","url":"oa/notify"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"85","parentId":"84","text":"通知公告"},{"attributes":{"icon":"fa fa-envelope-square","url":"oa/notify/selfNotify"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"90","parentId":"84","text":"我的通知"}],"hasChildren":true,"hasParent":false,"id":"84","parentId":"0","text":"办公管理"},{"attributes":{"icon":"fa fa-video-camera","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user","url":"sys/online"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"92","parentId":"91","text":"在线用户"},{"attributes":{"icon":"fa fa-warning","url":"common/log"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"27","parentId":"91","text":"系统日志"},{"attributes":{"icon":"fa fa-caret-square-o-right","url":"/druid/index.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"57","parentId":"91","text":"运行监控"}],"hasChildren":true,"hasParent":false,"id":"91","parentId":"0","text":"系统监控"},{"attributes":{"icon":"fa fa-rss","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-edit","url":"/blog/bContent/add"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"68","parentId":"49","text":"发布文章"},{"attributes":{"icon":"fa fa-file-image-o","url":"blog/bContent"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"50","parentId":"49","text":"文章列表"}],"hasChildren":true,"hasParent":false,"id":"49","parentId":"0","text":"博客管理"},{"attributes":{"icon":"fa fa-print","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-flag","url":"activiti/process"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"96","parentId":"93","text":"流程管理"},{"attributes":{"icon":"","url":"activiti/task/todo"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"101","parentId":"93","text":"待办任务"},{"attr(String), 127.0.0.1(String), 2019-06-04 15:55:17.366(Timestamp)
2019-06-04 15:55:17 -<==    Updates: 1
2019-06-04 15:55:17 -请求地址 : http://localhost:8888/main
2019-06-04 15:55:17 -HTTP METHOD : GET
2019-06-04 15:55:17 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-04 15:55:17 -参数 : []
2019-06-04 15:55:17 -耗时 : 0
2019-06-04 15:55:17 -返回值 : main
2019-06-04 15:55:17 -请求地址 : http://localhost:8888/oa/notify/message
2019-06-04 15:55:17 -HTTP METHOD : GET
2019-06-04 15:55:17 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-06-04 15:55:17 -参数 : []
2019-06-04 15:55:17 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-06-04 15:55:17 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-06-04 15:55:17 -<==      Total: 0
2019-06-04 15:55:17 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-06-04 15:55:17 -==> Parameters: 1(Long), 0(String)
2019-06-04 15:55:17 -<==      Total: 1
2019-06-04 15:55:17 -耗时 : 3
2019-06-04 15:55:17 -返回值 : com.bootdo.common.utils.PageUtils@1c2f175a
2019-06-04 15:55:17 -请求地址 : http://localhost:8888/main
2019-06-04 15:55:17 -HTTP METHOD : GET
2019-06-04 15:55:17 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-04 15:55:17 -参数 : []
2019-06-04 15:55:17 -耗时 : 0
2019-06-04 15:55:17 -返回值 : main
2019-06-04 15:55:18 -请求地址 : http://localhost:8888/xjbg/room/roomMng
2019-06-04 15:55:18 -HTTP METHOD : GET
2019-06-04 15:55:18 -CLASS_METHOD : com.bootdo.xjbg.controller.RoomController.roomMng
2019-06-04 15:55:18 -参数 : [{}]
2019-06-04 15:55:18 -==>  Preparing: select `id`,`room_no`,`room_type`,`floor`,`room_state`,`price`,`create_time`,`update_time`,`create_user`,`update_user` from xjbg_room 
2019-06-04 15:55:18 -==> Parameters: 
2019-06-04 15:55:18 -<==      Total: 8
2019-06-04 15:55:18 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 15:55:18 -==> Parameters: room_type(String)
2019-06-04 15:55:18 -<==      Total: 7
2019-06-04 15:55:18 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 15:55:18 -==> Parameters: floor(String)
2019-06-04 15:55:18 -<==      Total: 5
2019-06-04 15:55:18 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 15:55:18 -==> Parameters: room_state(String)
2019-06-04 15:55:18 -<==      Total: 2
2019-06-04 15:55:18 -==>  Preparing: select * from sys_user 
2019-06-04 15:55:18 -==> Parameters: 
2019-06-04 15:55:18 -<==      Total: 11
2019-06-04 15:55:18 -耗时 : 6
2019-06-04 15:55:18 -返回值 : xjbg/room/roomMng
2019-06-04 15:55:18 -请求地址 : http://localhost:8888/xjbg/room/operation/1
2019-06-04 15:55:18 -HTTP METHOD : GET
2019-06-04 15:55:18 -CLASS_METHOD : com.bootdo.xjbg.controller.RoomController.operation
2019-06-04 15:55:18 -参数 : [1, {}]
2019-06-04 15:55:18 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 15:55:18 -==> Parameters: room_type(String)
2019-06-04 15:55:18 -<==      Total: 7
2019-06-04 15:55:18 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 15:55:18 -==> Parameters: floor(String)
2019-06-04 15:55:18 -<==      Total: 5
2019-06-04 15:55:18 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 15:55:18 -==> Parameters: room_state(String)
2019-06-04 15:55:18 -<==      Total: 2
2019-06-04 15:55:18 -==>  Preparing: select * from sys_user 
2019-06-04 15:55:18 -==> Parameters: 
2019-06-04 15:55:18 -<==      Total: 11
2019-06-04 15:55:18 -==>  Preparing: select `id`,`product_name`,`purchase_price`,`selling_price`,`product_pic`,`create_time`,`create_user`,`update_time`,`update_user` from xjbg_product order by id desc 
2019-06-04 15:55:18 -==> Parameters: 
2019-06-04 15:55:18 -<==      Total: 5
2019-06-04 15:55:18 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 15:55:18 -==> Parameters: order_type(String)
2019-06-04 15:55:18 -<==      Total: 3
2019-06-04 15:55:18 -==>  Preparing: select `id`,`room_no`,`room_type`,`floor`,`room_state`,`price`,`create_time`,`update_time`,`create_user`,`update_user` from xjbg_room where id = ? 
2019-06-04 15:55:18 -==> Parameters: 1(Integer)
2019-06-04 15:55:18 -<==      Total: 1
2019-06-04 15:55:18 -耗时 : 9
2019-06-04 15:55:18 -返回值 : xjbg/room/operation
2019-06-04 15:56:03 -请求地址 : http://localhost:8888/index
2019-06-04 15:56:03 -HTTP METHOD : GET
2019-06-04 15:56:03 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-06-04 15:56:03 -参数 : [{}]
2019-06-04 15:56:03 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-06-04 15:56:03 -==> Parameters: 1(Long)
2019-06-04 15:56:03 -<==      Total: 34
2019-06-04 15:56:03 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-06-04 15:56:03 -==> Parameters: 144(Long)
2019-06-04 15:56:03 -<==      Total: 1
2019-06-04 15:56:03 -耗时 : 5
2019-06-04 15:56:03 -返回值 : index_v1
2019-06-04 15:56:03 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-04 15:56:03 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 5(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-commenting","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user","url":"/weixin/weixinUser"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"109","text":"用户管理"}],"hasChildren":true,"hasParent":false,"id":"109","parentId":"0","text":"微信管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","text":"基础管理"},{"attributes":{"icon":"fa fa-hotel","url":""},"checked":false,"children":[{"attributes":{"icon":"","url":"/xjbg/room/roomMng"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"105","text":"开房"},{"attributes":{"icon":"fa fa-bed","url":"/xjbg/room"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"106","parentId":"105","text":"房间管理"},{"attributes":{"icon":"","url":"/xjbg/product"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"105","text":"商品管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"欣吉宾馆"},{"attributes":{"icon":"fa fa-desktop"},"checked":false,"children":[{"attributes":{"icon":"fa fa-user","url":"sys/user/"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"6","parentId":"3","text":"用户管理"},{"attributes":{"icon":"fa fa-paw","url":"sys/role"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"7","parentId":"3","text":"角色管理"},{"attributes":{"icon":"fa fa-th-list","url":"sys/menu/"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"3","text":"系统菜单"},{"attributes":{"icon":"fa fa-users","url":"/system/sysDept"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"73","parentId":"3","text":"部门管理"}],"hasChildren":true,"hasParent":false,"id":"3","parentId":"0","text":"系统管理"},{"attributes":{"icon":"fa fa-gear","url":""},"checked":false,"children":[{"attributes":{"icon":"","url":"/swagger-ui.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"104","parentId":"77","text":"swagger"},{"attributes":{"icon":"fa fa-code","url":"common/generator"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"48","parentId":"77","text":"代码生成"},{"attributes":{"icon":"fa fa-hourglass-1","url":"common/job"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"72","parentId":"77","text":"计划任务"}],"hasChildren":true,"hasParent":false,"id":"77","parentId":"0","text":"系统工具"},{"attributes":{"icon":"fa fa-laptop","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-pencil-square","url":"oa/notify"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"85","parentId":"84","text":"通知公告"},{"attributes":{"icon":"fa fa-envelope-square","url":"oa/notify/selfNotify"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"90","parentId":"84","text":"我的通知"}],"hasChildren":true,"hasParent":false,"id":"84","parentId":"0","text":"办公管理"},{"attributes":{"icon":"fa fa-video-camera","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user","url":"sys/online"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"92","parentId":"91","text":"在线用户"},{"attributes":{"icon":"fa fa-warning","url":"common/log"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"27","parentId":"91","text":"系统日志"},{"attributes":{"icon":"fa fa-caret-square-o-right","url":"/druid/index.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"57","parentId":"91","text":"运行监控"}],"hasChildren":true,"hasParent":false,"id":"91","parentId":"0","text":"系统监控"},{"attributes":{"icon":"fa fa-rss","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-edit","url":"/blog/bContent/add"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"68","parentId":"49","text":"发布文章"},{"attributes":{"icon":"fa fa-file-image-o","url":"blog/bContent"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"50","parentId":"49","text":"文章列表"}],"hasChildren":true,"hasParent":false,"id":"49","parentId":"0","text":"博客管理"},{"attributes":{"icon":"fa fa-print","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-flag","url":"activiti/process"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"96","parentId":"93","text":"流程管理"},{"attributes":{"icon":"","url":"activiti/task/todo"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"101","parentId":"93","text":"待办任务"},{"attr(String), 127.0.0.1(String), 2019-06-04 15:56:03.559(Timestamp)
2019-06-04 15:56:03 -请求地址 : http://localhost:8888/main
2019-06-04 15:56:03 -HTTP METHOD : GET
2019-06-04 15:56:03 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-04 15:56:03 -参数 : []
2019-06-04 15:56:03 -耗时 : 0
2019-06-04 15:56:03 -返回值 : main
2019-06-04 15:56:03 -<==    Updates: 1
2019-06-04 15:56:03 -请求地址 : http://localhost:8888/oa/notify/message
2019-06-04 15:56:03 -HTTP METHOD : GET
2019-06-04 15:56:03 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-06-04 15:56:03 -参数 : []
2019-06-04 15:56:03 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-06-04 15:56:03 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-06-04 15:56:03 -<==      Total: 0
2019-06-04 15:56:03 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-06-04 15:56:03 -==> Parameters: 1(Long), 0(String)
2019-06-04 15:56:03 -<==      Total: 1
2019-06-04 15:56:03 -耗时 : 3
2019-06-04 15:56:03 -返回值 : com.bootdo.common.utils.PageUtils@1a7f1491
2019-06-04 15:56:03 -请求地址 : http://localhost:8888/main
2019-06-04 15:56:03 -HTTP METHOD : GET
2019-06-04 15:56:03 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-04 15:56:03 -参数 : []
2019-06-04 15:56:03 -耗时 : 0
2019-06-04 15:56:03 -返回值 : main
2019-06-04 15:56:04 -请求地址 : http://localhost:8888/xjbg/room/roomMng
2019-06-04 15:56:04 -HTTP METHOD : GET
2019-06-04 15:56:04 -CLASS_METHOD : com.bootdo.xjbg.controller.RoomController.roomMng
2019-06-04 15:56:04 -参数 : [{}]
2019-06-04 15:56:04 -==>  Preparing: select `id`,`room_no`,`room_type`,`floor`,`room_state`,`price`,`create_time`,`update_time`,`create_user`,`update_user` from xjbg_room 
2019-06-04 15:56:04 -==> Parameters: 
2019-06-04 15:56:04 -<==      Total: 8
2019-06-04 15:56:04 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 15:56:04 -==> Parameters: room_type(String)
2019-06-04 15:56:04 -<==      Total: 7
2019-06-04 15:56:04 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 15:56:04 -==> Parameters: floor(String)
2019-06-04 15:56:04 -<==      Total: 5
2019-06-04 15:56:04 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 15:56:04 -==> Parameters: room_state(String)
2019-06-04 15:56:04 -<==      Total: 2
2019-06-04 15:56:04 -==>  Preparing: select * from sys_user 
2019-06-04 15:56:04 -==> Parameters: 
2019-06-04 15:56:04 -<==      Total: 11
2019-06-04 15:56:04 -耗时 : 8
2019-06-04 15:56:04 -返回值 : xjbg/room/roomMng
2019-06-04 15:56:05 -请求地址 : http://localhost:8888/xjbg/room/operation/1
2019-06-04 15:56:05 -HTTP METHOD : GET
2019-06-04 15:56:05 -CLASS_METHOD : com.bootdo.xjbg.controller.RoomController.operation
2019-06-04 15:56:05 -参数 : [1, {}]
2019-06-04 15:56:05 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 15:56:05 -==> Parameters: room_type(String)
2019-06-04 15:56:05 -<==      Total: 7
2019-06-04 15:56:05 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 15:56:05 -==> Parameters: floor(String)
2019-06-04 15:56:05 -<==      Total: 5
2019-06-04 15:56:05 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 15:56:05 -==> Parameters: room_state(String)
2019-06-04 15:56:05 -<==      Total: 2
2019-06-04 15:56:05 -==>  Preparing: select * from sys_user 
2019-06-04 15:56:05 -==> Parameters: 
2019-06-04 15:56:05 -<==      Total: 11
2019-06-04 15:56:05 -==>  Preparing: select `id`,`product_name`,`purchase_price`,`selling_price`,`product_pic`,`create_time`,`create_user`,`update_time`,`update_user` from xjbg_product order by id desc 
2019-06-04 15:56:05 -==> Parameters: 
2019-06-04 15:56:05 -<==      Total: 5
2019-06-04 15:56:05 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 15:56:05 -==> Parameters: order_type(String)
2019-06-04 15:56:05 -<==      Total: 3
2019-06-04 15:56:05 -==>  Preparing: select `id`,`room_no`,`room_type`,`floor`,`room_state`,`price`,`create_time`,`update_time`,`create_user`,`update_user` from xjbg_room where id = ? 
2019-06-04 15:56:05 -==> Parameters: 1(Integer)
2019-06-04 15:56:05 -<==      Total: 1
2019-06-04 15:56:05 -耗时 : 9
2019-06-04 15:56:05 -返回值 : xjbg/room/operation
2019-06-04 15:56:19 -请求地址 : http://localhost:8888/index
2019-06-04 15:56:19 -HTTP METHOD : GET
2019-06-04 15:56:19 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-06-04 15:56:19 -参数 : [{}]
2019-06-04 15:56:19 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-06-04 15:56:19 -==> Parameters: 1(Long)
2019-06-04 15:56:19 -<==      Total: 34
2019-06-04 15:56:19 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-06-04 15:56:19 -==> Parameters: 144(Long)
2019-06-04 15:56:19 -<==      Total: 1
2019-06-04 15:56:19 -耗时 : 4
2019-06-04 15:56:19 -返回值 : index_v1
2019-06-04 15:56:19 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-04 15:56:19 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 4(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-commenting","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user","url":"/weixin/weixinUser"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"109","text":"用户管理"}],"hasChildren":true,"hasParent":false,"id":"109","parentId":"0","text":"微信管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","text":"基础管理"},{"attributes":{"icon":"fa fa-hotel","url":""},"checked":false,"children":[{"attributes":{"icon":"","url":"/xjbg/room/roomMng"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"105","text":"开房"},{"attributes":{"icon":"fa fa-bed","url":"/xjbg/room"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"106","parentId":"105","text":"房间管理"},{"attributes":{"icon":"","url":"/xjbg/product"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"105","text":"商品管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"欣吉宾馆"},{"attributes":{"icon":"fa fa-desktop"},"checked":false,"children":[{"attributes":{"icon":"fa fa-user","url":"sys/user/"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"6","parentId":"3","text":"用户管理"},{"attributes":{"icon":"fa fa-paw","url":"sys/role"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"7","parentId":"3","text":"角色管理"},{"attributes":{"icon":"fa fa-th-list","url":"sys/menu/"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"3","text":"系统菜单"},{"attributes":{"icon":"fa fa-users","url":"/system/sysDept"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"73","parentId":"3","text":"部门管理"}],"hasChildren":true,"hasParent":false,"id":"3","parentId":"0","text":"系统管理"},{"attributes":{"icon":"fa fa-gear","url":""},"checked":false,"children":[{"attributes":{"icon":"","url":"/swagger-ui.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"104","parentId":"77","text":"swagger"},{"attributes":{"icon":"fa fa-code","url":"common/generator"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"48","parentId":"77","text":"代码生成"},{"attributes":{"icon":"fa fa-hourglass-1","url":"common/job"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"72","parentId":"77","text":"计划任务"}],"hasChildren":true,"hasParent":false,"id":"77","parentId":"0","text":"系统工具"},{"attributes":{"icon":"fa fa-laptop","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-pencil-square","url":"oa/notify"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"85","parentId":"84","text":"通知公告"},{"attributes":{"icon":"fa fa-envelope-square","url":"oa/notify/selfNotify"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"90","parentId":"84","text":"我的通知"}],"hasChildren":true,"hasParent":false,"id":"84","parentId":"0","text":"办公管理"},{"attributes":{"icon":"fa fa-video-camera","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user","url":"sys/online"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"92","parentId":"91","text":"在线用户"},{"attributes":{"icon":"fa fa-warning","url":"common/log"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"27","parentId":"91","text":"系统日志"},{"attributes":{"icon":"fa fa-caret-square-o-right","url":"/druid/index.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"57","parentId":"91","text":"运行监控"}],"hasChildren":true,"hasParent":false,"id":"91","parentId":"0","text":"系统监控"},{"attributes":{"icon":"fa fa-rss","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-edit","url":"/blog/bContent/add"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"68","parentId":"49","text":"发布文章"},{"attributes":{"icon":"fa fa-file-image-o","url":"blog/bContent"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"50","parentId":"49","text":"文章列表"}],"hasChildren":true,"hasParent":false,"id":"49","parentId":"0","text":"博客管理"},{"attributes":{"icon":"fa fa-print","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-flag","url":"activiti/process"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"96","parentId":"93","text":"流程管理"},{"attributes":{"icon":"","url":"activiti/task/todo"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"101","parentId":"93","text":"待办任务"},{"attr(String), 127.0.0.1(String), 2019-06-04 15:56:19.724(Timestamp)
2019-06-04 15:56:19 -请求地址 : http://localhost:8888/main
2019-06-04 15:56:19 -HTTP METHOD : GET
2019-06-04 15:56:19 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-04 15:56:19 -参数 : []
2019-06-04 15:56:19 -耗时 : 0
2019-06-04 15:56:19 -返回值 : main
2019-06-04 15:56:19 -<==    Updates: 1
2019-06-04 15:56:19 -请求地址 : http://localhost:8888/oa/notify/message
2019-06-04 15:56:19 -HTTP METHOD : GET
2019-06-04 15:56:19 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-06-04 15:56:19 -参数 : []
2019-06-04 15:56:19 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-06-04 15:56:19 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-06-04 15:56:19 -<==      Total: 0
2019-06-04 15:56:19 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-06-04 15:56:19 -==> Parameters: 1(Long), 0(String)
2019-06-04 15:56:19 -<==      Total: 1
2019-06-04 15:56:19 -耗时 : 1
2019-06-04 15:56:19 -返回值 : com.bootdo.common.utils.PageUtils@1f4b39d
2019-06-04 15:56:19 -请求地址 : http://localhost:8888/main
2019-06-04 15:56:19 -HTTP METHOD : GET
2019-06-04 15:56:19 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-04 15:56:19 -参数 : []
2019-06-04 15:56:19 -耗时 : 1
2019-06-04 15:56:19 -返回值 : main
2019-06-04 15:56:21 -请求地址 : http://localhost:8888/weixin/weixinUser
2019-06-04 15:56:21 -HTTP METHOD : GET
2019-06-04 15:56:21 -CLASS_METHOD : com.bootdo.weixin.controller.WeixinUserController.WeixinUser
2019-06-04 15:56:21 -参数 : []
2019-06-04 15:56:21 -耗时 : 0
2019-06-04 15:56:21 -返回值 : weixin/weixinUser/weixinUser
2019-06-04 15:56:21 -请求地址 : http://localhost:8888/weixin/weixinUser/list
2019-06-04 15:56:21 -HTTP METHOD : GET
2019-06-04 15:56:21 -CLASS_METHOD : com.bootdo.weixin.controller.WeixinUserController.list
2019-06-04 15:56:21 -参数 : [{limit=10, offset=0}]
2019-06-04 15:56:21 -==>  Preparing: select `id`,`open_id`,`is_removed`,`create_time`,`remove_time` from weixin_user order by id desc limit ?, ? 
2019-06-04 15:56:21 -==> Parameters: 0(Integer), 10(Integer)
2019-06-04 15:56:21 -<==      Total: 1
2019-06-04 15:56:21 -==>  Preparing: select count(*) from weixin_user 
2019-06-04 15:56:21 -==> Parameters: 
2019-06-04 15:56:21 -<==      Total: 1
2019-06-04 15:56:21 -耗时 : 2
2019-06-04 15:56:21 -返回值 : com.bootdo.common.utils.PageUtils@4cf9d137
2019-06-04 15:56:22 -请求地址 : http://localhost:8888/common/sysFile
2019-06-04 15:56:22 -HTTP METHOD : GET
2019-06-04 15:56:22 -CLASS_METHOD : com.bootdo.common.controller.FileController.sysFile
2019-06-04 15:56:22 -参数 : [{}]
2019-06-04 15:56:22 -耗时 : 1
2019-06-04 15:56:22 -返回值 : common/file/file
2019-06-04 15:56:22 -请求地址 : http://localhost:8888/common/sysFile/list
2019-06-04 15:56:22 -HTTP METHOD : GET
2019-06-04 15:56:22 -CLASS_METHOD : com.bootdo.common.controller.FileController.list
2019-06-04 15:56:22 -参数 : [{limit=12, offset=0, type=}]
2019-06-04 15:56:22 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file order by id desc limit ?, ? 
2019-06-04 15:56:22 -==> Parameters: 0(Integer), 12(Integer)
2019-06-04 15:56:22 -<==      Total: 12
2019-06-04 15:56:22 -==>  Preparing: select count(*) from sys_file 
2019-06-04 15:56:22 -==> Parameters: 
2019-06-04 15:56:22 -<==      Total: 1
2019-06-04 15:56:22 -耗时 : 6
2019-06-04 15:56:22 -返回值 : com.bootdo.common.utils.PageUtils@29ccadc2
2019-06-04 15:56:23 -请求地址 : http://localhost:8888/xjbg/room
2019-06-04 15:56:23 -HTTP METHOD : GET
2019-06-04 15:56:23 -CLASS_METHOD : com.bootdo.xjbg.controller.RoomController.Room
2019-06-04 15:56:23 -参数 : [{}]
2019-06-04 15:56:23 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 15:56:23 -==> Parameters: room_type(String)
2019-06-04 15:56:23 -<==      Total: 7
2019-06-04 15:56:23 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 15:56:23 -==> Parameters: floor(String)
2019-06-04 15:56:23 -<==      Total: 5
2019-06-04 15:56:23 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 15:56:23 -==> Parameters: room_state(String)
2019-06-04 15:56:23 -<==      Total: 2
2019-06-04 15:56:23 -==>  Preparing: select * from sys_user 
2019-06-04 15:56:23 -==> Parameters: 
2019-06-04 15:56:23 -<==      Total: 11
2019-06-04 15:56:23 -耗时 : 6
2019-06-04 15:56:23 -返回值 : xjbg/room/room
2019-06-04 15:56:23 -请求地址 : http://localhost:8888/xjbg/room/list
2019-06-04 15:56:23 -HTTP METHOD : GET
2019-06-04 15:56:23 -CLASS_METHOD : com.bootdo.xjbg.controller.RoomController.list
2019-06-04 15:56:23 -参数 : [{limit=10, offset=0}]
2019-06-04 15:56:23 -==>  Preparing: select `id`,`room_no`,`room_type`,`floor`,`room_state`,`price`,`create_time`,`update_time`,`create_user`,`update_user` from xjbg_room order by room_no desc limit ?, ? 
2019-06-04 15:56:23 -==> Parameters: 0(Integer), 10(Integer)
2019-06-04 15:56:23 -<==      Total: 8
2019-06-04 15:56:23 -==>  Preparing: select count(*) from xjbg_room 
2019-06-04 15:56:23 -==> Parameters: 
2019-06-04 15:56:23 -<==      Total: 1
2019-06-04 15:56:23 -耗时 : 1
2019-06-04 15:56:23 -返回值 : com.bootdo.common.utils.PageUtils@38d53204
2019-06-04 15:56:23 -请求地址 : http://localhost:8888/xjbg/room/roomMng
2019-06-04 15:56:23 -HTTP METHOD : GET
2019-06-04 15:56:23 -CLASS_METHOD : com.bootdo.xjbg.controller.RoomController.roomMng
2019-06-04 15:56:23 -参数 : [{}]
2019-06-04 15:56:23 -==>  Preparing: select `id`,`room_no`,`room_type`,`floor`,`room_state`,`price`,`create_time`,`update_time`,`create_user`,`update_user` from xjbg_room 
2019-06-04 15:56:23 -==> Parameters: 
2019-06-04 15:56:23 -<==      Total: 8
2019-06-04 15:56:23 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 15:56:23 -==> Parameters: room_type(String)
2019-06-04 15:56:23 -<==      Total: 7
2019-06-04 15:56:23 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 15:56:23 -==> Parameters: floor(String)
2019-06-04 15:56:23 -<==      Total: 5
2019-06-04 15:56:23 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 15:56:23 -==> Parameters: room_state(String)
2019-06-04 15:56:23 -<==      Total: 2
2019-06-04 15:56:23 -==>  Preparing: select * from sys_user 
2019-06-04 15:56:23 -==> Parameters: 
2019-06-04 15:56:23 -<==      Total: 11
2019-06-04 15:56:23 -耗时 : 6
2019-06-04 15:56:23 -返回值 : xjbg/room/roomMng
2019-06-04 15:56:24 -请求地址 : http://localhost:8888/xjbg/room/operation/1
2019-06-04 15:56:24 -HTTP METHOD : GET
2019-06-04 15:56:24 -CLASS_METHOD : com.bootdo.xjbg.controller.RoomController.operation
2019-06-04 15:56:24 -参数 : [1, {}]
2019-06-04 15:56:24 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 15:56:24 -==> Parameters: room_type(String)
2019-06-04 15:56:24 -<==      Total: 7
2019-06-04 15:56:24 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 15:56:24 -==> Parameters: floor(String)
2019-06-04 15:56:24 -<==      Total: 5
2019-06-04 15:56:24 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 15:56:24 -==> Parameters: room_state(String)
2019-06-04 15:56:24 -<==      Total: 2
2019-06-04 15:56:24 -==>  Preparing: select * from sys_user 
2019-06-04 15:56:24 -==> Parameters: 
2019-06-04 15:56:24 -<==      Total: 11
2019-06-04 15:56:24 -==>  Preparing: select `id`,`product_name`,`purchase_price`,`selling_price`,`product_pic`,`create_time`,`create_user`,`update_time`,`update_user` from xjbg_product order by id desc 
2019-06-04 15:56:24 -==> Parameters: 
2019-06-04 15:56:24 -<==      Total: 5
2019-06-04 15:56:24 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 15:56:24 -==> Parameters: order_type(String)
2019-06-04 15:56:24 -<==      Total: 3
2019-06-04 15:56:24 -==>  Preparing: select `id`,`room_no`,`room_type`,`floor`,`room_state`,`price`,`create_time`,`update_time`,`create_user`,`update_user` from xjbg_room where id = ? 
2019-06-04 15:56:24 -==> Parameters: 1(Integer)
2019-06-04 15:56:24 -<==      Total: 1
2019-06-04 15:56:24 -耗时 : 10
2019-06-04 15:56:24 -返回值 : xjbg/room/operation
2019-06-04 15:56:27 -请求地址 : http://localhost:8888/xjbg/room/operation/1
2019-06-04 15:56:27 -HTTP METHOD : GET
2019-06-04 15:56:27 -CLASS_METHOD : com.bootdo.xjbg.controller.RoomController.operation
2019-06-04 15:56:27 -参数 : [1, {}]
2019-06-04 15:56:27 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 15:56:27 -==> Parameters: room_type(String)
2019-06-04 15:56:27 -<==      Total: 7
2019-06-04 15:56:27 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 15:56:27 -==> Parameters: floor(String)
2019-06-04 15:56:27 -<==      Total: 5
2019-06-04 15:56:27 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 15:56:27 -==> Parameters: room_state(String)
2019-06-04 15:56:27 -<==      Total: 2
2019-06-04 15:56:27 -==>  Preparing: select * from sys_user 
2019-06-04 15:56:27 -==> Parameters: 
2019-06-04 15:56:27 -<==      Total: 11
2019-06-04 15:56:27 -==>  Preparing: select `id`,`product_name`,`purchase_price`,`selling_price`,`product_pic`,`create_time`,`create_user`,`update_time`,`update_user` from xjbg_product order by id desc 
2019-06-04 15:56:27 -==> Parameters: 
2019-06-04 15:56:27 -<==      Total: 5
2019-06-04 15:56:27 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 15:56:27 -==> Parameters: order_type(String)
2019-06-04 15:56:27 -<==      Total: 3
2019-06-04 15:56:27 -==>  Preparing: select `id`,`room_no`,`room_type`,`floor`,`room_state`,`price`,`create_time`,`update_time`,`create_user`,`update_user` from xjbg_room where id = ? 
2019-06-04 15:56:27 -==> Parameters: 1(Integer)
2019-06-04 15:56:27 -<==      Total: 1
2019-06-04 15:56:27 -耗时 : 7
2019-06-04 15:56:27 -返回值 : xjbg/room/operation
2019-06-04 15:57:02 -请求地址 : http://localhost:8888/index
2019-06-04 15:57:02 -HTTP METHOD : GET
2019-06-04 15:57:02 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-06-04 15:57:02 -参数 : [{}]
2019-06-04 15:57:02 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-06-04 15:57:02 -==> Parameters: 1(Long)
2019-06-04 15:57:02 -<==      Total: 34
2019-06-04 15:57:02 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-06-04 15:57:02 -==> Parameters: 144(Long)
2019-06-04 15:57:02 -<==      Total: 1
2019-06-04 15:57:02 -耗时 : 4
2019-06-04 15:57:02 -返回值 : index_v1
2019-06-04 15:57:02 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-04 15:57:02 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 4(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-commenting","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user","url":"/weixin/weixinUser"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"109","text":"用户管理"}],"hasChildren":true,"hasParent":false,"id":"109","parentId":"0","text":"微信管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","text":"基础管理"},{"attributes":{"icon":"fa fa-hotel","url":""},"checked":false,"children":[{"attributes":{"icon":"","url":"/xjbg/room/roomMng"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"105","text":"开房"},{"attributes":{"icon":"fa fa-bed","url":"/xjbg/room"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"106","parentId":"105","text":"房间管理"},{"attributes":{"icon":"","url":"/xjbg/product"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"105","text":"商品管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"欣吉宾馆"},{"attributes":{"icon":"fa fa-desktop"},"checked":false,"children":[{"attributes":{"icon":"fa fa-user","url":"sys/user/"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"6","parentId":"3","text":"用户管理"},{"attributes":{"icon":"fa fa-paw","url":"sys/role"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"7","parentId":"3","text":"角色管理"},{"attributes":{"icon":"fa fa-th-list","url":"sys/menu/"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"3","text":"系统菜单"},{"attributes":{"icon":"fa fa-users","url":"/system/sysDept"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"73","parentId":"3","text":"部门管理"}],"hasChildren":true,"hasParent":false,"id":"3","parentId":"0","text":"系统管理"},{"attributes":{"icon":"fa fa-gear","url":""},"checked":false,"children":[{"attributes":{"icon":"","url":"/swagger-ui.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"104","parentId":"77","text":"swagger"},{"attributes":{"icon":"fa fa-code","url":"common/generator"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"48","parentId":"77","text":"代码生成"},{"attributes":{"icon":"fa fa-hourglass-1","url":"common/job"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"72","parentId":"77","text":"计划任务"}],"hasChildren":true,"hasParent":false,"id":"77","parentId":"0","text":"系统工具"},{"attributes":{"icon":"fa fa-laptop","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-pencil-square","url":"oa/notify"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"85","parentId":"84","text":"通知公告"},{"attributes":{"icon":"fa fa-envelope-square","url":"oa/notify/selfNotify"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"90","parentId":"84","text":"我的通知"}],"hasChildren":true,"hasParent":false,"id":"84","parentId":"0","text":"办公管理"},{"attributes":{"icon":"fa fa-video-camera","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user","url":"sys/online"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"92","parentId":"91","text":"在线用户"},{"attributes":{"icon":"fa fa-warning","url":"common/log"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"27","parentId":"91","text":"系统日志"},{"attributes":{"icon":"fa fa-caret-square-o-right","url":"/druid/index.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"57","parentId":"91","text":"运行监控"}],"hasChildren":true,"hasParent":false,"id":"91","parentId":"0","text":"系统监控"},{"attributes":{"icon":"fa fa-rss","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-edit","url":"/blog/bContent/add"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"68","parentId":"49","text":"发布文章"},{"attributes":{"icon":"fa fa-file-image-o","url":"blog/bContent"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"50","parentId":"49","text":"文章列表"}],"hasChildren":true,"hasParent":false,"id":"49","parentId":"0","text":"博客管理"},{"attributes":{"icon":"fa fa-print","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-flag","url":"activiti/process"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"96","parentId":"93","text":"流程管理"},{"attributes":{"icon":"","url":"activiti/task/todo"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"101","parentId":"93","text":"待办任务"},{"attr(String), 127.0.0.1(String), 2019-06-04 15:57:02.141(Timestamp)
2019-06-04 15:57:02 -<==    Updates: 1
2019-06-04 15:57:02 -请求地址 : http://localhost:8888/main
2019-06-04 15:57:02 -HTTP METHOD : GET
2019-06-04 15:57:02 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-04 15:57:02 -参数 : []
2019-06-04 15:57:02 -耗时 : 1
2019-06-04 15:57:02 -返回值 : main
2019-06-04 15:57:02 -请求地址 : http://localhost:8888/oa/notify/message
2019-06-04 15:57:02 -HTTP METHOD : GET
2019-06-04 15:57:02 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-06-04 15:57:02 -参数 : []
2019-06-04 15:57:02 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-06-04 15:57:02 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-06-04 15:57:02 -<==      Total: 0
2019-06-04 15:57:02 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-06-04 15:57:02 -==> Parameters: 1(Long), 0(String)
2019-06-04 15:57:02 -<==      Total: 1
2019-06-04 15:57:02 -耗时 : 2
2019-06-04 15:57:02 -返回值 : com.bootdo.common.utils.PageUtils@504ea00d
2019-06-04 15:57:02 -请求地址 : http://localhost:8888/main
2019-06-04 15:57:02 -HTTP METHOD : GET
2019-06-04 15:57:02 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-04 15:57:02 -参数 : []
2019-06-04 15:57:02 -耗时 : 0
2019-06-04 15:57:02 -返回值 : main
2019-06-04 15:57:03 -请求地址 : http://localhost:8888/xjbg/room/roomMng
2019-06-04 15:57:03 -HTTP METHOD : GET
2019-06-04 15:57:03 -CLASS_METHOD : com.bootdo.xjbg.controller.RoomController.roomMng
2019-06-04 15:57:03 -参数 : [{}]
2019-06-04 15:57:03 -==>  Preparing: select `id`,`room_no`,`room_type`,`floor`,`room_state`,`price`,`create_time`,`update_time`,`create_user`,`update_user` from xjbg_room 
2019-06-04 15:57:03 -==> Parameters: 
2019-06-04 15:57:03 -<==      Total: 8
2019-06-04 15:57:03 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 15:57:03 -==> Parameters: room_type(String)
2019-06-04 15:57:03 -<==      Total: 7
2019-06-04 15:57:03 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 15:57:03 -==> Parameters: floor(String)
2019-06-04 15:57:03 -<==      Total: 5
2019-06-04 15:57:03 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 15:57:03 -==> Parameters: room_state(String)
2019-06-04 15:57:03 -<==      Total: 2
2019-06-04 15:57:03 -==>  Preparing: select * from sys_user 
2019-06-04 15:57:03 -==> Parameters: 
2019-06-04 15:57:03 -<==      Total: 11
2019-06-04 15:57:03 -耗时 : 9
2019-06-04 15:57:03 -返回值 : xjbg/room/roomMng
2019-06-04 15:57:03 -请求地址 : http://localhost:8888/xjbg/room/operation/1
2019-06-04 15:57:03 -HTTP METHOD : GET
2019-06-04 15:57:03 -CLASS_METHOD : com.bootdo.xjbg.controller.RoomController.operation
2019-06-04 15:57:03 -参数 : [1, {}]
2019-06-04 15:57:03 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 15:57:03 -==> Parameters: room_type(String)
2019-06-04 15:57:03 -<==      Total: 7
2019-06-04 15:57:03 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 15:57:03 -==> Parameters: floor(String)
2019-06-04 15:57:03 -<==      Total: 5
2019-06-04 15:57:03 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 15:57:03 -==> Parameters: room_state(String)
2019-06-04 15:57:03 -<==      Total: 2
2019-06-04 15:57:03 -==>  Preparing: select * from sys_user 
2019-06-04 15:57:03 -==> Parameters: 
2019-06-04 15:57:03 -<==      Total: 11
2019-06-04 15:57:03 -==>  Preparing: select `id`,`product_name`,`purchase_price`,`selling_price`,`product_pic`,`create_time`,`create_user`,`update_time`,`update_user` from xjbg_product order by id desc 
2019-06-04 15:57:03 -==> Parameters: 
2019-06-04 15:57:03 -<==      Total: 5
2019-06-04 15:57:03 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 15:57:03 -==> Parameters: order_type(String)
2019-06-04 15:57:03 -<==      Total: 3
2019-06-04 15:57:03 -==>  Preparing: select `id`,`room_no`,`room_type`,`floor`,`room_state`,`price`,`create_time`,`update_time`,`create_user`,`update_user` from xjbg_room where id = ? 
2019-06-04 15:57:03 -==> Parameters: 1(Integer)
2019-06-04 15:57:03 -<==      Total: 1
2019-06-04 15:57:03 -耗时 : 11
2019-06-04 15:57:03 -返回值 : xjbg/room/operation
2019-06-04 15:57:19 -Starting BootdoApplication on LAPTOP-ELP5M68R with PID 5496 (D:\workspace\bootdo\bootdo\target\classes started by Lenovo in D:\workspace\bootdo\bootdo)
2019-06-04 15:57:19 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-06-04 15:57:19 -The following profiles are active: dev
2019-06-04 15:57:19 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@44d5c77d: startup date [Tue Jun 04 15:57:19 CST 2019]; root of context hierarchy
2019-06-04 15:57:20 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-06-04 15:57:21 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$f754d775] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-04 15:57:21 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$e9ae061c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-04 15:57:22 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-04 15:57:22 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-04 15:57:22 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-04 15:57:22 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-06-04 15:57:22 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-06-04 15:57:22 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-04 15:57:22 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-04 15:57:22 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-04 15:57:22 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-04 15:57:22 -Tomcat initialized with port(s): 8888 (http)
2019-06-04 15:57:22 -Initializing ProtocolHandler ["http-nio-8888"]
2019-06-04 15:57:22 -Starting service [Tomcat]
2019-06-04 15:57:22 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-06-04 15:57:22 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [F:\yff\jdk1.8\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;D:\app\Lenovo\product\11.2.0\dbhome_1\bin;\bin;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\iCLS\;C:\Program Files\Intel\Intel(R) Management Engine Components\iCLS\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;F:\yff\jdk1.8\BIN;D:\Program Files\develop\apache-maven-3.3.9\BIN;D:\Program Files\matlab\v81\runtime\win64;D:\Program Files\matlab\v81\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;F:\yff\redis64;D:\Program Files\Notepad++;D:\Program Files\mysql-5.7.24-winx64\BIN;D:\Program Files\matlab\v81\bin\win64;D:\Program Files\matlab\v81\runtime\win64;D:\Program Files\develop\SVN\bin;D:\Program Files\develop\apache-tomcat-8.5.8-ltcins-common-4280\bin;D:\Program Files\develop\apache-tomcat-8.5.8-ltcins-common-4080\bin;D:\Program Files\develop\zookeeper-3.4.10\BIN;D:\Program Files\develop\Git\cmd;C:\Users\Lenovo\AppData\Local\Microsoft\WindowsApps;C:\Users\Lenovo\AppData\Local\GitHubDesktop\bin;.]
2019-06-04 15:57:23 -Initializing Spring embedded WebApplicationContext
2019-06-04 15:57:23 -Root WebApplicationContext: initialization completed in 3993 ms
2019-06-04 15:57:23 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-06-04 15:57:23 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-06-04 15:57:23 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-06-04 15:57:23 -Mapping filter: 'requestContextFilter' to: [/*]
2019-06-04 15:57:23 -Filter xssFilter was not registered (disabled)
2019-06-04 15:57:23 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-06-04 15:57:23 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-06-04 15:57:23 -Servlet statViewServlet mapped to [/druid/*]
2019-06-04 15:57:23 -Servlet dispatcherServlet mapped to [/]
2019-06-04 15:57:23 -{dataSource-1} inited
2019-06-04 15:57:24 -ProcessEngine default created
2019-06-04 15:57:25 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@44d5c77d: startup date [Tue Jun 04 15:57:19 CST 2019]; root of context hierarchy
2019-06-04 15:57:25 -Using default implementation for ThreadExecutor
2019-06-04 15:57:25 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-06-04 15:57:25 -Quartz Scheduler v.2.2.1 created.
2019-06-04 15:57:25 -RAMJobStore initialized.
2019-06-04 15:57:25 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-06-04 15:57:25 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-06-04 15:57:25 -Quartz scheduler version: 2.2.1
2019-06-04 15:57:25 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@10622ef8
2019-06-04 15:57:25 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-06-04 15:57:25 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-06-04 15:57:26 -Mapped "{[/activiti/model/{id}],methods=[DELETE]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.ModelController.remove(java.lang.String)
2019-06-04 15:57:26 -Mapped "{[/activiti/model/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.activiti.controller.ModelController.list(int,int)
2019-06-04 15:57:26 -Mapped "{[/activiti/model/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.ModelController.batchRemove(java.lang.String[])
2019-06-04 15:57:26 -Mapped "{[/activiti/model],methods=[GET]}" onto org.springframework.web.servlet.ModelAndView com.bootdo.activiti.controller.ModelController.model()
2019-06-04 15:57:26 -Mapped "{[/activiti/model/add]}" onto public void com.bootdo.activiti.controller.ModelController.newModel(javax.servlet.http.HttpServletResponse) throws java.io.UnsupportedEncodingException
2019-06-04 15:57:26 -Mapped "{[/activiti/model/export/{id}],methods=[GET]}" onto public void com.bootdo.activiti.controller.ModelController.exportToXml(java.lang.String,javax.servlet.http.HttpServletResponse)
2019-06-04 15:57:26 -Mapped "{[/activiti/model/{modelId}/json],methods=[GET]}" onto public com.fasterxml.jackson.databind.node.ObjectNode com.bootdo.activiti.controller.ModelController.getEditorJson(java.lang.String)
2019-06-04 15:57:26 -Mapped "{[/activiti/editor/stencilset],methods=[GET],produces=[application/json;charset=utf-8]}" onto public java.lang.String com.bootdo.activiti.controller.ModelController.getStencilset()
2019-06-04 15:57:26 -Mapped "{[/activiti/model/deploy/{id}],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.ModelController.deploy(java.lang.String) throws java.lang.Exception
2019-06-04 15:57:26 -Mapped "{[/activiti/model/edit/{id}],methods=[GET]}" onto public void com.bootdo.activiti.controller.ModelController.edit(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-06-04 15:57:26 -Mapped "{[/activiti/model/{modelId}/save],methods=[PUT]}" onto public void com.bootdo.activiti.controller.ModelController.saveModel(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2019-06-04 15:57:26 -Mapped "{[/activiti/process/add],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.activiti.controller.ProcessController.add()
2019-06-04 15:57:26 -Mapped "{[/activiti/process/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.ProcessController.remove(java.lang.String)
2019-06-04 15:57:26 -Mapped "{[/activiti/process/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.activiti.controller.ProcessController.list(int,int)
2019-06-04 15:57:26 -Mapped "{[/activiti/process/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.ProcessController.batchRemove(java.lang.String[])
2019-06-04 15:57:26 -Mapped "{[/activiti/process],methods=[GET]}" onto org.springframework.web.servlet.ModelAndView com.bootdo.activiti.controller.ProcessController.process()
2019-06-04 15:57:26 -Mapped "{[/activiti/process/convertToModel/{procDefId}]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.ProcessController.convertToModel(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes) throws java.io.UnsupportedEncodingException,javax.xml.stream.XMLStreamException
2019-06-04 15:57:26 -Mapped "{[/activiti/process/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.ProcessController.deploy(java.lang.String,java.lang.String,org.springframework.web.multipart.MultipartFile)
2019-06-04 15:57:26 -Mapped "{[/activiti/process/resource/read/{xml}/{id}]}" onto public void com.bootdo.activiti.controller.ProcessController.resourceRead(java.lang.String,java.lang.String,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-06-04 15:57:26 -Mapped "{[/act/salary/form],methods=[GET]}" onto java.lang.String com.bootdo.activiti.controller.SalaryController.add()
2019-06-04 15:57:26 -Mapped "{[/act/salary/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.SalaryController.remove(java.lang.String)
2019-06-04 15:57:26 -Mapped "{[/act/salary/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.SalaryController.remove(java.lang.String[])
2019-06-04 15:57:26 -Mapped "{[/act/salary/update]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.SalaryController.update(com.bootdo.activiti.domain.SalaryDO)
2019-06-04 15:57:26 -Mapped "{[/act/salary/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.activiti.controller.SalaryController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-04 15:57:26 -Mapped "{[/act/salary/form/{taskId}],methods=[GET]}" onto java.lang.String com.bootdo.activiti.controller.SalaryController.edit(java.lang.String,org.springframework.ui.Model)
2019-06-04 15:57:26 -Mapped "{[/act/salary/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.SalaryController.saveOrUpdate(com.bootdo.activiti.domain.SalaryDO)
2019-06-04 15:57:26 -Mapped "{[/act/salary],methods=[GET]}" onto java.lang.String com.bootdo.activiti.controller.SalaryController.Salary()
2019-06-04 15:57:26 -Mapped "{[/activiti/task/form/{procDefId}/{taskId}],methods=[GET]}" onto public void com.bootdo.activiti.controller.TaskController.form(java.lang.String,java.lang.String,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-06-04 15:57:26 -Mapped "{[/activiti/task/gotoList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.activiti.controller.TaskController.list(int,int)
2019-06-04 15:57:26 -Mapped "{[/activiti/task/goto],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.activiti.controller.TaskController.gotoTask()
2019-06-04 15:57:26 -Mapped "{[/activiti/task/todoList],methods=[GET]}" onto java.util.List<com.bootdo.activiti.vo.TaskVO> com.bootdo.activiti.controller.TaskController.todoList()
2019-06-04 15:57:26 -Mapped "{[/activiti/task/form/{procDefId}],methods=[GET]}" onto public void com.bootdo.activiti.controller.TaskController.startForm(java.lang.String,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-06-04 15:57:26 -Mapped "{[/activiti/task/todo],methods=[GET]}" onto org.springframework.web.servlet.ModelAndView com.bootdo.activiti.controller.TaskController.todo()
2019-06-04 15:57:26 -Mapped "{[/activiti/task/trace/photo/{procDefId}/{execId}]}" onto public void com.bootdo.activiti.controller.TaskController.tracePhoto(java.lang.String,java.lang.String,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-06-04 15:57:26 -Mapped "{[/blog/open/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.blog.controller.BlogController.opentList(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-04 15:57:26 -Mapped "{[/blog],methods=[GET]}" onto java.lang.String com.bootdo.blog.controller.BlogController.blog()
2019-06-04 15:57:26 -Mapped "{[/blog/open/page/{categories}],methods=[GET]}" onto java.lang.String com.bootdo.blog.controller.BlogController.about(java.lang.String,org.springframework.ui.Model)
2019-06-04 15:57:26 -Mapped "{[/blog/open/post/{cid}],methods=[GET]}" onto java.lang.String com.bootdo.blog.controller.BlogController.post(java.lang.Long,org.springframework.ui.Model)
2019-06-04 15:57:26 -Mapped "{[/blog/bContent/add],methods=[GET]}" onto java.lang.String com.bootdo.blog.controller.ContentController.add()
2019-06-04 15:57:26 -Mapped "{[/blog/bContent/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.blog.controller.ContentController.remove(java.lang.Long)
2019-06-04 15:57:26 -Mapped "{[/blog/bContent/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.blog.controller.ContentController.remove(java.lang.Long[])
2019-06-04 15:57:26 -Mapped "{[/blog/bContent/update]}" onto public com.bootdo.common.utils.R com.bootdo.blog.controller.ContentController.update(com.bootdo.blog.domain.ContentDO)
2019-06-04 15:57:26 -Mapped "{[/blog/bContent/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.blog.controller.ContentController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-04 15:57:26 -Mapped "{[/blog/bContent/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.blog.controller.ContentController.save(com.bootdo.blog.domain.ContentDO)
2019-06-04 15:57:26 -Mapped "{[/blog/bContent/edit/{cid}],methods=[GET]}" onto java.lang.String com.bootdo.blog.controller.ContentController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-04 15:57:26 -Mapped "{[/blog/bContent],methods=[GET]}" onto java.lang.String com.bootdo.blog.controller.ContentController.bContent()
2019-06-04 15:57:26 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-06-04 15:57:26 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-06-04 15:57:26 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-06-04 15:57:26 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-06-04 15:57:26 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-04 15:57:26 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-06-04 15:57:26 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-06-04 15:57:26 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-04 15:57:26 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-06-04 15:57:26 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-06-04 15:57:26 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-06-04 15:57:26 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-06-04 15:57:26 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-06-04 15:57:26 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-06-04 15:57:26 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-06-04 15:57:26 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-04 15:57:26 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-06-04 15:57:26 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-06-04 15:57:26 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-06-04 15:57:26 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-04 15:57:26 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-06-04 15:57:26 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-04 15:57:26 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-06-04 15:57:26 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-06-04 15:57:26 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-06-04 15:57:26 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-06-04 15:57:26 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-06-04 15:57:26 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-06-04 15:57:26 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-06-04 15:57:26 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-06-04 15:57:26 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-06-04 15:57:26 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-04 15:57:26 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-06-04 15:57:26 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-06-04 15:57:26 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-06-04 15:57:26 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-06-04 15:57:26 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-04 15:57:26 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-06-04 15:57:26 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-06-04 15:57:26 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-04 15:57:26 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-06-04 15:57:26 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-06-04 15:57:26 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-06-04 15:57:26 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-06-04 15:57:26 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-06-04 15:57:26 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-06-04 15:57:26 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-06-04 15:57:26 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-06-04 15:57:26 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-04 15:57:26 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-06-04 15:57:26 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-06-04 15:57:26 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-06-04 15:57:26 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-06-04 15:57:26 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-04 15:57:26 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-04 15:57:26 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-06-04 15:57:26 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-06-04 15:57:26 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-06-04 15:57:26 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-06-04 15:57:26 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-06-04 15:57:26 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-06-04 15:57:26 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-06-04 15:57:26 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-06-04 15:57:26 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-06-04 15:57:26 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-04 15:57:26 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-06-04 15:57:26 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-06-04 15:57:26 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-06-04 15:57:26 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-06-04 15:57:26 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String)
2019-06-04 15:57:26 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-06-04 15:57:26 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-06-04 15:57:26 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-06-04 15:57:26 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-06-04 15:57:26 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-04 15:57:26 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-06-04 15:57:26 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-06-04 15:57:26 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-06-04 15:57:26 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-06-04 15:57:26 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-06-04 15:57:26 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-06-04 15:57:26 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-06-04 15:57:26 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-06-04 15:57:26 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-06-04 15:57:26 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-06-04 15:57:26 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-06-04 15:57:26 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-06-04 15:57:26 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-04 15:57:26 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-06-04 15:57:26 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-06-04 15:57:26 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-06-04 15:57:26 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-06-04 15:57:26 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-04 15:57:26 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-06-04 15:57:26 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-06-04 15:57:26 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-06-04 15:57:26 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-04 15:57:26 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-06-04 15:57:26 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-06-04 15:57:26 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-06-04 15:57:26 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-06-04 15:57:26 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-06-04 15:57:26 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-06-04 15:57:26 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-06-04 15:57:26 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-06-04 15:57:26 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-06-04 15:57:26 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-06-04 15:57:26 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-06-04 15:57:26 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-06-04 15:57:26 -Mapped "{[/wxServer],methods=[GET]}" onto public void org.weixin4j.spring.web.WeixinJieruController.get(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-06-04 15:57:26 -Mapped "{[/wxServer],methods=[POST]}" onto public void org.weixin4j.spring.web.WeixinJieruController.post(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-06-04 15:57:26 -Mapped "{[/weixin/weixinUser/add],methods=[GET]}" onto java.lang.String com.bootdo.weixin.controller.WeixinUserController.add()
2019-06-04 15:57:26 -Mapped "{[/weixin/weixinUser/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.weixin.controller.WeixinUserController.remove(java.lang.Long)
2019-06-04 15:57:26 -Mapped "{[/weixin/weixinUser/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.weixin.controller.WeixinUserController.remove(java.lang.Long[])
2019-06-04 15:57:26 -Mapped "{[/weixin/weixinUser/update]}" onto public com.bootdo.common.utils.R com.bootdo.weixin.controller.WeixinUserController.update(com.bootdo.weixin.domain.WeixinUserDO)
2019-06-04 15:57:26 -Mapped "{[/weixin/weixinUser/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.weixin.controller.WeixinUserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-04 15:57:26 -Mapped "{[/weixin/weixinUser/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.weixin.controller.WeixinUserController.save(com.bootdo.weixin.domain.WeixinUserDO)
2019-06-04 15:57:26 -Mapped "{[/weixin/weixinUser/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.weixin.controller.WeixinUserController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-04 15:57:26 -Mapped "{[/weixin/weixinUser],methods=[GET]}" onto java.lang.String com.bootdo.weixin.controller.WeixinUserController.WeixinUser()
2019-06-04 15:57:26 -Mapped "{[/xjbg/order/add],methods=[GET]}" onto java.lang.String com.bootdo.xjbg.controller.OrderController.add()
2019-06-04 15:57:26 -Mapped "{[/xjbg/order/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.xjbg.controller.OrderController.remove(java.lang.Long)
2019-06-04 15:57:26 -Mapped "{[/xjbg/order/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.xjbg.controller.OrderController.remove(java.lang.Long[])
2019-06-04 15:57:26 -Mapped "{[/xjbg/order/update]}" onto public com.bootdo.common.utils.R com.bootdo.xjbg.controller.OrderController.update(com.bootdo.xjbg.domain.OrderDO)
2019-06-04 15:57:26 -Mapped "{[/xjbg/order/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.xjbg.controller.OrderController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-04 15:57:26 -Mapped "{[/xjbg/order/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.xjbg.controller.OrderController.save(com.bootdo.xjbg.domain.OrderDO)
2019-06-04 15:57:26 -Mapped "{[/xjbg/order/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.xjbg.controller.OrderController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-04 15:57:26 -Mapped "{[/xjbg/order],methods=[GET]}" onto java.lang.String com.bootdo.xjbg.controller.OrderController.Order()
2019-06-04 15:57:26 -Mapped "{[/xjbg/orderItem/add],methods=[GET]}" onto java.lang.String com.bootdo.xjbg.controller.OrderItemController.add()
2019-06-04 15:57:26 -Mapped "{[/xjbg/orderItem/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.xjbg.controller.OrderItemController.remove(java.lang.Long)
2019-06-04 15:57:26 -Mapped "{[/xjbg/orderItem/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.xjbg.controller.OrderItemController.remove(java.lang.Long[])
2019-06-04 15:57:26 -Mapped "{[/xjbg/orderItem/update]}" onto public com.bootdo.common.utils.R com.bootdo.xjbg.controller.OrderItemController.update(com.bootdo.xjbg.domain.OrderItemDO)
2019-06-04 15:57:26 -Mapped "{[/xjbg/orderItem/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.xjbg.controller.OrderItemController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-04 15:57:26 -Mapped "{[/xjbg/orderItem/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.xjbg.controller.OrderItemController.save(com.bootdo.xjbg.domain.OrderItemDO)
2019-06-04 15:57:26 -Mapped "{[/xjbg/orderItem/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.xjbg.controller.OrderItemController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-04 15:57:26 -Mapped "{[/xjbg/orderItem],methods=[GET]}" onto java.lang.String com.bootdo.xjbg.controller.OrderItemController.OrderItem()
2019-06-04 15:57:26 -Mapped "{[/xjbg/product/add],methods=[GET]}" onto java.lang.String com.bootdo.xjbg.controller.ProductController.add()
2019-06-04 15:57:26 -Mapped "{[/xjbg/product/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.xjbg.controller.ProductController.remove(java.lang.Long)
2019-06-04 15:57:26 -Mapped "{[/xjbg/product/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.xjbg.controller.ProductController.remove(java.lang.Long[])
2019-06-04 15:57:26 -Mapped "{[/xjbg/product/update]}" onto public com.bootdo.common.utils.R com.bootdo.xjbg.controller.ProductController.update(com.bootdo.xjbg.domain.ProductDO,org.springframework.web.multipart.MultipartFile[])
2019-06-04 15:57:26 -Mapped "{[/xjbg/product/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.xjbg.controller.ProductController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-04 15:57:26 -Mapped "{[/xjbg/product/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.xjbg.controller.ProductController.save(com.bootdo.xjbg.domain.ProductDO,org.springframework.web.multipart.MultipartFile[])
2019-06-04 15:57:26 -Mapped "{[/xjbg/product/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.xjbg.controller.ProductController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-04 15:57:26 -Mapped "{[/xjbg/product],methods=[GET]}" onto java.lang.String com.bootdo.xjbg.controller.ProductController.Product()
2019-06-04 15:57:26 -Mapped "{[/xjbg/room/add],methods=[GET]}" onto java.lang.String com.bootdo.xjbg.controller.RoomController.add(org.springframework.ui.Model)
2019-06-04 15:57:26 -Mapped "{[/xjbg/room/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.xjbg.controller.RoomController.remove(java.lang.Integer[])
2019-06-04 15:57:26 -Mapped "{[/xjbg/room/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.xjbg.controller.RoomController.remove(java.lang.Integer)
2019-06-04 15:57:26 -Mapped "{[/xjbg/room/update]}" onto public com.bootdo.common.utils.R com.bootdo.xjbg.controller.RoomController.update(com.bootdo.xjbg.domain.RoomDO)
2019-06-04 15:57:26 -Mapped "{[/xjbg/room/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.xjbg.controller.RoomController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-04 15:57:26 -Mapped "{[/xjbg/room/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.xjbg.controller.RoomController.save(com.bootdo.xjbg.domain.RoomDO)
2019-06-04 15:57:26 -Mapped "{[/xjbg/room/operation/{roomId}],methods=[GET]}" onto java.lang.String com.bootdo.xjbg.controller.RoomController.operation(java.lang.Integer,org.springframework.ui.Model)
2019-06-04 15:57:26 -Mapped "{[/xjbg/room/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.xjbg.controller.RoomController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-06-04 15:57:26 -Mapped "{[/xjbg/room],methods=[GET]}" onto java.lang.String com.bootdo.xjbg.controller.RoomController.Room(org.springframework.ui.Model)
2019-06-04 15:57:26 -Mapped "{[/xjbg/room/roomMng],methods=[GET]}" onto java.lang.String com.bootdo.xjbg.controller.RoomController.roomMng(org.springframework.ui.Model)
2019-06-04 15:57:26 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-06-04 15:57:26 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-06-04 15:57:26 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-06-04 15:57:26 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-06-04 15:57:26 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-06-04 15:57:26 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-06-04 15:57:26 -Initializing ExecutorService  'brokerChannelExecutor'
2019-06-04 15:57:27 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-06-04 15:57:27 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@44d5c77d: startup date [Tue Jun 04 15:57:19 CST 2019]; root of context hierarchy
2019-06-04 15:57:27 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-06-04 15:57:27 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-06-04 15:57:27 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-06-04 15:57:27 -Mapped URL path [/productPic/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-06-04 15:57:27 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-06-04 15:57:27 -[THYMELEAF][restartedMain] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-06-04 15:57:28 -LiveReload server is running on port 35729
2019-06-04 15:57:28 -Registering beans for JMX exposure on startup
2019-06-04 15:57:28 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-06-04 15:57:28 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-06-04 15:57:28 -Starting beans in phase 2147483647
2019-06-04 15:57:28 -Context refreshed
2019-06-04 15:57:28 -Found 1 custom documentation plugin(s)
2019-06-04 15:57:28 -Scanning for api listing references
2019-06-04 15:57:28 -Generating unique operation named: removeUsingPOST_1
2019-06-04 15:57:28 -Generating unique operation named: addUsingGET_1
2019-06-04 15:57:28 -Generating unique operation named: editUsingGET_1
2019-06-04 15:57:28 -Generating unique operation named: listUsingGET_1
2019-06-04 15:57:28 -Generating unique operation named: removeUsingPOST_2
2019-06-04 15:57:28 -Generating unique operation named: removeUsingPOST_3
2019-06-04 15:57:28 -Generating unique operation named: saveUsingPOST_1
2019-06-04 15:57:28 -Generating unique operation named: updateUsingGET_1
2019-06-04 15:57:28 -Generating unique operation named: updateUsingHEAD_1
2019-06-04 15:57:28 -Generating unique operation named: updateUsingPOST_1
2019-06-04 15:57:28 -Generating unique operation named: updateUsingPUT_1
2019-06-04 15:57:28 -Generating unique operation named: updateUsingPATCH_1
2019-06-04 15:57:28 -Generating unique operation named: updateUsingDELETE_1
2019-06-04 15:57:28 -Generating unique operation named: updateUsingOPTIONS_1
2019-06-04 15:57:28 -Generating unique operation named: updateUsingTRACE_1
2019-06-04 15:57:28 -Generating unique operation named: addUsingGET_2
2019-06-04 15:57:28 -Generating unique operation named: editUsingGET_2
2019-06-04 15:57:28 -Generating unique operation named: listUsingGET_2
2019-06-04 15:57:28 -Generating unique operation named: removeUsingPOST_4
2019-06-04 15:57:28 -Generating unique operation named: removeUsingPOST_5
2019-06-04 15:57:28 -Generating unique operation named: saveUsingPOST_2
2019-06-04 15:57:28 -Generating unique operation named: updateUsingGET_2
2019-06-04 15:57:28 -Generating unique operation named: updateUsingHEAD_2
2019-06-04 15:57:28 -Generating unique operation named: updateUsingPOST_2
2019-06-04 15:57:28 -Generating unique operation named: updateUsingPUT_2
2019-06-04 15:57:28 -Generating unique operation named: updateUsingPATCH_2
2019-06-04 15:57:28 -Generating unique operation named: updateUsingDELETE_2
2019-06-04 15:57:28 -Generating unique operation named: updateUsingOPTIONS_2
2019-06-04 15:57:28 -Generating unique operation named: updateUsingTRACE_2
2019-06-04 15:57:28 -Generating unique operation named: addUsingGET_3
2019-06-04 15:57:28 -Generating unique operation named: editUsingGET_3
2019-06-04 15:57:28 -Generating unique operation named: listUsingGET_3
2019-06-04 15:57:28 -Generating unique operation named: removeUsingPOST_6
2019-06-04 15:57:28 -Generating unique operation named: removeUsingPOST_7
2019-06-04 15:57:28 -Generating unique operation named: saveUsingPOST_3
2019-06-04 15:57:28 -Generating unique operation named: updateUsingGET_3
2019-06-04 15:57:28 -Generating unique operation named: updateUsingHEAD_3
2019-06-04 15:57:28 -Generating unique operation named: updateUsingPOST_3
2019-06-04 15:57:28 -Generating unique operation named: updateUsingPUT_3
2019-06-04 15:57:28 -Generating unique operation named: updateUsingPATCH_3
2019-06-04 15:57:28 -Generating unique operation named: updateUsingDELETE_3
2019-06-04 15:57:28 -Generating unique operation named: updateUsingOPTIONS_3
2019-06-04 15:57:28 -Generating unique operation named: updateUsingTRACE_3
2019-06-04 15:57:28 -Generating unique operation named: editUsingGET_4
2019-06-04 15:57:28 -Generating unique operation named: listUsingGET_4
2019-06-04 15:57:28 -Generating unique operation named: updateUsingPOST_4
2019-06-04 15:57:28 -Generating unique operation named: addUsingGET_4
2019-06-04 15:57:28 -Generating unique operation named: editUsingGET_5
2019-06-04 15:57:28 -Generating unique operation named: infoUsingGET_1
2019-06-04 15:57:28 -Generating unique operation named: infoUsingHEAD_1
2019-06-04 15:57:28 -Generating unique operation named: infoUsingPOST_1
2019-06-04 15:57:28 -Generating unique operation named: infoUsingPUT_1
2019-06-04 15:57:28 -Generating unique operation named: infoUsingPATCH_1
2019-06-04 15:57:28 -Generating unique operation named: infoUsingDELETE_1
2019-06-04 15:57:28 -Generating unique operation named: infoUsingOPTIONS_1
2019-06-04 15:57:28 -Generating unique operation named: infoUsingTRACE_1
2019-06-04 15:57:28 -Generating unique operation named: listUsingGET_5
2019-06-04 15:57:28 -Generating unique operation named: removeUsingPOST_8
2019-06-04 15:57:28 -Generating unique operation named: removeUsingPOST_9
2019-06-04 15:57:28 -Generating unique operation named: saveUsingPOST_4
2019-06-04 15:57:28 -Generating unique operation named: updateUsingPOST_5
2019-06-04 15:57:28 -Generating unique operation named: listUsingGET_6
2019-06-04 15:57:28 -Generating unique operation named: removeUsingPOST_10
2019-06-04 15:57:28 -Generating unique operation named: welcomeUsingGET_1
2019-06-04 15:57:28 -Generating unique operation named: addUsingGET_5
2019-06-04 15:57:28 -Generating unique operation named: editUsingGET_6
2019-06-04 15:57:28 -Generating unique operation named: listUsingGET_7
2019-06-04 15:57:28 -Generating unique operation named: removeUsingPOST_11
2019-06-04 15:57:28 -Generating unique operation named: saveUsingPOST_5
2019-06-04 15:57:28 -Generating unique operation named: treeUsingGET_1
2019-06-04 15:57:28 -Generating unique operation named: treeUsingGET_2
2019-06-04 15:57:28 -Generating unique operation named: updateUsingPOST_6
2019-06-04 15:57:28 -Generating unique operation named: batchRemoveUsingPOST_1
2019-06-04 15:57:28 -Generating unique operation named: editUsingGET_7
2019-06-04 15:57:28 -Generating unique operation named: listUsingGET_8
2019-06-04 15:57:29 -Generating unique operation named: addUsingGET_6
2019-06-04 15:57:29 -Generating unique operation named: editUsingGET_8
2019-06-04 15:57:29 -Generating unique operation named: listUsingGET_9
2019-06-04 15:57:29 -Generating unique operation named: removeUsingPOST_12
2019-06-04 15:57:29 -Generating unique operation named: removeUsingPOST_13
2019-06-04 15:57:29 -Generating unique operation named: saveUsingPOST_6
2019-06-04 15:57:29 -Generating unique operation named: updateUsingGET_4
2019-06-04 15:57:29 -Generating unique operation named: updateUsingHEAD_4
2019-06-04 15:57:29 -Generating unique operation named: updateUsingPOST_7
2019-06-04 15:57:29 -Generating unique operation named: updateUsingPUT_4
2019-06-04 15:57:29 -Generating unique operation named: updateUsingPATCH_4
2019-06-04 15:57:29 -Generating unique operation named: updateUsingDELETE_4
2019-06-04 15:57:29 -Generating unique operation named: updateUsingOPTIONS_4
2019-06-04 15:57:29 -Generating unique operation named: updateUsingTRACE_4
2019-06-04 15:57:29 -Generating unique operation named: addUsingGET_7
2019-06-04 15:57:29 -Generating unique operation named: editUsingGET_9
2019-06-04 15:57:29 -Generating unique operation named: listUsingGET_10
2019-06-04 15:57:29 -Generating unique operation named: removeUsingPOST_14
2019-06-04 15:57:29 -Generating unique operation named: removeUsingPOST_15
2019-06-04 15:57:29 -Generating unique operation named: saveUsingPOST_7
2019-06-04 15:57:29 -Generating unique operation named: updateUsingGET_5
2019-06-04 15:57:29 -Generating unique operation named: updateUsingHEAD_5
2019-06-04 15:57:29 -Generating unique operation named: updateUsingPOST_8
2019-06-04 15:57:29 -Generating unique operation named: updateUsingPUT_5
2019-06-04 15:57:29 -Generating unique operation named: updateUsingPATCH_5
2019-06-04 15:57:29 -Generating unique operation named: updateUsingDELETE_5
2019-06-04 15:57:29 -Generating unique operation named: updateUsingOPTIONS_5
2019-06-04 15:57:29 -Generating unique operation named: updateUsingTRACE_5
2019-06-04 15:57:29 -Generating unique operation named: addUsingGET_8
2019-06-04 15:57:29 -Generating unique operation named: editUsingGET_10
2019-06-04 15:57:29 -Generating unique operation named: listUsingGET_11
2019-06-04 15:57:29 -Generating unique operation named: removeUsingPOST_16
2019-06-04 15:57:29 -Generating unique operation named: removeUsingPOST_17
2019-06-04 15:57:29 -Generating unique operation named: saveUsingPOST_8
2019-06-04 15:57:29 -Generating unique operation named: updateUsingGET_6
2019-06-04 15:57:29 -Generating unique operation named: updateUsingHEAD_6
2019-06-04 15:57:29 -Generating unique operation named: updateUsingPOST_9
2019-06-04 15:57:29 -Generating unique operation named: updateUsingPUT_6
2019-06-04 15:57:29 -Generating unique operation named: updateUsingPATCH_6
2019-06-04 15:57:29 -Generating unique operation named: updateUsingDELETE_6
2019-06-04 15:57:29 -Generating unique operation named: updateUsingOPTIONS_6
2019-06-04 15:57:29 -Generating unique operation named: updateUsingTRACE_6
2019-06-04 15:57:29 -Generating unique operation named: addUsingGET_9
2019-06-04 15:57:29 -Generating unique operation named: batchRemoveUsingPOST_2
2019-06-04 15:57:29 -Generating unique operation named: deployUsingPOST_1
2019-06-04 15:57:29 -Generating unique operation named: listUsingGET_12
2019-06-04 15:57:29 -Generating unique operation named: removeUsingPOST_18
2019-06-04 15:57:29 -Generating unique operation named: addUsingGET_10
2019-06-04 15:57:29 -Generating unique operation named: editUsingGET_11
2019-06-04 15:57:29 -Generating unique operation named: listUsingGET_13
2019-06-04 15:57:29 -Generating unique operation named: removeUsingPOST_19
2019-06-04 15:57:29 -Generating unique operation named: removeUsingPOST_20
2019-06-04 15:57:29 -Trying to infer dataType org.springframework.web.multipart.MultipartFile[]
2019-06-04 15:57:29 -Generating unique operation named: saveUsingPOST_9
2019-06-04 15:57:29 -Trying to infer dataType org.springframework.web.multipart.MultipartFile[]
2019-06-04 15:57:29 -Generating unique operation named: updateUsingGET_7
2019-06-04 15:57:29 -Trying to infer dataType org.springframework.web.multipart.MultipartFile[]
2019-06-04 15:57:29 -Generating unique operation named: updateUsingHEAD_7
2019-06-04 15:57:29 -Trying to infer dataType org.springframework.web.multipart.MultipartFile[]
2019-06-04 15:57:29 -Generating unique operation named: updateUsingPOST_10
2019-06-04 15:57:29 -Trying to infer dataType org.springframework.web.multipart.MultipartFile[]
2019-06-04 15:57:29 -Generating unique operation named: updateUsingPUT_7
2019-06-04 15:57:29 -Trying to infer dataType org.springframework.web.multipart.MultipartFile[]
2019-06-04 15:57:29 -Generating unique operation named: updateUsingPATCH_7
2019-06-04 15:57:29 -Trying to infer dataType org.springframework.web.multipart.MultipartFile[]
2019-06-04 15:57:29 -Generating unique operation named: updateUsingDELETE_7
2019-06-04 15:57:29 -Trying to infer dataType org.springframework.web.multipart.MultipartFile[]
2019-06-04 15:57:29 -Generating unique operation named: updateUsingOPTIONS_7
2019-06-04 15:57:29 -Trying to infer dataType org.springframework.web.multipart.MultipartFile[]
2019-06-04 15:57:29 -Generating unique operation named: updateUsingTRACE_7
2019-06-04 15:57:29 -Generating unique operation named: addUsingGET_11
2019-06-04 15:57:29 -Generating unique operation named: batchRemoveUsingPOST_3
2019-06-04 15:57:29 -Generating unique operation named: editUsingGET_12
2019-06-04 15:57:29 -Generating unique operation named: listUsingGET_14
2019-06-04 15:57:29 -Generating unique operation named: saveUsingPOST_10
2019-06-04 15:57:29 -Generating unique operation named: saveUsingPOST_11
2019-06-04 15:57:29 -Generating unique operation named: updateUsingPOST_11
2019-06-04 15:57:29 -Generating unique operation named: addUsingGET_12
2019-06-04 15:57:29 -Generating unique operation named: editUsingGET_13
2019-06-04 15:57:29 -Generating unique operation named: listUsingGET_15
2019-06-04 15:57:29 -Generating unique operation named: removeUsingPOST_21
2019-06-04 15:57:29 -Generating unique operation named: removeUsingPOST_22
2019-06-04 15:57:29 -Generating unique operation named: saveUsingPOST_12
2019-06-04 15:57:29 -Generating unique operation named: updateUsingGET_8
2019-06-04 15:57:29 -Generating unique operation named: updateUsingHEAD_8
2019-06-04 15:57:29 -Generating unique operation named: updateUsingPOST_12
2019-06-04 15:57:29 -Generating unique operation named: updateUsingPUT_8
2019-06-04 15:57:29 -Generating unique operation named: updateUsingPATCH_8
2019-06-04 15:57:29 -Generating unique operation named: updateUsingDELETE_8
2019-06-04 15:57:29 -Generating unique operation named: updateUsingOPTIONS_8
2019-06-04 15:57:29 -Generating unique operation named: updateUsingTRACE_8
2019-06-04 15:57:29 -Generating unique operation named: addUsingGET_13
2019-06-04 15:57:29 -Generating unique operation named: editUsingGET_14
2019-06-04 15:57:29 -Generating unique operation named: listUsingGET_16
2019-06-04 15:57:29 -Generating unique operation named: removeUsingPOST_23
2019-06-04 15:57:29 -Generating unique operation named: removeUsingPOST_24
2019-06-04 15:57:29 -Generating unique operation named: updateUsingGET_9
2019-06-04 15:57:29 -Generating unique operation named: updateUsingHEAD_9
2019-06-04 15:57:29 -Generating unique operation named: updateUsingPOST_13
2019-06-04 15:57:29 -Generating unique operation named: updateUsingPUT_9
2019-06-04 15:57:29 -Generating unique operation named: updateUsingPATCH_9
2019-06-04 15:57:29 -Generating unique operation named: updateUsingDELETE_9
2019-06-04 15:57:29 -Generating unique operation named: updateUsingOPTIONS_9
2019-06-04 15:57:29 -Generating unique operation named: updateUsingTRACE_9
2019-06-04 15:57:29 -Generating unique operation named: listUsingGET_17
2019-06-04 15:57:29 -Generating unique operation named: listUsingHEAD_1
2019-06-04 15:57:29 -Generating unique operation named: listUsingPOST_1
2019-06-04 15:57:29 -Generating unique operation named: listUsingPUT_1
2019-06-04 15:57:29 -Generating unique operation named: listUsingPATCH_1
2019-06-04 15:57:29 -Generating unique operation named: listUsingDELETE_1
2019-06-04 15:57:29 -Generating unique operation named: listUsingOPTIONS_1
2019-06-04 15:57:29 -Generating unique operation named: listUsingTRACE_1
2019-06-04 15:57:29 -Generating unique operation named: listUsingGET_18
2019-06-04 15:57:29 -Generating unique operation named: addUsingGET_14
2019-06-04 15:57:29 -Generating unique operation named: batchRemoveUsingPOST_4
2019-06-04 15:57:29 -Generating unique operation named: editUsingGET_15
2019-06-04 15:57:29 -Generating unique operation named: listUsingGET_19
2019-06-04 15:57:29 -Generating unique operation named: removeUsingPOST_25
2019-06-04 15:57:29 -Generating unique operation named: saveUsingPOST_13
2019-06-04 15:57:29 -Generating unique operation named: treeUsingGET_3
2019-06-04 15:57:29 -Generating unique operation named: treeViewUsingGET_1
2019-06-04 15:57:29 -Generating unique operation named: updateUsingPOST_14
2019-06-04 15:57:29 -Generating unique operation named: addUsingGET_15
2019-06-04 15:57:29 -Generating unique operation named: editUsingGET_16
2019-06-04 15:57:29 -Generating unique operation named: listUsingGET_20
2019-06-04 15:57:29 -Generating unique operation named: removeUsingPOST_26
2019-06-04 15:57:29 -Generating unique operation named: removeUsingPOST_27
2019-06-04 15:57:29 -Generating unique operation named: saveUsingPOST_14
2019-06-04 15:57:29 -Generating unique operation named: updateUsingGET_10
2019-06-04 15:57:29 -Generating unique operation named: updateUsingHEAD_10
2019-06-04 15:57:29 -Generating unique operation named: updateUsingPOST_15
2019-06-04 15:57:29 -Generating unique operation named: updateUsingPUT_10
2019-06-04 15:57:29 -Generating unique operation named: updateUsingPATCH_10
2019-06-04 15:57:29 -Generating unique operation named: updateUsingDELETE_10
2019-06-04 15:57:29 -Generating unique operation named: updateUsingOPTIONS_10
2019-06-04 15:57:29 -Generating unique operation named: updateUsingTRACE_10
2019-06-04 15:57:29 -Starting Quartz Scheduler now
2019-06-04 15:57:29 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-06-04 15:57:29 -Starting...
2019-06-04 15:57:29 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-06-04 15:57:29 -Started.
2019-06-04 15:57:29 -Starting ProtocolHandler ["http-nio-8888"]
2019-06-04 15:57:29 -Using a shared selector for servlet write/read
2019-06-04 15:57:29 -Tomcat started on port(s): 8888 (http) with context path ''
2019-06-04 15:57:29 -Started BootdoApplication in 10.883 seconds (JVM running for 12.488)
2019-06-04 15:57:29 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-06-04 15:57:29 -==> Parameters: 
2019-06-04 15:57:29 -<==      Total: 1
2019-06-04 15:57:32 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-06-04 15:57:32 -FrameworkServlet 'dispatcherServlet': initialization started
2019-06-04 15:57:32 -FrameworkServlet 'dispatcherServlet': initialization completed in 35 ms
2019-06-04 15:57:32 -Enabling session validation scheduler...
2019-06-04 15:57:32 -请求地址 : http://localhost:8888/login;JSESSIONID=d248792e-a239-4f90-a3e4-26199b06104e
2019-06-04 15:57:32 -HTTP METHOD : GET
2019-06-04 15:57:32 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-06-04 15:57:32 -参数 : [{}]
2019-06-04 15:57:32 -耗时 : 2
2019-06-04 15:57:32 -返回值 : login
2019-06-04 15:57:34 -请求地址 : http://localhost:8888/login
2019-06-04 15:57:34 -HTTP METHOD : POST
2019-06-04 15:57:34 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-06-04 15:57:34 -参数 : [admin, 111111]
2019-06-04 15:57:34 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-06-04 15:57:34 -==> Parameters: admin(String)
2019-06-04 15:57:34 -<==      Total: 1
2019-06-04 15:57:34 -耗时 : 15
2019-06-04 15:57:34 -返回值 : {msg=操作成功, code=0}
2019-06-04 15:57:34 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-06-04 15:57:34 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-04 15:57:34 -==> Parameters: 1(Long), admin(String), 登录(String), 16(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-06-04 15:57:34.227(Timestamp)
2019-06-04 15:57:34 -请求地址 : http://localhost:8888/index
2019-06-04 15:57:34 -HTTP METHOD : GET
2019-06-04 15:57:34 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-06-04 15:57:34 -参数 : [{}]
2019-06-04 15:57:34 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-06-04 15:57:34 -==> Parameters: 1(Long)
2019-06-04 15:57:34 -<==      Total: 34
2019-06-04 15:57:34 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-06-04 15:57:34 -==> Parameters: 144(Long)
2019-06-04 15:57:34 -<==      Total: 1
2019-06-04 15:57:34 -耗时 : 34
2019-06-04 15:57:34 -返回值 : index_v1
2019-06-04 15:57:34 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-04 15:57:34 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 35(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-commenting","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user","url":"/weixin/weixinUser"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"109","text":"用户管理"}],"hasChildren":true,"hasParent":false,"id":"109","parentId":"0","text":"微信管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","text":"基础管理"},{"attributes":{"icon":"fa fa-hotel","url":""},"checked":false,"children":[{"attributes":{"icon":"","url":"/xjbg/room/roomMng"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"105","text":"开房"},{"attributes":{"icon":"fa fa-bed","url":"/xjbg/room"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"106","parentId":"105","text":"房间管理"},{"attributes":{"icon":"","url":"/xjbg/product"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"105","text":"商品管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"欣吉宾馆"},{"attributes":{"icon":"fa fa-desktop"},"checked":false,"children":[{"attributes":{"icon":"fa fa-user","url":"sys/user/"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"6","parentId":"3","text":"用户管理"},{"attributes":{"icon":"fa fa-paw","url":"sys/role"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"7","parentId":"3","text":"角色管理"},{"attributes":{"icon":"fa fa-th-list","url":"sys/menu/"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"3","text":"系统菜单"},{"attributes":{"icon":"fa fa-users","url":"/system/sysDept"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"73","parentId":"3","text":"部门管理"}],"hasChildren":true,"hasParent":false,"id":"3","parentId":"0","text":"系统管理"},{"attributes":{"icon":"fa fa-gear","url":""},"checked":false,"children":[{"attributes":{"icon":"","url":"/swagger-ui.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"104","parentId":"77","text":"swagger"},{"attributes":{"icon":"fa fa-code","url":"common/generator"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"48","parentId":"77","text":"代码生成"},{"attributes":{"icon":"fa fa-hourglass-1","url":"common/job"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"72","parentId":"77","text":"计划任务"}],"hasChildren":true,"hasParent":false,"id":"77","parentId":"0","text":"系统工具"},{"attributes":{"icon":"fa fa-laptop","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-pencil-square","url":"oa/notify"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"85","parentId":"84","text":"通知公告"},{"attributes":{"icon":"fa fa-envelope-square","url":"oa/notify/selfNotify"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"90","parentId":"84","text":"我的通知"}],"hasChildren":true,"hasParent":false,"id":"84","parentId":"0","text":"办公管理"},{"attributes":{"icon":"fa fa-video-camera","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user","url":"sys/online"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"92","parentId":"91","text":"在线用户"},{"attributes":{"icon":"fa fa-warning","url":"common/log"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"27","parentId":"91","text":"系统日志"},{"attributes":{"icon":"fa fa-caret-square-o-right","url":"/druid/index.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"57","parentId":"91","text":"运行监控"}],"hasChildren":true,"hasParent":false,"id":"91","parentId":"0","text":"系统监控"},{"attributes":{"icon":"fa fa-rss","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-edit","url":"/blog/bContent/add"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"68","parentId":"49","text":"发布文章"},{"attributes":{"icon":"fa fa-file-image-o","url":"blog/bContent"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"50","parentId":"49","text":"文章列表"}],"hasChildren":true,"hasParent":false,"id":"49","parentId":"0","text":"博客管理"},{"attributes":{"icon":"fa fa-print","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-flag","url":"activiti/process"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"96","parentId":"93","text":"流程管理"},{"attributes":{"icon":"","url":"activiti/task/todo"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"101","parentId":"93","text":"待办任务"},{"attr(String), 127.0.0.1(String), 2019-06-04 15:57:34.348(Timestamp)
2019-06-04 15:57:34 -<==    Updates: 1
2019-06-04 15:57:34 -<==    Updates: 1
2019-06-04 15:57:34 -请求地址 : http://localhost:8888/main
2019-06-04 15:57:34 -HTTP METHOD : GET
2019-06-04 15:57:34 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-04 15:57:34 -参数 : []
2019-06-04 15:57:34 -耗时 : 0
2019-06-04 15:57:34 -返回值 : main
2019-06-04 15:57:34 -请求地址 : http://localhost:8888/oa/notify/message
2019-06-04 15:57:34 -HTTP METHOD : GET
2019-06-04 15:57:34 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-06-04 15:57:34 -参数 : []
2019-06-04 15:57:34 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-06-04 15:57:34 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-06-04 15:57:34 -请求地址 : http://localhost:8888/main
2019-06-04 15:57:34 -HTTP METHOD : GET
2019-06-04 15:57:34 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-04 15:57:34 -参数 : []
2019-06-04 15:57:34 -耗时 : 0
2019-06-04 15:57:34 -返回值 : main
2019-06-04 15:57:34 -<==      Total: 0
2019-06-04 15:57:34 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-06-04 15:57:34 -==> Parameters: 1(Long), 0(String)
2019-06-04 15:57:34 -<==      Total: 1
2019-06-04 15:57:34 -耗时 : 91
2019-06-04 15:57:34 -返回值 : com.bootdo.common.utils.PageUtils@1ee77bad
2019-06-04 15:57:36 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-06-04 15:57:36 -==> Parameters: 1(Long)
2019-06-04 15:57:36 -<==      Total: 58
2019-06-04 15:57:36 -请求地址 : http://localhost:8888/xjbg/room/roomMng
2019-06-04 15:57:36 -HTTP METHOD : GET
2019-06-04 15:57:36 -CLASS_METHOD : com.bootdo.xjbg.controller.RoomController.roomMng
2019-06-04 15:57:36 -参数 : [{}]
2019-06-04 15:57:36 -==>  Preparing: select `id`,`room_no`,`room_type`,`floor`,`room_state`,`price`,`create_time`,`update_time`,`create_user`,`update_user` from xjbg_room 
2019-06-04 15:57:36 -==> Parameters: 
2019-06-04 15:57:36 -<==      Total: 8
2019-06-04 15:57:36 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 15:57:36 -==> Parameters: room_type(String)
2019-06-04 15:57:36 -<==      Total: 7
2019-06-04 15:57:36 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 15:57:36 -==> Parameters: floor(String)
2019-06-04 15:57:36 -<==      Total: 5
2019-06-04 15:57:36 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 15:57:36 -==> Parameters: room_state(String)
2019-06-04 15:57:36 -<==      Total: 2
2019-06-04 15:57:36 -==>  Preparing: select * from sys_user 
2019-06-04 15:57:36 -==> Parameters: 
2019-06-04 15:57:36 -<==      Total: 11
2019-06-04 15:57:36 -耗时 : 74
2019-06-04 15:57:36 -返回值 : xjbg/room/roomMng
2019-06-04 15:57:37 -请求地址 : http://localhost:8888/xjbg/room/operation/1
2019-06-04 15:57:37 -HTTP METHOD : GET
2019-06-04 15:57:37 -CLASS_METHOD : com.bootdo.xjbg.controller.RoomController.operation
2019-06-04 15:57:37 -参数 : [1, {}]
2019-06-04 15:57:37 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 15:57:37 -==> Parameters: room_type(String)
2019-06-04 15:57:37 -<==      Total: 7
2019-06-04 15:57:37 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 15:57:37 -==> Parameters: floor(String)
2019-06-04 15:57:37 -<==      Total: 5
2019-06-04 15:57:37 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 15:57:37 -==> Parameters: room_state(String)
2019-06-04 15:57:37 -<==      Total: 2
2019-06-04 15:57:37 -==>  Preparing: select * from sys_user 
2019-06-04 15:57:37 -==> Parameters: 
2019-06-04 15:57:37 -<==      Total: 11
2019-06-04 15:57:37 -==>  Preparing: select `id`,`product_name`,`purchase_price`,`selling_price`,`product_pic`,`create_time`,`create_user`,`update_time`,`update_user` from xjbg_product order by id desc 
2019-06-04 15:57:37 -==> Parameters: 
2019-06-04 15:57:37 -<==      Total: 5
2019-06-04 15:57:37 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 15:57:37 -==> Parameters: order_type(String)
2019-06-04 15:57:37 -<==      Total: 3
2019-06-04 15:57:37 -==>  Preparing: select `id`,`room_no`,`room_type`,`floor`,`room_state`,`price`,`create_time`,`update_time`,`create_user`,`update_user` from xjbg_room where id = ? 
2019-06-04 15:57:37 -==> Parameters: 1(Integer)
2019-06-04 15:57:37 -<==      Total: 1
2019-06-04 15:57:37 -耗时 : 27
2019-06-04 15:57:37 -返回值 : xjbg/room/operation
2019-06-04 15:58:26 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 1 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 9, active threads = 0, queued tasks = 0, completed tasks = 9], outboundChannelpool size = 1, active threads = 0, queued tasks = 0, completed tasks = 1], sockJsScheduler[pool size = 8, active threads = 1, queued tasks = 3, completed tasks = 13]
2019-06-04 16:04:27 -请求地址 : http://localhost:8888/index
2019-06-04 16:04:27 -HTTP METHOD : GET
2019-06-04 16:04:27 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-06-04 16:04:27 -参数 : [{}]
2019-06-04 16:04:27 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-06-04 16:04:27 -==> Parameters: 1(Long)
2019-06-04 16:04:27 -<==      Total: 34
2019-06-04 16:04:27 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-06-04 16:04:27 -==> Parameters: 144(Long)
2019-06-04 16:04:27 -<==      Total: 1
2019-06-04 16:04:27 -耗时 : 7
2019-06-04 16:04:27 -返回值 : index_v1
2019-06-04 16:04:27 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-04 16:04:27 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 7(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-commenting","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user","url":"/weixin/weixinUser"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"109","text":"用户管理"}],"hasChildren":true,"hasParent":false,"id":"109","parentId":"0","text":"微信管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","text":"基础管理"},{"attributes":{"icon":"fa fa-hotel","url":""},"checked":false,"children":[{"attributes":{"icon":"","url":"/xjbg/room/roomMng"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"105","text":"开房"},{"attributes":{"icon":"fa fa-bed","url":"/xjbg/room"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"106","parentId":"105","text":"房间管理"},{"attributes":{"icon":"","url":"/xjbg/product"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"105","text":"商品管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"欣吉宾馆"},{"attributes":{"icon":"fa fa-desktop"},"checked":false,"children":[{"attributes":{"icon":"fa fa-user","url":"sys/user/"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"6","parentId":"3","text":"用户管理"},{"attributes":{"icon":"fa fa-paw","url":"sys/role"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"7","parentId":"3","text":"角色管理"},{"attributes":{"icon":"fa fa-th-list","url":"sys/menu/"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"3","text":"系统菜单"},{"attributes":{"icon":"fa fa-users","url":"/system/sysDept"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"73","parentId":"3","text":"部门管理"}],"hasChildren":true,"hasParent":false,"id":"3","parentId":"0","text":"系统管理"},{"attributes":{"icon":"fa fa-gear","url":""},"checked":false,"children":[{"attributes":{"icon":"","url":"/swagger-ui.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"104","parentId":"77","text":"swagger"},{"attributes":{"icon":"fa fa-code","url":"common/generator"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"48","parentId":"77","text":"代码生成"},{"attributes":{"icon":"fa fa-hourglass-1","url":"common/job"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"72","parentId":"77","text":"计划任务"}],"hasChildren":true,"hasParent":false,"id":"77","parentId":"0","text":"系统工具"},{"attributes":{"icon":"fa fa-laptop","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-pencil-square","url":"oa/notify"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"85","parentId":"84","text":"通知公告"},{"attributes":{"icon":"fa fa-envelope-square","url":"oa/notify/selfNotify"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"90","parentId":"84","text":"我的通知"}],"hasChildren":true,"hasParent":false,"id":"84","parentId":"0","text":"办公管理"},{"attributes":{"icon":"fa fa-video-camera","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user","url":"sys/online"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"92","parentId":"91","text":"在线用户"},{"attributes":{"icon":"fa fa-warning","url":"common/log"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"27","parentId":"91","text":"系统日志"},{"attributes":{"icon":"fa fa-caret-square-o-right","url":"/druid/index.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"57","parentId":"91","text":"运行监控"}],"hasChildren":true,"hasParent":false,"id":"91","parentId":"0","text":"系统监控"},{"attributes":{"icon":"fa fa-rss","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-edit","url":"/blog/bContent/add"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"68","parentId":"49","text":"发布文章"},{"attributes":{"icon":"fa fa-file-image-o","url":"blog/bContent"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"50","parentId":"49","text":"文章列表"}],"hasChildren":true,"hasParent":false,"id":"49","parentId":"0","text":"博客管理"},{"attributes":{"icon":"fa fa-print","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-flag","url":"activiti/process"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"96","parentId":"93","text":"流程管理"},{"attributes":{"icon":"","url":"activiti/task/todo"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"101","parentId":"93","text":"待办任务"},{"attr(String), 127.0.0.1(String), 2019-06-04 16:04:27.063(Timestamp)
2019-06-04 16:04:27 -请求地址 : http://localhost:8888/main
2019-06-04 16:04:27 -HTTP METHOD : GET
2019-06-04 16:04:27 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-04 16:04:27 -参数 : []
2019-06-04 16:04:27 -耗时 : 1
2019-06-04 16:04:27 -返回值 : main
2019-06-04 16:04:27 -<==    Updates: 1
2019-06-04 16:04:27 -请求地址 : http://localhost:8888/oa/notify/message
2019-06-04 16:04:27 -HTTP METHOD : GET
2019-06-04 16:04:27 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-06-04 16:04:27 -参数 : []
2019-06-04 16:04:27 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-06-04 16:04:27 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-06-04 16:04:27 -<==      Total: 0
2019-06-04 16:04:27 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-06-04 16:04:27 -==> Parameters: 1(Long), 0(String)
2019-06-04 16:04:27 -<==      Total: 1
2019-06-04 16:04:27 -耗时 : 5
2019-06-04 16:04:27 -返回值 : com.bootdo.common.utils.PageUtils@1b792ffb
2019-06-04 16:04:27 -请求地址 : http://localhost:8888/main
2019-06-04 16:04:27 -HTTP METHOD : GET
2019-06-04 16:04:27 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-04 16:04:27 -参数 : []
2019-06-04 16:04:27 -耗时 : 0
2019-06-04 16:04:27 -返回值 : main
2019-06-04 16:04:28 -请求地址 : http://localhost:8888/xjbg/room/roomMng
2019-06-04 16:04:28 -HTTP METHOD : GET
2019-06-04 16:04:28 -CLASS_METHOD : com.bootdo.xjbg.controller.RoomController.roomMng
2019-06-04 16:04:28 -参数 : [{}]
2019-06-04 16:04:28 -==>  Preparing: select `id`,`room_no`,`room_type`,`floor`,`room_state`,`price`,`create_time`,`update_time`,`create_user`,`update_user` from xjbg_room 
2019-06-04 16:04:28 -==> Parameters: 
2019-06-04 16:04:28 -<==      Total: 8
2019-06-04 16:04:28 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 16:04:28 -==> Parameters: room_type(String)
2019-06-04 16:04:28 -<==      Total: 7
2019-06-04 16:04:28 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 16:04:28 -==> Parameters: floor(String)
2019-06-04 16:04:28 -<==      Total: 5
2019-06-04 16:04:28 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 16:04:28 -==> Parameters: room_state(String)
2019-06-04 16:04:28 -<==      Total: 2
2019-06-04 16:04:28 -==>  Preparing: select * from sys_user 
2019-06-04 16:04:28 -==> Parameters: 
2019-06-04 16:04:28 -<==      Total: 11
2019-06-04 16:04:28 -耗时 : 12
2019-06-04 16:04:28 -返回值 : xjbg/room/roomMng
2019-06-04 16:04:28 -请求地址 : http://localhost:8888/xjbg/room/operation/1
2019-06-04 16:04:28 -HTTP METHOD : GET
2019-06-04 16:04:28 -CLASS_METHOD : com.bootdo.xjbg.controller.RoomController.operation
2019-06-04 16:04:28 -参数 : [1, {}]
2019-06-04 16:04:28 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 16:04:28 -==> Parameters: room_type(String)
2019-06-04 16:04:28 -<==      Total: 7
2019-06-04 16:04:28 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 16:04:28 -==> Parameters: floor(String)
2019-06-04 16:04:28 -<==      Total: 5
2019-06-04 16:04:28 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 16:04:28 -==> Parameters: room_state(String)
2019-06-04 16:04:28 -<==      Total: 2
2019-06-04 16:04:28 -==>  Preparing: select * from sys_user 
2019-06-04 16:04:28 -==> Parameters: 
2019-06-04 16:04:28 -<==      Total: 11
2019-06-04 16:04:28 -==>  Preparing: select `id`,`product_name`,`purchase_price`,`selling_price`,`product_pic`,`create_time`,`create_user`,`update_time`,`update_user` from xjbg_product order by id desc 
2019-06-04 16:04:28 -==> Parameters: 
2019-06-04 16:04:28 -<==      Total: 5
2019-06-04 16:04:28 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 16:04:28 -==> Parameters: order_type(String)
2019-06-04 16:04:28 -<==      Total: 3
2019-06-04 16:04:28 -==>  Preparing: select `id`,`room_no`,`room_type`,`floor`,`room_state`,`price`,`create_time`,`update_time`,`create_user`,`update_user` from xjbg_room where id = ? 
2019-06-04 16:04:28 -==> Parameters: 1(Integer)
2019-06-04 16:04:28 -<==      Total: 1
2019-06-04 16:04:28 -耗时 : 17
2019-06-04 16:04:28 -返回值 : xjbg/room/operation
2019-06-04 16:05:01 -请求地址 : http://localhost:8888/index
2019-06-04 16:05:01 -HTTP METHOD : GET
2019-06-04 16:05:01 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-06-04 16:05:01 -参数 : [{}]
2019-06-04 16:05:01 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-06-04 16:05:01 -==> Parameters: 1(Long)
2019-06-04 16:05:01 -<==      Total: 34
2019-06-04 16:05:01 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-06-04 16:05:01 -==> Parameters: 144(Long)
2019-06-04 16:05:01 -<==      Total: 1
2019-06-04 16:05:01 -耗时 : 6
2019-06-04 16:05:01 -返回值 : index_v1
2019-06-04 16:05:01 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-04 16:05:01 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 6(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-commenting","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user","url":"/weixin/weixinUser"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"109","text":"用户管理"}],"hasChildren":true,"hasParent":false,"id":"109","parentId":"0","text":"微信管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","text":"基础管理"},{"attributes":{"icon":"fa fa-hotel","url":""},"checked":false,"children":[{"attributes":{"icon":"","url":"/xjbg/room/roomMng"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"105","text":"开房"},{"attributes":{"icon":"fa fa-bed","url":"/xjbg/room"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"106","parentId":"105","text":"房间管理"},{"attributes":{"icon":"","url":"/xjbg/product"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"105","text":"商品管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"欣吉宾馆"},{"attributes":{"icon":"fa fa-desktop"},"checked":false,"children":[{"attributes":{"icon":"fa fa-user","url":"sys/user/"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"6","parentId":"3","text":"用户管理"},{"attributes":{"icon":"fa fa-paw","url":"sys/role"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"7","parentId":"3","text":"角色管理"},{"attributes":{"icon":"fa fa-th-list","url":"sys/menu/"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"3","text":"系统菜单"},{"attributes":{"icon":"fa fa-users","url":"/system/sysDept"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"73","parentId":"3","text":"部门管理"}],"hasChildren":true,"hasParent":false,"id":"3","parentId":"0","text":"系统管理"},{"attributes":{"icon":"fa fa-gear","url":""},"checked":false,"children":[{"attributes":{"icon":"","url":"/swagger-ui.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"104","parentId":"77","text":"swagger"},{"attributes":{"icon":"fa fa-code","url":"common/generator"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"48","parentId":"77","text":"代码生成"},{"attributes":{"icon":"fa fa-hourglass-1","url":"common/job"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"72","parentId":"77","text":"计划任务"}],"hasChildren":true,"hasParent":false,"id":"77","parentId":"0","text":"系统工具"},{"attributes":{"icon":"fa fa-laptop","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-pencil-square","url":"oa/notify"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"85","parentId":"84","text":"通知公告"},{"attributes":{"icon":"fa fa-envelope-square","url":"oa/notify/selfNotify"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"90","parentId":"84","text":"我的通知"}],"hasChildren":true,"hasParent":false,"id":"84","parentId":"0","text":"办公管理"},{"attributes":{"icon":"fa fa-video-camera","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user","url":"sys/online"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"92","parentId":"91","text":"在线用户"},{"attributes":{"icon":"fa fa-warning","url":"common/log"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"27","parentId":"91","text":"系统日志"},{"attributes":{"icon":"fa fa-caret-square-o-right","url":"/druid/index.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"57","parentId":"91","text":"运行监控"}],"hasChildren":true,"hasParent":false,"id":"91","parentId":"0","text":"系统监控"},{"attributes":{"icon":"fa fa-rss","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-edit","url":"/blog/bContent/add"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"68","parentId":"49","text":"发布文章"},{"attributes":{"icon":"fa fa-file-image-o","url":"blog/bContent"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"50","parentId":"49","text":"文章列表"}],"hasChildren":true,"hasParent":false,"id":"49","parentId":"0","text":"博客管理"},{"attributes":{"icon":"fa fa-print","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-flag","url":"activiti/process"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"96","parentId":"93","text":"流程管理"},{"attributes":{"icon":"","url":"activiti/task/todo"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"101","parentId":"93","text":"待办任务"},{"attr(String), 127.0.0.1(String), 2019-06-04 16:05:01.043(Timestamp)
2019-06-04 16:05:01 -<==    Updates: 1
2019-06-04 16:05:01 -请求地址 : http://localhost:8888/main
2019-06-04 16:05:01 -HTTP METHOD : GET
2019-06-04 16:05:01 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-04 16:05:01 -参数 : []
2019-06-04 16:05:01 -耗时 : 0
2019-06-04 16:05:01 -返回值 : main
2019-06-04 16:05:01 -请求地址 : http://localhost:8888/oa/notify/message
2019-06-04 16:05:01 -HTTP METHOD : GET
2019-06-04 16:05:01 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-06-04 16:05:01 -参数 : []
2019-06-04 16:05:01 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-06-04 16:05:01 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-06-04 16:05:01 -<==      Total: 0
2019-06-04 16:05:01 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-06-04 16:05:01 -==> Parameters: 1(Long), 0(String)
2019-06-04 16:05:01 -<==      Total: 1
2019-06-04 16:05:01 -耗时 : 3
2019-06-04 16:05:01 -返回值 : com.bootdo.common.utils.PageUtils@58272e6c
2019-06-04 16:05:01 -请求地址 : http://localhost:8888/main
2019-06-04 16:05:01 -HTTP METHOD : GET
2019-06-04 16:05:01 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-04 16:05:01 -参数 : []
2019-06-04 16:05:01 -耗时 : 0
2019-06-04 16:05:01 -返回值 : main
2019-06-04 16:05:02 -请求地址 : http://localhost:8888/xjbg/room/roomMng
2019-06-04 16:05:02 -HTTP METHOD : GET
2019-06-04 16:05:02 -CLASS_METHOD : com.bootdo.xjbg.controller.RoomController.roomMng
2019-06-04 16:05:02 -参数 : [{}]
2019-06-04 16:05:02 -==>  Preparing: select `id`,`room_no`,`room_type`,`floor`,`room_state`,`price`,`create_time`,`update_time`,`create_user`,`update_user` from xjbg_room 
2019-06-04 16:05:02 -==> Parameters: 
2019-06-04 16:05:02 -<==      Total: 8
2019-06-04 16:05:02 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 16:05:02 -==> Parameters: room_type(String)
2019-06-04 16:05:02 -<==      Total: 7
2019-06-04 16:05:02 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 16:05:02 -==> Parameters: floor(String)
2019-06-04 16:05:02 -<==      Total: 5
2019-06-04 16:05:02 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 16:05:02 -==> Parameters: room_state(String)
2019-06-04 16:05:02 -<==      Total: 2
2019-06-04 16:05:02 -==>  Preparing: select * from sys_user 
2019-06-04 16:05:02 -==> Parameters: 
2019-06-04 16:05:02 -<==      Total: 11
2019-06-04 16:05:02 -耗时 : 9
2019-06-04 16:05:02 -返回值 : xjbg/room/roomMng
2019-06-04 16:05:02 -请求地址 : http://localhost:8888/xjbg/room/operation/1
2019-06-04 16:05:02 -HTTP METHOD : GET
2019-06-04 16:05:02 -CLASS_METHOD : com.bootdo.xjbg.controller.RoomController.operation
2019-06-04 16:05:02 -参数 : [1, {}]
2019-06-04 16:05:02 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 16:05:02 -==> Parameters: room_type(String)
2019-06-04 16:05:02 -<==      Total: 7
2019-06-04 16:05:02 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 16:05:02 -==> Parameters: floor(String)
2019-06-04 16:05:02 -<==      Total: 5
2019-06-04 16:05:02 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 16:05:02 -==> Parameters: room_state(String)
2019-06-04 16:05:02 -<==      Total: 2
2019-06-04 16:05:02 -==>  Preparing: select * from sys_user 
2019-06-04 16:05:02 -==> Parameters: 
2019-06-04 16:05:02 -<==      Total: 11
2019-06-04 16:05:02 -==>  Preparing: select `id`,`product_name`,`purchase_price`,`selling_price`,`product_pic`,`create_time`,`create_user`,`update_time`,`update_user` from xjbg_product order by id desc 
2019-06-04 16:05:02 -==> Parameters: 
2019-06-04 16:05:02 -<==      Total: 5
2019-06-04 16:05:02 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 16:05:02 -==> Parameters: order_type(String)
2019-06-04 16:05:02 -<==      Total: 3
2019-06-04 16:05:02 -==>  Preparing: select `id`,`room_no`,`room_type`,`floor`,`room_state`,`price`,`create_time`,`update_time`,`create_user`,`update_user` from xjbg_room where id = ? 
2019-06-04 16:05:02 -==> Parameters: 1(Integer)
2019-06-04 16:05:02 -<==      Total: 1
2019-06-04 16:05:02 -耗时 : 18
2019-06-04 16:05:02 -返回值 : xjbg/room/operation
2019-06-04 16:07:09 -请求地址 : http://localhost:8888/index
2019-06-04 16:07:09 -HTTP METHOD : GET
2019-06-04 16:07:09 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-06-04 16:07:09 -参数 : [{}]
2019-06-04 16:07:09 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-06-04 16:07:09 -==> Parameters: 1(Long)
2019-06-04 16:07:09 -<==      Total: 34
2019-06-04 16:07:09 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-06-04 16:07:09 -==> Parameters: 144(Long)
2019-06-04 16:07:09 -<==      Total: 1
2019-06-04 16:07:09 -耗时 : 14
2019-06-04 16:07:09 -返回值 : index_v1
2019-06-04 16:07:09 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-04 16:07:09 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 14(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-commenting","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user","url":"/weixin/weixinUser"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"109","text":"用户管理"}],"hasChildren":true,"hasParent":false,"id":"109","parentId":"0","text":"微信管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","text":"基础管理"},{"attributes":{"icon":"fa fa-hotel","url":""},"checked":false,"children":[{"attributes":{"icon":"","url":"/xjbg/room/roomMng"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"105","text":"开房"},{"attributes":{"icon":"fa fa-bed","url":"/xjbg/room"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"106","parentId":"105","text":"房间管理"},{"attributes":{"icon":"","url":"/xjbg/product"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"105","text":"商品管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"欣吉宾馆"},{"attributes":{"icon":"fa fa-desktop"},"checked":false,"children":[{"attributes":{"icon":"fa fa-user","url":"sys/user/"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"6","parentId":"3","text":"用户管理"},{"attributes":{"icon":"fa fa-paw","url":"sys/role"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"7","parentId":"3","text":"角色管理"},{"attributes":{"icon":"fa fa-th-list","url":"sys/menu/"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"3","text":"系统菜单"},{"attributes":{"icon":"fa fa-users","url":"/system/sysDept"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"73","parentId":"3","text":"部门管理"}],"hasChildren":true,"hasParent":false,"id":"3","parentId":"0","text":"系统管理"},{"attributes":{"icon":"fa fa-gear","url":""},"checked":false,"children":[{"attributes":{"icon":"","url":"/swagger-ui.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"104","parentId":"77","text":"swagger"},{"attributes":{"icon":"fa fa-code","url":"common/generator"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"48","parentId":"77","text":"代码生成"},{"attributes":{"icon":"fa fa-hourglass-1","url":"common/job"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"72","parentId":"77","text":"计划任务"}],"hasChildren":true,"hasParent":false,"id":"77","parentId":"0","text":"系统工具"},{"attributes":{"icon":"fa fa-laptop","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-pencil-square","url":"oa/notify"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"85","parentId":"84","text":"通知公告"},{"attributes":{"icon":"fa fa-envelope-square","url":"oa/notify/selfNotify"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"90","parentId":"84","text":"我的通知"}],"hasChildren":true,"hasParent":false,"id":"84","parentId":"0","text":"办公管理"},{"attributes":{"icon":"fa fa-video-camera","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user","url":"sys/online"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"92","parentId":"91","text":"在线用户"},{"attributes":{"icon":"fa fa-warning","url":"common/log"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"27","parentId":"91","text":"系统日志"},{"attributes":{"icon":"fa fa-caret-square-o-right","url":"/druid/index.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"57","parentId":"91","text":"运行监控"}],"hasChildren":true,"hasParent":false,"id":"91","parentId":"0","text":"系统监控"},{"attributes":{"icon":"fa fa-rss","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-edit","url":"/blog/bContent/add"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"68","parentId":"49","text":"发布文章"},{"attributes":{"icon":"fa fa-file-image-o","url":"blog/bContent"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"50","parentId":"49","text":"文章列表"}],"hasChildren":true,"hasParent":false,"id":"49","parentId":"0","text":"博客管理"},{"attributes":{"icon":"fa fa-print","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-flag","url":"activiti/process"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"96","parentId":"93","text":"流程管理"},{"attributes":{"icon":"","url":"activiti/task/todo"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"101","parentId":"93","text":"待办任务"},{"attr(String), 127.0.0.1(String), 2019-06-04 16:07:09.054(Timestamp)
2019-06-04 16:07:09 -<==    Updates: 1
2019-06-04 16:07:09 -请求地址 : http://localhost:8888/main
2019-06-04 16:07:09 -HTTP METHOD : GET
2019-06-04 16:07:09 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-04 16:07:09 -参数 : []
2019-06-04 16:07:09 -耗时 : 1
2019-06-04 16:07:09 -返回值 : main
2019-06-04 16:07:09 -请求地址 : http://localhost:8888/oa/notify/message
2019-06-04 16:07:09 -HTTP METHOD : GET
2019-06-04 16:07:09 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-06-04 16:07:09 -参数 : []
2019-06-04 16:07:09 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-06-04 16:07:09 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-06-04 16:07:09 -<==      Total: 0
2019-06-04 16:07:09 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-06-04 16:07:09 -==> Parameters: 1(Long), 0(String)
2019-06-04 16:07:09 -<==      Total: 1
2019-06-04 16:07:09 -耗时 : 3
2019-06-04 16:07:09 -返回值 : com.bootdo.common.utils.PageUtils@50f91794
2019-06-04 16:07:09 -请求地址 : http://localhost:8888/main
2019-06-04 16:07:09 -HTTP METHOD : GET
2019-06-04 16:07:09 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-04 16:07:09 -参数 : []
2019-06-04 16:07:09 -耗时 : 0
2019-06-04 16:07:09 -返回值 : main
2019-06-04 16:07:10 -请求地址 : http://localhost:8888/xjbg/room/roomMng
2019-06-04 16:07:10 -HTTP METHOD : GET
2019-06-04 16:07:10 -CLASS_METHOD : com.bootdo.xjbg.controller.RoomController.roomMng
2019-06-04 16:07:10 -参数 : [{}]
2019-06-04 16:07:10 -==>  Preparing: select `id`,`room_no`,`room_type`,`floor`,`room_state`,`price`,`create_time`,`update_time`,`create_user`,`update_user` from xjbg_room 
2019-06-04 16:07:10 -==> Parameters: 
2019-06-04 16:07:10 -<==      Total: 8
2019-06-04 16:07:10 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 16:07:10 -==> Parameters: room_type(String)
2019-06-04 16:07:10 -<==      Total: 7
2019-06-04 16:07:10 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 16:07:10 -==> Parameters: floor(String)
2019-06-04 16:07:10 -<==      Total: 5
2019-06-04 16:07:10 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 16:07:10 -==> Parameters: room_state(String)
2019-06-04 16:07:10 -<==      Total: 2
2019-06-04 16:07:10 -==>  Preparing: select * from sys_user 
2019-06-04 16:07:10 -==> Parameters: 
2019-06-04 16:07:10 -<==      Total: 11
2019-06-04 16:07:10 -耗时 : 7
2019-06-04 16:07:10 -返回值 : xjbg/room/roomMng
2019-06-04 16:07:11 -请求地址 : http://localhost:8888/xjbg/room/operation/1
2019-06-04 16:07:11 -HTTP METHOD : GET
2019-06-04 16:07:11 -CLASS_METHOD : com.bootdo.xjbg.controller.RoomController.operation
2019-06-04 16:07:11 -参数 : [1, {}]
2019-06-04 16:07:11 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 16:07:11 -==> Parameters: room_type(String)
2019-06-04 16:07:11 -<==      Total: 7
2019-06-04 16:07:11 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 16:07:11 -==> Parameters: floor(String)
2019-06-04 16:07:11 -<==      Total: 5
2019-06-04 16:07:11 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 16:07:11 -==> Parameters: room_state(String)
2019-06-04 16:07:11 -<==      Total: 2
2019-06-04 16:07:11 -==>  Preparing: select * from sys_user 
2019-06-04 16:07:11 -==> Parameters: 
2019-06-04 16:07:11 -<==      Total: 11
2019-06-04 16:07:11 -==>  Preparing: select `id`,`product_name`,`purchase_price`,`selling_price`,`product_pic`,`create_time`,`create_user`,`update_time`,`update_user` from xjbg_product order by id desc 
2019-06-04 16:07:11 -==> Parameters: 
2019-06-04 16:07:11 -<==      Total: 5
2019-06-04 16:07:11 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 16:07:11 -==> Parameters: order_type(String)
2019-06-04 16:07:11 -<==      Total: 3
2019-06-04 16:07:11 -==>  Preparing: select `id`,`room_no`,`room_type`,`floor`,`room_state`,`price`,`create_time`,`update_time`,`create_user`,`update_user` from xjbg_room where id = ? 
2019-06-04 16:07:11 -==> Parameters: 1(Integer)
2019-06-04 16:07:11 -<==      Total: 1
2019-06-04 16:07:11 -耗时 : 18
2019-06-04 16:07:11 -返回值 : xjbg/room/operation
2019-06-04 16:08:50 -请求地址 : http://localhost:8888/index
2019-06-04 16:08:50 -HTTP METHOD : GET
2019-06-04 16:08:50 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-06-04 16:08:50 -参数 : [{}]
2019-06-04 16:08:50 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-06-04 16:08:50 -==> Parameters: 1(Long)
2019-06-04 16:08:50 -<==      Total: 34
2019-06-04 16:08:50 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-06-04 16:08:50 -==> Parameters: 144(Long)
2019-06-04 16:08:50 -<==      Total: 1
2019-06-04 16:08:50 -耗时 : 5
2019-06-04 16:08:50 -返回值 : index_v1
2019-06-04 16:08:50 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-04 16:08:50 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 5(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-commenting","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user","url":"/weixin/weixinUser"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"109","text":"用户管理"}],"hasChildren":true,"hasParent":false,"id":"109","parentId":"0","text":"微信管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","text":"基础管理"},{"attributes":{"icon":"fa fa-hotel","url":""},"checked":false,"children":[{"attributes":{"icon":"","url":"/xjbg/room/roomMng"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"105","text":"开房"},{"attributes":{"icon":"fa fa-bed","url":"/xjbg/room"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"106","parentId":"105","text":"房间管理"},{"attributes":{"icon":"","url":"/xjbg/product"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"105","text":"商品管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"欣吉宾馆"},{"attributes":{"icon":"fa fa-desktop"},"checked":false,"children":[{"attributes":{"icon":"fa fa-user","url":"sys/user/"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"6","parentId":"3","text":"用户管理"},{"attributes":{"icon":"fa fa-paw","url":"sys/role"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"7","parentId":"3","text":"角色管理"},{"attributes":{"icon":"fa fa-th-list","url":"sys/menu/"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"3","text":"系统菜单"},{"attributes":{"icon":"fa fa-users","url":"/system/sysDept"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"73","parentId":"3","text":"部门管理"}],"hasChildren":true,"hasParent":false,"id":"3","parentId":"0","text":"系统管理"},{"attributes":{"icon":"fa fa-gear","url":""},"checked":false,"children":[{"attributes":{"icon":"","url":"/swagger-ui.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"104","parentId":"77","text":"swagger"},{"attributes":{"icon":"fa fa-code","url":"common/generator"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"48","parentId":"77","text":"代码生成"},{"attributes":{"icon":"fa fa-hourglass-1","url":"common/job"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"72","parentId":"77","text":"计划任务"}],"hasChildren":true,"hasParent":false,"id":"77","parentId":"0","text":"系统工具"},{"attributes":{"icon":"fa fa-laptop","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-pencil-square","url":"oa/notify"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"85","parentId":"84","text":"通知公告"},{"attributes":{"icon":"fa fa-envelope-square","url":"oa/notify/selfNotify"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"90","parentId":"84","text":"我的通知"}],"hasChildren":true,"hasParent":false,"id":"84","parentId":"0","text":"办公管理"},{"attributes":{"icon":"fa fa-video-camera","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user","url":"sys/online"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"92","parentId":"91","text":"在线用户"},{"attributes":{"icon":"fa fa-warning","url":"common/log"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"27","parentId":"91","text":"系统日志"},{"attributes":{"icon":"fa fa-caret-square-o-right","url":"/druid/index.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"57","parentId":"91","text":"运行监控"}],"hasChildren":true,"hasParent":false,"id":"91","parentId":"0","text":"系统监控"},{"attributes":{"icon":"fa fa-rss","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-edit","url":"/blog/bContent/add"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"68","parentId":"49","text":"发布文章"},{"attributes":{"icon":"fa fa-file-image-o","url":"blog/bContent"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"50","parentId":"49","text":"文章列表"}],"hasChildren":true,"hasParent":false,"id":"49","parentId":"0","text":"博客管理"},{"attributes":{"icon":"fa fa-print","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-flag","url":"activiti/process"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"96","parentId":"93","text":"流程管理"},{"attributes":{"icon":"","url":"activiti/task/todo"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"101","parentId":"93","text":"待办任务"},{"attr(String), 127.0.0.1(String), 2019-06-04 16:08:50.785(Timestamp)
2019-06-04 16:08:50 -<==    Updates: 1
2019-06-04 16:08:50 -请求地址 : http://localhost:8888/main
2019-06-04 16:08:50 -HTTP METHOD : GET
2019-06-04 16:08:50 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-04 16:08:50 -参数 : []
2019-06-04 16:08:50 -耗时 : 0
2019-06-04 16:08:50 -返回值 : main
2019-06-04 16:08:50 -请求地址 : http://localhost:8888/oa/notify/message
2019-06-04 16:08:50 -HTTP METHOD : GET
2019-06-04 16:08:50 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-06-04 16:08:50 -参数 : []
2019-06-04 16:08:50 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-06-04 16:08:50 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-06-04 16:08:50 -<==      Total: 0
2019-06-04 16:08:50 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-06-04 16:08:50 -==> Parameters: 1(Long), 0(String)
2019-06-04 16:08:50 -<==      Total: 1
2019-06-04 16:08:50 -耗时 : 4
2019-06-04 16:08:50 -返回值 : com.bootdo.common.utils.PageUtils@14f61d47
2019-06-04 16:08:50 -请求地址 : http://localhost:8888/main
2019-06-04 16:08:50 -HTTP METHOD : GET
2019-06-04 16:08:50 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-04 16:08:50 -参数 : []
2019-06-04 16:08:50 -耗时 : 1
2019-06-04 16:08:50 -返回值 : main
2019-06-04 16:08:53 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-06-04 16:08:53 -==> Parameters: 1(Long)
2019-06-04 16:08:53 -<==      Total: 58
2019-06-04 16:08:53 -请求地址 : http://localhost:8888/xjbg/room/roomMng
2019-06-04 16:08:53 -HTTP METHOD : GET
2019-06-04 16:08:53 -CLASS_METHOD : com.bootdo.xjbg.controller.RoomController.roomMng
2019-06-04 16:08:53 -参数 : [{}]
2019-06-04 16:08:53 -==>  Preparing: select `id`,`room_no`,`room_type`,`floor`,`room_state`,`price`,`create_time`,`update_time`,`create_user`,`update_user` from xjbg_room 
2019-06-04 16:08:53 -==> Parameters: 
2019-06-04 16:08:53 -<==      Total: 8
2019-06-04 16:08:53 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 16:08:53 -==> Parameters: room_type(String)
2019-06-04 16:08:53 -<==      Total: 7
2019-06-04 16:08:53 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 16:08:53 -==> Parameters: floor(String)
2019-06-04 16:08:53 -<==      Total: 5
2019-06-04 16:08:53 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 16:08:53 -==> Parameters: room_state(String)
2019-06-04 16:08:53 -<==      Total: 2
2019-06-04 16:08:53 -==>  Preparing: select * from sys_user 
2019-06-04 16:08:53 -==> Parameters: 
2019-06-04 16:08:53 -<==      Total: 11
2019-06-04 16:08:53 -耗时 : 6
2019-06-04 16:08:53 -返回值 : xjbg/room/roomMng
2019-06-04 16:08:53 -请求地址 : http://localhost:8888/xjbg/room/operation/1
2019-06-04 16:08:53 -HTTP METHOD : GET
2019-06-04 16:08:53 -CLASS_METHOD : com.bootdo.xjbg.controller.RoomController.operation
2019-06-04 16:08:53 -参数 : [1, {}]
2019-06-04 16:08:53 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 16:08:53 -==> Parameters: room_type(String)
2019-06-04 16:08:53 -<==      Total: 7
2019-06-04 16:08:53 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 16:08:53 -==> Parameters: floor(String)
2019-06-04 16:08:53 -<==      Total: 5
2019-06-04 16:08:53 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 16:08:53 -==> Parameters: room_state(String)
2019-06-04 16:08:53 -<==      Total: 2
2019-06-04 16:08:53 -==>  Preparing: select * from sys_user 
2019-06-04 16:08:53 -==> Parameters: 
2019-06-04 16:08:53 -<==      Total: 11
2019-06-04 16:08:53 -==>  Preparing: select `id`,`product_name`,`purchase_price`,`selling_price`,`product_pic`,`create_time`,`create_user`,`update_time`,`update_user` from xjbg_product order by id desc 
2019-06-04 16:08:53 -==> Parameters: 
2019-06-04 16:08:53 -<==      Total: 5
2019-06-04 16:08:53 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 16:08:53 -==> Parameters: order_type(String)
2019-06-04 16:08:53 -<==      Total: 3
2019-06-04 16:08:53 -==>  Preparing: select `id`,`room_no`,`room_type`,`floor`,`room_state`,`price`,`create_time`,`update_time`,`create_user`,`update_user` from xjbg_room where id = ? 
2019-06-04 16:08:53 -==> Parameters: 1(Integer)
2019-06-04 16:08:53 -<==      Total: 1
2019-06-04 16:08:53 -耗时 : 17
2019-06-04 16:08:53 -返回值 : xjbg/room/operation
2019-06-04 16:12:16 -请求地址 : http://localhost:8888/index
2019-06-04 16:12:16 -HTTP METHOD : GET
2019-06-04 16:12:16 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-06-04 16:12:16 -参数 : [{}]
2019-06-04 16:12:16 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-06-04 16:12:16 -==> Parameters: 1(Long)
2019-06-04 16:12:16 -<==      Total: 34
2019-06-04 16:12:16 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-06-04 16:12:16 -==> Parameters: 144(Long)
2019-06-04 16:12:16 -<==      Total: 1
2019-06-04 16:12:16 -耗时 : 7
2019-06-04 16:12:16 -返回值 : index_v1
2019-06-04 16:12:16 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-04 16:12:16 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 7(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-commenting","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user","url":"/weixin/weixinUser"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"109","text":"用户管理"}],"hasChildren":true,"hasParent":false,"id":"109","parentId":"0","text":"微信管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","text":"基础管理"},{"attributes":{"icon":"fa fa-hotel","url":""},"checked":false,"children":[{"attributes":{"icon":"","url":"/xjbg/room/roomMng"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"105","text":"开房"},{"attributes":{"icon":"fa fa-bed","url":"/xjbg/room"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"106","parentId":"105","text":"房间管理"},{"attributes":{"icon":"","url":"/xjbg/product"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"105","text":"商品管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"欣吉宾馆"},{"attributes":{"icon":"fa fa-desktop"},"checked":false,"children":[{"attributes":{"icon":"fa fa-user","url":"sys/user/"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"6","parentId":"3","text":"用户管理"},{"attributes":{"icon":"fa fa-paw","url":"sys/role"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"7","parentId":"3","text":"角色管理"},{"attributes":{"icon":"fa fa-th-list","url":"sys/menu/"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"3","text":"系统菜单"},{"attributes":{"icon":"fa fa-users","url":"/system/sysDept"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"73","parentId":"3","text":"部门管理"}],"hasChildren":true,"hasParent":false,"id":"3","parentId":"0","text":"系统管理"},{"attributes":{"icon":"fa fa-gear","url":""},"checked":false,"children":[{"attributes":{"icon":"","url":"/swagger-ui.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"104","parentId":"77","text":"swagger"},{"attributes":{"icon":"fa fa-code","url":"common/generator"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"48","parentId":"77","text":"代码生成"},{"attributes":{"icon":"fa fa-hourglass-1","url":"common/job"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"72","parentId":"77","text":"计划任务"}],"hasChildren":true,"hasParent":false,"id":"77","parentId":"0","text":"系统工具"},{"attributes":{"icon":"fa fa-laptop","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-pencil-square","url":"oa/notify"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"85","parentId":"84","text":"通知公告"},{"attributes":{"icon":"fa fa-envelope-square","url":"oa/notify/selfNotify"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"90","parentId":"84","text":"我的通知"}],"hasChildren":true,"hasParent":false,"id":"84","parentId":"0","text":"办公管理"},{"attributes":{"icon":"fa fa-video-camera","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user","url":"sys/online"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"92","parentId":"91","text":"在线用户"},{"attributes":{"icon":"fa fa-warning","url":"common/log"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"27","parentId":"91","text":"系统日志"},{"attributes":{"icon":"fa fa-caret-square-o-right","url":"/druid/index.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"57","parentId":"91","text":"运行监控"}],"hasChildren":true,"hasParent":false,"id":"91","parentId":"0","text":"系统监控"},{"attributes":{"icon":"fa fa-rss","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-edit","url":"/blog/bContent/add"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"68","parentId":"49","text":"发布文章"},{"attributes":{"icon":"fa fa-file-image-o","url":"blog/bContent"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"50","parentId":"49","text":"文章列表"}],"hasChildren":true,"hasParent":false,"id":"49","parentId":"0","text":"博客管理"},{"attributes":{"icon":"fa fa-print","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-flag","url":"activiti/process"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"96","parentId":"93","text":"流程管理"},{"attributes":{"icon":"","url":"activiti/task/todo"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"101","parentId":"93","text":"待办任务"},{"attr(String), 127.0.0.1(String), 2019-06-04 16:12:16.812(Timestamp)
2019-06-04 16:12:16 -<==    Updates: 1
2019-06-04 16:12:16 -请求地址 : http://localhost:8888/main
2019-06-04 16:12:16 -HTTP METHOD : GET
2019-06-04 16:12:16 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-04 16:12:16 -参数 : []
2019-06-04 16:12:16 -耗时 : 0
2019-06-04 16:12:16 -返回值 : main
2019-06-04 16:12:17 -请求地址 : http://localhost:8888/oa/notify/message
2019-06-04 16:12:17 -HTTP METHOD : GET
2019-06-04 16:12:17 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-06-04 16:12:17 -参数 : []
2019-06-04 16:12:17 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-06-04 16:12:17 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-06-04 16:12:17 -<==      Total: 0
2019-06-04 16:12:17 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-06-04 16:12:17 -==> Parameters: 1(Long), 0(String)
2019-06-04 16:12:17 -<==      Total: 1
2019-06-04 16:12:17 -耗时 : 4
2019-06-04 16:12:17 -返回值 : com.bootdo.common.utils.PageUtils@77018a3c
2019-06-04 16:12:17 -请求地址 : http://localhost:8888/main
2019-06-04 16:12:17 -HTTP METHOD : GET
2019-06-04 16:12:17 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-04 16:12:17 -参数 : []
2019-06-04 16:12:17 -耗时 : 0
2019-06-04 16:12:17 -返回值 : main
2019-06-04 16:12:19 -请求地址 : http://localhost:8888/xjbg/room/roomMng
2019-06-04 16:12:19 -HTTP METHOD : GET
2019-06-04 16:12:19 -CLASS_METHOD : com.bootdo.xjbg.controller.RoomController.roomMng
2019-06-04 16:12:19 -参数 : [{}]
2019-06-04 16:12:19 -==>  Preparing: select `id`,`room_no`,`room_type`,`floor`,`room_state`,`price`,`create_time`,`update_time`,`create_user`,`update_user` from xjbg_room 
2019-06-04 16:12:19 -==> Parameters: 
2019-06-04 16:12:19 -<==      Total: 8
2019-06-04 16:12:19 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 16:12:19 -==> Parameters: room_type(String)
2019-06-04 16:12:19 -<==      Total: 7
2019-06-04 16:12:19 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 16:12:19 -==> Parameters: floor(String)
2019-06-04 16:12:19 -<==      Total: 5
2019-06-04 16:12:19 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 16:12:19 -==> Parameters: room_state(String)
2019-06-04 16:12:19 -<==      Total: 2
2019-06-04 16:12:19 -==>  Preparing: select * from sys_user 
2019-06-04 16:12:19 -==> Parameters: 
2019-06-04 16:12:19 -<==      Total: 11
2019-06-04 16:12:19 -耗时 : 10
2019-06-04 16:12:19 -返回值 : xjbg/room/roomMng
2019-06-04 16:12:20 -请求地址 : http://localhost:8888/xjbg/room/operation/1
2019-06-04 16:12:20 -HTTP METHOD : GET
2019-06-04 16:12:20 -CLASS_METHOD : com.bootdo.xjbg.controller.RoomController.operation
2019-06-04 16:12:20 -参数 : [1, {}]
2019-06-04 16:12:20 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 16:12:20 -==> Parameters: room_type(String)
2019-06-04 16:12:20 -<==      Total: 7
2019-06-04 16:12:20 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 16:12:20 -==> Parameters: floor(String)
2019-06-04 16:12:20 -<==      Total: 5
2019-06-04 16:12:20 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 16:12:20 -==> Parameters: room_state(String)
2019-06-04 16:12:20 -<==      Total: 2
2019-06-04 16:12:20 -==>  Preparing: select * from sys_user 
2019-06-04 16:12:20 -==> Parameters: 
2019-06-04 16:12:20 -<==      Total: 11
2019-06-04 16:12:20 -==>  Preparing: select `id`,`product_name`,`purchase_price`,`selling_price`,`product_pic`,`create_time`,`create_user`,`update_time`,`update_user` from xjbg_product order by id desc 
2019-06-04 16:12:20 -==> Parameters: 
2019-06-04 16:12:20 -<==      Total: 5
2019-06-04 16:12:20 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 16:12:20 -==> Parameters: order_type(String)
2019-06-04 16:12:20 -<==      Total: 3
2019-06-04 16:12:20 -==>  Preparing: select `id`,`room_no`,`room_type`,`floor`,`room_state`,`price`,`create_time`,`update_time`,`create_user`,`update_user` from xjbg_room where id = ? 
2019-06-04 16:12:20 -==> Parameters: 1(Integer)
2019-06-04 16:12:20 -<==      Total: 1
2019-06-04 16:12:20 -耗时 : 12
2019-06-04 16:12:20 -返回值 : xjbg/room/operation
2019-06-04 16:12:35 -请求地址 : http://localhost:8888/index
2019-06-04 16:12:35 -HTTP METHOD : GET
2019-06-04 16:12:35 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-06-04 16:12:35 -参数 : [{}]
2019-06-04 16:12:35 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-06-04 16:12:35 -==> Parameters: 1(Long)
2019-06-04 16:12:35 -<==      Total: 34
2019-06-04 16:12:35 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-06-04 16:12:35 -==> Parameters: 144(Long)
2019-06-04 16:12:35 -<==      Total: 1
2019-06-04 16:12:35 -耗时 : 5
2019-06-04 16:12:35 -返回值 : index_v1
2019-06-04 16:12:35 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-04 16:12:35 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 5(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-commenting","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user","url":"/weixin/weixinUser"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"109","text":"用户管理"}],"hasChildren":true,"hasParent":false,"id":"109","parentId":"0","text":"微信管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","text":"基础管理"},{"attributes":{"icon":"fa fa-hotel","url":""},"checked":false,"children":[{"attributes":{"icon":"","url":"/xjbg/room/roomMng"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"105","text":"开房"},{"attributes":{"icon":"fa fa-bed","url":"/xjbg/room"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"106","parentId":"105","text":"房间管理"},{"attributes":{"icon":"","url":"/xjbg/product"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"105","text":"商品管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"欣吉宾馆"},{"attributes":{"icon":"fa fa-desktop"},"checked":false,"children":[{"attributes":{"icon":"fa fa-user","url":"sys/user/"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"6","parentId":"3","text":"用户管理"},{"attributes":{"icon":"fa fa-paw","url":"sys/role"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"7","parentId":"3","text":"角色管理"},{"attributes":{"icon":"fa fa-th-list","url":"sys/menu/"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"3","text":"系统菜单"},{"attributes":{"icon":"fa fa-users","url":"/system/sysDept"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"73","parentId":"3","text":"部门管理"}],"hasChildren":true,"hasParent":false,"id":"3","parentId":"0","text":"系统管理"},{"attributes":{"icon":"fa fa-gear","url":""},"checked":false,"children":[{"attributes":{"icon":"","url":"/swagger-ui.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"104","parentId":"77","text":"swagger"},{"attributes":{"icon":"fa fa-code","url":"common/generator"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"48","parentId":"77","text":"代码生成"},{"attributes":{"icon":"fa fa-hourglass-1","url":"common/job"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"72","parentId":"77","text":"计划任务"}],"hasChildren":true,"hasParent":false,"id":"77","parentId":"0","text":"系统工具"},{"attributes":{"icon":"fa fa-laptop","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-pencil-square","url":"oa/notify"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"85","parentId":"84","text":"通知公告"},{"attributes":{"icon":"fa fa-envelope-square","url":"oa/notify/selfNotify"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"90","parentId":"84","text":"我的通知"}],"hasChildren":true,"hasParent":false,"id":"84","parentId":"0","text":"办公管理"},{"attributes":{"icon":"fa fa-video-camera","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user","url":"sys/online"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"92","parentId":"91","text":"在线用户"},{"attributes":{"icon":"fa fa-warning","url":"common/log"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"27","parentId":"91","text":"系统日志"},{"attributes":{"icon":"fa fa-caret-square-o-right","url":"/druid/index.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"57","parentId":"91","text":"运行监控"}],"hasChildren":true,"hasParent":false,"id":"91","parentId":"0","text":"系统监控"},{"attributes":{"icon":"fa fa-rss","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-edit","url":"/blog/bContent/add"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"68","parentId":"49","text":"发布文章"},{"attributes":{"icon":"fa fa-file-image-o","url":"blog/bContent"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"50","parentId":"49","text":"文章列表"}],"hasChildren":true,"hasParent":false,"id":"49","parentId":"0","text":"博客管理"},{"attributes":{"icon":"fa fa-print","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-flag","url":"activiti/process"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"96","parentId":"93","text":"流程管理"},{"attributes":{"icon":"","url":"activiti/task/todo"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"101","parentId":"93","text":"待办任务"},{"attr(String), 127.0.0.1(String), 2019-06-04 16:12:35.503(Timestamp)
2019-06-04 16:12:35 -请求地址 : http://localhost:8888/main
2019-06-04 16:12:35 -HTTP METHOD : GET
2019-06-04 16:12:35 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-04 16:12:35 -参数 : []
2019-06-04 16:12:35 -耗时 : 1
2019-06-04 16:12:35 -返回值 : main
2019-06-04 16:12:35 -<==    Updates: 1
2019-06-04 16:12:35 -请求地址 : http://localhost:8888/oa/notify/message
2019-06-04 16:12:35 -HTTP METHOD : GET
2019-06-04 16:12:35 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-06-04 16:12:35 -参数 : []
2019-06-04 16:12:35 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-06-04 16:12:35 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-06-04 16:12:35 -<==      Total: 0
2019-06-04 16:12:35 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-06-04 16:12:35 -==> Parameters: 1(Long), 0(String)
2019-06-04 16:12:35 -<==      Total: 1
2019-06-04 16:12:35 -耗时 : 4
2019-06-04 16:12:35 -返回值 : com.bootdo.common.utils.PageUtils@3832f122
2019-06-04 16:12:35 -请求地址 : http://localhost:8888/main
2019-06-04 16:12:35 -HTTP METHOD : GET
2019-06-04 16:12:35 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-04 16:12:35 -参数 : []
2019-06-04 16:12:35 -耗时 : 1
2019-06-04 16:12:35 -返回值 : main
2019-06-04 16:12:37 -请求地址 : http://localhost:8888/xjbg/room/roomMng
2019-06-04 16:12:37 -HTTP METHOD : GET
2019-06-04 16:12:37 -CLASS_METHOD : com.bootdo.xjbg.controller.RoomController.roomMng
2019-06-04 16:12:37 -参数 : [{}]
2019-06-04 16:12:37 -==>  Preparing: select `id`,`room_no`,`room_type`,`floor`,`room_state`,`price`,`create_time`,`update_time`,`create_user`,`update_user` from xjbg_room 
2019-06-04 16:12:37 -==> Parameters: 
2019-06-04 16:12:37 -<==      Total: 8
2019-06-04 16:12:37 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 16:12:37 -==> Parameters: room_type(String)
2019-06-04 16:12:37 -<==      Total: 7
2019-06-04 16:12:37 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 16:12:37 -==> Parameters: floor(String)
2019-06-04 16:12:37 -<==      Total: 5
2019-06-04 16:12:37 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 16:12:37 -==> Parameters: room_state(String)
2019-06-04 16:12:37 -<==      Total: 2
2019-06-04 16:12:37 -==>  Preparing: select * from sys_user 
2019-06-04 16:12:37 -==> Parameters: 
2019-06-04 16:12:37 -<==      Total: 11
2019-06-04 16:12:37 -耗时 : 8
2019-06-04 16:12:37 -返回值 : xjbg/room/roomMng
2019-06-04 16:12:37 -请求地址 : http://localhost:8888/xjbg/room/operation/1
2019-06-04 16:12:37 -HTTP METHOD : GET
2019-06-04 16:12:37 -CLASS_METHOD : com.bootdo.xjbg.controller.RoomController.operation
2019-06-04 16:12:37 -参数 : [1, {}]
2019-06-04 16:12:37 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 16:12:37 -==> Parameters: room_type(String)
2019-06-04 16:12:37 -<==      Total: 7
2019-06-04 16:12:37 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 16:12:37 -==> Parameters: floor(String)
2019-06-04 16:12:37 -<==      Total: 5
2019-06-04 16:12:37 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 16:12:37 -==> Parameters: room_state(String)
2019-06-04 16:12:37 -<==      Total: 2
2019-06-04 16:12:37 -==>  Preparing: select * from sys_user 
2019-06-04 16:12:37 -==> Parameters: 
2019-06-04 16:12:37 -<==      Total: 11
2019-06-04 16:12:37 -==>  Preparing: select `id`,`product_name`,`purchase_price`,`selling_price`,`product_pic`,`create_time`,`create_user`,`update_time`,`update_user` from xjbg_product order by id desc 
2019-06-04 16:12:37 -==> Parameters: 
2019-06-04 16:12:37 -<==      Total: 5
2019-06-04 16:12:37 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 16:12:37 -==> Parameters: order_type(String)
2019-06-04 16:12:37 -<==      Total: 3
2019-06-04 16:12:37 -==>  Preparing: select `id`,`room_no`,`room_type`,`floor`,`room_state`,`price`,`create_time`,`update_time`,`create_user`,`update_user` from xjbg_room where id = ? 
2019-06-04 16:12:37 -==> Parameters: 1(Integer)
2019-06-04 16:12:37 -<==      Total: 1
2019-06-04 16:12:37 -耗时 : 15
2019-06-04 16:12:37 -返回值 : xjbg/room/operation
2019-06-04 16:12:54 -请求地址 : http://localhost:8888/index
2019-06-04 16:12:54 -HTTP METHOD : GET
2019-06-04 16:12:54 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-06-04 16:12:54 -参数 : [{}]
2019-06-04 16:12:54 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-06-04 16:12:54 -==> Parameters: 1(Long)
2019-06-04 16:12:54 -<==      Total: 34
2019-06-04 16:12:54 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-06-04 16:12:54 -==> Parameters: 144(Long)
2019-06-04 16:12:54 -<==      Total: 1
2019-06-04 16:12:54 -耗时 : 5
2019-06-04 16:12:54 -返回值 : index_v1
2019-06-04 16:12:54 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-04 16:12:54 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 5(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-commenting","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user","url":"/weixin/weixinUser"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"109","text":"用户管理"}],"hasChildren":true,"hasParent":false,"id":"109","parentId":"0","text":"微信管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","text":"基础管理"},{"attributes":{"icon":"fa fa-hotel","url":""},"checked":false,"children":[{"attributes":{"icon":"","url":"/xjbg/room/roomMng"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"105","text":"开房"},{"attributes":{"icon":"fa fa-bed","url":"/xjbg/room"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"106","parentId":"105","text":"房间管理"},{"attributes":{"icon":"","url":"/xjbg/product"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"105","text":"商品管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"欣吉宾馆"},{"attributes":{"icon":"fa fa-desktop"},"checked":false,"children":[{"attributes":{"icon":"fa fa-user","url":"sys/user/"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"6","parentId":"3","text":"用户管理"},{"attributes":{"icon":"fa fa-paw","url":"sys/role"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"7","parentId":"3","text":"角色管理"},{"attributes":{"icon":"fa fa-th-list","url":"sys/menu/"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"3","text":"系统菜单"},{"attributes":{"icon":"fa fa-users","url":"/system/sysDept"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"73","parentId":"3","text":"部门管理"}],"hasChildren":true,"hasParent":false,"id":"3","parentId":"0","text":"系统管理"},{"attributes":{"icon":"fa fa-gear","url":""},"checked":false,"children":[{"attributes":{"icon":"","url":"/swagger-ui.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"104","parentId":"77","text":"swagger"},{"attributes":{"icon":"fa fa-code","url":"common/generator"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"48","parentId":"77","text":"代码生成"},{"attributes":{"icon":"fa fa-hourglass-1","url":"common/job"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"72","parentId":"77","text":"计划任务"}],"hasChildren":true,"hasParent":false,"id":"77","parentId":"0","text":"系统工具"},{"attributes":{"icon":"fa fa-laptop","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-pencil-square","url":"oa/notify"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"85","parentId":"84","text":"通知公告"},{"attributes":{"icon":"fa fa-envelope-square","url":"oa/notify/selfNotify"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"90","parentId":"84","text":"我的通知"}],"hasChildren":true,"hasParent":false,"id":"84","parentId":"0","text":"办公管理"},{"attributes":{"icon":"fa fa-video-camera","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user","url":"sys/online"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"92","parentId":"91","text":"在线用户"},{"attributes":{"icon":"fa fa-warning","url":"common/log"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"27","parentId":"91","text":"系统日志"},{"attributes":{"icon":"fa fa-caret-square-o-right","url":"/druid/index.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"57","parentId":"91","text":"运行监控"}],"hasChildren":true,"hasParent":false,"id":"91","parentId":"0","text":"系统监控"},{"attributes":{"icon":"fa fa-rss","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-edit","url":"/blog/bContent/add"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"68","parentId":"49","text":"发布文章"},{"attributes":{"icon":"fa fa-file-image-o","url":"blog/bContent"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"50","parentId":"49","text":"文章列表"}],"hasChildren":true,"hasParent":false,"id":"49","parentId":"0","text":"博客管理"},{"attributes":{"icon":"fa fa-print","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-flag","url":"activiti/process"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"96","parentId":"93","text":"流程管理"},{"attributes":{"icon":"","url":"activiti/task/todo"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"101","parentId":"93","text":"待办任务"},{"attr(String), 127.0.0.1(String), 2019-06-04 16:12:54.845(Timestamp)
2019-06-04 16:12:54 -请求地址 : http://localhost:8888/main
2019-06-04 16:12:54 -HTTP METHOD : GET
2019-06-04 16:12:54 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-04 16:12:54 -参数 : []
2019-06-04 16:12:54 -耗时 : 0
2019-06-04 16:12:54 -返回值 : main
2019-06-04 16:12:54 -<==    Updates: 1
2019-06-04 16:12:55 -请求地址 : http://localhost:8888/oa/notify/message
2019-06-04 16:12:55 -HTTP METHOD : GET
2019-06-04 16:12:55 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-06-04 16:12:55 -参数 : []
2019-06-04 16:12:55 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-06-04 16:12:55 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-06-04 16:12:55 -<==      Total: 0
2019-06-04 16:12:55 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-06-04 16:12:55 -==> Parameters: 1(Long), 0(String)
2019-06-04 16:12:55 -<==      Total: 1
2019-06-04 16:12:55 -耗时 : 4
2019-06-04 16:12:55 -返回值 : com.bootdo.common.utils.PageUtils@11a6b1ed
2019-06-04 16:12:55 -请求地址 : http://localhost:8888/main
2019-06-04 16:12:55 -HTTP METHOD : GET
2019-06-04 16:12:55 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-04 16:12:55 -参数 : []
2019-06-04 16:12:55 -耗时 : 0
2019-06-04 16:12:55 -返回值 : main
2019-06-04 16:12:55 -请求地址 : http://localhost:8888/xjbg/room/roomMng
2019-06-04 16:12:55 -HTTP METHOD : GET
2019-06-04 16:12:55 -CLASS_METHOD : com.bootdo.xjbg.controller.RoomController.roomMng
2019-06-04 16:12:55 -参数 : [{}]
2019-06-04 16:12:55 -==>  Preparing: select `id`,`room_no`,`room_type`,`floor`,`room_state`,`price`,`create_time`,`update_time`,`create_user`,`update_user` from xjbg_room 
2019-06-04 16:12:55 -==> Parameters: 
2019-06-04 16:12:55 -<==      Total: 8
2019-06-04 16:12:55 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 16:12:55 -==> Parameters: room_type(String)
2019-06-04 16:12:55 -<==      Total: 7
2019-06-04 16:12:55 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 16:12:55 -==> Parameters: floor(String)
2019-06-04 16:12:55 -<==      Total: 5
2019-06-04 16:12:55 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 16:12:55 -==> Parameters: room_state(String)
2019-06-04 16:12:55 -<==      Total: 2
2019-06-04 16:12:55 -==>  Preparing: select * from sys_user 
2019-06-04 16:12:55 -==> Parameters: 
2019-06-04 16:12:55 -<==      Total: 11
2019-06-04 16:12:55 -耗时 : 8
2019-06-04 16:12:55 -返回值 : xjbg/room/roomMng
2019-06-04 16:12:56 -请求地址 : http://localhost:8888/xjbg/room/operation/1
2019-06-04 16:12:56 -HTTP METHOD : GET
2019-06-04 16:12:56 -CLASS_METHOD : com.bootdo.xjbg.controller.RoomController.operation
2019-06-04 16:12:56 -参数 : [1, {}]
2019-06-04 16:12:56 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 16:12:56 -==> Parameters: room_type(String)
2019-06-04 16:12:56 -<==      Total: 7
2019-06-04 16:12:56 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 16:12:56 -==> Parameters: floor(String)
2019-06-04 16:12:56 -<==      Total: 5
2019-06-04 16:12:56 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 16:12:56 -==> Parameters: room_state(String)
2019-06-04 16:12:56 -<==      Total: 2
2019-06-04 16:12:56 -==>  Preparing: select * from sys_user 
2019-06-04 16:12:56 -==> Parameters: 
2019-06-04 16:12:56 -<==      Total: 11
2019-06-04 16:12:56 -==>  Preparing: select `id`,`product_name`,`purchase_price`,`selling_price`,`product_pic`,`create_time`,`create_user`,`update_time`,`update_user` from xjbg_product order by id desc 
2019-06-04 16:12:56 -==> Parameters: 
2019-06-04 16:12:56 -<==      Total: 5
2019-06-04 16:12:56 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 16:12:56 -==> Parameters: order_type(String)
2019-06-04 16:12:56 -<==      Total: 3
2019-06-04 16:12:56 -==>  Preparing: select `id`,`room_no`,`room_type`,`floor`,`room_state`,`price`,`create_time`,`update_time`,`create_user`,`update_user` from xjbg_room where id = ? 
2019-06-04 16:12:56 -==> Parameters: 1(Integer)
2019-06-04 16:12:56 -<==      Total: 1
2019-06-04 16:12:56 -耗时 : 11
2019-06-04 16:12:56 -返回值 : xjbg/room/operation
2019-06-04 16:13:02 -Starting BootdoApplication on LAPTOP-ELP5M68R with PID 4768 (D:\workspace\bootdo\bootdo\target\classes started by Lenovo in D:\workspace\bootdo\bootdo)
2019-06-04 16:13:02 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-06-04 16:13:02 -The following profiles are active: dev
2019-06-04 16:13:02 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@3574803e: startup date [Tue Jun 04 16:13:02 CST 2019]; root of context hierarchy
2019-06-04 16:13:04 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-06-04 16:13:05 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$7922bd80] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-04 16:13:05 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$6b7bec27] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-04 16:13:05 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-04 16:13:05 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-04 16:13:05 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-04 16:13:05 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-06-04 16:13:05 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-06-04 16:13:05 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-04 16:13:05 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-04 16:13:05 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-04 16:13:05 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-04 16:13:06 -Tomcat initialized with port(s): 8888 (http)
2019-06-04 16:13:06 -Initializing ProtocolHandler ["http-nio-8888"]
2019-06-04 16:13:06 -Starting service [Tomcat]
2019-06-04 16:13:06 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-06-04 16:13:06 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [F:\yff\jdk1.8\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;D:\app\Lenovo\product\11.2.0\dbhome_1\bin;\bin;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\iCLS\;C:\Program Files\Intel\Intel(R) Management Engine Components\iCLS\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;F:\yff\jdk1.8\BIN;D:\Program Files\develop\apache-maven-3.3.9\BIN;D:\Program Files\matlab\v81\runtime\win64;D:\Program Files\matlab\v81\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;F:\yff\redis64;D:\Program Files\Notepad++;D:\Program Files\mysql-5.7.24-winx64\BIN;D:\Program Files\matlab\v81\bin\win64;D:\Program Files\matlab\v81\runtime\win64;D:\Program Files\develop\SVN\bin;D:\Program Files\develop\apache-tomcat-8.5.8-ltcins-common-4280\bin;D:\Program Files\develop\apache-tomcat-8.5.8-ltcins-common-4080\bin;D:\Program Files\develop\zookeeper-3.4.10\BIN;D:\Program Files\develop\Git\cmd;C:\Users\Lenovo\AppData\Local\Microsoft\WindowsApps;C:\Users\Lenovo\AppData\Local\GitHubDesktop\bin;.]
2019-06-04 16:13:06 -Initializing Spring embedded WebApplicationContext
2019-06-04 16:13:06 -Root WebApplicationContext: initialization completed in 3858 ms
2019-06-04 16:13:06 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-06-04 16:13:06 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-06-04 16:13:06 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-06-04 16:13:06 -Mapping filter: 'requestContextFilter' to: [/*]
2019-06-04 16:13:06 -Filter xssFilter was not registered (disabled)
2019-06-04 16:13:06 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-06-04 16:13:06 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-06-04 16:13:06 -Servlet statViewServlet mapped to [/druid/*]
2019-06-04 16:13:06 -Servlet dispatcherServlet mapped to [/]
2019-06-04 16:13:07 -{dataSource-1} inited
2019-06-04 16:13:07 -ProcessEngine default created
2019-06-04 16:13:08 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@3574803e: startup date [Tue Jun 04 16:13:02 CST 2019]; root of context hierarchy
2019-06-04 16:13:08 -Using default implementation for ThreadExecutor
2019-06-04 16:13:08 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-06-04 16:13:08 -Quartz Scheduler v.2.2.1 created.
2019-06-04 16:13:08 -RAMJobStore initialized.
2019-06-04 16:13:08 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-06-04 16:13:08 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-06-04 16:13:08 -Quartz scheduler version: 2.2.1
2019-06-04 16:13:08 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@153e5886
2019-06-04 16:13:08 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-06-04 16:13:08 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-06-04 16:13:09 -Mapped "{[/activiti/model/{id}],methods=[DELETE]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.ModelController.remove(java.lang.String)
2019-06-04 16:13:09 -Mapped "{[/activiti/model/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.activiti.controller.ModelController.list(int,int)
2019-06-04 16:13:09 -Mapped "{[/activiti/model/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.ModelController.batchRemove(java.lang.String[])
2019-06-04 16:13:09 -Mapped "{[/activiti/model],methods=[GET]}" onto org.springframework.web.servlet.ModelAndView com.bootdo.activiti.controller.ModelController.model()
2019-06-04 16:13:09 -Mapped "{[/activiti/model/add]}" onto public void com.bootdo.activiti.controller.ModelController.newModel(javax.servlet.http.HttpServletResponse) throws java.io.UnsupportedEncodingException
2019-06-04 16:13:09 -Mapped "{[/activiti/model/{modelId}/save],methods=[PUT]}" onto public void com.bootdo.activiti.controller.ModelController.saveModel(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2019-06-04 16:13:09 -Mapped "{[/activiti/model/export/{id}],methods=[GET]}" onto public void com.bootdo.activiti.controller.ModelController.exportToXml(java.lang.String,javax.servlet.http.HttpServletResponse)
2019-06-04 16:13:09 -Mapped "{[/activiti/model/{modelId}/json],methods=[GET]}" onto public com.fasterxml.jackson.databind.node.ObjectNode com.bootdo.activiti.controller.ModelController.getEditorJson(java.lang.String)
2019-06-04 16:13:09 -Mapped "{[/activiti/editor/stencilset],methods=[GET],produces=[application/json;charset=utf-8]}" onto public java.lang.String com.bootdo.activiti.controller.ModelController.getStencilset()
2019-06-04 16:13:09 -Mapped "{[/activiti/model/deploy/{id}],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.ModelController.deploy(java.lang.String) throws java.lang.Exception
2019-06-04 16:13:09 -Mapped "{[/activiti/model/edit/{id}],methods=[GET]}" onto public void com.bootdo.activiti.controller.ModelController.edit(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-06-04 16:13:09 -Mapped "{[/activiti/process/add],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.activiti.controller.ProcessController.add()
2019-06-04 16:13:09 -Mapped "{[/activiti/process/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.ProcessController.remove(java.lang.String)
2019-06-04 16:13:09 -Mapped "{[/activiti/process/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.activiti.controller.ProcessController.list(int,int)
2019-06-04 16:13:09 -Mapped "{[/activiti/process/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.ProcessController.batchRemove(java.lang.String[])
2019-06-04 16:13:09 -Mapped "{[/activiti/process],methods=[GET]}" onto org.springframework.web.servlet.ModelAndView com.bootdo.activiti.controller.ProcessController.process()
2019-06-04 16:13:09 -Mapped "{[/activiti/process/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.ProcessController.deploy(java.lang.String,java.lang.String,org.springframework.web.multipart.MultipartFile)
2019-06-04 16:13:09 -Mapped "{[/activiti/process/convertToModel/{procDefId}]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.ProcessController.convertToModel(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes) throws java.io.UnsupportedEncodingException,javax.xml.stream.XMLStreamException
2019-06-04 16:13:09 -Mapped "{[/activiti/process/resource/read/{xml}/{id}]}" onto public void com.bootdo.activiti.controller.ProcessController.resourceRead(java.lang.String,java.lang.String,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-06-04 16:13:09 -Mapped "{[/act/salary/form],methods=[GET]}" onto java.lang.String com.bootdo.activiti.controller.SalaryController.add()
2019-06-04 16:13:09 -Mapped "{[/act/salary/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.SalaryController.remove(java.lang.String)
2019-06-04 16:13:09 -Mapped "{[/act/salary/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.SalaryController.remove(java.lang.String[])
2019-06-04 16:13:09 -Mapped "{[/act/salary/update]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.SalaryController.update(com.bootdo.activiti.domain.SalaryDO)
2019-06-04 16:13:09 -Mapped "{[/act/salary/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.activiti.controller.SalaryController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-04 16:13:09 -Mapped "{[/act/salary/form/{taskId}],methods=[GET]}" onto java.lang.String com.bootdo.activiti.controller.SalaryController.edit(java.lang.String,org.springframework.ui.Model)
2019-06-04 16:13:09 -Mapped "{[/act/salary],methods=[GET]}" onto java.lang.String com.bootdo.activiti.controller.SalaryController.Salary()
2019-06-04 16:13:09 -Mapped "{[/act/salary/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.SalaryController.saveOrUpdate(com.bootdo.activiti.domain.SalaryDO)
2019-06-04 16:13:09 -Mapped "{[/activiti/task/form/{procDefId}/{taskId}],methods=[GET]}" onto public void com.bootdo.activiti.controller.TaskController.form(java.lang.String,java.lang.String,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-06-04 16:13:09 -Mapped "{[/activiti/task/gotoList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.activiti.controller.TaskController.list(int,int)
2019-06-04 16:13:09 -Mapped "{[/activiti/task/form/{procDefId}],methods=[GET]}" onto public void com.bootdo.activiti.controller.TaskController.startForm(java.lang.String,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-06-04 16:13:09 -Mapped "{[/activiti/task/trace/photo/{procDefId}/{execId}]}" onto public void com.bootdo.activiti.controller.TaskController.tracePhoto(java.lang.String,java.lang.String,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-06-04 16:13:09 -Mapped "{[/activiti/task/todo],methods=[GET]}" onto org.springframework.web.servlet.ModelAndView com.bootdo.activiti.controller.TaskController.todo()
2019-06-04 16:13:09 -Mapped "{[/activiti/task/todoList],methods=[GET]}" onto java.util.List<com.bootdo.activiti.vo.TaskVO> com.bootdo.activiti.controller.TaskController.todoList()
2019-06-04 16:13:09 -Mapped "{[/activiti/task/goto],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.activiti.controller.TaskController.gotoTask()
2019-06-04 16:13:09 -Mapped "{[/blog/open/post/{cid}],methods=[GET]}" onto java.lang.String com.bootdo.blog.controller.BlogController.post(java.lang.Long,org.springframework.ui.Model)
2019-06-04 16:13:09 -Mapped "{[/blog],methods=[GET]}" onto java.lang.String com.bootdo.blog.controller.BlogController.blog()
2019-06-04 16:13:09 -Mapped "{[/blog/open/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.blog.controller.BlogController.opentList(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-04 16:13:09 -Mapped "{[/blog/open/page/{categories}],methods=[GET]}" onto java.lang.String com.bootdo.blog.controller.BlogController.about(java.lang.String,org.springframework.ui.Model)
2019-06-04 16:13:09 -Mapped "{[/blog/bContent/add],methods=[GET]}" onto java.lang.String com.bootdo.blog.controller.ContentController.add()
2019-06-04 16:13:09 -Mapped "{[/blog/bContent/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.blog.controller.ContentController.remove(java.lang.Long)
2019-06-04 16:13:09 -Mapped "{[/blog/bContent/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.blog.controller.ContentController.remove(java.lang.Long[])
2019-06-04 16:13:09 -Mapped "{[/blog/bContent/update]}" onto public com.bootdo.common.utils.R com.bootdo.blog.controller.ContentController.update(com.bootdo.blog.domain.ContentDO)
2019-06-04 16:13:09 -Mapped "{[/blog/bContent/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.blog.controller.ContentController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-04 16:13:09 -Mapped "{[/blog/bContent/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.blog.controller.ContentController.save(com.bootdo.blog.domain.ContentDO)
2019-06-04 16:13:09 -Mapped "{[/blog/bContent],methods=[GET]}" onto java.lang.String com.bootdo.blog.controller.ContentController.bContent()
2019-06-04 16:13:09 -Mapped "{[/blog/bContent/edit/{cid}],methods=[GET]}" onto java.lang.String com.bootdo.blog.controller.ContentController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-04 16:13:09 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-06-04 16:13:09 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-06-04 16:13:09 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-06-04 16:13:09 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-06-04 16:13:09 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-04 16:13:09 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-06-04 16:13:09 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-06-04 16:13:09 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-04 16:13:09 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-06-04 16:13:09 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-06-04 16:13:09 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-06-04 16:13:09 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-06-04 16:13:09 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-06-04 16:13:09 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-06-04 16:13:09 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-06-04 16:13:09 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-04 16:13:09 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-06-04 16:13:09 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-06-04 16:13:09 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-04 16:13:09 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-06-04 16:13:09 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-06-04 16:13:09 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-04 16:13:09 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-06-04 16:13:09 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-06-04 16:13:09 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-06-04 16:13:09 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-06-04 16:13:09 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-06-04 16:13:09 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-06-04 16:13:09 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-06-04 16:13:09 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-06-04 16:13:09 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-06-04 16:13:09 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-04 16:13:09 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-06-04 16:13:09 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-06-04 16:13:09 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-04 16:13:09 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-06-04 16:13:09 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-06-04 16:13:09 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-06-04 16:13:09 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-06-04 16:13:09 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-04 16:13:09 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-06-04 16:13:09 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-06-04 16:13:09 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-06-04 16:13:09 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-06-04 16:13:09 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-06-04 16:13:09 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-06-04 16:13:09 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-06-04 16:13:09 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-06-04 16:13:09 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-04 16:13:09 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-06-04 16:13:09 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-06-04 16:13:09 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-04 16:13:09 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-06-04 16:13:09 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-06-04 16:13:09 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-04 16:13:09 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-06-04 16:13:09 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-06-04 16:13:09 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-06-04 16:13:09 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-06-04 16:13:09 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-06-04 16:13:09 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-06-04 16:13:09 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-06-04 16:13:09 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-04 16:13:09 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-06-04 16:13:09 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-06-04 16:13:09 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-06-04 16:13:09 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-06-04 16:13:09 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-06-04 16:13:09 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-06-04 16:13:09 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String)
2019-06-04 16:13:09 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-06-04 16:13:09 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-06-04 16:13:09 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-06-04 16:13:09 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-06-04 16:13:09 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-04 16:13:09 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-06-04 16:13:09 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-06-04 16:13:09 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-06-04 16:13:09 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-06-04 16:13:09 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-06-04 16:13:09 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-06-04 16:13:09 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-06-04 16:13:09 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-06-04 16:13:09 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-06-04 16:13:09 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-06-04 16:13:09 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-06-04 16:13:09 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-06-04 16:13:09 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-04 16:13:09 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-06-04 16:13:09 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-06-04 16:13:09 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-06-04 16:13:09 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-06-04 16:13:09 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-04 16:13:09 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-06-04 16:13:09 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-06-04 16:13:09 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-06-04 16:13:09 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-04 16:13:09 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-06-04 16:13:09 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-06-04 16:13:09 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-06-04 16:13:09 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-06-04 16:13:09 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-06-04 16:13:09 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-06-04 16:13:09 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-06-04 16:13:09 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-06-04 16:13:09 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-06-04 16:13:09 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-06-04 16:13:09 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-06-04 16:13:09 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-06-04 16:13:09 -Mapped "{[/wxServer],methods=[GET]}" onto public void org.weixin4j.spring.web.WeixinJieruController.get(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-06-04 16:13:09 -Mapped "{[/wxServer],methods=[POST]}" onto public void org.weixin4j.spring.web.WeixinJieruController.post(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-06-04 16:13:09 -Mapped "{[/weixin/weixinUser/add],methods=[GET]}" onto java.lang.String com.bootdo.weixin.controller.WeixinUserController.add()
2019-06-04 16:13:09 -Mapped "{[/weixin/weixinUser/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.weixin.controller.WeixinUserController.remove(java.lang.Long)
2019-06-04 16:13:09 -Mapped "{[/weixin/weixinUser/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.weixin.controller.WeixinUserController.remove(java.lang.Long[])
2019-06-04 16:13:09 -Mapped "{[/weixin/weixinUser/update]}" onto public com.bootdo.common.utils.R com.bootdo.weixin.controller.WeixinUserController.update(com.bootdo.weixin.domain.WeixinUserDO)
2019-06-04 16:13:09 -Mapped "{[/weixin/weixinUser/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.weixin.controller.WeixinUserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-04 16:13:09 -Mapped "{[/weixin/weixinUser/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.weixin.controller.WeixinUserController.save(com.bootdo.weixin.domain.WeixinUserDO)
2019-06-04 16:13:09 -Mapped "{[/weixin/weixinUser],methods=[GET]}" onto java.lang.String com.bootdo.weixin.controller.WeixinUserController.WeixinUser()
2019-06-04 16:13:09 -Mapped "{[/weixin/weixinUser/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.weixin.controller.WeixinUserController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-04 16:13:09 -Mapped "{[/xjbg/order/add],methods=[GET]}" onto java.lang.String com.bootdo.xjbg.controller.OrderController.add()
2019-06-04 16:13:09 -Mapped "{[/xjbg/order/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.xjbg.controller.OrderController.remove(java.lang.Long)
2019-06-04 16:13:09 -Mapped "{[/xjbg/order/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.xjbg.controller.OrderController.remove(java.lang.Long[])
2019-06-04 16:13:09 -Mapped "{[/xjbg/order/update]}" onto public com.bootdo.common.utils.R com.bootdo.xjbg.controller.OrderController.update(com.bootdo.xjbg.domain.OrderDO)
2019-06-04 16:13:09 -Mapped "{[/xjbg/order/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.xjbg.controller.OrderController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-04 16:13:09 -Mapped "{[/xjbg/order/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.xjbg.controller.OrderController.save(com.bootdo.xjbg.domain.OrderDO)
2019-06-04 16:13:09 -Mapped "{[/xjbg/order],methods=[GET]}" onto java.lang.String com.bootdo.xjbg.controller.OrderController.Order()
2019-06-04 16:13:09 -Mapped "{[/xjbg/order/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.xjbg.controller.OrderController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-04 16:13:09 -Mapped "{[/xjbg/orderItem/add],methods=[GET]}" onto java.lang.String com.bootdo.xjbg.controller.OrderItemController.add()
2019-06-04 16:13:09 -Mapped "{[/xjbg/orderItem/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.xjbg.controller.OrderItemController.remove(java.lang.Long)
2019-06-04 16:13:09 -Mapped "{[/xjbg/orderItem/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.xjbg.controller.OrderItemController.remove(java.lang.Long[])
2019-06-04 16:13:09 -Mapped "{[/xjbg/orderItem/update]}" onto public com.bootdo.common.utils.R com.bootdo.xjbg.controller.OrderItemController.update(com.bootdo.xjbg.domain.OrderItemDO)
2019-06-04 16:13:09 -Mapped "{[/xjbg/orderItem/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.xjbg.controller.OrderItemController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-04 16:13:09 -Mapped "{[/xjbg/orderItem/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.xjbg.controller.OrderItemController.save(com.bootdo.xjbg.domain.OrderItemDO)
2019-06-04 16:13:09 -Mapped "{[/xjbg/orderItem],methods=[GET]}" onto java.lang.String com.bootdo.xjbg.controller.OrderItemController.OrderItem()
2019-06-04 16:13:09 -Mapped "{[/xjbg/orderItem/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.xjbg.controller.OrderItemController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-04 16:13:09 -Mapped "{[/xjbg/product/add],methods=[GET]}" onto java.lang.String com.bootdo.xjbg.controller.ProductController.add()
2019-06-04 16:13:09 -Mapped "{[/xjbg/product/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.xjbg.controller.ProductController.remove(java.lang.Long)
2019-06-04 16:13:09 -Mapped "{[/xjbg/product/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.xjbg.controller.ProductController.remove(java.lang.Long[])
2019-06-04 16:13:09 -Mapped "{[/xjbg/product/update]}" onto public com.bootdo.common.utils.R com.bootdo.xjbg.controller.ProductController.update(com.bootdo.xjbg.domain.ProductDO,org.springframework.web.multipart.MultipartFile[])
2019-06-04 16:13:09 -Mapped "{[/xjbg/product/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.xjbg.controller.ProductController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-04 16:13:09 -Mapped "{[/xjbg/product/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.xjbg.controller.ProductController.save(com.bootdo.xjbg.domain.ProductDO,org.springframework.web.multipart.MultipartFile[])
2019-06-04 16:13:09 -Mapped "{[/xjbg/product],methods=[GET]}" onto java.lang.String com.bootdo.xjbg.controller.ProductController.Product()
2019-06-04 16:13:09 -Mapped "{[/xjbg/product/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.xjbg.controller.ProductController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-04 16:13:09 -Mapped "{[/xjbg/room/add],methods=[GET]}" onto java.lang.String com.bootdo.xjbg.controller.RoomController.add(org.springframework.ui.Model)
2019-06-04 16:13:09 -Mapped "{[/xjbg/room/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.xjbg.controller.RoomController.remove(java.lang.Integer[])
2019-06-04 16:13:09 -Mapped "{[/xjbg/room/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.xjbg.controller.RoomController.remove(java.lang.Integer)
2019-06-04 16:13:09 -Mapped "{[/xjbg/room/update]}" onto public com.bootdo.common.utils.R com.bootdo.xjbg.controller.RoomController.update(com.bootdo.xjbg.domain.RoomDO)
2019-06-04 16:13:09 -Mapped "{[/xjbg/room/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.xjbg.controller.RoomController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-04 16:13:09 -Mapped "{[/xjbg/room/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.xjbg.controller.RoomController.save(com.bootdo.xjbg.domain.RoomDO)
2019-06-04 16:13:09 -Mapped "{[/xjbg/room/operation/{roomId}],methods=[GET]}" onto java.lang.String com.bootdo.xjbg.controller.RoomController.operation(java.lang.Integer,org.springframework.ui.Model)
2019-06-04 16:13:09 -Mapped "{[/xjbg/room],methods=[GET]}" onto java.lang.String com.bootdo.xjbg.controller.RoomController.Room(org.springframework.ui.Model)
2019-06-04 16:13:09 -Mapped "{[/xjbg/room/roomMng],methods=[GET]}" onto java.lang.String com.bootdo.xjbg.controller.RoomController.roomMng(org.springframework.ui.Model)
2019-06-04 16:13:09 -Mapped "{[/xjbg/room/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.xjbg.controller.RoomController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-06-04 16:13:09 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-06-04 16:13:09 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-06-04 16:13:09 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-06-04 16:13:09 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-06-04 16:13:10 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-06-04 16:13:10 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-06-04 16:13:10 -Initializing ExecutorService  'brokerChannelExecutor'
2019-06-04 16:13:10 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-06-04 16:13:10 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@3574803e: startup date [Tue Jun 04 16:13:02 CST 2019]; root of context hierarchy
2019-06-04 16:13:10 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-06-04 16:13:10 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-06-04 16:13:10 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-06-04 16:13:10 -Mapped URL path [/productPic/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-06-04 16:13:10 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-06-04 16:13:10 -[THYMELEAF][restartedMain] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-06-04 16:13:11 -LiveReload server is running on port 35729
2019-06-04 16:13:11 -Registering beans for JMX exposure on startup
2019-06-04 16:13:11 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-06-04 16:13:11 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-06-04 16:13:11 -Starting beans in phase 2147483647
2019-06-04 16:13:11 -Context refreshed
2019-06-04 16:13:11 -Found 1 custom documentation plugin(s)
2019-06-04 16:13:11 -Scanning for api listing references
2019-06-04 16:13:11 -Generating unique operation named: removeUsingPOST_1
2019-06-04 16:13:11 -Generating unique operation named: addUsingGET_1
2019-06-04 16:13:11 -Generating unique operation named: editUsingGET_1
2019-06-04 16:13:11 -Generating unique operation named: listUsingGET_1
2019-06-04 16:13:11 -Generating unique operation named: removeUsingPOST_2
2019-06-04 16:13:11 -Generating unique operation named: removeUsingPOST_3
2019-06-04 16:13:11 -Generating unique operation named: saveUsingPOST_1
2019-06-04 16:13:11 -Generating unique operation named: updateUsingGET_1
2019-06-04 16:13:11 -Generating unique operation named: updateUsingHEAD_1
2019-06-04 16:13:11 -Generating unique operation named: updateUsingPOST_1
2019-06-04 16:13:11 -Generating unique operation named: updateUsingPUT_1
2019-06-04 16:13:11 -Generating unique operation named: updateUsingPATCH_1
2019-06-04 16:13:11 -Generating unique operation named: updateUsingDELETE_1
2019-06-04 16:13:11 -Generating unique operation named: updateUsingOPTIONS_1
2019-06-04 16:13:11 -Generating unique operation named: updateUsingTRACE_1
2019-06-04 16:13:11 -Generating unique operation named: addUsingGET_2
2019-06-04 16:13:11 -Generating unique operation named: editUsingGET_2
2019-06-04 16:13:11 -Generating unique operation named: listUsingGET_2
2019-06-04 16:13:11 -Generating unique operation named: removeUsingPOST_4
2019-06-04 16:13:11 -Generating unique operation named: removeUsingPOST_5
2019-06-04 16:13:11 -Generating unique operation named: saveUsingPOST_2
2019-06-04 16:13:11 -Generating unique operation named: updateUsingGET_2
2019-06-04 16:13:11 -Generating unique operation named: updateUsingHEAD_2
2019-06-04 16:13:11 -Generating unique operation named: updateUsingPOST_2
2019-06-04 16:13:11 -Generating unique operation named: updateUsingPUT_2
2019-06-04 16:13:11 -Generating unique operation named: updateUsingPATCH_2
2019-06-04 16:13:11 -Generating unique operation named: updateUsingDELETE_2
2019-06-04 16:13:11 -Generating unique operation named: updateUsingOPTIONS_2
2019-06-04 16:13:11 -Generating unique operation named: updateUsingTRACE_2
2019-06-04 16:13:11 -Generating unique operation named: addUsingGET_3
2019-06-04 16:13:11 -Generating unique operation named: editUsingGET_3
2019-06-04 16:13:11 -Generating unique operation named: listUsingGET_3
2019-06-04 16:13:11 -Generating unique operation named: removeUsingPOST_6
2019-06-04 16:13:11 -Generating unique operation named: removeUsingPOST_7
2019-06-04 16:13:11 -Generating unique operation named: saveUsingPOST_3
2019-06-04 16:13:11 -Generating unique operation named: updateUsingGET_3
2019-06-04 16:13:12 -Generating unique operation named: updateUsingHEAD_3
2019-06-04 16:13:12 -Generating unique operation named: updateUsingPOST_3
2019-06-04 16:13:12 -Generating unique operation named: updateUsingPUT_3
2019-06-04 16:13:12 -Generating unique operation named: updateUsingPATCH_3
2019-06-04 16:13:12 -Generating unique operation named: updateUsingDELETE_3
2019-06-04 16:13:12 -Generating unique operation named: updateUsingOPTIONS_3
2019-06-04 16:13:12 -Generating unique operation named: updateUsingTRACE_3
2019-06-04 16:13:12 -Generating unique operation named: editUsingGET_4
2019-06-04 16:13:12 -Generating unique operation named: listUsingGET_4
2019-06-04 16:13:12 -Generating unique operation named: updateUsingPOST_4
2019-06-04 16:13:12 -Generating unique operation named: addUsingGET_4
2019-06-04 16:13:12 -Generating unique operation named: editUsingGET_5
2019-06-04 16:13:12 -Generating unique operation named: infoUsingGET_1
2019-06-04 16:13:12 -Generating unique operation named: infoUsingHEAD_1
2019-06-04 16:13:12 -Generating unique operation named: infoUsingPOST_1
2019-06-04 16:13:12 -Generating unique operation named: infoUsingPUT_1
2019-06-04 16:13:12 -Generating unique operation named: infoUsingPATCH_1
2019-06-04 16:13:12 -Generating unique operation named: infoUsingDELETE_1
2019-06-04 16:13:12 -Generating unique operation named: infoUsingOPTIONS_1
2019-06-04 16:13:12 -Generating unique operation named: infoUsingTRACE_1
2019-06-04 16:13:12 -Generating unique operation named: listUsingGET_5
2019-06-04 16:13:12 -Generating unique operation named: removeUsingPOST_8
2019-06-04 16:13:12 -Generating unique operation named: removeUsingPOST_9
2019-06-04 16:13:12 -Generating unique operation named: saveUsingPOST_4
2019-06-04 16:13:12 -Generating unique operation named: updateUsingPOST_5
2019-06-04 16:13:12 -Generating unique operation named: listUsingGET_6
2019-06-04 16:13:12 -Generating unique operation named: removeUsingPOST_10
2019-06-04 16:13:12 -Generating unique operation named: welcomeUsingGET_1
2019-06-04 16:13:12 -Generating unique operation named: addUsingGET_5
2019-06-04 16:13:12 -Generating unique operation named: editUsingGET_6
2019-06-04 16:13:12 -Generating unique operation named: listUsingGET_7
2019-06-04 16:13:12 -Generating unique operation named: removeUsingPOST_11
2019-06-04 16:13:12 -Generating unique operation named: saveUsingPOST_5
2019-06-04 16:13:12 -Generating unique operation named: treeUsingGET_1
2019-06-04 16:13:12 -Generating unique operation named: treeUsingGET_2
2019-06-04 16:13:12 -Generating unique operation named: updateUsingPOST_6
2019-06-04 16:13:12 -Generating unique operation named: batchRemoveUsingPOST_1
2019-06-04 16:13:12 -Generating unique operation named: editUsingGET_7
2019-06-04 16:13:12 -Generating unique operation named: listUsingGET_8
2019-06-04 16:13:12 -Generating unique operation named: addUsingGET_6
2019-06-04 16:13:12 -Generating unique operation named: editUsingGET_8
2019-06-04 16:13:12 -Generating unique operation named: listUsingGET_9
2019-06-04 16:13:12 -Generating unique operation named: removeUsingPOST_12
2019-06-04 16:13:12 -Generating unique operation named: removeUsingPOST_13
2019-06-04 16:13:12 -Generating unique operation named: saveUsingPOST_6
2019-06-04 16:13:12 -Generating unique operation named: updateUsingGET_4
2019-06-04 16:13:12 -Generating unique operation named: updateUsingHEAD_4
2019-06-04 16:13:12 -Generating unique operation named: updateUsingPOST_7
2019-06-04 16:13:12 -Generating unique operation named: updateUsingPUT_4
2019-06-04 16:13:12 -Generating unique operation named: updateUsingPATCH_4
2019-06-04 16:13:12 -Generating unique operation named: updateUsingDELETE_4
2019-06-04 16:13:12 -Generating unique operation named: updateUsingOPTIONS_4
2019-06-04 16:13:12 -Generating unique operation named: updateUsingTRACE_4
2019-06-04 16:13:12 -Generating unique operation named: addUsingGET_7
2019-06-04 16:13:12 -Generating unique operation named: editUsingGET_9
2019-06-04 16:13:12 -Generating unique operation named: listUsingGET_10
2019-06-04 16:13:12 -Generating unique operation named: removeUsingPOST_14
2019-06-04 16:13:12 -Generating unique operation named: removeUsingPOST_15
2019-06-04 16:13:12 -Generating unique operation named: saveUsingPOST_7
2019-06-04 16:13:12 -Generating unique operation named: updateUsingGET_5
2019-06-04 16:13:12 -Generating unique operation named: updateUsingHEAD_5
2019-06-04 16:13:12 -Generating unique operation named: updateUsingPOST_8
2019-06-04 16:13:12 -Generating unique operation named: updateUsingPUT_5
2019-06-04 16:13:12 -Generating unique operation named: updateUsingPATCH_5
2019-06-04 16:13:12 -Generating unique operation named: updateUsingDELETE_5
2019-06-04 16:13:12 -Generating unique operation named: updateUsingOPTIONS_5
2019-06-04 16:13:12 -Generating unique operation named: updateUsingTRACE_5
2019-06-04 16:13:12 -Generating unique operation named: addUsingGET_8
2019-06-04 16:13:12 -Generating unique operation named: editUsingGET_10
2019-06-04 16:13:12 -Generating unique operation named: listUsingGET_11
2019-06-04 16:13:12 -Generating unique operation named: removeUsingPOST_16
2019-06-04 16:13:12 -Generating unique operation named: removeUsingPOST_17
2019-06-04 16:13:12 -Generating unique operation named: saveUsingPOST_8
2019-06-04 16:13:12 -Generating unique operation named: updateUsingGET_6
2019-06-04 16:13:12 -Generating unique operation named: updateUsingHEAD_6
2019-06-04 16:13:12 -Generating unique operation named: updateUsingPOST_9
2019-06-04 16:13:12 -Generating unique operation named: updateUsingPUT_6
2019-06-04 16:13:12 -Generating unique operation named: updateUsingPATCH_6
2019-06-04 16:13:12 -Generating unique operation named: updateUsingDELETE_6
2019-06-04 16:13:12 -Generating unique operation named: updateUsingOPTIONS_6
2019-06-04 16:13:12 -Generating unique operation named: updateUsingTRACE_6
2019-06-04 16:13:12 -Generating unique operation named: addUsingGET_9
2019-06-04 16:13:12 -Generating unique operation named: batchRemoveUsingPOST_2
2019-06-04 16:13:12 -Generating unique operation named: deployUsingPOST_1
2019-06-04 16:13:12 -Generating unique operation named: listUsingGET_12
2019-06-04 16:13:12 -Generating unique operation named: removeUsingPOST_18
2019-06-04 16:13:12 -Generating unique operation named: addUsingGET_10
2019-06-04 16:13:12 -Generating unique operation named: editUsingGET_11
2019-06-04 16:13:12 -Generating unique operation named: listUsingGET_13
2019-06-04 16:13:12 -Generating unique operation named: removeUsingPOST_19
2019-06-04 16:13:12 -Generating unique operation named: removeUsingPOST_20
2019-06-04 16:13:12 -Trying to infer dataType org.springframework.web.multipart.MultipartFile[]
2019-06-04 16:13:12 -Generating unique operation named: saveUsingPOST_9
2019-06-04 16:13:12 -Trying to infer dataType org.springframework.web.multipart.MultipartFile[]
2019-06-04 16:13:12 -Generating unique operation named: updateUsingGET_7
2019-06-04 16:13:12 -Trying to infer dataType org.springframework.web.multipart.MultipartFile[]
2019-06-04 16:13:12 -Generating unique operation named: updateUsingHEAD_7
2019-06-04 16:13:12 -Trying to infer dataType org.springframework.web.multipart.MultipartFile[]
2019-06-04 16:13:12 -Generating unique operation named: updateUsingPOST_10
2019-06-04 16:13:12 -Trying to infer dataType org.springframework.web.multipart.MultipartFile[]
2019-06-04 16:13:12 -Generating unique operation named: updateUsingPUT_7
2019-06-04 16:13:12 -Trying to infer dataType org.springframework.web.multipart.MultipartFile[]
2019-06-04 16:13:12 -Generating unique operation named: updateUsingPATCH_7
2019-06-04 16:13:12 -Trying to infer dataType org.springframework.web.multipart.MultipartFile[]
2019-06-04 16:13:12 -Generating unique operation named: updateUsingDELETE_7
2019-06-04 16:13:12 -Trying to infer dataType org.springframework.web.multipart.MultipartFile[]
2019-06-04 16:13:12 -Generating unique operation named: updateUsingOPTIONS_7
2019-06-04 16:13:12 -Trying to infer dataType org.springframework.web.multipart.MultipartFile[]
2019-06-04 16:13:12 -Generating unique operation named: updateUsingTRACE_7
2019-06-04 16:13:12 -Generating unique operation named: addUsingGET_11
2019-06-04 16:13:12 -Generating unique operation named: batchRemoveUsingPOST_3
2019-06-04 16:13:12 -Generating unique operation named: editUsingGET_12
2019-06-04 16:13:12 -Generating unique operation named: listUsingGET_14
2019-06-04 16:13:12 -Generating unique operation named: saveUsingPOST_10
2019-06-04 16:13:12 -Generating unique operation named: saveUsingPOST_11
2019-06-04 16:13:12 -Generating unique operation named: updateUsingPOST_11
2019-06-04 16:13:12 -Generating unique operation named: addUsingGET_12
2019-06-04 16:13:12 -Generating unique operation named: editUsingGET_13
2019-06-04 16:13:12 -Generating unique operation named: listUsingGET_15
2019-06-04 16:13:12 -Generating unique operation named: removeUsingPOST_21
2019-06-04 16:13:12 -Generating unique operation named: removeUsingPOST_22
2019-06-04 16:13:12 -Generating unique operation named: saveUsingPOST_12
2019-06-04 16:13:12 -Generating unique operation named: updateUsingGET_8
2019-06-04 16:13:12 -Generating unique operation named: updateUsingHEAD_8
2019-06-04 16:13:12 -Generating unique operation named: updateUsingPOST_12
2019-06-04 16:13:12 -Generating unique operation named: updateUsingPUT_8
2019-06-04 16:13:12 -Generating unique operation named: updateUsingPATCH_8
2019-06-04 16:13:12 -Generating unique operation named: updateUsingDELETE_8
2019-06-04 16:13:12 -Generating unique operation named: updateUsingOPTIONS_8
2019-06-04 16:13:12 -Generating unique operation named: updateUsingTRACE_8
2019-06-04 16:13:12 -Generating unique operation named: addUsingGET_13
2019-06-04 16:13:12 -Generating unique operation named: editUsingGET_14
2019-06-04 16:13:12 -Generating unique operation named: listUsingGET_16
2019-06-04 16:13:12 -Generating unique operation named: removeUsingPOST_23
2019-06-04 16:13:12 -Generating unique operation named: removeUsingPOST_24
2019-06-04 16:13:12 -Generating unique operation named: updateUsingGET_9
2019-06-04 16:13:12 -Generating unique operation named: updateUsingHEAD_9
2019-06-04 16:13:12 -Generating unique operation named: updateUsingPOST_13
2019-06-04 16:13:12 -Generating unique operation named: updateUsingPUT_9
2019-06-04 16:13:12 -Generating unique operation named: updateUsingPATCH_9
2019-06-04 16:13:12 -Generating unique operation named: updateUsingDELETE_9
2019-06-04 16:13:12 -Generating unique operation named: updateUsingOPTIONS_9
2019-06-04 16:13:12 -Generating unique operation named: updateUsingTRACE_9
2019-06-04 16:13:12 -Generating unique operation named: listUsingGET_17
2019-06-04 16:13:12 -Generating unique operation named: listUsingHEAD_1
2019-06-04 16:13:12 -Generating unique operation named: listUsingPOST_1
2019-06-04 16:13:12 -Generating unique operation named: listUsingPUT_1
2019-06-04 16:13:12 -Generating unique operation named: listUsingPATCH_1
2019-06-04 16:13:12 -Generating unique operation named: listUsingDELETE_1
2019-06-04 16:13:12 -Generating unique operation named: listUsingOPTIONS_1
2019-06-04 16:13:12 -Generating unique operation named: listUsingTRACE_1
2019-06-04 16:13:12 -Generating unique operation named: listUsingGET_18
2019-06-04 16:13:12 -Generating unique operation named: addUsingGET_14
2019-06-04 16:13:12 -Generating unique operation named: batchRemoveUsingPOST_4
2019-06-04 16:13:12 -Generating unique operation named: editUsingGET_15
2019-06-04 16:13:12 -Generating unique operation named: listUsingGET_19
2019-06-04 16:13:12 -Generating unique operation named: removeUsingPOST_25
2019-06-04 16:13:12 -Generating unique operation named: saveUsingPOST_13
2019-06-04 16:13:12 -Generating unique operation named: treeUsingGET_3
2019-06-04 16:13:12 -Generating unique operation named: treeViewUsingGET_1
2019-06-04 16:13:12 -Generating unique operation named: updateUsingPOST_14
2019-06-04 16:13:12 -Generating unique operation named: addUsingGET_15
2019-06-04 16:13:12 -Generating unique operation named: editUsingGET_16
2019-06-04 16:13:12 -Generating unique operation named: listUsingGET_20
2019-06-04 16:13:12 -Generating unique operation named: removeUsingPOST_26
2019-06-04 16:13:12 -Generating unique operation named: removeUsingPOST_27
2019-06-04 16:13:12 -Generating unique operation named: saveUsingPOST_14
2019-06-04 16:13:12 -Generating unique operation named: updateUsingGET_10
2019-06-04 16:13:12 -Generating unique operation named: updateUsingHEAD_10
2019-06-04 16:13:12 -Generating unique operation named: updateUsingPOST_15
2019-06-04 16:13:12 -Generating unique operation named: updateUsingPUT_10
2019-06-04 16:13:12 -Generating unique operation named: updateUsingPATCH_10
2019-06-04 16:13:12 -Generating unique operation named: updateUsingDELETE_10
2019-06-04 16:13:12 -Generating unique operation named: updateUsingOPTIONS_10
2019-06-04 16:13:12 -Generating unique operation named: updateUsingTRACE_10
2019-06-04 16:13:12 -Starting Quartz Scheduler now
2019-06-04 16:13:12 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-06-04 16:13:12 -Starting...
2019-06-04 16:13:12 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-06-04 16:13:12 -Started.
2019-06-04 16:13:12 -Starting ProtocolHandler ["http-nio-8888"]
2019-06-04 16:13:12 -Using a shared selector for servlet write/read
2019-06-04 16:13:12 -Tomcat started on port(s): 8888 (http) with context path ''
2019-06-04 16:13:12 -Started BootdoApplication in 10.719 seconds (JVM running for 12.431)
2019-06-04 16:13:12 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-06-04 16:13:12 -==> Parameters: 
2019-06-04 16:13:12 -<==      Total: 1
2019-06-04 16:13:19 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-06-04 16:13:19 -FrameworkServlet 'dispatcherServlet': initialization started
2019-06-04 16:13:19 -FrameworkServlet 'dispatcherServlet': initialization completed in 36 ms
2019-06-04 16:13:19 -Enabling session validation scheduler...
2019-06-04 16:13:19 -请求地址 : http://localhost:8888/login;JSESSIONID=29d16a23-d2c8-4973-b11c-7770f49a37f6
2019-06-04 16:13:19 -HTTP METHOD : GET
2019-06-04 16:13:19 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-06-04 16:13:19 -参数 : [{}]
2019-06-04 16:13:19 -耗时 : 2
2019-06-04 16:13:19 -返回值 : login
2019-06-04 16:13:22 -请求地址 : http://localhost:8888/login
2019-06-04 16:13:22 -HTTP METHOD : POST
2019-06-04 16:13:22 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-06-04 16:13:22 -参数 : [admin, 111111]
2019-06-04 16:13:22 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-06-04 16:13:22 -==> Parameters: admin(String)
2019-06-04 16:13:22 -<==      Total: 1
2019-06-04 16:13:22 -耗时 : 17
2019-06-04 16:13:22 -返回值 : {msg=操作成功, code=0}
2019-06-04 16:13:22 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-06-04 16:13:22 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-04 16:13:22 -==> Parameters: 1(Long), admin(String), 登录(String), 17(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-06-04 16:13:22.079(Timestamp)
2019-06-04 16:13:22 -请求地址 : http://localhost:8888/index
2019-06-04 16:13:22 -HTTP METHOD : GET
2019-06-04 16:13:22 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-06-04 16:13:22 -参数 : [{}]
2019-06-04 16:13:22 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-06-04 16:13:22 -==> Parameters: 1(Long)
2019-06-04 16:13:22 -<==      Total: 34
2019-06-04 16:13:22 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-06-04 16:13:22 -==> Parameters: 144(Long)
2019-06-04 16:13:22 -<==      Total: 1
2019-06-04 16:13:22 -耗时 : 38
2019-06-04 16:13:22 -返回值 : index_v1
2019-06-04 16:13:22 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-04 16:13:22 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 38(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-commenting","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user","url":"/weixin/weixinUser"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"109","text":"用户管理"}],"hasChildren":true,"hasParent":false,"id":"109","parentId":"0","text":"微信管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","text":"基础管理"},{"attributes":{"icon":"fa fa-hotel","url":""},"checked":false,"children":[{"attributes":{"icon":"","url":"/xjbg/room/roomMng"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"105","text":"开房"},{"attributes":{"icon":"fa fa-bed","url":"/xjbg/room"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"106","parentId":"105","text":"房间管理"},{"attributes":{"icon":"","url":"/xjbg/product"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"105","text":"商品管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"欣吉宾馆"},{"attributes":{"icon":"fa fa-desktop"},"checked":false,"children":[{"attributes":{"icon":"fa fa-user","url":"sys/user/"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"6","parentId":"3","text":"用户管理"},{"attributes":{"icon":"fa fa-paw","url":"sys/role"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"7","parentId":"3","text":"角色管理"},{"attributes":{"icon":"fa fa-th-list","url":"sys/menu/"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"3","text":"系统菜单"},{"attributes":{"icon":"fa fa-users","url":"/system/sysDept"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"73","parentId":"3","text":"部门管理"}],"hasChildren":true,"hasParent":false,"id":"3","parentId":"0","text":"系统管理"},{"attributes":{"icon":"fa fa-gear","url":""},"checked":false,"children":[{"attributes":{"icon":"","url":"/swagger-ui.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"104","parentId":"77","text":"swagger"},{"attributes":{"icon":"fa fa-code","url":"common/generator"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"48","parentId":"77","text":"代码生成"},{"attributes":{"icon":"fa fa-hourglass-1","url":"common/job"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"72","parentId":"77","text":"计划任务"}],"hasChildren":true,"hasParent":false,"id":"77","parentId":"0","text":"系统工具"},{"attributes":{"icon":"fa fa-laptop","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-pencil-square","url":"oa/notify"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"85","parentId":"84","text":"通知公告"},{"attributes":{"icon":"fa fa-envelope-square","url":"oa/notify/selfNotify"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"90","parentId":"84","text":"我的通知"}],"hasChildren":true,"hasParent":false,"id":"84","parentId":"0","text":"办公管理"},{"attributes":{"icon":"fa fa-video-camera","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user","url":"sys/online"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"92","parentId":"91","text":"在线用户"},{"attributes":{"icon":"fa fa-warning","url":"common/log"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"27","parentId":"91","text":"系统日志"},{"attributes":{"icon":"fa fa-caret-square-o-right","url":"/druid/index.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"57","parentId":"91","text":"运行监控"}],"hasChildren":true,"hasParent":false,"id":"91","parentId":"0","text":"系统监控"},{"attributes":{"icon":"fa fa-rss","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-edit","url":"/blog/bContent/add"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"68","parentId":"49","text":"发布文章"},{"attributes":{"icon":"fa fa-file-image-o","url":"blog/bContent"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"50","parentId":"49","text":"文章列表"}],"hasChildren":true,"hasParent":false,"id":"49","parentId":"0","text":"博客管理"},{"attributes":{"icon":"fa fa-print","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-flag","url":"activiti/process"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"96","parentId":"93","text":"流程管理"},{"attributes":{"icon":"","url":"activiti/task/todo"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"101","parentId":"93","text":"待办任务"},{"attr(String), 127.0.0.1(String), 2019-06-04 16:13:22.201(Timestamp)
2019-06-04 16:13:22 -<==    Updates: 1
2019-06-04 16:13:22 -<==    Updates: 1
2019-06-04 16:13:22 -请求地址 : http://localhost:8888/main
2019-06-04 16:13:22 -HTTP METHOD : GET
2019-06-04 16:13:22 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-04 16:13:22 -参数 : []
2019-06-04 16:13:22 -耗时 : 1
2019-06-04 16:13:22 -返回值 : main
2019-06-04 16:13:22 -请求地址 : http://localhost:8888/oa/notify/message
2019-06-04 16:13:22 -HTTP METHOD : GET
2019-06-04 16:13:22 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-06-04 16:13:22 -参数 : []
2019-06-04 16:13:22 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-06-04 16:13:22 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-06-04 16:13:22 -<==      Total: 0
2019-06-04 16:13:22 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-06-04 16:13:22 -==> Parameters: 1(Long), 0(String)
2019-06-04 16:13:22 -<==      Total: 1
2019-06-04 16:13:22 -耗时 : 18
2019-06-04 16:13:22 -返回值 : com.bootdo.common.utils.PageUtils@2dab8149
2019-06-04 16:13:22 -请求地址 : http://localhost:8888/main
2019-06-04 16:13:22 -HTTP METHOD : GET
2019-06-04 16:13:22 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-04 16:13:22 -参数 : []
2019-06-04 16:13:22 -耗时 : 1
2019-06-04 16:13:22 -返回值 : main
2019-06-04 16:13:24 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-06-04 16:13:24 -==> Parameters: 1(Long)
2019-06-04 16:13:24 -<==      Total: 58
2019-06-04 16:13:24 -请求地址 : http://localhost:8888/xjbg/room/roomMng
2019-06-04 16:13:24 -HTTP METHOD : GET
2019-06-04 16:13:24 -CLASS_METHOD : com.bootdo.xjbg.controller.RoomController.roomMng
2019-06-04 16:13:24 -参数 : [{}]
2019-06-04 16:13:24 -==>  Preparing: select `id`,`room_no`,`room_type`,`floor`,`room_state`,`price`,`create_time`,`update_time`,`create_user`,`update_user` from xjbg_room 
2019-06-04 16:13:24 -==> Parameters: 
2019-06-04 16:13:24 -<==      Total: 8
2019-06-04 16:13:24 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 16:13:24 -==> Parameters: room_type(String)
2019-06-04 16:13:24 -<==      Total: 7
2019-06-04 16:13:24 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 16:13:24 -==> Parameters: floor(String)
2019-06-04 16:13:24 -<==      Total: 5
2019-06-04 16:13:24 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 16:13:24 -==> Parameters: room_state(String)
2019-06-04 16:13:24 -<==      Total: 2
2019-06-04 16:13:24 -==>  Preparing: select * from sys_user 
2019-06-04 16:13:24 -==> Parameters: 
2019-06-04 16:13:24 -<==      Total: 11
2019-06-04 16:13:24 -耗时 : 33
2019-06-04 16:13:24 -返回值 : xjbg/room/roomMng
2019-06-04 16:13:24 -请求地址 : http://localhost:8888/xjbg/room/operation/1
2019-06-04 16:13:24 -HTTP METHOD : GET
2019-06-04 16:13:24 -CLASS_METHOD : com.bootdo.xjbg.controller.RoomController.operation
2019-06-04 16:13:24 -参数 : [1, {}]
2019-06-04 16:13:24 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 16:13:24 -==> Parameters: room_type(String)
2019-06-04 16:13:24 -<==      Total: 7
2019-06-04 16:13:24 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 16:13:24 -==> Parameters: floor(String)
2019-06-04 16:13:24 -<==      Total: 5
2019-06-04 16:13:24 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 16:13:24 -==> Parameters: room_state(String)
2019-06-04 16:13:24 -<==      Total: 2
2019-06-04 16:13:24 -==>  Preparing: select * from sys_user 
2019-06-04 16:13:24 -==> Parameters: 
2019-06-04 16:13:24 -<==      Total: 11
2019-06-04 16:13:24 -==>  Preparing: select `id`,`product_name`,`purchase_price`,`selling_price`,`product_pic`,`create_time`,`create_user`,`update_time`,`update_user` from xjbg_product order by id desc 
2019-06-04 16:13:24 -==> Parameters: 
2019-06-04 16:13:24 -<==      Total: 5
2019-06-04 16:13:24 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 16:13:24 -==> Parameters: order_type(String)
2019-06-04 16:13:24 -<==      Total: 3
2019-06-04 16:13:24 -==>  Preparing: select `id`,`room_no`,`room_type`,`floor`,`room_state`,`price`,`create_time`,`update_time`,`create_user`,`update_user` from xjbg_room where id = ? 
2019-06-04 16:13:24 -==> Parameters: 1(Integer)
2019-06-04 16:13:24 -<==      Total: 1
2019-06-04 16:13:24 -耗时 : 30
2019-06-04 16:13:24 -返回值 : xjbg/room/operation
2019-06-04 16:14:10 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 1 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 9, active threads = 0, queued tasks = 0, completed tasks = 9], outboundChannelpool size = 1, active threads = 0, queued tasks = 0, completed tasks = 1], sockJsScheduler[pool size = 8, active threads = 1, queued tasks = 3, completed tasks = 11]
2019-06-04 16:15:01 -请求地址 : http://localhost:8888/index
2019-06-04 16:15:01 -HTTP METHOD : GET
2019-06-04 16:15:01 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-06-04 16:15:01 -参数 : [{}]
2019-06-04 16:15:01 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-06-04 16:15:01 -==> Parameters: 1(Long)
2019-06-04 16:15:01 -<==      Total: 34
2019-06-04 16:15:01 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-06-04 16:15:01 -==> Parameters: 144(Long)
2019-06-04 16:15:01 -<==      Total: 1
2019-06-04 16:15:01 -耗时 : 8
2019-06-04 16:15:01 -返回值 : index_v1
2019-06-04 16:15:01 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-04 16:15:01 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 9(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-commenting","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user","url":"/weixin/weixinUser"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"109","text":"用户管理"}],"hasChildren":true,"hasParent":false,"id":"109","parentId":"0","text":"微信管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","text":"基础管理"},{"attributes":{"icon":"fa fa-hotel","url":""},"checked":false,"children":[{"attributes":{"icon":"","url":"/xjbg/room/roomMng"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"105","text":"开房"},{"attributes":{"icon":"fa fa-bed","url":"/xjbg/room"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"106","parentId":"105","text":"房间管理"},{"attributes":{"icon":"","url":"/xjbg/product"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"105","text":"商品管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"欣吉宾馆"},{"attributes":{"icon":"fa fa-desktop"},"checked":false,"children":[{"attributes":{"icon":"fa fa-user","url":"sys/user/"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"6","parentId":"3","text":"用户管理"},{"attributes":{"icon":"fa fa-paw","url":"sys/role"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"7","parentId":"3","text":"角色管理"},{"attributes":{"icon":"fa fa-th-list","url":"sys/menu/"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"3","text":"系统菜单"},{"attributes":{"icon":"fa fa-users","url":"/system/sysDept"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"73","parentId":"3","text":"部门管理"}],"hasChildren":true,"hasParent":false,"id":"3","parentId":"0","text":"系统管理"},{"attributes":{"icon":"fa fa-gear","url":""},"checked":false,"children":[{"attributes":{"icon":"","url":"/swagger-ui.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"104","parentId":"77","text":"swagger"},{"attributes":{"icon":"fa fa-code","url":"common/generator"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"48","parentId":"77","text":"代码生成"},{"attributes":{"icon":"fa fa-hourglass-1","url":"common/job"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"72","parentId":"77","text":"计划任务"}],"hasChildren":true,"hasParent":false,"id":"77","parentId":"0","text":"系统工具"},{"attributes":{"icon":"fa fa-video-camera","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user","url":"sys/online"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"92","parentId":"91","text":"在线用户"},{"attributes":{"icon":"fa fa-warning","url":"common/log"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"27","parentId":"91","text":"系统日志"},{"attributes":{"icon":"fa fa-caret-square-o-right","url":"/druid/index.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"57","parentId":"91","text":"运行监控"}],"hasChildren":true,"hasParent":false,"id":"91","parentId":"0","text":"系统监控"},{"attributes":{"icon":"fa fa-laptop","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-pencil-square","url":"oa/notify"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"85","parentId":"84","text":"通知公告"},{"attributes":{"icon":"fa fa-envelope-square","url":"oa/notify/selfNotify"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"90","parentId":"84","text":"我的通知"}],"hasChildren":true,"hasParent":false,"id":"84","parentId":"0","text":"办公管理"},{"attributes":{"icon":"fa fa-print","url":""},"checked":false,"children":[{"attributes":{"icon":"","url":"activiti/task/todo"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"101","parentId":"93","text":"待办任务"},{"attributes":{"icon":"fa fa-sort-amount-asc","url":"activiti/model"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"94","parentId":"93","text":"模型管理"},{"attributes":{"icon":"fa fa-flag","url":"activiti/process"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"96","parentId":"93","text":"流程管理"}],"hasChildren":true,"hasParent":false,"id":"93","parentId":"0","text":"工作流程"},{"attributes":{"icon":"fa fa-rss","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-edit","url":"/blog/bContent/add"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"68","parentId":"49","text":"发布文章"},{"(String), 127.0.0.1(String), 2019-06-04 16:15:01.164(Timestamp)
2019-06-04 16:15:01 -请求地址 : http://localhost:8888/main
2019-06-04 16:15:01 -HTTP METHOD : GET
2019-06-04 16:15:01 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-04 16:15:01 -参数 : []
2019-06-04 16:15:01 -耗时 : 0
2019-06-04 16:15:01 -返回值 : main
2019-06-04 16:15:01 -<==    Updates: 1
2019-06-04 16:15:01 -请求地址 : http://localhost:8888/oa/notify/message
2019-06-04 16:15:01 -HTTP METHOD : GET
2019-06-04 16:15:01 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-06-04 16:15:01 -参数 : []
2019-06-04 16:15:01 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-06-04 16:15:01 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-06-04 16:15:01 -<==      Total: 0
2019-06-04 16:15:01 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-06-04 16:15:01 -==> Parameters: 1(Long), 0(String)
2019-06-04 16:15:01 -<==      Total: 1
2019-06-04 16:15:01 -耗时 : 3
2019-06-04 16:15:01 -返回值 : com.bootdo.common.utils.PageUtils@1562e08e
2019-06-04 16:15:01 -请求地址 : http://localhost:8888/main
2019-06-04 16:15:01 -HTTP METHOD : GET
2019-06-04 16:15:01 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-04 16:15:01 -参数 : []
2019-06-04 16:15:01 -耗时 : 0
2019-06-04 16:15:01 -返回值 : main
2019-06-04 16:15:02 -请求地址 : http://localhost:8888/weixin/weixinUser
2019-06-04 16:15:02 -HTTP METHOD : GET
2019-06-04 16:15:02 -CLASS_METHOD : com.bootdo.weixin.controller.WeixinUserController.WeixinUser
2019-06-04 16:15:02 -参数 : []
2019-06-04 16:15:02 -耗时 : 0
2019-06-04 16:15:02 -返回值 : weixin/weixinUser/weixinUser
2019-06-04 16:15:02 -请求地址 : http://localhost:8888/weixin/weixinUser/list
2019-06-04 16:15:02 -HTTP METHOD : GET
2019-06-04 16:15:02 -CLASS_METHOD : com.bootdo.weixin.controller.WeixinUserController.list
2019-06-04 16:15:02 -参数 : [{limit=10, offset=0}]
2019-06-04 16:15:02 -==>  Preparing: select `id`,`open_id`,`is_removed`,`create_time`,`remove_time` from weixin_user order by id desc limit ?, ? 
2019-06-04 16:15:02 -==> Parameters: 0(Integer), 10(Integer)
2019-06-04 16:15:02 -<==      Total: 1
2019-06-04 16:15:02 -==>  Preparing: select count(*) from weixin_user 
2019-06-04 16:15:02 -==> Parameters: 
2019-06-04 16:15:02 -<==      Total: 1
2019-06-04 16:15:02 -耗时 : 11
2019-06-04 16:15:02 -返回值 : com.bootdo.common.utils.PageUtils@5bf98b3b
2019-06-04 16:15:03 -请求地址 : http://localhost:8888/common/sysFile
2019-06-04 16:15:03 -HTTP METHOD : GET
2019-06-04 16:15:03 -CLASS_METHOD : com.bootdo.common.controller.FileController.sysFile
2019-06-04 16:15:03 -参数 : [{}]
2019-06-04 16:15:03 -耗时 : 0
2019-06-04 16:15:03 -返回值 : common/file/file
2019-06-04 16:15:03 -请求地址 : http://localhost:8888/common/sysFile/list
2019-06-04 16:15:03 -HTTP METHOD : GET
2019-06-04 16:15:03 -CLASS_METHOD : com.bootdo.common.controller.FileController.list
2019-06-04 16:15:03 -参数 : [{limit=12, offset=0, type=}]
2019-06-04 16:15:03 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file order by id desc limit ?, ? 
2019-06-04 16:15:03 -==> Parameters: 0(Integer), 12(Integer)
2019-06-04 16:15:03 -<==      Total: 12
2019-06-04 16:15:03 -==>  Preparing: select count(*) from sys_file 
2019-06-04 16:15:03 -==> Parameters: 
2019-06-04 16:15:03 -<==      Total: 1
2019-06-04 16:15:03 -耗时 : 8
2019-06-04 16:15:03 -返回值 : com.bootdo.common.utils.PageUtils@6952dad3
2019-06-04 16:15:04 -请求地址 : http://localhost:8888/xjbg/room
2019-06-04 16:15:04 -HTTP METHOD : GET
2019-06-04 16:15:04 -CLASS_METHOD : com.bootdo.xjbg.controller.RoomController.Room
2019-06-04 16:15:04 -参数 : [{}]
2019-06-04 16:15:04 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 16:15:04 -==> Parameters: room_type(String)
2019-06-04 16:15:04 -<==      Total: 7
2019-06-04 16:15:04 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 16:15:04 -==> Parameters: floor(String)
2019-06-04 16:15:04 -<==      Total: 5
2019-06-04 16:15:04 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 16:15:04 -==> Parameters: room_state(String)
2019-06-04 16:15:04 -<==      Total: 2
2019-06-04 16:15:04 -==>  Preparing: select * from sys_user 
2019-06-04 16:15:04 -==> Parameters: 
2019-06-04 16:15:04 -<==      Total: 11
2019-06-04 16:15:04 -耗时 : 6
2019-06-04 16:15:04 -返回值 : xjbg/room/room
2019-06-04 16:15:04 -请求地址 : http://localhost:8888/xjbg/room/list
2019-06-04 16:15:04 -HTTP METHOD : GET
2019-06-04 16:15:04 -CLASS_METHOD : com.bootdo.xjbg.controller.RoomController.list
2019-06-04 16:15:04 -参数 : [{limit=10, offset=0}]
2019-06-04 16:15:04 -==>  Preparing: select `id`,`room_no`,`room_type`,`floor`,`room_state`,`price`,`create_time`,`update_time`,`create_user`,`update_user` from xjbg_room order by room_no desc limit ?, ? 
2019-06-04 16:15:04 -==> Parameters: 0(Integer), 10(Integer)
2019-06-04 16:15:04 -<==      Total: 8
2019-06-04 16:15:04 -==>  Preparing: select count(*) from xjbg_room 
2019-06-04 16:15:04 -==> Parameters: 
2019-06-04 16:15:04 -<==      Total: 1
2019-06-04 16:15:04 -耗时 : 11
2019-06-04 16:15:04 -返回值 : com.bootdo.common.utils.PageUtils@35b700ec
2019-06-04 16:15:04 -请求地址 : http://localhost:8888/xjbg/room/roomMng
2019-06-04 16:15:04 -HTTP METHOD : GET
2019-06-04 16:15:04 -CLASS_METHOD : com.bootdo.xjbg.controller.RoomController.roomMng
2019-06-04 16:15:04 -参数 : [{}]
2019-06-04 16:15:04 -==>  Preparing: select `id`,`room_no`,`room_type`,`floor`,`room_state`,`price`,`create_time`,`update_time`,`create_user`,`update_user` from xjbg_room 
2019-06-04 16:15:04 -==> Parameters: 
2019-06-04 16:15:04 -<==      Total: 8
2019-06-04 16:15:04 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 16:15:04 -==> Parameters: room_type(String)
2019-06-04 16:15:04 -<==      Total: 7
2019-06-04 16:15:04 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 16:15:04 -==> Parameters: floor(String)
2019-06-04 16:15:04 -<==      Total: 5
2019-06-04 16:15:04 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 16:15:04 -==> Parameters: room_state(String)
2019-06-04 16:15:04 -<==      Total: 2
2019-06-04 16:15:04 -==>  Preparing: select * from sys_user 
2019-06-04 16:15:04 -==> Parameters: 
2019-06-04 16:15:04 -<==      Total: 11
2019-06-04 16:15:04 -耗时 : 9
2019-06-04 16:15:04 -返回值 : xjbg/room/roomMng
2019-06-04 16:15:04 -请求地址 : http://localhost:8888/xjbg/room/operation/1
2019-06-04 16:15:04 -HTTP METHOD : GET
2019-06-04 16:15:04 -CLASS_METHOD : com.bootdo.xjbg.controller.RoomController.operation
2019-06-04 16:15:04 -参数 : [1, {}]
2019-06-04 16:15:04 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 16:15:04 -==> Parameters: room_type(String)
2019-06-04 16:15:04 -<==      Total: 7
2019-06-04 16:15:04 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 16:15:04 -==> Parameters: floor(String)
2019-06-04 16:15:04 -<==      Total: 5
2019-06-04 16:15:04 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 16:15:04 -==> Parameters: room_state(String)
2019-06-04 16:15:04 -<==      Total: 2
2019-06-04 16:15:04 -==>  Preparing: select * from sys_user 
2019-06-04 16:15:04 -==> Parameters: 
2019-06-04 16:15:04 -<==      Total: 11
2019-06-04 16:15:04 -==>  Preparing: select `id`,`product_name`,`purchase_price`,`selling_price`,`product_pic`,`create_time`,`create_user`,`update_time`,`update_user` from xjbg_product order by id desc 
2019-06-04 16:15:04 -==> Parameters: 
2019-06-04 16:15:04 -<==      Total: 5
2019-06-04 16:15:04 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 16:15:04 -==> Parameters: order_type(String)
2019-06-04 16:15:04 -<==      Total: 3
2019-06-04 16:15:04 -==>  Preparing: select `id`,`room_no`,`room_type`,`floor`,`room_state`,`price`,`create_time`,`update_time`,`create_user`,`update_user` from xjbg_room where id = ? 
2019-06-04 16:15:04 -==> Parameters: 1(Integer)
2019-06-04 16:15:04 -<==      Total: 1
2019-06-04 16:15:04 -耗时 : 12
2019-06-04 16:15:04 -返回值 : xjbg/room/operation
2019-06-04 16:15:13 -请求地址 : http://localhost:8888/xjbg/room/operation/1
2019-06-04 16:15:13 -HTTP METHOD : GET
2019-06-04 16:15:13 -CLASS_METHOD : com.bootdo.xjbg.controller.RoomController.operation
2019-06-04 16:15:13 -参数 : [1, {}]
2019-06-04 16:15:13 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 16:15:13 -==> Parameters: room_type(String)
2019-06-04 16:15:13 -<==      Total: 7
2019-06-04 16:15:13 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 16:15:13 -==> Parameters: floor(String)
2019-06-04 16:15:13 -<==      Total: 5
2019-06-04 16:15:13 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 16:15:13 -==> Parameters: room_state(String)
2019-06-04 16:15:13 -<==      Total: 2
2019-06-04 16:15:13 -==>  Preparing: select * from sys_user 
2019-06-04 16:15:13 -==> Parameters: 
2019-06-04 16:15:13 -<==      Total: 11
2019-06-04 16:15:13 -==>  Preparing: select `id`,`product_name`,`purchase_price`,`selling_price`,`product_pic`,`create_time`,`create_user`,`update_time`,`update_user` from xjbg_product order by id desc 
2019-06-04 16:15:13 -==> Parameters: 
2019-06-04 16:15:13 -<==      Total: 5
2019-06-04 16:15:13 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 16:15:13 -==> Parameters: order_type(String)
2019-06-04 16:15:13 -<==      Total: 3
2019-06-04 16:15:13 -==>  Preparing: select `id`,`room_no`,`room_type`,`floor`,`room_state`,`price`,`create_time`,`update_time`,`create_user`,`update_user` from xjbg_room where id = ? 
2019-06-04 16:15:13 -==> Parameters: 1(Integer)
2019-06-04 16:15:13 -<==      Total: 1
2019-06-04 16:15:13 -耗时 : 17
2019-06-04 16:15:13 -返回值 : xjbg/room/operation
2019-06-04 16:15:16 -请求地址 : http://localhost:8888/xjbg/room/operation/1
2019-06-04 16:15:16 -HTTP METHOD : GET
2019-06-04 16:15:16 -CLASS_METHOD : com.bootdo.xjbg.controller.RoomController.operation
2019-06-04 16:15:16 -参数 : [1, {}]
2019-06-04 16:15:16 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 16:15:16 -==> Parameters: room_type(String)
2019-06-04 16:15:16 -<==      Total: 7
2019-06-04 16:15:16 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 16:15:16 -==> Parameters: floor(String)
2019-06-04 16:15:16 -<==      Total: 5
2019-06-04 16:15:16 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 16:15:16 -==> Parameters: room_state(String)
2019-06-04 16:15:16 -<==      Total: 2
2019-06-04 16:15:16 -==>  Preparing: select * from sys_user 
2019-06-04 16:15:16 -==> Parameters: 
2019-06-04 16:15:16 -<==      Total: 11
2019-06-04 16:15:16 -==>  Preparing: select `id`,`product_name`,`purchase_price`,`selling_price`,`product_pic`,`create_time`,`create_user`,`update_time`,`update_user` from xjbg_product order by id desc 
2019-06-04 16:15:16 -==> Parameters: 
2019-06-04 16:15:16 -<==      Total: 5
2019-06-04 16:15:16 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 16:15:16 -==> Parameters: order_type(String)
2019-06-04 16:15:16 -<==      Total: 3
2019-06-04 16:15:16 -==>  Preparing: select `id`,`room_no`,`room_type`,`floor`,`room_state`,`price`,`create_time`,`update_time`,`create_user`,`update_user` from xjbg_room where id = ? 
2019-06-04 16:15:16 -==> Parameters: 1(Integer)
2019-06-04 16:15:16 -<==      Total: 1
2019-06-04 16:15:16 -耗时 : 20
2019-06-04 16:15:16 -返回值 : xjbg/room/operation
2019-06-04 16:20:53 -请求地址 : http://localhost:8888/index
2019-06-04 16:20:53 -HTTP METHOD : GET
2019-06-04 16:20:53 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-06-04 16:20:53 -参数 : [{}]
2019-06-04 16:20:53 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-06-04 16:20:53 -==> Parameters: 1(Long)
2019-06-04 16:20:53 -<==      Total: 34
2019-06-04 16:20:53 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-06-04 16:20:53 -==> Parameters: 144(Long)
2019-06-04 16:20:53 -<==      Total: 1
2019-06-04 16:20:53 -耗时 : 5
2019-06-04 16:20:53 -返回值 : index_v1
2019-06-04 16:20:53 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-04 16:20:53 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 6(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","text":"基础管理"},{"attributes":{"icon":"fa fa-hotel","url":""},"checked":false,"children":[{"attributes":{"icon":"","url":"/xjbg/room/roomMng"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"105","text":"开房"},{"attributes":{"icon":"fa fa-bed","url":"/xjbg/room"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"106","parentId":"105","text":"房间管理"},{"attributes":{"icon":"","url":"/xjbg/product"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"105","text":"商品管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"欣吉宾馆"},{"attributes":{"icon":"fa fa-commenting","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user","url":"/weixin/weixinUser"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"109","text":"用户管理"}],"hasChildren":true,"hasParent":false,"id":"109","parentId":"0","text":"微信管理"},{"attributes":{"icon":"fa fa-desktop"},"checked":false,"children":[{"attributes":{"icon":"fa fa-user","url":"sys/user/"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"6","parentId":"3","text":"用户管理"},{"attributes":{"icon":"fa fa-paw","url":"sys/role"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"7","parentId":"3","text":"角色管理"},{"attributes":{"icon":"fa fa-th-list","url":"sys/menu/"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"3","text":"系统菜单"},{"attributes":{"icon":"fa fa-users","url":"/system/sysDept"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"73","parentId":"3","text":"部门管理"}],"hasChildren":true,"hasParent":false,"id":"3","parentId":"0","text":"系统管理"},{"attributes":{"icon":"fa fa-gear","url":""},"checked":false,"children":[{"attributes":{"icon":"","url":"/swagger-ui.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"104","parentId":"77","text":"swagger"},{"attributes":{"icon":"fa fa-code","url":"common/generator"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"48","parentId":"77","text":"代码生成"},{"attributes":{"icon":"fa fa-hourglass-1","url":"common/job"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"72","parentId":"77","text":"计划任务"}],"hasChildren":true,"hasParent":false,"id":"77","parentId":"0","text":"系统工具"},{"attributes":{"icon":"fa fa-video-camera","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user","url":"sys/online"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"92","parentId":"91","text":"在线用户"},{"attributes":{"icon":"fa fa-warning","url":"common/log"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"27","parentId":"91","text":"系统日志"},{"attributes":{"icon":"fa fa-caret-square-o-right","url":"/druid/index.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"57","parentId":"91","text":"运行监控"}],"hasChildren":true,"hasParent":false,"id":"91","parentId":"0","text":"系统监控"},{"attributes":{"icon":"fa fa-laptop","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-pencil-square","url":"oa/notify"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"85","parentId":"84","text":"通知公告"},{"attributes":{"icon":"fa fa-envelope-square","url":"oa/notify/selfNotify"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"90","parentId":"84","text":"我的通知"}],"hasChildren":true,"hasParent":false,"id":"84","parentId":"0","text":"办公管理"},{"attributes":{"icon":"fa fa-print","url":""},"checked":false,"children":[{"attributes":{"icon":"","url":"activiti/task/todo"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"101","parentId":"93","text":"待办任务"},{"attributes":{"icon":"fa fa-sort-amount-asc","url":"activiti/model"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"94","parentId":"93","text":"模型管理"},{"attributes":{"icon":"fa fa-flag","url":"activiti/process"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"96","parentId":"93","text":"流程管理"}],"hasChildren":true,"hasParent":false,"id":"93","parentId":"0","text":"工作流程"},{"attributes":{"icon":"fa fa-rss","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-edit","url":"/blog/bContent/add"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"68","parentId":"49","text":"发布文章"},{"(String), 127.0.0.1(String), 2019-06-04 16:20:53.789(Timestamp)
2019-06-04 16:20:53 -请求地址 : http://localhost:8888/main
2019-06-04 16:20:53 -HTTP METHOD : GET
2019-06-04 16:20:53 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-04 16:20:53 -参数 : []
2019-06-04 16:20:53 -耗时 : 0
2019-06-04 16:20:53 -返回值 : main
2019-06-04 16:20:54 -请求地址 : http://localhost:8888/oa/notify/message
2019-06-04 16:20:54 -HTTP METHOD : GET
2019-06-04 16:20:54 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-06-04 16:20:54 -参数 : []
2019-06-04 16:20:54 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-06-04 16:20:54 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-06-04 16:20:54 -<==      Total: 0
2019-06-04 16:20:54 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-06-04 16:20:54 -==> Parameters: 1(Long), 0(String)
2019-06-04 16:20:54 -<==      Total: 1
2019-06-04 16:20:54 -耗时 : 3
2019-06-04 16:20:54 -返回值 : com.bootdo.common.utils.PageUtils@5e61ae6f
2019-06-04 16:20:54 -请求地址 : http://localhost:8888/main
2019-06-04 16:20:54 -HTTP METHOD : GET
2019-06-04 16:20:54 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-04 16:20:54 -参数 : []
2019-06-04 16:20:54 -耗时 : 0
2019-06-04 16:20:54 -返回值 : main
2019-06-04 16:20:54 -<==    Updates: 1
2019-06-04 16:20:55 -请求地址 : http://localhost:8888/xjbg/room/roomMng
2019-06-04 16:20:55 -HTTP METHOD : GET
2019-06-04 16:20:55 -CLASS_METHOD : com.bootdo.xjbg.controller.RoomController.roomMng
2019-06-04 16:20:55 -参数 : [{}]
2019-06-04 16:20:55 -==>  Preparing: select `id`,`room_no`,`room_type`,`floor`,`room_state`,`price`,`create_time`,`update_time`,`create_user`,`update_user` from xjbg_room 
2019-06-04 16:20:55 -==> Parameters: 
2019-06-04 16:20:55 -<==      Total: 8
2019-06-04 16:20:55 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 16:20:55 -==> Parameters: room_type(String)
2019-06-04 16:20:55 -<==      Total: 7
2019-06-04 16:20:55 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 16:20:55 -==> Parameters: floor(String)
2019-06-04 16:20:55 -<==      Total: 5
2019-06-04 16:20:55 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 16:20:55 -==> Parameters: room_state(String)
2019-06-04 16:20:55 -<==      Total: 2
2019-06-04 16:20:55 -==>  Preparing: select * from sys_user 
2019-06-04 16:20:55 -==> Parameters: 
2019-06-04 16:20:55 -<==      Total: 11
2019-06-04 16:20:55 -耗时 : 7
2019-06-04 16:20:55 -返回值 : xjbg/room/roomMng
2019-06-04 16:20:55 -请求地址 : http://localhost:8888/xjbg/room/operation/1
2019-06-04 16:20:55 -HTTP METHOD : GET
2019-06-04 16:20:55 -CLASS_METHOD : com.bootdo.xjbg.controller.RoomController.operation
2019-06-04 16:20:55 -参数 : [1, {}]
2019-06-04 16:20:55 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 16:20:55 -==> Parameters: room_type(String)
2019-06-04 16:20:55 -<==      Total: 7
2019-06-04 16:20:55 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 16:20:55 -==> Parameters: floor(String)
2019-06-04 16:20:55 -<==      Total: 5
2019-06-04 16:20:55 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 16:20:55 -==> Parameters: room_state(String)
2019-06-04 16:20:55 -<==      Total: 2
2019-06-04 16:20:55 -==>  Preparing: select * from sys_user 
2019-06-04 16:20:55 -==> Parameters: 
2019-06-04 16:20:55 -<==      Total: 11
2019-06-04 16:20:55 -==>  Preparing: select `id`,`product_name`,`purchase_price`,`selling_price`,`product_pic`,`create_time`,`create_user`,`update_time`,`update_user` from xjbg_product order by id desc 
2019-06-04 16:20:55 -==> Parameters: 
2019-06-04 16:20:55 -<==      Total: 5
2019-06-04 16:20:55 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 16:20:55 -==> Parameters: order_type(String)
2019-06-04 16:20:55 -<==      Total: 3
2019-06-04 16:20:55 -==>  Preparing: select `id`,`room_no`,`room_type`,`floor`,`room_state`,`price`,`create_time`,`update_time`,`create_user`,`update_user` from xjbg_room where id = ? 
2019-06-04 16:20:55 -==> Parameters: 1(Integer)
2019-06-04 16:20:55 -<==      Total: 1
2019-06-04 16:20:55 -耗时 : 10
2019-06-04 16:20:55 -返回值 : xjbg/room/operation
2019-06-04 16:23:40 -请求地址 : http://localhost:8888/index
2019-06-04 16:23:40 -HTTP METHOD : GET
2019-06-04 16:23:40 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-06-04 16:23:40 -参数 : [{}]
2019-06-04 16:23:40 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-06-04 16:23:40 -==> Parameters: 1(Long)
2019-06-04 16:23:40 -<==      Total: 34
2019-06-04 16:23:40 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-06-04 16:23:40 -==> Parameters: 144(Long)
2019-06-04 16:23:40 -<==      Total: 1
2019-06-04 16:23:40 -耗时 : 20
2019-06-04 16:23:40 -返回值 : index_v1
2019-06-04 16:23:40 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-04 16:23:40 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 20(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","text":"基础管理"},{"attributes":{"icon":"fa fa-hotel","url":""},"checked":false,"children":[{"attributes":{"icon":"","url":"/xjbg/room/roomMng"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"105","text":"开房"},{"attributes":{"icon":"fa fa-bed","url":"/xjbg/room"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"106","parentId":"105","text":"房间管理"},{"attributes":{"icon":"","url":"/xjbg/product"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"105","text":"商品管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"欣吉宾馆"},{"attributes":{"icon":"fa fa-commenting","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user","url":"/weixin/weixinUser"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"109","text":"用户管理"}],"hasChildren":true,"hasParent":false,"id":"109","parentId":"0","text":"微信管理"},{"attributes":{"icon":"fa fa-desktop"},"checked":false,"children":[{"attributes":{"icon":"fa fa-user","url":"sys/user/"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"6","parentId":"3","text":"用户管理"},{"attributes":{"icon":"fa fa-paw","url":"sys/role"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"7","parentId":"3","text":"角色管理"},{"attributes":{"icon":"fa fa-th-list","url":"sys/menu/"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"3","text":"系统菜单"},{"attributes":{"icon":"fa fa-users","url":"/system/sysDept"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"73","parentId":"3","text":"部门管理"}],"hasChildren":true,"hasParent":false,"id":"3","parentId":"0","text":"系统管理"},{"attributes":{"icon":"fa fa-gear","url":""},"checked":false,"children":[{"attributes":{"icon":"","url":"/swagger-ui.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"104","parentId":"77","text":"swagger"},{"attributes":{"icon":"fa fa-code","url":"common/generator"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"48","parentId":"77","text":"代码生成"},{"attributes":{"icon":"fa fa-hourglass-1","url":"common/job"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"72","parentId":"77","text":"计划任务"}],"hasChildren":true,"hasParent":false,"id":"77","parentId":"0","text":"系统工具"},{"attributes":{"icon":"fa fa-video-camera","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user","url":"sys/online"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"92","parentId":"91","text":"在线用户"},{"attributes":{"icon":"fa fa-warning","url":"common/log"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"27","parentId":"91","text":"系统日志"},{"attributes":{"icon":"fa fa-caret-square-o-right","url":"/druid/index.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"57","parentId":"91","text":"运行监控"}],"hasChildren":true,"hasParent":false,"id":"91","parentId":"0","text":"系统监控"},{"attributes":{"icon":"fa fa-laptop","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-pencil-square","url":"oa/notify"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"85","parentId":"84","text":"通知公告"},{"attributes":{"icon":"fa fa-envelope-square","url":"oa/notify/selfNotify"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"90","parentId":"84","text":"我的通知"}],"hasChildren":true,"hasParent":false,"id":"84","parentId":"0","text":"办公管理"},{"attributes":{"icon":"fa fa-print","url":""},"checked":false,"children":[{"attributes":{"icon":"","url":"activiti/task/todo"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"101","parentId":"93","text":"待办任务"},{"attributes":{"icon":"fa fa-sort-amount-asc","url":"activiti/model"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"94","parentId":"93","text":"模型管理"},{"attributes":{"icon":"fa fa-flag","url":"activiti/process"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"96","parentId":"93","text":"流程管理"}],"hasChildren":true,"hasParent":false,"id":"93","parentId":"0","text":"工作流程"},{"attributes":{"icon":"fa fa-rss","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-edit","url":"/blog/bContent/add"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"68","parentId":"49","text":"发布文章"},{"(String), 127.0.0.1(String), 2019-06-04 16:23:40.181(Timestamp)
2019-06-04 16:23:40 -<==    Updates: 1
2019-06-04 16:23:40 -请求地址 : http://localhost:8888/main
2019-06-04 16:23:40 -HTTP METHOD : GET
2019-06-04 16:23:40 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-04 16:23:40 -参数 : []
2019-06-04 16:23:40 -耗时 : 1
2019-06-04 16:23:40 -返回值 : main
2019-06-04 16:23:40 -请求地址 : http://localhost:8888/oa/notify/message
2019-06-04 16:23:40 -HTTP METHOD : GET
2019-06-04 16:23:40 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-06-04 16:23:40 -参数 : []
2019-06-04 16:23:40 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-06-04 16:23:40 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-06-04 16:23:40 -<==      Total: 0
2019-06-04 16:23:40 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-06-04 16:23:40 -==> Parameters: 1(Long), 0(String)
2019-06-04 16:23:40 -<==      Total: 1
2019-06-04 16:23:40 -耗时 : 3
2019-06-04 16:23:40 -返回值 : com.bootdo.common.utils.PageUtils@4875d5a8
2019-06-04 16:23:40 -请求地址 : http://localhost:8888/main
2019-06-04 16:23:40 -HTTP METHOD : GET
2019-06-04 16:23:40 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-04 16:23:40 -参数 : []
2019-06-04 16:23:40 -耗时 : 0
2019-06-04 16:23:40 -返回值 : main
2019-06-04 16:23:42 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-06-04 16:23:42 -==> Parameters: 1(Long)
2019-06-04 16:23:42 -<==      Total: 58
2019-06-04 16:23:42 -请求地址 : http://localhost:8888/xjbg/room/roomMng
2019-06-04 16:23:42 -HTTP METHOD : GET
2019-06-04 16:23:42 -CLASS_METHOD : com.bootdo.xjbg.controller.RoomController.roomMng
2019-06-04 16:23:42 -参数 : [{}]
2019-06-04 16:23:42 -==>  Preparing: select `id`,`room_no`,`room_type`,`floor`,`room_state`,`price`,`create_time`,`update_time`,`create_user`,`update_user` from xjbg_room 
2019-06-04 16:23:42 -==> Parameters: 
2019-06-04 16:23:42 -<==      Total: 8
2019-06-04 16:23:42 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 16:23:42 -==> Parameters: room_type(String)
2019-06-04 16:23:42 -<==      Total: 7
2019-06-04 16:23:42 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 16:23:42 -==> Parameters: floor(String)
2019-06-04 16:23:42 -<==      Total: 5
2019-06-04 16:23:42 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 16:23:42 -==> Parameters: room_state(String)
2019-06-04 16:23:42 -<==      Total: 2
2019-06-04 16:23:42 -==>  Preparing: select * from sys_user 
2019-06-04 16:23:42 -==> Parameters: 
2019-06-04 16:23:42 -<==      Total: 11
2019-06-04 16:23:42 -耗时 : 5
2019-06-04 16:23:42 -返回值 : xjbg/room/roomMng
2019-06-04 16:23:43 -请求地址 : http://localhost:8888/xjbg/room/operation/1
2019-06-04 16:23:43 -HTTP METHOD : GET
2019-06-04 16:23:43 -CLASS_METHOD : com.bootdo.xjbg.controller.RoomController.operation
2019-06-04 16:23:43 -参数 : [1, {}]
2019-06-04 16:23:43 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 16:23:43 -==> Parameters: room_type(String)
2019-06-04 16:23:43 -<==      Total: 7
2019-06-04 16:23:43 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 16:23:43 -==> Parameters: floor(String)
2019-06-04 16:23:43 -<==      Total: 5
2019-06-04 16:23:43 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 16:23:43 -==> Parameters: room_state(String)
2019-06-04 16:23:43 -<==      Total: 2
2019-06-04 16:23:43 -==>  Preparing: select * from sys_user 
2019-06-04 16:23:43 -==> Parameters: 
2019-06-04 16:23:43 -<==      Total: 11
2019-06-04 16:23:43 -==>  Preparing: select `id`,`product_name`,`purchase_price`,`selling_price`,`product_pic`,`create_time`,`create_user`,`update_time`,`update_user` from xjbg_product order by id desc 
2019-06-04 16:23:43 -==> Parameters: 
2019-06-04 16:23:43 -<==      Total: 5
2019-06-04 16:23:43 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 16:23:43 -==> Parameters: order_type(String)
2019-06-04 16:23:43 -<==      Total: 3
2019-06-04 16:23:43 -==>  Preparing: select `id`,`room_no`,`room_type`,`floor`,`room_state`,`price`,`create_time`,`update_time`,`create_user`,`update_user` from xjbg_room where id = ? 
2019-06-04 16:23:43 -==> Parameters: 1(Integer)
2019-06-04 16:23:43 -<==      Total: 1
2019-06-04 16:23:43 -耗时 : 12
2019-06-04 16:23:43 -返回值 : xjbg/room/operation
2019-06-04 16:23:47 -请求地址 : http://localhost:8888/xjbg/room/operation/1
2019-06-04 16:23:47 -HTTP METHOD : GET
2019-06-04 16:23:47 -CLASS_METHOD : com.bootdo.xjbg.controller.RoomController.operation
2019-06-04 16:23:47 -参数 : [1, {}]
2019-06-04 16:23:47 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 16:23:47 -==> Parameters: room_type(String)
2019-06-04 16:23:47 -<==      Total: 7
2019-06-04 16:23:47 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 16:23:47 -==> Parameters: floor(String)
2019-06-04 16:23:47 -<==      Total: 5
2019-06-04 16:23:47 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 16:23:47 -==> Parameters: room_state(String)
2019-06-04 16:23:47 -<==      Total: 2
2019-06-04 16:23:47 -==>  Preparing: select * from sys_user 
2019-06-04 16:23:47 -==> Parameters: 
2019-06-04 16:23:47 -<==      Total: 11
2019-06-04 16:23:47 -==>  Preparing: select `id`,`product_name`,`purchase_price`,`selling_price`,`product_pic`,`create_time`,`create_user`,`update_time`,`update_user` from xjbg_product order by id desc 
2019-06-04 16:23:47 -==> Parameters: 
2019-06-04 16:23:47 -<==      Total: 5
2019-06-04 16:23:47 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 16:23:47 -==> Parameters: order_type(String)
2019-06-04 16:23:47 -<==      Total: 3
2019-06-04 16:23:47 -==>  Preparing: select `id`,`room_no`,`room_type`,`floor`,`room_state`,`price`,`create_time`,`update_time`,`create_user`,`update_user` from xjbg_room where id = ? 
2019-06-04 16:23:47 -==> Parameters: 1(Integer)
2019-06-04 16:23:47 -<==      Total: 1
2019-06-04 16:23:47 -耗时 : 10
2019-06-04 16:23:47 -返回值 : xjbg/room/operation
2019-06-04 16:24:00 -请求地址 : http://localhost:8888/xjbg/room/operation/1
2019-06-04 16:24:00 -HTTP METHOD : GET
2019-06-04 16:24:00 -CLASS_METHOD : com.bootdo.xjbg.controller.RoomController.operation
2019-06-04 16:24:00 -参数 : [1, {}]
2019-06-04 16:24:00 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 16:24:00 -==> Parameters: room_type(String)
2019-06-04 16:24:00 -<==      Total: 7
2019-06-04 16:24:00 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 16:24:00 -==> Parameters: floor(String)
2019-06-04 16:24:00 -<==      Total: 5
2019-06-04 16:24:00 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 16:24:00 -==> Parameters: room_state(String)
2019-06-04 16:24:00 -<==      Total: 2
2019-06-04 16:24:00 -==>  Preparing: select * from sys_user 
2019-06-04 16:24:00 -==> Parameters: 
2019-06-04 16:24:00 -<==      Total: 11
2019-06-04 16:24:00 -==>  Preparing: select `id`,`product_name`,`purchase_price`,`selling_price`,`product_pic`,`create_time`,`create_user`,`update_time`,`update_user` from xjbg_product order by id desc 
2019-06-04 16:24:00 -==> Parameters: 
2019-06-04 16:24:00 -<==      Total: 5
2019-06-04 16:24:00 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 16:24:00 -==> Parameters: order_type(String)
2019-06-04 16:24:00 -<==      Total: 3
2019-06-04 16:24:00 -==>  Preparing: select `id`,`room_no`,`room_type`,`floor`,`room_state`,`price`,`create_time`,`update_time`,`create_user`,`update_user` from xjbg_room where id = ? 
2019-06-04 16:24:00 -==> Parameters: 1(Integer)
2019-06-04 16:24:00 -<==      Total: 1
2019-06-04 16:24:00 -耗时 : 11
2019-06-04 16:24:00 -返回值 : xjbg/room/operation
2019-06-04 16:24:58 -Starting BootdoApplication on LAPTOP-ELP5M68R with PID 15216 (D:\workspace\bootdo\bootdo\target\classes started by Lenovo in D:\workspace\bootdo\bootdo)
2019-06-04 16:24:58 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-06-04 16:24:58 -The following profiles are active: dev
2019-06-04 16:24:58 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@7979016: startup date [Tue Jun 04 16:24:58 CST 2019]; root of context hierarchy
2019-06-04 16:25:00 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-06-04 16:25:01 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$f2629150] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-04 16:25:01 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$e4bbbff7] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-04 16:25:01 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-04 16:25:01 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-04 16:25:01 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-04 16:25:01 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-06-04 16:25:01 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-06-04 16:25:01 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-04 16:25:01 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-04 16:25:02 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-04 16:25:02 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-04 16:25:02 -Tomcat initialized with port(s): 8888 (http)
2019-06-04 16:25:02 -Initializing ProtocolHandler ["http-nio-8888"]
2019-06-04 16:25:02 -Starting service [Tomcat]
2019-06-04 16:25:02 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-06-04 16:25:02 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [F:\yff\jdk1.8\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;D:\app\Lenovo\product\11.2.0\dbhome_1\bin;\bin;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\iCLS\;C:\Program Files\Intel\Intel(R) Management Engine Components\iCLS\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;F:\yff\jdk1.8\BIN;D:\Program Files\develop\apache-maven-3.3.9\BIN;D:\Program Files\matlab\v81\runtime\win64;D:\Program Files\matlab\v81\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;F:\yff\redis64;D:\Program Files\Notepad++;D:\Program Files\mysql-5.7.24-winx64\BIN;D:\Program Files\matlab\v81\bin\win64;D:\Program Files\matlab\v81\runtime\win64;D:\Program Files\develop\SVN\bin;D:\Program Files\develop\apache-tomcat-8.5.8-ltcins-common-4280\bin;D:\Program Files\develop\apache-tomcat-8.5.8-ltcins-common-4080\bin;D:\Program Files\develop\zookeeper-3.4.10\BIN;D:\Program Files\develop\Git\cmd;C:\Users\Lenovo\AppData\Local\Microsoft\WindowsApps;C:\Users\Lenovo\AppData\Local\GitHubDesktop\bin;.]
2019-06-04 16:25:02 -Initializing Spring embedded WebApplicationContext
2019-06-04 16:25:02 -Root WebApplicationContext: initialization completed in 4154 ms
2019-06-04 16:25:03 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-06-04 16:25:03 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-06-04 16:25:03 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-06-04 16:25:03 -Mapping filter: 'requestContextFilter' to: [/*]
2019-06-04 16:25:03 -Filter xssFilter was not registered (disabled)
2019-06-04 16:25:03 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-06-04 16:25:03 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-06-04 16:25:03 -Servlet statViewServlet mapped to [/druid/*]
2019-06-04 16:25:03 -Servlet dispatcherServlet mapped to [/]
2019-06-04 16:25:03 -{dataSource-1} inited
2019-06-04 16:25:04 -ProcessEngine default created
2019-06-04 16:25:04 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@7979016: startup date [Tue Jun 04 16:24:58 CST 2019]; root of context hierarchy
2019-06-04 16:25:04 -Using default implementation for ThreadExecutor
2019-06-04 16:25:04 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-06-04 16:25:04 -Quartz Scheduler v.2.2.1 created.
2019-06-04 16:25:04 -RAMJobStore initialized.
2019-06-04 16:25:04 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-06-04 16:25:04 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-06-04 16:25:04 -Quartz scheduler version: 2.2.1
2019-06-04 16:25:04 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@58b35086
2019-06-04 16:25:04 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-06-04 16:25:05 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-06-04 16:25:05 -Mapped "{[/activiti/model/{id}],methods=[DELETE]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.ModelController.remove(java.lang.String)
2019-06-04 16:25:05 -Mapped "{[/activiti/model/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.activiti.controller.ModelController.list(int,int)
2019-06-04 16:25:05 -Mapped "{[/activiti/model/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.ModelController.batchRemove(java.lang.String[])
2019-06-04 16:25:05 -Mapped "{[/activiti/model],methods=[GET]}" onto org.springframework.web.servlet.ModelAndView com.bootdo.activiti.controller.ModelController.model()
2019-06-04 16:25:05 -Mapped "{[/activiti/model/export/{id}],methods=[GET]}" onto public void com.bootdo.activiti.controller.ModelController.exportToXml(java.lang.String,javax.servlet.http.HttpServletResponse)
2019-06-04 16:25:05 -Mapped "{[/activiti/model/deploy/{id}],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.ModelController.deploy(java.lang.String) throws java.lang.Exception
2019-06-04 16:25:05 -Mapped "{[/activiti/model/add]}" onto public void com.bootdo.activiti.controller.ModelController.newModel(javax.servlet.http.HttpServletResponse) throws java.io.UnsupportedEncodingException
2019-06-04 16:25:05 -Mapped "{[/activiti/editor/stencilset],methods=[GET],produces=[application/json;charset=utf-8]}" onto public java.lang.String com.bootdo.activiti.controller.ModelController.getStencilset()
2019-06-04 16:25:05 -Mapped "{[/activiti/model/{modelId}/save],methods=[PUT]}" onto public void com.bootdo.activiti.controller.ModelController.saveModel(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2019-06-04 16:25:05 -Mapped "{[/activiti/model/edit/{id}],methods=[GET]}" onto public void com.bootdo.activiti.controller.ModelController.edit(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-06-04 16:25:05 -Mapped "{[/activiti/model/{modelId}/json],methods=[GET]}" onto public com.fasterxml.jackson.databind.node.ObjectNode com.bootdo.activiti.controller.ModelController.getEditorJson(java.lang.String)
2019-06-04 16:25:05 -Mapped "{[/activiti/process/add],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.activiti.controller.ProcessController.add()
2019-06-04 16:25:05 -Mapped "{[/activiti/process/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.ProcessController.remove(java.lang.String)
2019-06-04 16:25:05 -Mapped "{[/activiti/process/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.activiti.controller.ProcessController.list(int,int)
2019-06-04 16:25:05 -Mapped "{[/activiti/process/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.ProcessController.batchRemove(java.lang.String[])
2019-06-04 16:25:05 -Mapped "{[/activiti/process],methods=[GET]}" onto org.springframework.web.servlet.ModelAndView com.bootdo.activiti.controller.ProcessController.process()
2019-06-04 16:25:05 -Mapped "{[/activiti/process/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.ProcessController.deploy(java.lang.String,java.lang.String,org.springframework.web.multipart.MultipartFile)
2019-06-04 16:25:05 -Mapped "{[/activiti/process/resource/read/{xml}/{id}]}" onto public void com.bootdo.activiti.controller.ProcessController.resourceRead(java.lang.String,java.lang.String,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-06-04 16:25:05 -Mapped "{[/activiti/process/convertToModel/{procDefId}]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.ProcessController.convertToModel(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes) throws java.io.UnsupportedEncodingException,javax.xml.stream.XMLStreamException
2019-06-04 16:25:05 -Mapped "{[/act/salary/form],methods=[GET]}" onto java.lang.String com.bootdo.activiti.controller.SalaryController.add()
2019-06-04 16:25:05 -Mapped "{[/act/salary/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.SalaryController.remove(java.lang.String)
2019-06-04 16:25:05 -Mapped "{[/act/salary/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.SalaryController.remove(java.lang.String[])
2019-06-04 16:25:05 -Mapped "{[/act/salary/update]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.SalaryController.update(com.bootdo.activiti.domain.SalaryDO)
2019-06-04 16:25:05 -Mapped "{[/act/salary/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.activiti.controller.SalaryController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-04 16:25:05 -Mapped "{[/act/salary/form/{taskId}],methods=[GET]}" onto java.lang.String com.bootdo.activiti.controller.SalaryController.edit(java.lang.String,org.springframework.ui.Model)
2019-06-04 16:25:05 -Mapped "{[/act/salary],methods=[GET]}" onto java.lang.String com.bootdo.activiti.controller.SalaryController.Salary()
2019-06-04 16:25:05 -Mapped "{[/act/salary/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.SalaryController.saveOrUpdate(com.bootdo.activiti.domain.SalaryDO)
2019-06-04 16:25:05 -Mapped "{[/activiti/task/form/{procDefId}/{taskId}],methods=[GET]}" onto public void com.bootdo.activiti.controller.TaskController.form(java.lang.String,java.lang.String,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-06-04 16:25:05 -Mapped "{[/activiti/task/gotoList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.activiti.controller.TaskController.list(int,int)
2019-06-04 16:25:05 -Mapped "{[/activiti/task/trace/photo/{procDefId}/{execId}]}" onto public void com.bootdo.activiti.controller.TaskController.tracePhoto(java.lang.String,java.lang.String,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-06-04 16:25:05 -Mapped "{[/activiti/task/goto],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.activiti.controller.TaskController.gotoTask()
2019-06-04 16:25:05 -Mapped "{[/activiti/task/form/{procDefId}],methods=[GET]}" onto public void com.bootdo.activiti.controller.TaskController.startForm(java.lang.String,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-06-04 16:25:05 -Mapped "{[/activiti/task/todoList],methods=[GET]}" onto java.util.List<com.bootdo.activiti.vo.TaskVO> com.bootdo.activiti.controller.TaskController.todoList()
2019-06-04 16:25:05 -Mapped "{[/activiti/task/todo],methods=[GET]}" onto org.springframework.web.servlet.ModelAndView com.bootdo.activiti.controller.TaskController.todo()
2019-06-04 16:25:05 -Mapped "{[/blog/open/post/{cid}],methods=[GET]}" onto java.lang.String com.bootdo.blog.controller.BlogController.post(java.lang.Long,org.springframework.ui.Model)
2019-06-04 16:25:05 -Mapped "{[/blog],methods=[GET]}" onto java.lang.String com.bootdo.blog.controller.BlogController.blog()
2019-06-04 16:25:05 -Mapped "{[/blog/open/page/{categories}],methods=[GET]}" onto java.lang.String com.bootdo.blog.controller.BlogController.about(java.lang.String,org.springframework.ui.Model)
2019-06-04 16:25:05 -Mapped "{[/blog/open/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.blog.controller.BlogController.opentList(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-04 16:25:05 -Mapped "{[/blog/bContent/add],methods=[GET]}" onto java.lang.String com.bootdo.blog.controller.ContentController.add()
2019-06-04 16:25:05 -Mapped "{[/blog/bContent/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.blog.controller.ContentController.remove(java.lang.Long)
2019-06-04 16:25:05 -Mapped "{[/blog/bContent/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.blog.controller.ContentController.remove(java.lang.Long[])
2019-06-04 16:25:05 -Mapped "{[/blog/bContent/update]}" onto public com.bootdo.common.utils.R com.bootdo.blog.controller.ContentController.update(com.bootdo.blog.domain.ContentDO)
2019-06-04 16:25:05 -Mapped "{[/blog/bContent/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.blog.controller.ContentController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-04 16:25:05 -Mapped "{[/blog/bContent/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.blog.controller.ContentController.save(com.bootdo.blog.domain.ContentDO)
2019-06-04 16:25:05 -Mapped "{[/blog/bContent/edit/{cid}],methods=[GET]}" onto java.lang.String com.bootdo.blog.controller.ContentController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-04 16:25:05 -Mapped "{[/blog/bContent],methods=[GET]}" onto java.lang.String com.bootdo.blog.controller.ContentController.bContent()
2019-06-04 16:25:05 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-06-04 16:25:05 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-06-04 16:25:05 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-06-04 16:25:05 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-06-04 16:25:05 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-04 16:25:05 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-06-04 16:25:05 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-06-04 16:25:05 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-04 16:25:05 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-06-04 16:25:05 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-06-04 16:25:05 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-06-04 16:25:05 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-06-04 16:25:05 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-06-04 16:25:05 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-06-04 16:25:05 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-06-04 16:25:05 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-04 16:25:05 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-06-04 16:25:05 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-06-04 16:25:05 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-04 16:25:05 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-06-04 16:25:05 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-06-04 16:25:05 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-04 16:25:05 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-06-04 16:25:05 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-06-04 16:25:05 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-06-04 16:25:05 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-06-04 16:25:05 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-06-04 16:25:05 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-06-04 16:25:05 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-06-04 16:25:05 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-06-04 16:25:05 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-06-04 16:25:05 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-04 16:25:05 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-06-04 16:25:05 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-06-04 16:25:05 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-04 16:25:05 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-06-04 16:25:05 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-06-04 16:25:05 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-06-04 16:25:05 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-06-04 16:25:05 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-04 16:25:05 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-06-04 16:25:05 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-06-04 16:25:05 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-06-04 16:25:05 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-06-04 16:25:05 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-06-04 16:25:05 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-06-04 16:25:05 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-06-04 16:25:05 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-06-04 16:25:05 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-04 16:25:05 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-06-04 16:25:05 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-06-04 16:25:05 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-04 16:25:05 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-06-04 16:25:05 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-06-04 16:25:05 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-04 16:25:05 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-06-04 16:25:05 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-06-04 16:25:05 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-06-04 16:25:05 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-06-04 16:25:05 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-06-04 16:25:05 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-06-04 16:25:05 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-06-04 16:25:05 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-04 16:25:05 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-06-04 16:25:05 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-06-04 16:25:05 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-06-04 16:25:05 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-06-04 16:25:05 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-06-04 16:25:05 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-06-04 16:25:05 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String)
2019-06-04 16:25:05 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-06-04 16:25:05 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-06-04 16:25:05 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-06-04 16:25:05 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-06-04 16:25:05 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-04 16:25:05 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-06-04 16:25:05 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-06-04 16:25:05 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-06-04 16:25:05 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-06-04 16:25:05 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-06-04 16:25:05 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-06-04 16:25:05 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-06-04 16:25:05 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-06-04 16:25:05 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-06-04 16:25:05 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-06-04 16:25:05 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-06-04 16:25:05 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-06-04 16:25:05 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-04 16:25:05 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-06-04 16:25:05 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-06-04 16:25:05 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-06-04 16:25:05 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-06-04 16:25:05 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-04 16:25:05 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-06-04 16:25:05 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-06-04 16:25:05 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-06-04 16:25:05 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-04 16:25:05 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-06-04 16:25:05 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-06-04 16:25:05 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-06-04 16:25:05 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-06-04 16:25:05 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-06-04 16:25:05 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-06-04 16:25:05 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-06-04 16:25:05 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-06-04 16:25:05 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-06-04 16:25:05 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-06-04 16:25:05 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-06-04 16:25:05 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-06-04 16:25:05 -Mapped "{[/wxServer],methods=[GET]}" onto public void org.weixin4j.spring.web.WeixinJieruController.get(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-06-04 16:25:05 -Mapped "{[/wxServer],methods=[POST]}" onto public void org.weixin4j.spring.web.WeixinJieruController.post(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-06-04 16:25:05 -Mapped "{[/weixin/weixinUser/add],methods=[GET]}" onto java.lang.String com.bootdo.weixin.controller.WeixinUserController.add()
2019-06-04 16:25:05 -Mapped "{[/weixin/weixinUser/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.weixin.controller.WeixinUserController.remove(java.lang.Long)
2019-06-04 16:25:05 -Mapped "{[/weixin/weixinUser/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.weixin.controller.WeixinUserController.remove(java.lang.Long[])
2019-06-04 16:25:05 -Mapped "{[/weixin/weixinUser/update]}" onto public com.bootdo.common.utils.R com.bootdo.weixin.controller.WeixinUserController.update(com.bootdo.weixin.domain.WeixinUserDO)
2019-06-04 16:25:05 -Mapped "{[/weixin/weixinUser/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.weixin.controller.WeixinUserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-04 16:25:05 -Mapped "{[/weixin/weixinUser/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.weixin.controller.WeixinUserController.save(com.bootdo.weixin.domain.WeixinUserDO)
2019-06-04 16:25:05 -Mapped "{[/weixin/weixinUser/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.weixin.controller.WeixinUserController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-04 16:25:05 -Mapped "{[/weixin/weixinUser],methods=[GET]}" onto java.lang.String com.bootdo.weixin.controller.WeixinUserController.WeixinUser()
2019-06-04 16:25:05 -Mapped "{[/xjbg/order/add],methods=[GET]}" onto java.lang.String com.bootdo.xjbg.controller.OrderController.add()
2019-06-04 16:25:05 -Mapped "{[/xjbg/order/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.xjbg.controller.OrderController.remove(java.lang.Long)
2019-06-04 16:25:05 -Mapped "{[/xjbg/order/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.xjbg.controller.OrderController.remove(java.lang.Long[])
2019-06-04 16:25:05 -Mapped "{[/xjbg/order/update]}" onto public com.bootdo.common.utils.R com.bootdo.xjbg.controller.OrderController.update(com.bootdo.xjbg.domain.OrderDO)
2019-06-04 16:25:05 -Mapped "{[/xjbg/order/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.xjbg.controller.OrderController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-04 16:25:05 -Mapped "{[/xjbg/order/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.xjbg.controller.OrderController.save(com.bootdo.xjbg.domain.OrderDO)
2019-06-04 16:25:05 -Mapped "{[/xjbg/order/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.xjbg.controller.OrderController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-04 16:25:05 -Mapped "{[/xjbg/order],methods=[GET]}" onto java.lang.String com.bootdo.xjbg.controller.OrderController.Order()
2019-06-04 16:25:05 -Mapped "{[/xjbg/orderItem/add],methods=[GET]}" onto java.lang.String com.bootdo.xjbg.controller.OrderItemController.add()
2019-06-04 16:25:05 -Mapped "{[/xjbg/orderItem/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.xjbg.controller.OrderItemController.remove(java.lang.Long)
2019-06-04 16:25:05 -Mapped "{[/xjbg/orderItem/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.xjbg.controller.OrderItemController.remove(java.lang.Long[])
2019-06-04 16:25:05 -Mapped "{[/xjbg/orderItem/update]}" onto public com.bootdo.common.utils.R com.bootdo.xjbg.controller.OrderItemController.update(com.bootdo.xjbg.domain.OrderItemDO)
2019-06-04 16:25:05 -Mapped "{[/xjbg/orderItem/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.xjbg.controller.OrderItemController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-04 16:25:05 -Mapped "{[/xjbg/orderItem/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.xjbg.controller.OrderItemController.save(com.bootdo.xjbg.domain.OrderItemDO)
2019-06-04 16:25:05 -Mapped "{[/xjbg/orderItem/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.xjbg.controller.OrderItemController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-04 16:25:05 -Mapped "{[/xjbg/orderItem],methods=[GET]}" onto java.lang.String com.bootdo.xjbg.controller.OrderItemController.OrderItem()
2019-06-04 16:25:05 -Mapped "{[/xjbg/product/add],methods=[GET]}" onto java.lang.String com.bootdo.xjbg.controller.ProductController.add()
2019-06-04 16:25:05 -Mapped "{[/xjbg/product/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.xjbg.controller.ProductController.remove(java.lang.Long)
2019-06-04 16:25:05 -Mapped "{[/xjbg/product/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.xjbg.controller.ProductController.remove(java.lang.Long[])
2019-06-04 16:25:05 -Mapped "{[/xjbg/product/update]}" onto public com.bootdo.common.utils.R com.bootdo.xjbg.controller.ProductController.update(com.bootdo.xjbg.domain.ProductDO,org.springframework.web.multipart.MultipartFile[])
2019-06-04 16:25:05 -Mapped "{[/xjbg/product/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.xjbg.controller.ProductController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-04 16:25:05 -Mapped "{[/xjbg/product/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.xjbg.controller.ProductController.save(com.bootdo.xjbg.domain.ProductDO,org.springframework.web.multipart.MultipartFile[])
2019-06-04 16:25:05 -Mapped "{[/xjbg/product/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.xjbg.controller.ProductController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-04 16:25:05 -Mapped "{[/xjbg/product],methods=[GET]}" onto java.lang.String com.bootdo.xjbg.controller.ProductController.Product()
2019-06-04 16:25:05 -Mapped "{[/xjbg/room/add],methods=[GET]}" onto java.lang.String com.bootdo.xjbg.controller.RoomController.add(org.springframework.ui.Model)
2019-06-04 16:25:05 -Mapped "{[/xjbg/room/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.xjbg.controller.RoomController.remove(java.lang.Integer[])
2019-06-04 16:25:05 -Mapped "{[/xjbg/room/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.xjbg.controller.RoomController.remove(java.lang.Integer)
2019-06-04 16:25:05 -Mapped "{[/xjbg/room/update]}" onto public com.bootdo.common.utils.R com.bootdo.xjbg.controller.RoomController.update(com.bootdo.xjbg.domain.RoomDO)
2019-06-04 16:25:05 -Mapped "{[/xjbg/room/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.xjbg.controller.RoomController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-04 16:25:05 -Mapped "{[/xjbg/room/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.xjbg.controller.RoomController.save(com.bootdo.xjbg.domain.RoomDO)
2019-06-04 16:25:05 -Mapped "{[/xjbg/room/operation/{roomId}],methods=[GET]}" onto java.lang.String com.bootdo.xjbg.controller.RoomController.operation(java.lang.Integer,org.springframework.ui.Model)
2019-06-04 16:25:05 -Mapped "{[/xjbg/room/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.xjbg.controller.RoomController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-06-04 16:25:05 -Mapped "{[/xjbg/room],methods=[GET]}" onto java.lang.String com.bootdo.xjbg.controller.RoomController.Room(org.springframework.ui.Model)
2019-06-04 16:25:05 -Mapped "{[/xjbg/room/roomMng],methods=[GET]}" onto java.lang.String com.bootdo.xjbg.controller.RoomController.roomMng(org.springframework.ui.Model)
2019-06-04 16:25:05 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-06-04 16:25:05 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-06-04 16:25:05 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-06-04 16:25:05 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-06-04 16:25:06 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-06-04 16:25:06 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-06-04 16:25:06 -Initializing ExecutorService  'brokerChannelExecutor'
2019-06-04 16:25:06 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-06-04 16:25:06 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@7979016: startup date [Tue Jun 04 16:24:58 CST 2019]; root of context hierarchy
2019-06-04 16:25:06 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-06-04 16:25:06 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-06-04 16:25:06 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-06-04 16:25:06 -Mapped URL path [/productPic/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-06-04 16:25:06 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-06-04 16:25:06 -[THYMELEAF][restartedMain] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-06-04 16:25:07 -LiveReload server is running on port 35729
2019-06-04 16:25:07 -Registering beans for JMX exposure on startup
2019-06-04 16:25:07 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-06-04 16:25:07 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-06-04 16:25:07 -Starting beans in phase 2147483647
2019-06-04 16:25:07 -Context refreshed
2019-06-04 16:25:07 -Found 1 custom documentation plugin(s)
2019-06-04 16:25:07 -Scanning for api listing references
2019-06-04 16:25:07 -Generating unique operation named: removeUsingPOST_1
2019-06-04 16:25:07 -Generating unique operation named: addUsingGET_1
2019-06-04 16:25:07 -Generating unique operation named: editUsingGET_1
2019-06-04 16:25:07 -Generating unique operation named: listUsingGET_1
2019-06-04 16:25:08 -Generating unique operation named: removeUsingPOST_2
2019-06-04 16:25:08 -Generating unique operation named: removeUsingPOST_3
2019-06-04 16:25:08 -Generating unique operation named: saveUsingPOST_1
2019-06-04 16:25:08 -Generating unique operation named: updateUsingGET_1
2019-06-04 16:25:08 -Generating unique operation named: updateUsingHEAD_1
2019-06-04 16:25:08 -Generating unique operation named: updateUsingPOST_1
2019-06-04 16:25:08 -Generating unique operation named: updateUsingPUT_1
2019-06-04 16:25:08 -Generating unique operation named: updateUsingPATCH_1
2019-06-04 16:25:08 -Generating unique operation named: updateUsingDELETE_1
2019-06-04 16:25:08 -Generating unique operation named: updateUsingOPTIONS_1
2019-06-04 16:25:08 -Generating unique operation named: updateUsingTRACE_1
2019-06-04 16:25:08 -Generating unique operation named: addUsingGET_2
2019-06-04 16:25:08 -Generating unique operation named: editUsingGET_2
2019-06-04 16:25:08 -Generating unique operation named: listUsingGET_2
2019-06-04 16:25:08 -Generating unique operation named: removeUsingPOST_4
2019-06-04 16:25:08 -Generating unique operation named: removeUsingPOST_5
2019-06-04 16:25:08 -Generating unique operation named: saveUsingPOST_2
2019-06-04 16:25:08 -Generating unique operation named: updateUsingGET_2
2019-06-04 16:25:08 -Generating unique operation named: updateUsingHEAD_2
2019-06-04 16:25:08 -Generating unique operation named: updateUsingPOST_2
2019-06-04 16:25:08 -Generating unique operation named: updateUsingPUT_2
2019-06-04 16:25:08 -Generating unique operation named: updateUsingPATCH_2
2019-06-04 16:25:08 -Generating unique operation named: updateUsingDELETE_2
2019-06-04 16:25:08 -Generating unique operation named: updateUsingOPTIONS_2
2019-06-04 16:25:08 -Generating unique operation named: updateUsingTRACE_2
2019-06-04 16:25:08 -Generating unique operation named: addUsingGET_3
2019-06-04 16:25:08 -Generating unique operation named: editUsingGET_3
2019-06-04 16:25:08 -Generating unique operation named: listUsingGET_3
2019-06-04 16:25:08 -Generating unique operation named: removeUsingPOST_6
2019-06-04 16:25:08 -Generating unique operation named: removeUsingPOST_7
2019-06-04 16:25:08 -Generating unique operation named: saveUsingPOST_3
2019-06-04 16:25:08 -Generating unique operation named: updateUsingGET_3
2019-06-04 16:25:08 -Generating unique operation named: updateUsingHEAD_3
2019-06-04 16:25:08 -Generating unique operation named: updateUsingPOST_3
2019-06-04 16:25:08 -Generating unique operation named: updateUsingPUT_3
2019-06-04 16:25:08 -Generating unique operation named: updateUsingPATCH_3
2019-06-04 16:25:08 -Generating unique operation named: updateUsingDELETE_3
2019-06-04 16:25:08 -Generating unique operation named: updateUsingOPTIONS_3
2019-06-04 16:25:08 -Generating unique operation named: updateUsingTRACE_3
2019-06-04 16:25:08 -Generating unique operation named: editUsingGET_4
2019-06-04 16:25:08 -Generating unique operation named: listUsingGET_4
2019-06-04 16:25:08 -Generating unique operation named: updateUsingPOST_4
2019-06-04 16:25:08 -Generating unique operation named: addUsingGET_4
2019-06-04 16:25:08 -Generating unique operation named: editUsingGET_5
2019-06-04 16:25:08 -Generating unique operation named: infoUsingGET_1
2019-06-04 16:25:08 -Generating unique operation named: infoUsingHEAD_1
2019-06-04 16:25:08 -Generating unique operation named: infoUsingPOST_1
2019-06-04 16:25:08 -Generating unique operation named: infoUsingPUT_1
2019-06-04 16:25:08 -Generating unique operation named: infoUsingPATCH_1
2019-06-04 16:25:08 -Generating unique operation named: infoUsingDELETE_1
2019-06-04 16:25:08 -Generating unique operation named: infoUsingOPTIONS_1
2019-06-04 16:25:08 -Generating unique operation named: infoUsingTRACE_1
2019-06-04 16:25:08 -Generating unique operation named: listUsingGET_5
2019-06-04 16:25:08 -Generating unique operation named: removeUsingPOST_8
2019-06-04 16:25:08 -Generating unique operation named: removeUsingPOST_9
2019-06-04 16:25:08 -Generating unique operation named: saveUsingPOST_4
2019-06-04 16:25:08 -Generating unique operation named: updateUsingPOST_5
2019-06-04 16:25:08 -Generating unique operation named: listUsingGET_6
2019-06-04 16:25:08 -Generating unique operation named: removeUsingPOST_10
2019-06-04 16:25:08 -Generating unique operation named: welcomeUsingGET_1
2019-06-04 16:25:08 -Generating unique operation named: addUsingGET_5
2019-06-04 16:25:08 -Generating unique operation named: editUsingGET_6
2019-06-04 16:25:08 -Generating unique operation named: listUsingGET_7
2019-06-04 16:25:08 -Generating unique operation named: removeUsingPOST_11
2019-06-04 16:25:08 -Generating unique operation named: saveUsingPOST_5
2019-06-04 16:25:08 -Generating unique operation named: treeUsingGET_1
2019-06-04 16:25:08 -Generating unique operation named: treeUsingGET_2
2019-06-04 16:25:08 -Generating unique operation named: updateUsingPOST_6
2019-06-04 16:25:08 -Generating unique operation named: batchRemoveUsingPOST_1
2019-06-04 16:25:08 -Generating unique operation named: editUsingGET_7
2019-06-04 16:25:08 -Generating unique operation named: listUsingGET_8
2019-06-04 16:25:08 -Generating unique operation named: addUsingGET_6
2019-06-04 16:25:08 -Generating unique operation named: editUsingGET_8
2019-06-04 16:25:08 -Generating unique operation named: listUsingGET_9
2019-06-04 16:25:08 -Generating unique operation named: removeUsingPOST_12
2019-06-04 16:25:08 -Generating unique operation named: removeUsingPOST_13
2019-06-04 16:25:08 -Generating unique operation named: saveUsingPOST_6
2019-06-04 16:25:08 -Generating unique operation named: updateUsingGET_4
2019-06-04 16:25:08 -Generating unique operation named: updateUsingHEAD_4
2019-06-04 16:25:08 -Generating unique operation named: updateUsingPOST_7
2019-06-04 16:25:08 -Generating unique operation named: updateUsingPUT_4
2019-06-04 16:25:08 -Generating unique operation named: updateUsingPATCH_4
2019-06-04 16:25:08 -Generating unique operation named: updateUsingDELETE_4
2019-06-04 16:25:08 -Generating unique operation named: updateUsingOPTIONS_4
2019-06-04 16:25:08 -Generating unique operation named: updateUsingTRACE_4
2019-06-04 16:25:08 -Generating unique operation named: addUsingGET_7
2019-06-04 16:25:08 -Generating unique operation named: editUsingGET_9
2019-06-04 16:25:08 -Generating unique operation named: listUsingGET_10
2019-06-04 16:25:08 -Generating unique operation named: removeUsingPOST_14
2019-06-04 16:25:08 -Generating unique operation named: removeUsingPOST_15
2019-06-04 16:25:08 -Generating unique operation named: saveUsingPOST_7
2019-06-04 16:25:08 -Generating unique operation named: updateUsingGET_5
2019-06-04 16:25:08 -Generating unique operation named: updateUsingHEAD_5
2019-06-04 16:25:08 -Generating unique operation named: updateUsingPOST_8
2019-06-04 16:25:08 -Generating unique operation named: updateUsingPUT_5
2019-06-04 16:25:08 -Generating unique operation named: updateUsingPATCH_5
2019-06-04 16:25:08 -Generating unique operation named: updateUsingDELETE_5
2019-06-04 16:25:08 -Generating unique operation named: updateUsingOPTIONS_5
2019-06-04 16:25:08 -Generating unique operation named: updateUsingTRACE_5
2019-06-04 16:25:08 -Generating unique operation named: addUsingGET_8
2019-06-04 16:25:08 -Generating unique operation named: editUsingGET_10
2019-06-04 16:25:08 -Generating unique operation named: listUsingGET_11
2019-06-04 16:25:08 -Generating unique operation named: removeUsingPOST_16
2019-06-04 16:25:08 -Generating unique operation named: removeUsingPOST_17
2019-06-04 16:25:08 -Generating unique operation named: saveUsingPOST_8
2019-06-04 16:25:08 -Generating unique operation named: updateUsingGET_6
2019-06-04 16:25:08 -Generating unique operation named: updateUsingHEAD_6
2019-06-04 16:25:08 -Generating unique operation named: updateUsingPOST_9
2019-06-04 16:25:08 -Generating unique operation named: updateUsingPUT_6
2019-06-04 16:25:08 -Generating unique operation named: updateUsingPATCH_6
2019-06-04 16:25:08 -Generating unique operation named: updateUsingDELETE_6
2019-06-04 16:25:08 -Generating unique operation named: updateUsingOPTIONS_6
2019-06-04 16:25:08 -Generating unique operation named: updateUsingTRACE_6
2019-06-04 16:25:08 -Generating unique operation named: addUsingGET_9
2019-06-04 16:25:08 -Generating unique operation named: batchRemoveUsingPOST_2
2019-06-04 16:25:08 -Generating unique operation named: deployUsingPOST_1
2019-06-04 16:25:08 -Generating unique operation named: listUsingGET_12
2019-06-04 16:25:08 -Generating unique operation named: removeUsingPOST_18
2019-06-04 16:25:08 -Generating unique operation named: addUsingGET_10
2019-06-04 16:25:08 -Generating unique operation named: editUsingGET_11
2019-06-04 16:25:08 -Generating unique operation named: listUsingGET_13
2019-06-04 16:25:08 -Generating unique operation named: removeUsingPOST_19
2019-06-04 16:25:08 -Generating unique operation named: removeUsingPOST_20
2019-06-04 16:25:08 -Trying to infer dataType org.springframework.web.multipart.MultipartFile[]
2019-06-04 16:25:08 -Generating unique operation named: saveUsingPOST_9
2019-06-04 16:25:08 -Trying to infer dataType org.springframework.web.multipart.MultipartFile[]
2019-06-04 16:25:08 -Generating unique operation named: updateUsingGET_7
2019-06-04 16:25:08 -Trying to infer dataType org.springframework.web.multipart.MultipartFile[]
2019-06-04 16:25:08 -Generating unique operation named: updateUsingHEAD_7
2019-06-04 16:25:08 -Trying to infer dataType org.springframework.web.multipart.MultipartFile[]
2019-06-04 16:25:08 -Generating unique operation named: updateUsingPOST_10
2019-06-04 16:25:08 -Trying to infer dataType org.springframework.web.multipart.MultipartFile[]
2019-06-04 16:25:08 -Generating unique operation named: updateUsingPUT_7
2019-06-04 16:25:08 -Trying to infer dataType org.springframework.web.multipart.MultipartFile[]
2019-06-04 16:25:08 -Generating unique operation named: updateUsingPATCH_7
2019-06-04 16:25:08 -Trying to infer dataType org.springframework.web.multipart.MultipartFile[]
2019-06-04 16:25:08 -Generating unique operation named: updateUsingDELETE_7
2019-06-04 16:25:08 -Trying to infer dataType org.springframework.web.multipart.MultipartFile[]
2019-06-04 16:25:08 -Generating unique operation named: updateUsingOPTIONS_7
2019-06-04 16:25:08 -Trying to infer dataType org.springframework.web.multipart.MultipartFile[]
2019-06-04 16:25:08 -Generating unique operation named: updateUsingTRACE_7
2019-06-04 16:25:08 -Generating unique operation named: addUsingGET_11
2019-06-04 16:25:08 -Generating unique operation named: batchRemoveUsingPOST_3
2019-06-04 16:25:08 -Generating unique operation named: editUsingGET_12
2019-06-04 16:25:08 -Generating unique operation named: listUsingGET_14
2019-06-04 16:25:08 -Generating unique operation named: saveUsingPOST_10
2019-06-04 16:25:08 -Generating unique operation named: saveUsingPOST_11
2019-06-04 16:25:08 -Generating unique operation named: updateUsingPOST_11
2019-06-04 16:25:08 -Generating unique operation named: addUsingGET_12
2019-06-04 16:25:08 -Generating unique operation named: editUsingGET_13
2019-06-04 16:25:08 -Generating unique operation named: listUsingGET_15
2019-06-04 16:25:08 -Generating unique operation named: removeUsingPOST_21
2019-06-04 16:25:08 -Generating unique operation named: removeUsingPOST_22
2019-06-04 16:25:08 -Generating unique operation named: saveUsingPOST_12
2019-06-04 16:25:08 -Generating unique operation named: updateUsingGET_8
2019-06-04 16:25:08 -Generating unique operation named: updateUsingHEAD_8
2019-06-04 16:25:08 -Generating unique operation named: updateUsingPOST_12
2019-06-04 16:25:08 -Generating unique operation named: updateUsingPUT_8
2019-06-04 16:25:08 -Generating unique operation named: updateUsingPATCH_8
2019-06-04 16:25:08 -Generating unique operation named: updateUsingDELETE_8
2019-06-04 16:25:08 -Generating unique operation named: updateUsingOPTIONS_8
2019-06-04 16:25:08 -Generating unique operation named: updateUsingTRACE_8
2019-06-04 16:25:08 -Generating unique operation named: addUsingGET_13
2019-06-04 16:25:08 -Generating unique operation named: editUsingGET_14
2019-06-04 16:25:08 -Generating unique operation named: listUsingGET_16
2019-06-04 16:25:08 -Generating unique operation named: removeUsingPOST_23
2019-06-04 16:25:08 -Generating unique operation named: removeUsingPOST_24
2019-06-04 16:25:08 -Generating unique operation named: updateUsingGET_9
2019-06-04 16:25:08 -Generating unique operation named: updateUsingHEAD_9
2019-06-04 16:25:08 -Generating unique operation named: updateUsingPOST_13
2019-06-04 16:25:08 -Generating unique operation named: updateUsingPUT_9
2019-06-04 16:25:08 -Generating unique operation named: updateUsingPATCH_9
2019-06-04 16:25:08 -Generating unique operation named: updateUsingDELETE_9
2019-06-04 16:25:08 -Generating unique operation named: updateUsingOPTIONS_9
2019-06-04 16:25:08 -Generating unique operation named: updateUsingTRACE_9
2019-06-04 16:25:08 -Generating unique operation named: listUsingGET_17
2019-06-04 16:25:08 -Generating unique operation named: listUsingHEAD_1
2019-06-04 16:25:08 -Generating unique operation named: listUsingPOST_1
2019-06-04 16:25:08 -Generating unique operation named: listUsingPUT_1
2019-06-04 16:25:08 -Generating unique operation named: listUsingPATCH_1
2019-06-04 16:25:08 -Generating unique operation named: listUsingDELETE_1
2019-06-04 16:25:08 -Generating unique operation named: listUsingOPTIONS_1
2019-06-04 16:25:08 -Generating unique operation named: listUsingTRACE_1
2019-06-04 16:25:08 -Generating unique operation named: listUsingGET_18
2019-06-04 16:25:08 -Generating unique operation named: addUsingGET_14
2019-06-04 16:25:08 -Generating unique operation named: batchRemoveUsingPOST_4
2019-06-04 16:25:08 -Generating unique operation named: editUsingGET_15
2019-06-04 16:25:08 -Generating unique operation named: listUsingGET_19
2019-06-04 16:25:08 -Generating unique operation named: removeUsingPOST_25
2019-06-04 16:25:08 -Generating unique operation named: saveUsingPOST_13
2019-06-04 16:25:08 -Generating unique operation named: treeUsingGET_3
2019-06-04 16:25:08 -Generating unique operation named: treeViewUsingGET_1
2019-06-04 16:25:08 -Generating unique operation named: updateUsingPOST_14
2019-06-04 16:25:08 -Generating unique operation named: addUsingGET_15
2019-06-04 16:25:08 -Generating unique operation named: editUsingGET_16
2019-06-04 16:25:08 -Generating unique operation named: listUsingGET_20
2019-06-04 16:25:08 -Generating unique operation named: removeUsingPOST_26
2019-06-04 16:25:08 -Generating unique operation named: removeUsingPOST_27
2019-06-04 16:25:08 -Generating unique operation named: saveUsingPOST_14
2019-06-04 16:25:08 -Generating unique operation named: updateUsingGET_10
2019-06-04 16:25:08 -Generating unique operation named: updateUsingHEAD_10
2019-06-04 16:25:08 -Generating unique operation named: updateUsingPOST_15
2019-06-04 16:25:08 -Generating unique operation named: updateUsingPUT_10
2019-06-04 16:25:08 -Generating unique operation named: updateUsingPATCH_10
2019-06-04 16:25:08 -Generating unique operation named: updateUsingDELETE_10
2019-06-04 16:25:08 -Generating unique operation named: updateUsingOPTIONS_10
2019-06-04 16:25:08 -Generating unique operation named: updateUsingTRACE_10
2019-06-04 16:25:08 -Starting Quartz Scheduler now
2019-06-04 16:25:08 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-06-04 16:25:08 -Starting...
2019-06-04 16:25:08 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-06-04 16:25:08 -Started.
2019-06-04 16:25:08 -Starting ProtocolHandler ["http-nio-8888"]
2019-06-04 16:25:08 -Using a shared selector for servlet write/read
2019-06-04 16:25:08 -Tomcat started on port(s): 8888 (http) with context path ''
2019-06-04 16:25:08 -Started BootdoApplication in 11.14 seconds (JVM running for 12.887)
2019-06-04 16:25:09 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-06-04 16:25:09 -==> Parameters: 
2019-06-04 16:25:09 -<==      Total: 1
2019-06-04 16:26:06 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 2, active threads = 1, queued tasks = 1, completed tasks = 0]
2019-06-04 16:26:07 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-06-04 16:26:07 -FrameworkServlet 'dispatcherServlet': initialization started
2019-06-04 16:26:07 -FrameworkServlet 'dispatcherServlet': initialization completed in 40 ms
2019-06-04 16:26:07 -Enabling session validation scheduler...
2019-06-04 16:26:07 -请求地址 : http://localhost:8888/login;JSESSIONID=048bc55c-f2b6-49e2-9420-dcd38fc85e0a
2019-06-04 16:26:07 -HTTP METHOD : GET
2019-06-04 16:26:07 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-06-04 16:26:07 -参数 : [{}]
2019-06-04 16:26:07 -耗时 : 2
2019-06-04 16:26:07 -返回值 : login
2019-06-04 16:26:08 -请求地址 : http://localhost:8888/login
2019-06-04 16:26:08 -HTTP METHOD : POST
2019-06-04 16:26:08 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-06-04 16:26:08 -参数 : [admin, 111111]
2019-06-04 16:26:08 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-06-04 16:26:08 -==> Parameters: admin(String)
2019-06-04 16:26:08 -<==      Total: 1
2019-06-04 16:26:08 -耗时 : 20
2019-06-04 16:26:08 -返回值 : {msg=操作成功, code=0}
2019-06-04 16:26:08 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-06-04 16:26:08 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-04 16:26:08 -==> Parameters: 1(Long), admin(String), 登录(String), 20(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-06-04 16:26:08.764(Timestamp)
2019-06-04 16:26:08 -请求地址 : http://localhost:8888/index
2019-06-04 16:26:08 -HTTP METHOD : GET
2019-06-04 16:26:08 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-06-04 16:26:08 -参数 : [{}]
2019-06-04 16:26:08 -<==    Updates: 1
2019-06-04 16:26:08 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-06-04 16:26:08 -==> Parameters: 1(Long)
2019-06-04 16:26:08 -<==      Total: 34
2019-06-04 16:26:08 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-06-04 16:26:08 -==> Parameters: 144(Long)
2019-06-04 16:26:08 -<==      Total: 1
2019-06-04 16:26:08 -耗时 : 47
2019-06-04 16:26:08 -返回值 : index_v1
2019-06-04 16:26:08 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-04 16:26:08 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 48(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-commenting","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user","url":"/weixin/weixinUser"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"109","text":"用户管理"}],"hasChildren":true,"hasParent":false,"id":"109","parentId":"0","text":"微信管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","text":"基础管理"},{"attributes":{"icon":"fa fa-hotel","url":""},"checked":false,"children":[{"attributes":{"icon":"","url":"/xjbg/room/roomMng"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"105","text":"开房"},{"attributes":{"icon":"fa fa-bed","url":"/xjbg/room"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"106","parentId":"105","text":"房间管理"},{"attributes":{"icon":"","url":"/xjbg/product"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"105","text":"商品管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"欣吉宾馆"},{"attributes":{"icon":"fa fa-desktop"},"checked":false,"children":[{"attributes":{"icon":"fa fa-user","url":"sys/user/"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"6","parentId":"3","text":"用户管理"},{"attributes":{"icon":"fa fa-paw","url":"sys/role"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"7","parentId":"3","text":"角色管理"},{"attributes":{"icon":"fa fa-th-list","url":"sys/menu/"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"3","text":"系统菜单"},{"attributes":{"icon":"fa fa-users","url":"/system/sysDept"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"73","parentId":"3","text":"部门管理"}],"hasChildren":true,"hasParent":false,"id":"3","parentId":"0","text":"系统管理"},{"attributes":{"icon":"fa fa-gear","url":""},"checked":false,"children":[{"attributes":{"icon":"","url":"/swagger-ui.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"104","parentId":"77","text":"swagger"},{"attributes":{"icon":"fa fa-code","url":"common/generator"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"48","parentId":"77","text":"代码生成"},{"attributes":{"icon":"fa fa-hourglass-1","url":"common/job"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"72","parentId":"77","text":"计划任务"}],"hasChildren":true,"hasParent":false,"id":"77","parentId":"0","text":"系统工具"},{"attributes":{"icon":"fa fa-laptop","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-pencil-square","url":"oa/notify"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"85","parentId":"84","text":"通知公告"},{"attributes":{"icon":"fa fa-envelope-square","url":"oa/notify/selfNotify"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"90","parentId":"84","text":"我的通知"}],"hasChildren":true,"hasParent":false,"id":"84","parentId":"0","text":"办公管理"},{"attributes":{"icon":"fa fa-video-camera","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user","url":"sys/online"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"92","parentId":"91","text":"在线用户"},{"attributes":{"icon":"fa fa-warning","url":"common/log"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"27","parentId":"91","text":"系统日志"},{"attributes":{"icon":"fa fa-caret-square-o-right","url":"/druid/index.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"57","parentId":"91","text":"运行监控"}],"hasChildren":true,"hasParent":false,"id":"91","parentId":"0","text":"系统监控"},{"attributes":{"icon":"fa fa-rss","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-edit","url":"/blog/bContent/add"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"68","parentId":"49","text":"发布文章"},{"attributes":{"icon":"fa fa-file-image-o","url":"blog/bContent"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"50","parentId":"49","text":"文章列表"}],"hasChildren":true,"hasParent":false,"id":"49","parentId":"0","text":"博客管理"},{"attributes":{"icon":"fa fa-print","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-flag","url":"activiti/process"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"96","parentId":"93","text":"流程管理"},{"attributes":{"icon":"","url":"activiti/task/todo"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"101","parentId":"93","text":"待办任务"},{"attr(String), 127.0.0.1(String), 2019-06-04 16:26:08.917(Timestamp)
2019-06-04 16:26:08 -<==    Updates: 1
2019-06-04 16:26:09 -请求地址 : http://localhost:8888/main
2019-06-04 16:26:09 -HTTP METHOD : GET
2019-06-04 16:26:09 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-04 16:26:09 -参数 : []
2019-06-04 16:26:09 -耗时 : 0
2019-06-04 16:26:09 -返回值 : main
2019-06-04 16:26:09 -请求地址 : http://localhost:8888/oa/notify/message
2019-06-04 16:26:09 -HTTP METHOD : GET
2019-06-04 16:26:09 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-06-04 16:26:09 -参数 : []
2019-06-04 16:26:09 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-06-04 16:26:09 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-06-04 16:26:09 -<==      Total: 0
2019-06-04 16:26:09 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-06-04 16:26:09 -==> Parameters: 1(Long), 0(String)
2019-06-04 16:26:09 -<==      Total: 1
2019-06-04 16:26:09 -耗时 : 16
2019-06-04 16:26:09 -返回值 : com.bootdo.common.utils.PageUtils@5e77ba59
2019-06-04 16:26:09 -请求地址 : http://localhost:8888/main
2019-06-04 16:26:09 -HTTP METHOD : GET
2019-06-04 16:26:09 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-04 16:26:09 -参数 : []
2019-06-04 16:26:09 -耗时 : 0
2019-06-04 16:26:09 -返回值 : main
2019-06-04 16:26:10 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-06-04 16:26:10 -==> Parameters: 1(Long)
2019-06-04 16:26:10 -<==      Total: 58
2019-06-04 16:26:10 -请求地址 : http://localhost:8888/weixin/weixinUser
2019-06-04 16:26:10 -HTTP METHOD : GET
2019-06-04 16:26:10 -CLASS_METHOD : com.bootdo.weixin.controller.WeixinUserController.WeixinUser
2019-06-04 16:26:10 -参数 : []
2019-06-04 16:26:10 -耗时 : 0
2019-06-04 16:26:10 -返回值 : weixin/weixinUser/weixinUser
2019-06-04 16:26:10 -请求地址 : http://localhost:8888/weixin/weixinUser/list
2019-06-04 16:26:10 -HTTP METHOD : GET
2019-06-04 16:26:10 -CLASS_METHOD : com.bootdo.weixin.controller.WeixinUserController.list
2019-06-04 16:26:10 -参数 : [{limit=10, offset=0}]
2019-06-04 16:26:10 -==>  Preparing: select `id`,`open_id`,`is_removed`,`create_time`,`remove_time` from weixin_user order by id desc limit ?, ? 
2019-06-04 16:26:10 -==> Parameters: 0(Integer), 10(Integer)
2019-06-04 16:26:10 -<==      Total: 1
2019-06-04 16:26:10 -==>  Preparing: select count(*) from weixin_user 
2019-06-04 16:26:10 -==> Parameters: 
2019-06-04 16:26:10 -<==      Total: 1
2019-06-04 16:26:10 -耗时 : 13
2019-06-04 16:26:10 -返回值 : com.bootdo.common.utils.PageUtils@6c9d4a9d
2019-06-04 16:26:12 -请求地址 : http://localhost:8888/xjbg/room/roomMng
2019-06-04 16:26:12 -HTTP METHOD : GET
2019-06-04 16:26:12 -CLASS_METHOD : com.bootdo.xjbg.controller.RoomController.roomMng
2019-06-04 16:26:12 -参数 : [{}]
2019-06-04 16:26:12 -==>  Preparing: select `id`,`room_no`,`room_type`,`floor`,`room_state`,`price`,`create_time`,`update_time`,`create_user`,`update_user` from xjbg_room 
2019-06-04 16:26:12 -==> Parameters: 
2019-06-04 16:26:12 -<==      Total: 8
2019-06-04 16:26:12 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 16:26:12 -==> Parameters: room_type(String)
2019-06-04 16:26:12 -<==      Total: 7
2019-06-04 16:26:12 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 16:26:12 -==> Parameters: floor(String)
2019-06-04 16:26:12 -<==      Total: 5
2019-06-04 16:26:12 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 16:26:12 -==> Parameters: room_state(String)
2019-06-04 16:26:12 -<==      Total: 2
2019-06-04 16:26:12 -==>  Preparing: select * from sys_user 
2019-06-04 16:26:12 -==> Parameters: 
2019-06-04 16:26:12 -<==      Total: 11
2019-06-04 16:26:12 -耗时 : 23
2019-06-04 16:26:12 -返回值 : xjbg/room/roomMng
2019-06-04 16:26:12 -请求地址 : http://localhost:8888/xjbg/room/operation/1
2019-06-04 16:26:12 -HTTP METHOD : GET
2019-06-04 16:26:12 -CLASS_METHOD : com.bootdo.xjbg.controller.RoomController.operation
2019-06-04 16:26:12 -参数 : [1, {}]
2019-06-04 16:26:12 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 16:26:12 -==> Parameters: room_type(String)
2019-06-04 16:26:12 -<==      Total: 7
2019-06-04 16:26:12 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 16:26:12 -==> Parameters: floor(String)
2019-06-04 16:26:12 -<==      Total: 5
2019-06-04 16:26:12 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 16:26:12 -==> Parameters: room_state(String)
2019-06-04 16:26:12 -<==      Total: 2
2019-06-04 16:26:12 -==>  Preparing: select * from sys_user 
2019-06-04 16:26:12 -==> Parameters: 
2019-06-04 16:26:12 -<==      Total: 11
2019-06-04 16:26:12 -==>  Preparing: select `id`,`product_name`,`purchase_price`,`selling_price`,`product_pic`,`create_time`,`create_user`,`update_time`,`update_user` from xjbg_product order by id desc 
2019-06-04 16:26:12 -==> Parameters: 
2019-06-04 16:26:12 -<==      Total: 5
2019-06-04 16:26:12 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 16:26:12 -==> Parameters: order_type(String)
2019-06-04 16:26:12 -<==      Total: 3
2019-06-04 16:26:12 -==>  Preparing: select `id`,`room_no`,`room_type`,`floor`,`room_state`,`price`,`create_time`,`update_time`,`create_user`,`update_user` from xjbg_room where id = ? 
2019-06-04 16:26:12 -==> Parameters: 1(Integer)
2019-06-04 16:26:12 -<==      Total: 1
2019-06-04 16:26:12 -耗时 : 26
2019-06-04 16:26:12 -返回值 : xjbg/room/operation
2019-06-04 16:26:15 -请求地址 : http://localhost:8888/xjbg/room/operation/1
2019-06-04 16:26:15 -HTTP METHOD : GET
2019-06-04 16:26:15 -CLASS_METHOD : com.bootdo.xjbg.controller.RoomController.operation
2019-06-04 16:26:15 -参数 : [1, {}]
2019-06-04 16:26:15 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 16:26:15 -==> Parameters: room_type(String)
2019-06-04 16:26:15 -<==      Total: 7
2019-06-04 16:26:15 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 16:26:15 -==> Parameters: floor(String)
2019-06-04 16:26:15 -<==      Total: 5
2019-06-04 16:26:15 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 16:26:15 -==> Parameters: room_state(String)
2019-06-04 16:26:15 -<==      Total: 2
2019-06-04 16:26:15 -==>  Preparing: select * from sys_user 
2019-06-04 16:26:15 -==> Parameters: 
2019-06-04 16:26:15 -<==      Total: 11
2019-06-04 16:26:15 -==>  Preparing: select `id`,`product_name`,`purchase_price`,`selling_price`,`product_pic`,`create_time`,`create_user`,`update_time`,`update_user` from xjbg_product order by id desc 
2019-06-04 16:26:15 -==> Parameters: 
2019-06-04 16:26:15 -<==      Total: 5
2019-06-04 16:26:15 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 16:26:15 -==> Parameters: order_type(String)
2019-06-04 16:26:15 -<==      Total: 3
2019-06-04 16:26:15 -==>  Preparing: select `id`,`room_no`,`room_type`,`floor`,`room_state`,`price`,`create_time`,`update_time`,`create_user`,`update_user` from xjbg_room where id = ? 
2019-06-04 16:26:15 -==> Parameters: 1(Integer)
2019-06-04 16:26:15 -<==      Total: 1
2019-06-04 16:26:15 -耗时 : 14
2019-06-04 16:26:15 -返回值 : xjbg/room/operation
2019-06-04 16:27:46 -请求地址 : http://localhost:8888/index
2019-06-04 16:27:46 -HTTP METHOD : GET
2019-06-04 16:27:46 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-06-04 16:27:46 -参数 : [{}]
2019-06-04 16:27:46 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-06-04 16:27:46 -==> Parameters: 1(Long)
2019-06-04 16:27:46 -<==      Total: 34
2019-06-04 16:27:46 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-06-04 16:27:46 -==> Parameters: 144(Long)
2019-06-04 16:27:46 -<==      Total: 1
2019-06-04 16:27:46 -耗时 : 5
2019-06-04 16:27:46 -返回值 : index_v1
2019-06-04 16:27:46 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-04 16:27:46 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 5(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-hotel","url":""},"checked":false,"children":[{"attributes":{"icon":"","url":"/xjbg/room/roomMng"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"105","text":"开房"},{"attributes":{"icon":"fa fa-bed","url":"/xjbg/room"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"106","parentId":"105","text":"房间管理"},{"attributes":{"icon":"","url":"/xjbg/product"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"105","text":"商品管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"欣吉宾馆"},{"attributes":{"icon":"fa fa-commenting","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user","url":"/weixin/weixinUser"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"109","text":"用户管理"}],"hasChildren":true,"hasParent":false,"id":"109","parentId":"0","text":"微信管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","text":"基础管理"},{"attributes":{"icon":"fa fa-desktop"},"checked":false,"children":[{"attributes":{"icon":"fa fa-user","url":"sys/user/"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"6","parentId":"3","text":"用户管理"},{"attributes":{"icon":"fa fa-paw","url":"sys/role"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"7","parentId":"3","text":"角色管理"},{"attributes":{"icon":"fa fa-th-list","url":"sys/menu/"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"3","text":"系统菜单"},{"attributes":{"icon":"fa fa-users","url":"/system/sysDept"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"73","parentId":"3","text":"部门管理"}],"hasChildren":true,"hasParent":false,"id":"3","parentId":"0","text":"系统管理"},{"attributes":{"icon":"fa fa-gear","url":""},"checked":false,"children":[{"attributes":{"icon":"","url":"/swagger-ui.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"104","parentId":"77","text":"swagger"},{"attributes":{"icon":"fa fa-code","url":"common/generator"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"48","parentId":"77","text":"代码生成"},{"attributes":{"icon":"fa fa-hourglass-1","url":"common/job"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"72","parentId":"77","text":"计划任务"}],"hasChildren":true,"hasParent":false,"id":"77","parentId":"0","text":"系统工具"},{"attributes":{"icon":"fa fa-laptop","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-envelope-square","url":"oa/notify/selfNotify"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"90","parentId":"84","text":"我的通知"},{"attributes":{"icon":"fa fa-pencil-square","url":"oa/notify"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"85","parentId":"84","text":"通知公告"}],"hasChildren":true,"hasParent":false,"id":"84","parentId":"0","text":"办公管理"},{"attributes":{"icon":"fa fa-video-camera","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user","url":"sys/online"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"92","parentId":"91","text":"在线用户"},{"attributes":{"icon":"fa fa-warning","url":"common/log"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"27","parentId":"91","text":"系统日志"},{"attributes":{"icon":"fa fa-caret-square-o-right","url":"/druid/index.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"57","parentId":"91","text":"运行监控"}],"hasChildren":true,"hasParent":false,"id":"91","parentId":"0","text":"系统监控"},{"attributes":{"icon":"fa fa-print","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-sort-amount-asc","url":"activiti/model"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"94","parentId":"93","text":"模型管理"},{"attributes":{"icon":"fa fa-flag","url":"activiti/process"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"96","parentId":"93","text":"流程管理"},{"attributes":{"icon":"","url":"activiti/task/todo"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"101","parentId":"93","text":"待办任务"}],"hasChildren":true,"hasParent":false,"id":"93","parentId":"0","text":"工作流程"},{"attributes":{"icon":"fa fa-rss","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-edit","url":"/blog/bContent/add"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"68","parentId":"49","text":"发布文章"},{"(String), 127.0.0.1(String), 2019-06-04 16:27:46.232(Timestamp)
2019-06-04 16:27:46 -<==    Updates: 1
2019-06-04 16:27:46 -请求地址 : http://localhost:8888/main
2019-06-04 16:27:46 -HTTP METHOD : GET
2019-06-04 16:27:46 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-04 16:27:46 -参数 : []
2019-06-04 16:27:46 -耗时 : 0
2019-06-04 16:27:46 -返回值 : main
2019-06-04 16:27:46 -请求地址 : http://localhost:8888/oa/notify/message
2019-06-04 16:27:46 -HTTP METHOD : GET
2019-06-04 16:27:46 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-06-04 16:27:46 -参数 : []
2019-06-04 16:27:46 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-06-04 16:27:46 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-06-04 16:27:46 -<==      Total: 0
2019-06-04 16:27:46 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-06-04 16:27:46 -==> Parameters: 1(Long), 0(String)
2019-06-04 16:27:46 -<==      Total: 1
2019-06-04 16:27:46 -耗时 : 3
2019-06-04 16:27:46 -返回值 : com.bootdo.common.utils.PageUtils@5f6b08be
2019-06-04 16:27:46 -请求地址 : http://localhost:8888/main
2019-06-04 16:27:46 -HTTP METHOD : GET
2019-06-04 16:27:46 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-04 16:27:46 -参数 : []
2019-06-04 16:27:46 -耗时 : 0
2019-06-04 16:27:46 -返回值 : main
2019-06-04 16:27:50 -请求地址 : http://localhost:8888/sys/user/
2019-06-04 16:27:50 -HTTP METHOD : GET
2019-06-04 16:27:50 -CLASS_METHOD : com.bootdo.system.controller.UserController.user
2019-06-04 16:27:50 -参数 : [{}]
2019-06-04 16:27:50 -耗时 : 1
2019-06-04 16:27:50 -返回值 : system/user/user
2019-06-04 16:27:50 -请求地址 : http://localhost:8888/system/sysDept/tree
2019-06-04 16:27:50 -HTTP METHOD : GET
2019-06-04 16:27:50 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-06-04 16:27:50 -参数 : []
2019-06-04 16:27:50 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-06-04 16:27:50 -==> Parameters: 
2019-06-04 16:27:50 -请求地址 : http://localhost:8888/sys/user/list
2019-06-04 16:27:50 -HTTP METHOD : GET
2019-06-04 16:27:50 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-06-04 16:27:50 -参数 : [{limit=10, offset=0, name=, deptId=}]
2019-06-04 16:27:50 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user order by user_id desc limit ?, ? 
2019-06-04 16:27:50 -==> Parameters: 0(Integer), 10(Integer)
2019-06-04 16:27:50 -<==      Total: 10
2019-06-04 16:27:50 -耗时 : 23
2019-06-04 16:27:50 -返回值 : {"checked":true,"children":[{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"15","parentId":"13","state":{"opened":true},"text":"测试二部"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"14","parentId":"13","state":{"opened":true},"text":"测试一部"}],"hasChildren":true,"hasParent":false,"id":"13","parentId":"0","state":{"opened":true},"text":"测试部"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"12","parentId":"11","state":{"opened":true},"text":"产品一部"}],"hasChildren":true,"hasParent":false,"id":"11","parentId":"0","state":{"opened":true},"text":"产品部"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"10","parentId":"9","state":{"opened":true},"text":"销售一部"}],"hasChildren":true,"hasParent":false,"id":"9","parentId":"0","state":{"opened":true},"text":"销售部"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"8","parentId":"6","state":{"opened":true},"text":"研发二部"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"7","parentId":"6","state":{"opened":true},"text":"研發一部"}],"hasChildren":true,"hasParent":false,"id":"6","parentId":"0","state":{"opened":true},"text":"研发部"}],"hasChildren":true,"hasParent":false,"id":"-1","parentId":"","state":{"opened":true},"text":"顶级节点"}
2019-06-04 16:27:50 -<==      Total: 10
2019-06-04 16:27:50 -==>  Preparing: select count(*) from sys_user 
2019-06-04 16:27:50 -==> Parameters: 
2019-06-04 16:27:50 -<==      Total: 1
2019-06-04 16:27:50 -耗时 : 18
2019-06-04 16:27:50 -返回值 : com.bootdo.common.utils.PageUtils@3cc2cf0e
2019-06-04 16:27:52 -请求地址 : http://localhost:8888/xjbg/room
2019-06-04 16:27:52 -HTTP METHOD : GET
2019-06-04 16:27:52 -CLASS_METHOD : com.bootdo.xjbg.controller.RoomController.Room
2019-06-04 16:27:52 -参数 : [{}]
2019-06-04 16:27:52 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 16:27:52 -==> Parameters: room_type(String)
2019-06-04 16:27:52 -<==      Total: 7
2019-06-04 16:27:52 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 16:27:52 -==> Parameters: floor(String)
2019-06-04 16:27:52 -<==      Total: 5
2019-06-04 16:27:52 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 16:27:52 -==> Parameters: room_state(String)
2019-06-04 16:27:52 -<==      Total: 2
2019-06-04 16:27:52 -==>  Preparing: select * from sys_user 
2019-06-04 16:27:52 -==> Parameters: 
2019-06-04 16:27:52 -<==      Total: 11
2019-06-04 16:27:52 -耗时 : 8
2019-06-04 16:27:52 -返回值 : xjbg/room/room
2019-06-04 16:27:52 -请求地址 : http://localhost:8888/xjbg/room/list
2019-06-04 16:27:52 -HTTP METHOD : GET
2019-06-04 16:27:52 -CLASS_METHOD : com.bootdo.xjbg.controller.RoomController.list
2019-06-04 16:27:52 -参数 : [{limit=10, offset=0}]
2019-06-04 16:27:52 -==>  Preparing: select `id`,`room_no`,`room_type`,`floor`,`room_state`,`price`,`create_time`,`update_time`,`create_user`,`update_user` from xjbg_room order by room_no desc limit ?, ? 
2019-06-04 16:27:52 -==> Parameters: 0(Integer), 10(Integer)
2019-06-04 16:27:52 -<==      Total: 8
2019-06-04 16:27:52 -==>  Preparing: select count(*) from xjbg_room 
2019-06-04 16:27:52 -==> Parameters: 
2019-06-04 16:27:52 -<==      Total: 1
2019-06-04 16:27:52 -耗时 : 10
2019-06-04 16:27:52 -返回值 : com.bootdo.common.utils.PageUtils@7890b014
2019-06-04 16:27:53 -请求地址 : http://localhost:8888/xjbg/room/roomMng
2019-06-04 16:27:53 -HTTP METHOD : GET
2019-06-04 16:27:53 -CLASS_METHOD : com.bootdo.xjbg.controller.RoomController.roomMng
2019-06-04 16:27:53 -参数 : [{}]
2019-06-04 16:27:53 -==>  Preparing: select `id`,`room_no`,`room_type`,`floor`,`room_state`,`price`,`create_time`,`update_time`,`create_user`,`update_user` from xjbg_room 
2019-06-04 16:27:53 -==> Parameters: 
2019-06-04 16:27:53 -<==      Total: 8
2019-06-04 16:27:53 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 16:27:53 -==> Parameters: room_type(String)
2019-06-04 16:27:53 -<==      Total: 7
2019-06-04 16:27:53 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 16:27:53 -==> Parameters: floor(String)
2019-06-04 16:27:53 -<==      Total: 5
2019-06-04 16:27:53 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 16:27:53 -==> Parameters: room_state(String)
2019-06-04 16:27:53 -<==      Total: 2
2019-06-04 16:27:53 -==>  Preparing: select * from sys_user 
2019-06-04 16:27:53 -==> Parameters: 
2019-06-04 16:27:53 -<==      Total: 11
2019-06-04 16:27:53 -耗时 : 7
2019-06-04 16:27:53 -返回值 : xjbg/room/roomMng
2019-06-04 16:27:53 -请求地址 : http://localhost:8888/xjbg/room/operation/1
2019-06-04 16:27:53 -HTTP METHOD : GET
2019-06-04 16:27:53 -CLASS_METHOD : com.bootdo.xjbg.controller.RoomController.operation
2019-06-04 16:27:53 -参数 : [1, {}]
2019-06-04 16:27:53 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 16:27:53 -==> Parameters: room_type(String)
2019-06-04 16:27:53 -<==      Total: 7
2019-06-04 16:27:53 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 16:27:53 -==> Parameters: floor(String)
2019-06-04 16:27:53 -<==      Total: 5
2019-06-04 16:27:53 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 16:27:53 -==> Parameters: room_state(String)
2019-06-04 16:27:53 -<==      Total: 2
2019-06-04 16:27:53 -==>  Preparing: select * from sys_user 
2019-06-04 16:27:53 -==> Parameters: 
2019-06-04 16:27:53 -<==      Total: 11
2019-06-04 16:27:53 -==>  Preparing: select `id`,`product_name`,`purchase_price`,`selling_price`,`product_pic`,`create_time`,`create_user`,`update_time`,`update_user` from xjbg_product order by id desc 
2019-06-04 16:27:53 -==> Parameters: 
2019-06-04 16:27:53 -<==      Total: 5
2019-06-04 16:27:53 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 16:27:53 -==> Parameters: order_type(String)
2019-06-04 16:27:53 -<==      Total: 3
2019-06-04 16:27:53 -==>  Preparing: select `id`,`room_no`,`room_type`,`floor`,`room_state`,`price`,`create_time`,`update_time`,`create_user`,`update_user` from xjbg_room where id = ? 
2019-06-04 16:27:53 -==> Parameters: 1(Integer)
2019-06-04 16:27:53 -<==      Total: 1
2019-06-04 16:27:53 -耗时 : 15
2019-06-04 16:27:53 -返回值 : xjbg/room/operation
2019-06-04 16:27:55 -请求地址 : http://localhost:8888/xjbg/room/operation/1
2019-06-04 16:27:55 -HTTP METHOD : GET
2019-06-04 16:27:55 -CLASS_METHOD : com.bootdo.xjbg.controller.RoomController.operation
2019-06-04 16:27:55 -参数 : [1, {}]
2019-06-04 16:27:55 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 16:27:55 -==> Parameters: room_type(String)
2019-06-04 16:27:55 -<==      Total: 7
2019-06-04 16:27:55 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 16:27:55 -==> Parameters: floor(String)
2019-06-04 16:27:55 -<==      Total: 5
2019-06-04 16:27:55 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 16:27:55 -==> Parameters: room_state(String)
2019-06-04 16:27:55 -<==      Total: 2
2019-06-04 16:27:55 -==>  Preparing: select * from sys_user 
2019-06-04 16:27:55 -==> Parameters: 
2019-06-04 16:27:55 -<==      Total: 11
2019-06-04 16:27:55 -==>  Preparing: select `id`,`product_name`,`purchase_price`,`selling_price`,`product_pic`,`create_time`,`create_user`,`update_time`,`update_user` from xjbg_product order by id desc 
2019-06-04 16:27:55 -==> Parameters: 
2019-06-04 16:27:55 -<==      Total: 5
2019-06-04 16:27:55 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 16:27:55 -==> Parameters: order_type(String)
2019-06-04 16:27:55 -<==      Total: 3
2019-06-04 16:27:55 -==>  Preparing: select `id`,`room_no`,`room_type`,`floor`,`room_state`,`price`,`create_time`,`update_time`,`create_user`,`update_user` from xjbg_room where id = ? 
2019-06-04 16:27:55 -==> Parameters: 1(Integer)
2019-06-04 16:27:55 -<==      Total: 1
2019-06-04 16:27:55 -耗时 : 15
2019-06-04 16:27:55 -返回值 : xjbg/room/operation
2019-06-04 16:28:26 -请求地址 : http://localhost:8888/index
2019-06-04 16:28:26 -HTTP METHOD : GET
2019-06-04 16:28:26 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-06-04 16:28:26 -参数 : [{}]
2019-06-04 16:28:26 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-06-04 16:28:26 -==> Parameters: 1(Long)
2019-06-04 16:28:26 -<==      Total: 34
2019-06-04 16:28:26 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-06-04 16:28:26 -==> Parameters: 144(Long)
2019-06-04 16:28:26 -<==      Total: 1
2019-06-04 16:28:26 -耗时 : 6
2019-06-04 16:28:26 -返回值 : index_v1
2019-06-04 16:28:26 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-04 16:28:26 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 6(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-commenting","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user","url":"/weixin/weixinUser"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"109","text":"用户管理"}],"hasChildren":true,"hasParent":false,"id":"109","parentId":"0","text":"微信管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","text":"基础管理"},{"attributes":{"icon":"fa fa-hotel","url":""},"checked":false,"children":[{"attributes":{"icon":"","url":"/xjbg/room/roomMng"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"105","text":"开房"},{"attributes":{"icon":"fa fa-bed","url":"/xjbg/room"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"106","parentId":"105","text":"房间管理"},{"attributes":{"icon":"","url":"/xjbg/product"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"105","text":"商品管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"欣吉宾馆"},{"attributes":{"icon":"fa fa-desktop"},"checked":false,"children":[{"attributes":{"icon":"fa fa-user","url":"sys/user/"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"6","parentId":"3","text":"用户管理"},{"attributes":{"icon":"fa fa-paw","url":"sys/role"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"7","parentId":"3","text":"角色管理"},{"attributes":{"icon":"fa fa-th-list","url":"sys/menu/"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"3","text":"系统菜单"},{"attributes":{"icon":"fa fa-users","url":"/system/sysDept"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"73","parentId":"3","text":"部门管理"}],"hasChildren":true,"hasParent":false,"id":"3","parentId":"0","text":"系统管理"},{"attributes":{"icon":"fa fa-gear","url":""},"checked":false,"children":[{"attributes":{"icon":"","url":"/swagger-ui.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"104","parentId":"77","text":"swagger"},{"attributes":{"icon":"fa fa-code","url":"common/generator"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"48","parentId":"77","text":"代码生成"},{"attributes":{"icon":"fa fa-hourglass-1","url":"common/job"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"72","parentId":"77","text":"计划任务"}],"hasChildren":true,"hasParent":false,"id":"77","parentId":"0","text":"系统工具"},{"attributes":{"icon":"fa fa-video-camera","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user","url":"sys/online"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"92","parentId":"91","text":"在线用户"},{"attributes":{"icon":"fa fa-warning","url":"common/log"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"27","parentId":"91","text":"系统日志"},{"attributes":{"icon":"fa fa-caret-square-o-right","url":"/druid/index.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"57","parentId":"91","text":"运行监控"}],"hasChildren":true,"hasParent":false,"id":"91","parentId":"0","text":"系统监控"},{"attributes":{"icon":"fa fa-laptop","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-pencil-square","url":"oa/notify"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"85","parentId":"84","text":"通知公告"},{"attributes":{"icon":"fa fa-envelope-square","url":"oa/notify/selfNotify"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"90","parentId":"84","text":"我的通知"}],"hasChildren":true,"hasParent":false,"id":"84","parentId":"0","text":"办公管理"},{"attributes":{"icon":"fa fa-rss","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-edit","url":"/blog/bContent/add"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"68","parentId":"49","text":"发布文章"},{"attributes":{"icon":"fa fa-file-image-o","url":"blog/bContent"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"50","parentId":"49","text":"文章列表"}],"hasChildren":true,"hasParent":false,"id":"49","parentId":"0","text":"博客管理"},{"attributes":{"icon":"fa fa-print","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-flag","url":"activiti/process"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"96","parentId":"93","text":"流程管理"},{"attributes":{"icon":"","url":"activiti/task/todo"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"101","parentId":"93","text":"待办任务"},{"attr(String), 127.0.0.1(String), 2019-06-04 16:28:26.278(Timestamp)
2019-06-04 16:28:26 -<==    Updates: 1
2019-06-04 16:28:26 -请求地址 : http://localhost:8888/main
2019-06-04 16:28:26 -HTTP METHOD : GET
2019-06-04 16:28:26 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-04 16:28:26 -参数 : []
2019-06-04 16:28:26 -耗时 : 1
2019-06-04 16:28:26 -返回值 : main
2019-06-04 16:28:26 -请求地址 : http://localhost:8888/oa/notify/message
2019-06-04 16:28:26 -HTTP METHOD : GET
2019-06-04 16:28:26 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-06-04 16:28:26 -参数 : []
2019-06-04 16:28:26 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-06-04 16:28:26 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-06-04 16:28:26 -<==      Total: 0
2019-06-04 16:28:26 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-06-04 16:28:26 -==> Parameters: 1(Long), 0(String)
2019-06-04 16:28:26 -<==      Total: 1
2019-06-04 16:28:26 -耗时 : 22
2019-06-04 16:28:26 -返回值 : com.bootdo.common.utils.PageUtils@70cc1a92
2019-06-04 16:28:26 -请求地址 : http://localhost:8888/main
2019-06-04 16:28:26 -HTTP METHOD : GET
2019-06-04 16:28:26 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-04 16:28:26 -参数 : []
2019-06-04 16:28:26 -耗时 : 0
2019-06-04 16:28:26 -返回值 : main
2019-06-04 16:28:28 -请求地址 : http://localhost:8888/xjbg/room/roomMng
2019-06-04 16:28:28 -HTTP METHOD : GET
2019-06-04 16:28:28 -CLASS_METHOD : com.bootdo.xjbg.controller.RoomController.roomMng
2019-06-04 16:28:28 -参数 : [{}]
2019-06-04 16:28:28 -==>  Preparing: select `id`,`room_no`,`room_type`,`floor`,`room_state`,`price`,`create_time`,`update_time`,`create_user`,`update_user` from xjbg_room 
2019-06-04 16:28:28 -==> Parameters: 
2019-06-04 16:28:28 -<==      Total: 8
2019-06-04 16:28:28 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 16:28:28 -==> Parameters: room_type(String)
2019-06-04 16:28:28 -<==      Total: 7
2019-06-04 16:28:28 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 16:28:28 -==> Parameters: floor(String)
2019-06-04 16:28:28 -<==      Total: 5
2019-06-04 16:28:28 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 16:28:28 -==> Parameters: room_state(String)
2019-06-04 16:28:28 -<==      Total: 2
2019-06-04 16:28:28 -==>  Preparing: select * from sys_user 
2019-06-04 16:28:28 -==> Parameters: 
2019-06-04 16:28:28 -<==      Total: 11
2019-06-04 16:28:28 -耗时 : 10
2019-06-04 16:28:28 -返回值 : xjbg/room/roomMng
2019-06-04 16:28:29 -请求地址 : http://localhost:8888/xjbg/room/operation/1
2019-06-04 16:28:29 -HTTP METHOD : GET
2019-06-04 16:28:29 -CLASS_METHOD : com.bootdo.xjbg.controller.RoomController.operation
2019-06-04 16:28:29 -参数 : [1, {}]
2019-06-04 16:28:29 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 16:28:29 -==> Parameters: room_type(String)
2019-06-04 16:28:29 -<==      Total: 7
2019-06-04 16:28:29 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 16:28:29 -==> Parameters: floor(String)
2019-06-04 16:28:29 -<==      Total: 5
2019-06-04 16:28:29 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 16:28:29 -==> Parameters: room_state(String)
2019-06-04 16:28:29 -<==      Total: 2
2019-06-04 16:28:29 -==>  Preparing: select * from sys_user 
2019-06-04 16:28:29 -==> Parameters: 
2019-06-04 16:28:29 -<==      Total: 11
2019-06-04 16:28:29 -==>  Preparing: select `id`,`product_name`,`purchase_price`,`selling_price`,`product_pic`,`create_time`,`create_user`,`update_time`,`update_user` from xjbg_product order by id desc 
2019-06-04 16:28:29 -==> Parameters: 
2019-06-04 16:28:29 -<==      Total: 5
2019-06-04 16:28:29 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 16:28:29 -==> Parameters: order_type(String)
2019-06-04 16:28:29 -<==      Total: 3
2019-06-04 16:28:29 -==>  Preparing: select `id`,`room_no`,`room_type`,`floor`,`room_state`,`price`,`create_time`,`update_time`,`create_user`,`update_user` from xjbg_room where id = ? 
2019-06-04 16:28:29 -==> Parameters: 1(Integer)
2019-06-04 16:28:29 -<==      Total: 1
2019-06-04 16:28:29 -耗时 : 12
2019-06-04 16:28:29 -返回值 : xjbg/room/operation
2019-06-04 16:28:32 -请求地址 : http://localhost:8888/xjbg/room/operation/1
2019-06-04 16:28:32 -HTTP METHOD : GET
2019-06-04 16:28:32 -CLASS_METHOD : com.bootdo.xjbg.controller.RoomController.operation
2019-06-04 16:28:32 -参数 : [1, {}]
2019-06-04 16:28:32 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 16:28:32 -==> Parameters: room_type(String)
2019-06-04 16:28:32 -<==      Total: 7
2019-06-04 16:28:32 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 16:28:32 -==> Parameters: floor(String)
2019-06-04 16:28:32 -<==      Total: 5
2019-06-04 16:28:32 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 16:28:32 -==> Parameters: room_state(String)
2019-06-04 16:28:32 -<==      Total: 2
2019-06-04 16:28:32 -==>  Preparing: select * from sys_user 
2019-06-04 16:28:32 -==> Parameters: 
2019-06-04 16:28:32 -<==      Total: 11
2019-06-04 16:28:32 -==>  Preparing: select `id`,`product_name`,`purchase_price`,`selling_price`,`product_pic`,`create_time`,`create_user`,`update_time`,`update_user` from xjbg_product order by id desc 
2019-06-04 16:28:32 -==> Parameters: 
2019-06-04 16:28:32 -<==      Total: 5
2019-06-04 16:28:32 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 16:28:32 -==> Parameters: order_type(String)
2019-06-04 16:28:32 -<==      Total: 3
2019-06-04 16:28:32 -==>  Preparing: select `id`,`room_no`,`room_type`,`floor`,`room_state`,`price`,`create_time`,`update_time`,`create_user`,`update_user` from xjbg_room where id = ? 
2019-06-04 16:28:32 -==> Parameters: 1(Integer)
2019-06-04 16:28:32 -<==      Total: 1
2019-06-04 16:28:32 -耗时 : 10
2019-06-04 16:28:32 -返回值 : xjbg/room/operation
2019-06-04 16:41:46 -请求地址 : http://localhost:8888/index
2019-06-04 16:41:46 -HTTP METHOD : GET
2019-06-04 16:41:46 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-06-04 16:41:46 -参数 : [{}]
2019-06-04 16:41:46 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-06-04 16:41:46 -==> Parameters: 1(Long)
2019-06-04 16:41:46 -<==      Total: 34
2019-06-04 16:41:46 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-06-04 16:41:46 -==> Parameters: 144(Long)
2019-06-04 16:41:46 -<==      Total: 1
2019-06-04 16:41:46 -耗时 : 19
2019-06-04 16:41:46 -返回值 : index_v1
2019-06-04 16:41:46 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-04 16:41:46 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 19(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-commenting","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user","url":"/weixin/weixinUser"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"109","text":"用户管理"}],"hasChildren":true,"hasParent":false,"id":"109","parentId":"0","text":"微信管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","text":"基础管理"},{"attributes":{"icon":"fa fa-hotel","url":""},"checked":false,"children":[{"attributes":{"icon":"","url":"/xjbg/room/roomMng"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"105","text":"开房"},{"attributes":{"icon":"fa fa-bed","url":"/xjbg/room"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"106","parentId":"105","text":"房间管理"},{"attributes":{"icon":"","url":"/xjbg/product"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"105","text":"商品管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"欣吉宾馆"},{"attributes":{"icon":"fa fa-desktop"},"checked":false,"children":[{"attributes":{"icon":"fa fa-user","url":"sys/user/"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"6","parentId":"3","text":"用户管理"},{"attributes":{"icon":"fa fa-paw","url":"sys/role"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"7","parentId":"3","text":"角色管理"},{"attributes":{"icon":"fa fa-th-list","url":"sys/menu/"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"3","text":"系统菜单"},{"attributes":{"icon":"fa fa-users","url":"/system/sysDept"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"73","parentId":"3","text":"部门管理"}],"hasChildren":true,"hasParent":false,"id":"3","parentId":"0","text":"系统管理"},{"attributes":{"icon":"fa fa-gear","url":""},"checked":false,"children":[{"attributes":{"icon":"","url":"/swagger-ui.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"104","parentId":"77","text":"swagger"},{"attributes":{"icon":"fa fa-code","url":"common/generator"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"48","parentId":"77","text":"代码生成"},{"attributes":{"icon":"fa fa-hourglass-1","url":"common/job"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"72","parentId":"77","text":"计划任务"}],"hasChildren":true,"hasParent":false,"id":"77","parentId":"0","text":"系统工具"},{"attributes":{"icon":"fa fa-video-camera","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user","url":"sys/online"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"92","parentId":"91","text":"在线用户"},{"attributes":{"icon":"fa fa-warning","url":"common/log"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"27","parentId":"91","text":"系统日志"},{"attributes":{"icon":"fa fa-caret-square-o-right","url":"/druid/index.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"57","parentId":"91","text":"运行监控"}],"hasChildren":true,"hasParent":false,"id":"91","parentId":"0","text":"系统监控"},{"attributes":{"icon":"fa fa-laptop","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-pencil-square","url":"oa/notify"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"85","parentId":"84","text":"通知公告"},{"attributes":{"icon":"fa fa-envelope-square","url":"oa/notify/selfNotify"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"90","parentId":"84","text":"我的通知"}],"hasChildren":true,"hasParent":false,"id":"84","parentId":"0","text":"办公管理"},{"attributes":{"icon":"fa fa-rss","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-edit","url":"/blog/bContent/add"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"68","parentId":"49","text":"发布文章"},{"attributes":{"icon":"fa fa-file-image-o","url":"blog/bContent"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"50","parentId":"49","text":"文章列表"}],"hasChildren":true,"hasParent":false,"id":"49","parentId":"0","text":"博客管理"},{"attributes":{"icon":"fa fa-print","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-flag","url":"activiti/process"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"96","parentId":"93","text":"流程管理"},{"attributes":{"icon":"","url":"activiti/task/todo"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"101","parentId":"93","text":"待办任务"},{"attr(String), 127.0.0.1(String), 2019-06-04 16:41:46.287(Timestamp)
2019-06-04 16:41:46 -<==    Updates: 1
2019-06-04 16:41:46 -请求地址 : http://localhost:8888/main
2019-06-04 16:41:46 -HTTP METHOD : GET
2019-06-04 16:41:46 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-04 16:41:46 -参数 : []
2019-06-04 16:41:46 -耗时 : 1
2019-06-04 16:41:46 -返回值 : main
2019-06-04 16:41:46 -请求地址 : http://localhost:8888/oa/notify/message
2019-06-04 16:41:46 -HTTP METHOD : GET
2019-06-04 16:41:46 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-06-04 16:41:46 -参数 : []
2019-06-04 16:41:46 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-06-04 16:41:46 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-06-04 16:41:46 -<==      Total: 0
2019-06-04 16:41:46 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-06-04 16:41:46 -==> Parameters: 1(Long), 0(String)
2019-06-04 16:41:46 -<==      Total: 1
2019-06-04 16:41:46 -耗时 : 2
2019-06-04 16:41:46 -返回值 : com.bootdo.common.utils.PageUtils@6ca4fbd1
2019-06-04 16:41:46 -请求地址 : http://localhost:8888/main
2019-06-04 16:41:46 -HTTP METHOD : GET
2019-06-04 16:41:46 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-04 16:41:46 -参数 : []
2019-06-04 16:41:46 -耗时 : 1
2019-06-04 16:41:46 -返回值 : main
2019-06-04 16:41:48 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-06-04 16:41:48 -==> Parameters: 1(Long)
2019-06-04 16:41:48 -<==      Total: 58
2019-06-04 16:41:48 -请求地址 : http://localhost:8888/xjbg/room/roomMng
2019-06-04 16:41:48 -HTTP METHOD : GET
2019-06-04 16:41:48 -CLASS_METHOD : com.bootdo.xjbg.controller.RoomController.roomMng
2019-06-04 16:41:48 -参数 : [{}]
2019-06-04 16:41:48 -==>  Preparing: select `id`,`room_no`,`room_type`,`floor`,`room_state`,`price`,`create_time`,`update_time`,`create_user`,`update_user` from xjbg_room 
2019-06-04 16:41:48 -==> Parameters: 
2019-06-04 16:41:48 -<==      Total: 8
2019-06-04 16:41:48 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 16:41:48 -==> Parameters: room_type(String)
2019-06-04 16:41:48 -<==      Total: 7
2019-06-04 16:41:48 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 16:41:48 -==> Parameters: floor(String)
2019-06-04 16:41:48 -<==      Total: 5
2019-06-04 16:41:48 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 16:41:48 -==> Parameters: room_state(String)
2019-06-04 16:41:48 -<==      Total: 2
2019-06-04 16:41:48 -==>  Preparing: select * from sys_user 
2019-06-04 16:41:48 -==> Parameters: 
2019-06-04 16:41:48 -<==      Total: 11
2019-06-04 16:41:48 -耗时 : 6
2019-06-04 16:41:48 -返回值 : xjbg/room/roomMng
2019-06-04 16:41:48 -请求地址 : http://localhost:8888/xjbg/room/operation/1
2019-06-04 16:41:48 -HTTP METHOD : GET
2019-06-04 16:41:48 -CLASS_METHOD : com.bootdo.xjbg.controller.RoomController.operation
2019-06-04 16:41:48 -参数 : [1, {}]
2019-06-04 16:41:48 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 16:41:48 -==> Parameters: room_type(String)
2019-06-04 16:41:48 -<==      Total: 7
2019-06-04 16:41:48 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 16:41:48 -==> Parameters: floor(String)
2019-06-04 16:41:48 -<==      Total: 5
2019-06-04 16:41:48 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 16:41:48 -==> Parameters: room_state(String)
2019-06-04 16:41:48 -<==      Total: 2
2019-06-04 16:41:48 -==>  Preparing: select * from sys_user 
2019-06-04 16:41:48 -==> Parameters: 
2019-06-04 16:41:48 -<==      Total: 11
2019-06-04 16:41:48 -==>  Preparing: select `id`,`product_name`,`purchase_price`,`selling_price`,`product_pic`,`create_time`,`create_user`,`update_time`,`update_user` from xjbg_product order by id desc 
2019-06-04 16:41:48 -==> Parameters: 
2019-06-04 16:41:48 -<==      Total: 5
2019-06-04 16:41:48 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 16:41:48 -==> Parameters: order_type(String)
2019-06-04 16:41:48 -<==      Total: 3
2019-06-04 16:41:48 -==>  Preparing: select `id`,`room_no`,`room_type`,`floor`,`room_state`,`price`,`create_time`,`update_time`,`create_user`,`update_user` from xjbg_room where id = ? 
2019-06-04 16:41:48 -==> Parameters: 1(Integer)
2019-06-04 16:41:48 -<==      Total: 1
2019-06-04 16:41:48 -耗时 : 10
2019-06-04 16:41:48 -返回值 : xjbg/room/operation
2019-06-04 16:41:51 -请求地址 : http://localhost:8888/xjbg/room/operation/1
2019-06-04 16:41:51 -HTTP METHOD : GET
2019-06-04 16:41:51 -CLASS_METHOD : com.bootdo.xjbg.controller.RoomController.operation
2019-06-04 16:41:51 -参数 : [1, {}]
2019-06-04 16:41:51 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 16:41:51 -==> Parameters: room_type(String)
2019-06-04 16:41:51 -<==      Total: 7
2019-06-04 16:41:51 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 16:41:51 -==> Parameters: floor(String)
2019-06-04 16:41:51 -<==      Total: 5
2019-06-04 16:41:51 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 16:41:51 -==> Parameters: room_state(String)
2019-06-04 16:41:51 -<==      Total: 2
2019-06-04 16:41:51 -==>  Preparing: select * from sys_user 
2019-06-04 16:41:51 -==> Parameters: 
2019-06-04 16:41:51 -<==      Total: 11
2019-06-04 16:41:51 -==>  Preparing: select `id`,`product_name`,`purchase_price`,`selling_price`,`product_pic`,`create_time`,`create_user`,`update_time`,`update_user` from xjbg_product order by id desc 
2019-06-04 16:41:51 -==> Parameters: 
2019-06-04 16:41:51 -<==      Total: 5
2019-06-04 16:41:51 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 16:41:51 -==> Parameters: order_type(String)
2019-06-04 16:41:51 -<==      Total: 3
2019-06-04 16:41:51 -==>  Preparing: select `id`,`room_no`,`room_type`,`floor`,`room_state`,`price`,`create_time`,`update_time`,`create_user`,`update_user` from xjbg_room where id = ? 
2019-06-04 16:41:51 -==> Parameters: 1(Integer)
2019-06-04 16:41:51 -<==      Total: 1
2019-06-04 16:41:51 -耗时 : 7
2019-06-04 16:41:51 -返回值 : xjbg/room/operation
2019-06-04 16:43:51 -请求地址 : http://localhost:8888/index
2019-06-04 16:43:51 -HTTP METHOD : GET
2019-06-04 16:43:51 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-06-04 16:43:51 -参数 : [{}]
2019-06-04 16:43:51 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-06-04 16:43:51 -==> Parameters: 1(Long)
2019-06-04 16:43:51 -<==      Total: 34
2019-06-04 16:43:51 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-06-04 16:43:51 -==> Parameters: 144(Long)
2019-06-04 16:43:51 -<==      Total: 1
2019-06-04 16:43:51 -耗时 : 5
2019-06-04 16:43:51 -返回值 : index_v1
2019-06-04 16:43:51 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-04 16:43:51 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 5(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-commenting","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user","url":"/weixin/weixinUser"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"109","text":"用户管理"}],"hasChildren":true,"hasParent":false,"id":"109","parentId":"0","text":"微信管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","text":"基础管理"},{"attributes":{"icon":"fa fa-hotel","url":""},"checked":false,"children":[{"attributes":{"icon":"","url":"/xjbg/room/roomMng"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"105","text":"开房"},{"attributes":{"icon":"fa fa-bed","url":"/xjbg/room"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"106","parentId":"105","text":"房间管理"},{"attributes":{"icon":"","url":"/xjbg/product"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"105","text":"商品管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"欣吉宾馆"},{"attributes":{"icon":"fa fa-desktop"},"checked":false,"children":[{"attributes":{"icon":"fa fa-user","url":"sys/user/"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"6","parentId":"3","text":"用户管理"},{"attributes":{"icon":"fa fa-paw","url":"sys/role"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"7","parentId":"3","text":"角色管理"},{"attributes":{"icon":"fa fa-th-list","url":"sys/menu/"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"3","text":"系统菜单"},{"attributes":{"icon":"fa fa-users","url":"/system/sysDept"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"73","parentId":"3","text":"部门管理"}],"hasChildren":true,"hasParent":false,"id":"3","parentId":"0","text":"系统管理"},{"attributes":{"icon":"fa fa-gear","url":""},"checked":false,"children":[{"attributes":{"icon":"","url":"/swagger-ui.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"104","parentId":"77","text":"swagger"},{"attributes":{"icon":"fa fa-code","url":"common/generator"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"48","parentId":"77","text":"代码生成"},{"attributes":{"icon":"fa fa-hourglass-1","url":"common/job"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"72","parentId":"77","text":"计划任务"}],"hasChildren":true,"hasParent":false,"id":"77","parentId":"0","text":"系统工具"},{"attributes":{"icon":"fa fa-video-camera","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user","url":"sys/online"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"92","parentId":"91","text":"在线用户"},{"attributes":{"icon":"fa fa-warning","url":"common/log"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"27","parentId":"91","text":"系统日志"},{"attributes":{"icon":"fa fa-caret-square-o-right","url":"/druid/index.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"57","parentId":"91","text":"运行监控"}],"hasChildren":true,"hasParent":false,"id":"91","parentId":"0","text":"系统监控"},{"attributes":{"icon":"fa fa-laptop","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-pencil-square","url":"oa/notify"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"85","parentId":"84","text":"通知公告"},{"attributes":{"icon":"fa fa-envelope-square","url":"oa/notify/selfNotify"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"90","parentId":"84","text":"我的通知"}],"hasChildren":true,"hasParent":false,"id":"84","parentId":"0","text":"办公管理"},{"attributes":{"icon":"fa fa-rss","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-edit","url":"/blog/bContent/add"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"68","parentId":"49","text":"发布文章"},{"attributes":{"icon":"fa fa-file-image-o","url":"blog/bContent"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"50","parentId":"49","text":"文章列表"}],"hasChildren":true,"hasParent":false,"id":"49","parentId":"0","text":"博客管理"},{"attributes":{"icon":"fa fa-print","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-flag","url":"activiti/process"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"96","parentId":"93","text":"流程管理"},{"attributes":{"icon":"","url":"activiti/task/todo"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"101","parentId":"93","text":"待办任务"},{"attr(String), 127.0.0.1(String), 2019-06-04 16:43:51.273(Timestamp)
2019-06-04 16:43:51 -请求地址 : http://localhost:8888/main
2019-06-04 16:43:51 -HTTP METHOD : GET
2019-06-04 16:43:51 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-04 16:43:51 -参数 : []
2019-06-04 16:43:51 -耗时 : 0
2019-06-04 16:43:51 -返回值 : main
2019-06-04 16:43:51 -<==    Updates: 1
2019-06-04 16:43:51 -请求地址 : http://localhost:8888/oa/notify/message
2019-06-04 16:43:51 -HTTP METHOD : GET
2019-06-04 16:43:51 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-06-04 16:43:51 -参数 : []
2019-06-04 16:43:51 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-06-04 16:43:51 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-06-04 16:43:51 -<==      Total: 0
2019-06-04 16:43:51 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-06-04 16:43:51 -==> Parameters: 1(Long), 0(String)
2019-06-04 16:43:51 -<==      Total: 1
2019-06-04 16:43:51 -耗时 : 3
2019-06-04 16:43:51 -返回值 : com.bootdo.common.utils.PageUtils@227fc9f8
2019-06-04 16:43:51 -请求地址 : http://localhost:8888/main
2019-06-04 16:43:51 -HTTP METHOD : GET
2019-06-04 16:43:51 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-04 16:43:51 -参数 : []
2019-06-04 16:43:51 -耗时 : 0
2019-06-04 16:43:51 -返回值 : main
2019-06-04 16:43:58 -请求地址 : http://localhost:8888/xjbg/room/roomMng
2019-06-04 16:43:58 -HTTP METHOD : GET
2019-06-04 16:43:58 -CLASS_METHOD : com.bootdo.xjbg.controller.RoomController.roomMng
2019-06-04 16:43:58 -参数 : [{}]
2019-06-04 16:43:58 -==>  Preparing: select `id`,`room_no`,`room_type`,`floor`,`room_state`,`price`,`create_time`,`update_time`,`create_user`,`update_user` from xjbg_room 
2019-06-04 16:43:58 -==> Parameters: 
2019-06-04 16:43:58 -<==      Total: 8
2019-06-04 16:43:58 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 16:43:58 -==> Parameters: room_type(String)
2019-06-04 16:43:58 -<==      Total: 7
2019-06-04 16:43:58 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 16:43:58 -==> Parameters: floor(String)
2019-06-04 16:43:58 -<==      Total: 5
2019-06-04 16:43:58 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 16:43:58 -==> Parameters: room_state(String)
2019-06-04 16:43:58 -<==      Total: 2
2019-06-04 16:43:58 -==>  Preparing: select * from sys_user 
2019-06-04 16:43:58 -==> Parameters: 
2019-06-04 16:43:58 -<==      Total: 11
2019-06-04 16:43:58 -耗时 : 10
2019-06-04 16:43:58 -返回值 : xjbg/room/roomMng
2019-06-04 16:43:58 -请求地址 : http://localhost:8888/xjbg/room/operation/1
2019-06-04 16:43:58 -HTTP METHOD : GET
2019-06-04 16:43:58 -CLASS_METHOD : com.bootdo.xjbg.controller.RoomController.operation
2019-06-04 16:43:58 -参数 : [1, {}]
2019-06-04 16:43:58 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 16:43:58 -==> Parameters: room_type(String)
2019-06-04 16:43:58 -<==      Total: 7
2019-06-04 16:43:58 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 16:43:58 -==> Parameters: floor(String)
2019-06-04 16:43:58 -<==      Total: 5
2019-06-04 16:43:58 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 16:43:58 -==> Parameters: room_state(String)
2019-06-04 16:43:58 -<==      Total: 2
2019-06-04 16:43:58 -==>  Preparing: select * from sys_user 
2019-06-04 16:43:58 -==> Parameters: 
2019-06-04 16:43:58 -<==      Total: 11
2019-06-04 16:43:58 -==>  Preparing: select `id`,`product_name`,`purchase_price`,`selling_price`,`product_pic`,`create_time`,`create_user`,`update_time`,`update_user` from xjbg_product order by id desc 
2019-06-04 16:43:58 -==> Parameters: 
2019-06-04 16:43:58 -<==      Total: 5
2019-06-04 16:43:58 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 16:43:58 -==> Parameters: order_type(String)
2019-06-04 16:43:58 -<==      Total: 3
2019-06-04 16:43:58 -==>  Preparing: select `id`,`room_no`,`room_type`,`floor`,`room_state`,`price`,`create_time`,`update_time`,`create_user`,`update_user` from xjbg_room where id = ? 
2019-06-04 16:43:58 -==> Parameters: 1(Integer)
2019-06-04 16:43:58 -<==      Total: 1
2019-06-04 16:43:58 -耗时 : 13
2019-06-04 16:43:58 -返回值 : xjbg/room/operation
2019-06-04 16:44:01 -请求地址 : http://localhost:8888/xjbg/room/operation/1
2019-06-04 16:44:01 -HTTP METHOD : GET
2019-06-04 16:44:01 -CLASS_METHOD : com.bootdo.xjbg.controller.RoomController.operation
2019-06-04 16:44:01 -参数 : [1, {}]
2019-06-04 16:44:01 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 16:44:01 -==> Parameters: room_type(String)
2019-06-04 16:44:01 -<==      Total: 7
2019-06-04 16:44:01 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 16:44:01 -==> Parameters: floor(String)
2019-06-04 16:44:01 -<==      Total: 5
2019-06-04 16:44:01 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 16:44:01 -==> Parameters: room_state(String)
2019-06-04 16:44:01 -<==      Total: 2
2019-06-04 16:44:01 -==>  Preparing: select * from sys_user 
2019-06-04 16:44:01 -==> Parameters: 
2019-06-04 16:44:01 -<==      Total: 11
2019-06-04 16:44:01 -==>  Preparing: select `id`,`product_name`,`purchase_price`,`selling_price`,`product_pic`,`create_time`,`create_user`,`update_time`,`update_user` from xjbg_product order by id desc 
2019-06-04 16:44:01 -==> Parameters: 
2019-06-04 16:44:01 -<==      Total: 5
2019-06-04 16:44:01 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 16:44:01 -==> Parameters: order_type(String)
2019-06-04 16:44:01 -<==      Total: 3
2019-06-04 16:44:01 -==>  Preparing: select `id`,`room_no`,`room_type`,`floor`,`room_state`,`price`,`create_time`,`update_time`,`create_user`,`update_user` from xjbg_room where id = ? 
2019-06-04 16:44:01 -==> Parameters: 1(Integer)
2019-06-04 16:44:01 -<==      Total: 1
2019-06-04 16:44:01 -耗时 : 8
2019-06-04 16:44:01 -返回值 : xjbg/room/operation
2019-06-04 16:56:06 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 5 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(5)-CONNECTED(5)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 57], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 9], sockJsScheduler[pool size = 8, active threads = 1, queued tasks = 3, completed tasks = 429]
2019-06-04 17:10:43 -请求地址 : http://localhost:8888/index
2019-06-04 17:10:43 -HTTP METHOD : GET
2019-06-04 17:10:43 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-06-04 17:10:43 -参数 : [{}]
2019-06-04 17:10:43 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-06-04 17:10:43 -==> Parameters: 1(Long)
2019-06-04 17:10:43 -<==      Total: 34
2019-06-04 17:10:43 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-06-04 17:10:43 -==> Parameters: 144(Long)
2019-06-04 17:10:43 -<==      Total: 1
2019-06-04 17:10:43 -耗时 : 6
2019-06-04 17:10:43 -返回值 : index_v1
2019-06-04 17:10:43 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-04 17:10:43 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 6(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-hotel","url":""},"checked":false,"children":[{"attributes":{"icon":"","url":"/xjbg/room/roomMng"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"105","text":"开房"},{"attributes":{"icon":"fa fa-bed","url":"/xjbg/room"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"106","parentId":"105","text":"房间管理"},{"attributes":{"icon":"","url":"/xjbg/product"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"105","text":"商品管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"欣吉宾馆"},{"attributes":{"icon":"fa fa-commenting","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user","url":"/weixin/weixinUser"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"109","text":"用户管理"}],"hasChildren":true,"hasParent":false,"id":"109","parentId":"0","text":"微信管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","text":"基础管理"},{"attributes":{"icon":"fa fa-desktop"},"checked":false,"children":[{"attributes":{"icon":"fa fa-user","url":"sys/user/"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"6","parentId":"3","text":"用户管理"},{"attributes":{"icon":"fa fa-paw","url":"sys/role"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"7","parentId":"3","text":"角色管理"},{"attributes":{"icon":"fa fa-th-list","url":"sys/menu/"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"3","text":"系统菜单"},{"attributes":{"icon":"fa fa-users","url":"/system/sysDept"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"73","parentId":"3","text":"部门管理"}],"hasChildren":true,"hasParent":false,"id":"3","parentId":"0","text":"系统管理"},{"attributes":{"icon":"fa fa-gear","url":""},"checked":false,"children":[{"attributes":{"icon":"","url":"/swagger-ui.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"104","parentId":"77","text":"swagger"},{"attributes":{"icon":"fa fa-code","url":"common/generator"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"48","parentId":"77","text":"代码生成"},{"attributes":{"icon":"fa fa-hourglass-1","url":"common/job"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"72","parentId":"77","text":"计划任务"}],"hasChildren":true,"hasParent":false,"id":"77","parentId":"0","text":"系统工具"},{"attributes":{"icon":"fa fa-laptop","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-envelope-square","url":"oa/notify/selfNotify"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"90","parentId":"84","text":"我的通知"},{"attributes":{"icon":"fa fa-pencil-square","url":"oa/notify"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"85","parentId":"84","text":"通知公告"}],"hasChildren":true,"hasParent":false,"id":"84","parentId":"0","text":"办公管理"},{"attributes":{"icon":"fa fa-video-camera","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user","url":"sys/online"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"92","parentId":"91","text":"在线用户"},{"attributes":{"icon":"fa fa-warning","url":"common/log"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"27","parentId":"91","text":"系统日志"},{"attributes":{"icon":"fa fa-caret-square-o-right","url":"/druid/index.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"57","parentId":"91","text":"运行监控"}],"hasChildren":true,"hasParent":false,"id":"91","parentId":"0","text":"系统监控"},{"attributes":{"icon":"fa fa-print","url":""},"checked":false,"children":[{"attributes":{"icon":"","url":"activiti/task/todo"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"101","parentId":"93","text":"待办任务"},{"attributes":{"icon":"fa fa-sort-amount-asc","url":"activiti/model"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"94","parentId":"93","text":"模型管理"},{"attributes":{"icon":"fa fa-flag","url":"activiti/process"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"96","parentId":"93","text":"流程管理"}],"hasChildren":true,"hasParent":false,"id":"93","parentId":"0","text":"工作流程"},{"attributes":{"icon":"fa fa-rss","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-edit","url":"/blog/bContent/add"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"68","parentId":"49","text":"发布文章"},{"(String), 127.0.0.1(String), 2019-06-04 17:10:43.917(Timestamp)
2019-06-04 17:10:43 -<==    Updates: 1
2019-06-04 17:10:44 -请求地址 : http://localhost:8888/main
2019-06-04 17:10:44 -HTTP METHOD : GET
2019-06-04 17:10:44 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-04 17:10:44 -参数 : []
2019-06-04 17:10:44 -耗时 : 0
2019-06-04 17:10:44 -返回值 : main
2019-06-04 17:10:44 -请求地址 : http://localhost:8888/oa/notify/message
2019-06-04 17:10:44 -HTTP METHOD : GET
2019-06-04 17:10:44 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-06-04 17:10:44 -参数 : []
2019-06-04 17:10:44 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-06-04 17:10:44 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-06-04 17:10:44 -<==      Total: 0
2019-06-04 17:10:44 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-06-04 17:10:44 -==> Parameters: 1(Long), 0(String)
2019-06-04 17:10:44 -<==      Total: 1
2019-06-04 17:10:44 -耗时 : 3
2019-06-04 17:10:44 -返回值 : com.bootdo.common.utils.PageUtils@771778d5
2019-06-04 17:10:44 -请求地址 : http://localhost:8888/main
2019-06-04 17:10:44 -HTTP METHOD : GET
2019-06-04 17:10:44 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-04 17:10:44 -参数 : []
2019-06-04 17:10:44 -耗时 : 0
2019-06-04 17:10:44 -返回值 : main
2019-06-04 17:10:45 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-06-04 17:10:45 -==> Parameters: 1(Long)
2019-06-04 17:10:45 -<==      Total: 58
2019-06-04 17:10:45 -请求地址 : http://localhost:8888/xjbg/room/roomMng
2019-06-04 17:10:45 -HTTP METHOD : GET
2019-06-04 17:10:45 -CLASS_METHOD : com.bootdo.xjbg.controller.RoomController.roomMng
2019-06-04 17:10:45 -参数 : [{}]
2019-06-04 17:10:45 -==>  Preparing: select `id`,`room_no`,`room_type`,`floor`,`room_state`,`price`,`create_time`,`update_time`,`create_user`,`update_user` from xjbg_room 
2019-06-04 17:10:45 -==> Parameters: 
2019-06-04 17:10:45 -<==      Total: 8
2019-06-04 17:10:45 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 17:10:45 -==> Parameters: room_type(String)
2019-06-04 17:10:45 -<==      Total: 7
2019-06-04 17:10:45 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 17:10:45 -==> Parameters: floor(String)
2019-06-04 17:10:45 -<==      Total: 5
2019-06-04 17:10:45 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 17:10:45 -==> Parameters: room_state(String)
2019-06-04 17:10:45 -<==      Total: 2
2019-06-04 17:10:45 -==>  Preparing: select * from sys_user 
2019-06-04 17:10:45 -==> Parameters: 
2019-06-04 17:10:45 -<==      Total: 11
2019-06-04 17:10:45 -耗时 : 8
2019-06-04 17:10:45 -返回值 : xjbg/room/roomMng
2019-06-04 17:10:45 -请求地址 : http://localhost:8888/xjbg/room/operation/1
2019-06-04 17:10:45 -HTTP METHOD : GET
2019-06-04 17:10:45 -CLASS_METHOD : com.bootdo.xjbg.controller.RoomController.operation
2019-06-04 17:10:45 -参数 : [1, {}]
2019-06-04 17:10:45 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 17:10:45 -==> Parameters: room_type(String)
2019-06-04 17:10:45 -<==      Total: 7
2019-06-04 17:10:45 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 17:10:45 -==> Parameters: floor(String)
2019-06-04 17:10:45 -<==      Total: 5
2019-06-04 17:10:45 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 17:10:45 -==> Parameters: room_state(String)
2019-06-04 17:10:45 -<==      Total: 2
2019-06-04 17:10:45 -==>  Preparing: select * from sys_user 
2019-06-04 17:10:45 -==> Parameters: 
2019-06-04 17:10:45 -<==      Total: 11
2019-06-04 17:10:45 -==>  Preparing: select `id`,`product_name`,`purchase_price`,`selling_price`,`product_pic`,`create_time`,`create_user`,`update_time`,`update_user` from xjbg_product order by id desc 
2019-06-04 17:10:45 -==> Parameters: 
2019-06-04 17:10:45 -<==      Total: 5
2019-06-04 17:10:45 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 17:10:45 -==> Parameters: order_type(String)
2019-06-04 17:10:45 -<==      Total: 3
2019-06-04 17:10:45 -==>  Preparing: select `id`,`room_no`,`room_type`,`floor`,`room_state`,`price`,`create_time`,`update_time`,`create_user`,`update_user` from xjbg_room where id = ? 
2019-06-04 17:10:45 -==> Parameters: 1(Integer)
2019-06-04 17:10:45 -<==      Total: 1
2019-06-04 17:10:45 -耗时 : 12
2019-06-04 17:10:45 -返回值 : xjbg/room/operation
2019-06-04 17:22:45 -Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@7979016: startup date [Tue Jun 04 16:24:58 CST 2019]; root of context hierarchy
2019-06-04 17:22:45 -Stopping beans in phase 2147483647
2019-06-04 17:22:45 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED paused.
2019-06-04 17:22:45 -Stopping...
2019-06-04 17:22:45 -BrokerAvailabilityEvent[available=false, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[1 sessions]]]]
2019-06-04 17:22:45 -Stopped.
2019-06-04 17:22:45 -Unregistering JMX-exposed beans on shutdown
2019-06-04 17:22:45 -Unregistering JMX-exposed beans
2019-06-04 17:22:45 -Shutting down ExecutorService 'brokerChannelExecutor'
2019-06-04 17:22:45 -Shutting down ExecutorService 'messageBrokerTaskScheduler'
2019-06-04 17:22:45 -Shutting down ExecutorService 'clientOutboundChannelExecutor'
2019-06-04 17:22:45 -Shutting down ExecutorService 'clientInboundChannelExecutor'
2019-06-04 17:22:45 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED shutting down.
2019-06-04 17:22:45 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED paused.
2019-06-04 17:22:45 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED shutdown complete.
2019-06-04 17:22:45 -Shutting down Quartz Scheduler
2019-06-04 17:22:45 -{dataSource-1} closed
2019-06-04 17:22:45 -Disabled session validation scheduler.
2019-06-04 17:22:46 -Starting BootdoApplication on LAPTOP-ELP5M68R with PID 15216 (D:\workspace\bootdo\bootdo\target\classes started by Lenovo in D:\workspace\bootdo\bootdo)
2019-06-04 17:22:46 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-06-04 17:22:46 -The following profiles are active: dev
2019-06-04 17:22:46 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6c2f7b6: startup date [Tue Jun 04 17:22:46 CST 2019]; root of context hierarchy
2019-06-04 17:22:47 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-06-04 17:22:48 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$f2629150] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-04 17:22:48 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$e4bbbff7] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-04 17:22:48 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-04 17:22:48 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-04 17:22:48 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-04 17:22:48 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache.1' does not yet exist.  Creating now.
2019-06-04 17:22:48 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache.1]
2019-06-04 17:22:48 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-04 17:22:48 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-04 17:22:48 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-04 17:22:48 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-04 17:22:49 -Tomcat initialized with port(s): 8888 (http)
2019-06-04 17:22:49 -Initializing ProtocolHandler ["http-nio-8888"]
2019-06-04 17:22:49 -Starting service [Tomcat]
2019-06-04 17:22:49 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-06-04 17:22:49 -Initializing Spring embedded WebApplicationContext
2019-06-04 17:22:49 -Root WebApplicationContext: initialization completed in 3020 ms
2019-06-04 17:22:49 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-06-04 17:22:49 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-06-04 17:22:49 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-06-04 17:22:49 -Mapping filter: 'requestContextFilter' to: [/*]
2019-06-04 17:22:49 -Filter xssFilter was not registered (disabled)
2019-06-04 17:22:49 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-06-04 17:22:49 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-06-04 17:22:49 -Servlet statViewServlet mapped to [/druid/*]
2019-06-04 17:22:49 -Servlet dispatcherServlet mapped to [/]
2019-06-04 17:22:49 -{dataSource-2} inited
2019-06-04 17:22:50 -ProcessEngine default created
2019-06-04 17:22:51 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6c2f7b6: startup date [Tue Jun 04 17:22:46 CST 2019]; root of context hierarchy
2019-06-04 17:22:52 -Using default implementation for ThreadExecutor
2019-06-04 17:22:52 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-06-04 17:22:52 -Quartz Scheduler v.2.2.1 created.
2019-06-04 17:22:52 -RAMJobStore initialized.
2019-06-04 17:22:52 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-06-04 17:22:52 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-06-04 17:22:52 -Quartz scheduler version: 2.2.1
2019-06-04 17:22:52 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@36a83dd
2019-06-04 17:22:52 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-06-04 17:22:52 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-06-04 17:22:53 -Mapped "{[/activiti/model/{id}],methods=[DELETE]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.ModelController.remove(java.lang.String)
2019-06-04 17:22:53 -Mapped "{[/activiti/model/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.activiti.controller.ModelController.list(int,int)
2019-06-04 17:22:53 -Mapped "{[/activiti/model/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.ModelController.batchRemove(java.lang.String[])
2019-06-04 17:22:53 -Mapped "{[/activiti/model],methods=[GET]}" onto org.springframework.web.servlet.ModelAndView com.bootdo.activiti.controller.ModelController.model()
2019-06-04 17:22:53 -Mapped "{[/activiti/model/export/{id}],methods=[GET]}" onto public void com.bootdo.activiti.controller.ModelController.exportToXml(java.lang.String,javax.servlet.http.HttpServletResponse)
2019-06-04 17:22:53 -Mapped "{[/activiti/model/deploy/{id}],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.ModelController.deploy(java.lang.String) throws java.lang.Exception
2019-06-04 17:22:53 -Mapped "{[/activiti/model/add]}" onto public void com.bootdo.activiti.controller.ModelController.newModel(javax.servlet.http.HttpServletResponse) throws java.io.UnsupportedEncodingException
2019-06-04 17:22:53 -Mapped "{[/activiti/editor/stencilset],methods=[GET],produces=[application/json;charset=utf-8]}" onto public java.lang.String com.bootdo.activiti.controller.ModelController.getStencilset()
2019-06-04 17:22:53 -Mapped "{[/activiti/model/{modelId}/save],methods=[PUT]}" onto public void com.bootdo.activiti.controller.ModelController.saveModel(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2019-06-04 17:22:53 -Mapped "{[/activiti/model/edit/{id}],methods=[GET]}" onto public void com.bootdo.activiti.controller.ModelController.edit(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-06-04 17:22:53 -Mapped "{[/activiti/model/{modelId}/json],methods=[GET]}" onto public com.fasterxml.jackson.databind.node.ObjectNode com.bootdo.activiti.controller.ModelController.getEditorJson(java.lang.String)
2019-06-04 17:22:53 -Mapped "{[/activiti/process/add],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.activiti.controller.ProcessController.add()
2019-06-04 17:22:53 -Mapped "{[/activiti/process/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.ProcessController.remove(java.lang.String)
2019-06-04 17:22:53 -Mapped "{[/activiti/process/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.activiti.controller.ProcessController.list(int,int)
2019-06-04 17:22:53 -Mapped "{[/activiti/process/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.ProcessController.batchRemove(java.lang.String[])
2019-06-04 17:22:53 -Mapped "{[/activiti/process],methods=[GET]}" onto org.springframework.web.servlet.ModelAndView com.bootdo.activiti.controller.ProcessController.process()
2019-06-04 17:22:53 -Mapped "{[/activiti/process/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.ProcessController.deploy(java.lang.String,java.lang.String,org.springframework.web.multipart.MultipartFile)
2019-06-04 17:22:53 -Mapped "{[/activiti/process/resource/read/{xml}/{id}]}" onto public void com.bootdo.activiti.controller.ProcessController.resourceRead(java.lang.String,java.lang.String,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-06-04 17:22:53 -Mapped "{[/activiti/process/convertToModel/{procDefId}]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.ProcessController.convertToModel(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes) throws java.io.UnsupportedEncodingException,javax.xml.stream.XMLStreamException
2019-06-04 17:22:53 -Mapped "{[/act/salary/form],methods=[GET]}" onto java.lang.String com.bootdo.activiti.controller.SalaryController.add()
2019-06-04 17:22:53 -Mapped "{[/act/salary/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.SalaryController.remove(java.lang.String)
2019-06-04 17:22:53 -Mapped "{[/act/salary/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.SalaryController.remove(java.lang.String[])
2019-06-04 17:22:53 -Mapped "{[/act/salary/update]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.SalaryController.update(com.bootdo.activiti.domain.SalaryDO)
2019-06-04 17:22:53 -Mapped "{[/act/salary/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.activiti.controller.SalaryController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-04 17:22:53 -Mapped "{[/act/salary/form/{taskId}],methods=[GET]}" onto java.lang.String com.bootdo.activiti.controller.SalaryController.edit(java.lang.String,org.springframework.ui.Model)
2019-06-04 17:22:53 -Mapped "{[/act/salary],methods=[GET]}" onto java.lang.String com.bootdo.activiti.controller.SalaryController.Salary()
2019-06-04 17:22:53 -Mapped "{[/act/salary/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.SalaryController.saveOrUpdate(com.bootdo.activiti.domain.SalaryDO)
2019-06-04 17:22:53 -Mapped "{[/activiti/task/form/{procDefId}/{taskId}],methods=[GET]}" onto public void com.bootdo.activiti.controller.TaskController.form(java.lang.String,java.lang.String,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-06-04 17:22:53 -Mapped "{[/activiti/task/gotoList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.activiti.controller.TaskController.list(int,int)
2019-06-04 17:22:53 -Mapped "{[/activiti/task/trace/photo/{procDefId}/{execId}]}" onto public void com.bootdo.activiti.controller.TaskController.tracePhoto(java.lang.String,java.lang.String,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-06-04 17:22:53 -Mapped "{[/activiti/task/goto],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.activiti.controller.TaskController.gotoTask()
2019-06-04 17:22:53 -Mapped "{[/activiti/task/form/{procDefId}],methods=[GET]}" onto public void com.bootdo.activiti.controller.TaskController.startForm(java.lang.String,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-06-04 17:22:53 -Mapped "{[/activiti/task/todoList],methods=[GET]}" onto java.util.List<com.bootdo.activiti.vo.TaskVO> com.bootdo.activiti.controller.TaskController.todoList()
2019-06-04 17:22:53 -Mapped "{[/activiti/task/todo],methods=[GET]}" onto org.springframework.web.servlet.ModelAndView com.bootdo.activiti.controller.TaskController.todo()
2019-06-04 17:22:53 -Mapped "{[/blog/open/post/{cid}],methods=[GET]}" onto java.lang.String com.bootdo.blog.controller.BlogController.post(java.lang.Long,org.springframework.ui.Model)
2019-06-04 17:22:53 -Mapped "{[/blog],methods=[GET]}" onto java.lang.String com.bootdo.blog.controller.BlogController.blog()
2019-06-04 17:22:53 -Mapped "{[/blog/open/page/{categories}],methods=[GET]}" onto java.lang.String com.bootdo.blog.controller.BlogController.about(java.lang.String,org.springframework.ui.Model)
2019-06-04 17:22:53 -Mapped "{[/blog/open/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.blog.controller.BlogController.opentList(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-04 17:22:53 -Mapped "{[/blog/bContent/add],methods=[GET]}" onto java.lang.String com.bootdo.blog.controller.ContentController.add()
2019-06-04 17:22:53 -Mapped "{[/blog/bContent/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.blog.controller.ContentController.remove(java.lang.Long)
2019-06-04 17:22:53 -Mapped "{[/blog/bContent/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.blog.controller.ContentController.remove(java.lang.Long[])
2019-06-04 17:22:53 -Mapped "{[/blog/bContent/update]}" onto public com.bootdo.common.utils.R com.bootdo.blog.controller.ContentController.update(com.bootdo.blog.domain.ContentDO)
2019-06-04 17:22:53 -Mapped "{[/blog/bContent/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.blog.controller.ContentController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-04 17:22:53 -Mapped "{[/blog/bContent/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.blog.controller.ContentController.save(com.bootdo.blog.domain.ContentDO)
2019-06-04 17:22:53 -Mapped "{[/blog/bContent/edit/{cid}],methods=[GET]}" onto java.lang.String com.bootdo.blog.controller.ContentController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-04 17:22:53 -Mapped "{[/blog/bContent],methods=[GET]}" onto java.lang.String com.bootdo.blog.controller.ContentController.bContent()
2019-06-04 17:22:53 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-06-04 17:22:53 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-06-04 17:22:53 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-06-04 17:22:53 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-06-04 17:22:53 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-04 17:22:53 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-06-04 17:22:53 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-06-04 17:22:53 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-04 17:22:53 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-06-04 17:22:53 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-06-04 17:22:53 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-06-04 17:22:53 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-06-04 17:22:53 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-06-04 17:22:53 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-06-04 17:22:53 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-06-04 17:22:53 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-04 17:22:53 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-06-04 17:22:53 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-06-04 17:22:53 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-04 17:22:53 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-06-04 17:22:53 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-06-04 17:22:53 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-04 17:22:53 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-06-04 17:22:53 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-06-04 17:22:53 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-06-04 17:22:53 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-06-04 17:22:53 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-06-04 17:22:53 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-06-04 17:22:53 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-06-04 17:22:53 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-06-04 17:22:53 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-06-04 17:22:53 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-04 17:22:53 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-06-04 17:22:53 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-06-04 17:22:53 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-04 17:22:53 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-06-04 17:22:53 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-06-04 17:22:53 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-06-04 17:22:53 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-06-04 17:22:53 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-04 17:22:53 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-06-04 17:22:53 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-06-04 17:22:53 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-06-04 17:22:53 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-06-04 17:22:53 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-06-04 17:22:53 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-06-04 17:22:53 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-06-04 17:22:53 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-06-04 17:22:53 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-04 17:22:53 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-06-04 17:22:53 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-06-04 17:22:53 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-04 17:22:53 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-06-04 17:22:53 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-06-04 17:22:53 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-04 17:22:53 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-06-04 17:22:53 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-06-04 17:22:53 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-06-04 17:22:53 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-06-04 17:22:53 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-06-04 17:22:53 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-06-04 17:22:53 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-06-04 17:22:53 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-04 17:22:53 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-06-04 17:22:53 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-06-04 17:22:53 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-06-04 17:22:53 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-06-04 17:22:53 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-06-04 17:22:53 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-06-04 17:22:53 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String)
2019-06-04 17:22:53 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-06-04 17:22:53 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-06-04 17:22:53 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-06-04 17:22:53 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-06-04 17:22:53 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-04 17:22:53 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-06-04 17:22:53 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-06-04 17:22:53 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-06-04 17:22:53 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-06-04 17:22:53 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-06-04 17:22:53 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-06-04 17:22:53 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-06-04 17:22:53 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-06-04 17:22:53 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-06-04 17:22:53 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-06-04 17:22:53 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-06-04 17:22:53 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-06-04 17:22:53 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-04 17:22:53 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-06-04 17:22:53 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-06-04 17:22:53 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-06-04 17:22:53 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-06-04 17:22:53 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-04 17:22:53 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-06-04 17:22:53 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-06-04 17:22:53 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-06-04 17:22:53 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-04 17:22:53 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-06-04 17:22:53 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-06-04 17:22:53 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-06-04 17:22:53 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-06-04 17:22:53 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-06-04 17:22:53 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-06-04 17:22:53 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-06-04 17:22:53 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-06-04 17:22:53 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-06-04 17:22:53 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-06-04 17:22:53 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-06-04 17:22:53 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-06-04 17:22:53 -Mapped "{[/wxServer],methods=[GET]}" onto public void org.weixin4j.spring.web.WeixinJieruController.get(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-06-04 17:22:53 -Mapped "{[/wxServer],methods=[POST]}" onto public void org.weixin4j.spring.web.WeixinJieruController.post(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-06-04 17:22:53 -Mapped "{[/weixin/weixinUser/add],methods=[GET]}" onto java.lang.String com.bootdo.weixin.controller.WeixinUserController.add()
2019-06-04 17:22:53 -Mapped "{[/weixin/weixinUser/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.weixin.controller.WeixinUserController.remove(java.lang.Long)
2019-06-04 17:22:53 -Mapped "{[/weixin/weixinUser/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.weixin.controller.WeixinUserController.remove(java.lang.Long[])
2019-06-04 17:22:53 -Mapped "{[/weixin/weixinUser/update]}" onto public com.bootdo.common.utils.R com.bootdo.weixin.controller.WeixinUserController.update(com.bootdo.weixin.domain.WeixinUserDO)
2019-06-04 17:22:53 -Mapped "{[/weixin/weixinUser/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.weixin.controller.WeixinUserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-04 17:22:53 -Mapped "{[/weixin/weixinUser/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.weixin.controller.WeixinUserController.save(com.bootdo.weixin.domain.WeixinUserDO)
2019-06-04 17:22:53 -Mapped "{[/weixin/weixinUser/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.weixin.controller.WeixinUserController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-04 17:22:53 -Mapped "{[/weixin/weixinUser],methods=[GET]}" onto java.lang.String com.bootdo.weixin.controller.WeixinUserController.WeixinUser()
2019-06-04 17:22:53 -Mapped "{[/xjbg/order/add],methods=[GET]}" onto java.lang.String com.bootdo.xjbg.controller.OrderController.add()
2019-06-04 17:22:53 -Mapped "{[/xjbg/order/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.xjbg.controller.OrderController.remove(java.lang.Long)
2019-06-04 17:22:53 -Mapped "{[/xjbg/order/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.xjbg.controller.OrderController.remove(java.lang.Long[])
2019-06-04 17:22:53 -Mapped "{[/xjbg/order/update]}" onto public com.bootdo.common.utils.R com.bootdo.xjbg.controller.OrderController.update(com.bootdo.xjbg.domain.OrderDO)
2019-06-04 17:22:53 -Mapped "{[/xjbg/order/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.xjbg.controller.OrderController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-04 17:22:53 -Mapped "{[/xjbg/order/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.xjbg.controller.OrderController.save(com.bootdo.xjbg.domain.OrderDO)
2019-06-04 17:22:53 -Mapped "{[/xjbg/order/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.xjbg.controller.OrderController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-04 17:22:53 -Mapped "{[/xjbg/order],methods=[GET]}" onto java.lang.String com.bootdo.xjbg.controller.OrderController.Order()
2019-06-04 17:22:53 -Mapped "{[/xjbg/orderItem/add],methods=[GET]}" onto java.lang.String com.bootdo.xjbg.controller.OrderItemController.add()
2019-06-04 17:22:53 -Mapped "{[/xjbg/orderItem/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.xjbg.controller.OrderItemController.remove(java.lang.Long)
2019-06-04 17:22:53 -Mapped "{[/xjbg/orderItem/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.xjbg.controller.OrderItemController.remove(java.lang.Long[])
2019-06-04 17:22:53 -Mapped "{[/xjbg/orderItem/update]}" onto public com.bootdo.common.utils.R com.bootdo.xjbg.controller.OrderItemController.update(com.bootdo.xjbg.domain.OrderItemDO)
2019-06-04 17:22:53 -Mapped "{[/xjbg/orderItem/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.xjbg.controller.OrderItemController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-04 17:22:53 -Mapped "{[/xjbg/orderItem/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.xjbg.controller.OrderItemController.save(com.bootdo.xjbg.domain.OrderItemDO)
2019-06-04 17:22:53 -Mapped "{[/xjbg/orderItem/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.xjbg.controller.OrderItemController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-04 17:22:53 -Mapped "{[/xjbg/orderItem],methods=[GET]}" onto java.lang.String com.bootdo.xjbg.controller.OrderItemController.OrderItem()
2019-06-04 17:22:53 -Mapped "{[/xjbg/product/add],methods=[GET]}" onto java.lang.String com.bootdo.xjbg.controller.ProductController.add()
2019-06-04 17:22:53 -Mapped "{[/xjbg/product/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.xjbg.controller.ProductController.remove(java.lang.Long)
2019-06-04 17:22:53 -Mapped "{[/xjbg/product/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.xjbg.controller.ProductController.remove(java.lang.Long[])
2019-06-04 17:22:53 -Mapped "{[/xjbg/product/update]}" onto public com.bootdo.common.utils.R com.bootdo.xjbg.controller.ProductController.update(com.bootdo.xjbg.domain.ProductDO,org.springframework.web.multipart.MultipartFile[])
2019-06-04 17:22:53 -Mapped "{[/xjbg/product/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.xjbg.controller.ProductController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-04 17:22:53 -Mapped "{[/xjbg/product/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.xjbg.controller.ProductController.save(com.bootdo.xjbg.domain.ProductDO,org.springframework.web.multipart.MultipartFile[])
2019-06-04 17:22:53 -Mapped "{[/xjbg/product/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.xjbg.controller.ProductController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-04 17:22:53 -Mapped "{[/xjbg/product],methods=[GET]}" onto java.lang.String com.bootdo.xjbg.controller.ProductController.Product()
2019-06-04 17:22:53 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-06-04 17:22:53 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-06-04 17:22:53 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-06-04 17:22:53 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-06-04 17:22:53 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-06-04 17:22:53 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-06-04 17:22:53 -Initializing ExecutorService  'brokerChannelExecutor'
2019-06-04 17:22:54 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-06-04 17:22:54 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6c2f7b6: startup date [Tue Jun 04 17:22:46 CST 2019]; root of context hierarchy
2019-06-04 17:22:54 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-06-04 17:22:54 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-06-04 17:22:54 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-06-04 17:22:54 -Mapped URL path [/productPic/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-06-04 17:22:54 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-06-04 17:22:54 -[THYMELEAF][restartedMain] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-06-04 17:22:55 -LiveReload server is running on port 35729
2019-06-04 17:22:55 -Registering beans for JMX exposure on startup
2019-06-04 17:22:55 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-06-04 17:22:55 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-06-04 17:22:55 -Starting beans in phase 2147483647
2019-06-04 17:22:55 -Context refreshed
2019-06-04 17:22:55 -Found 1 custom documentation plugin(s)
2019-06-04 17:22:55 -Scanning for api listing references
2019-06-04 17:22:55 -Generating unique operation named: removeUsingPOST_1
2019-06-04 17:22:55 -Generating unique operation named: addUsingGET_1
2019-06-04 17:22:55 -Generating unique operation named: editUsingGET_1
2019-06-04 17:22:55 -Generating unique operation named: listUsingGET_1
2019-06-04 17:22:55 -Generating unique operation named: removeUsingPOST_2
2019-06-04 17:22:55 -Generating unique operation named: removeUsingPOST_3
2019-06-04 17:22:55 -Generating unique operation named: saveUsingPOST_1
2019-06-04 17:22:55 -Generating unique operation named: updateUsingGET_1
2019-06-04 17:22:55 -Generating unique operation named: updateUsingHEAD_1
2019-06-04 17:22:55 -Generating unique operation named: updateUsingPOST_1
2019-06-04 17:22:55 -Generating unique operation named: updateUsingPUT_1
2019-06-04 17:22:55 -Generating unique operation named: updateUsingPATCH_1
2019-06-04 17:22:55 -Generating unique operation named: updateUsingDELETE_1
2019-06-04 17:22:55 -Generating unique operation named: updateUsingOPTIONS_1
2019-06-04 17:22:55 -Generating unique operation named: updateUsingTRACE_1
2019-06-04 17:22:56 -Generating unique operation named: addUsingGET_2
2019-06-04 17:22:56 -Generating unique operation named: editUsingGET_2
2019-06-04 17:22:56 -Generating unique operation named: listUsingGET_2
2019-06-04 17:22:56 -Generating unique operation named: removeUsingPOST_4
2019-06-04 17:22:56 -Generating unique operation named: removeUsingPOST_5
2019-06-04 17:22:56 -Generating unique operation named: saveUsingPOST_2
2019-06-04 17:22:56 -Generating unique operation named: updateUsingGET_2
2019-06-04 17:22:56 -Generating unique operation named: updateUsingHEAD_2
2019-06-04 17:22:56 -Generating unique operation named: updateUsingPOST_2
2019-06-04 17:22:56 -Generating unique operation named: updateUsingPUT_2
2019-06-04 17:22:56 -Generating unique operation named: updateUsingPATCH_2
2019-06-04 17:22:56 -Generating unique operation named: updateUsingDELETE_2
2019-06-04 17:22:56 -Generating unique operation named: updateUsingOPTIONS_2
2019-06-04 17:22:56 -Generating unique operation named: updateUsingTRACE_2
2019-06-04 17:22:56 -Generating unique operation named: addUsingGET_3
2019-06-04 17:22:56 -Generating unique operation named: editUsingGET_3
2019-06-04 17:22:56 -Generating unique operation named: listUsingGET_3
2019-06-04 17:22:56 -Generating unique operation named: removeUsingPOST_6
2019-06-04 17:22:56 -Generating unique operation named: removeUsingPOST_7
2019-06-04 17:22:56 -Generating unique operation named: saveUsingPOST_3
2019-06-04 17:22:56 -Generating unique operation named: updateUsingGET_3
2019-06-04 17:22:56 -Generating unique operation named: updateUsingHEAD_3
2019-06-04 17:22:56 -Generating unique operation named: updateUsingPOST_3
2019-06-04 17:22:56 -Generating unique operation named: updateUsingPUT_3
2019-06-04 17:22:56 -Generating unique operation named: updateUsingPATCH_3
2019-06-04 17:22:56 -Generating unique operation named: updateUsingDELETE_3
2019-06-04 17:22:56 -Generating unique operation named: updateUsingOPTIONS_3
2019-06-04 17:22:56 -Generating unique operation named: updateUsingTRACE_3
2019-06-04 17:22:56 -Generating unique operation named: editUsingGET_4
2019-06-04 17:22:56 -Generating unique operation named: listUsingGET_4
2019-06-04 17:22:56 -Generating unique operation named: updateUsingPOST_4
2019-06-04 17:22:56 -Generating unique operation named: addUsingGET_4
2019-06-04 17:22:56 -Generating unique operation named: editUsingGET_5
2019-06-04 17:22:56 -Generating unique operation named: infoUsingGET_1
2019-06-04 17:22:56 -Generating unique operation named: infoUsingHEAD_1
2019-06-04 17:22:56 -Generating unique operation named: infoUsingPOST_1
2019-06-04 17:22:56 -Generating unique operation named: infoUsingPUT_1
2019-06-04 17:22:56 -Generating unique operation named: infoUsingPATCH_1
2019-06-04 17:22:56 -Generating unique operation named: infoUsingDELETE_1
2019-06-04 17:22:56 -Generating unique operation named: infoUsingOPTIONS_1
2019-06-04 17:22:56 -Generating unique operation named: infoUsingTRACE_1
2019-06-04 17:22:56 -Generating unique operation named: listUsingGET_5
2019-06-04 17:22:56 -Generating unique operation named: removeUsingPOST_8
2019-06-04 17:22:56 -Generating unique operation named: removeUsingPOST_9
2019-06-04 17:22:56 -Generating unique operation named: saveUsingPOST_4
2019-06-04 17:22:56 -Generating unique operation named: updateUsingPOST_5
2019-06-04 17:22:56 -Generating unique operation named: listUsingGET_6
2019-06-04 17:22:56 -Generating unique operation named: removeUsingPOST_10
2019-06-04 17:22:56 -Generating unique operation named: welcomeUsingGET_1
2019-06-04 17:22:56 -Generating unique operation named: addUsingGET_5
2019-06-04 17:22:56 -Generating unique operation named: editUsingGET_6
2019-06-04 17:22:56 -Generating unique operation named: listUsingGET_7
2019-06-04 17:22:56 -Generating unique operation named: removeUsingPOST_11
2019-06-04 17:22:56 -Generating unique operation named: saveUsingPOST_5
2019-06-04 17:22:56 -Generating unique operation named: treeUsingGET_1
2019-06-04 17:22:56 -Generating unique operation named: treeUsingGET_2
2019-06-04 17:22:56 -Generating unique operation named: updateUsingPOST_6
2019-06-04 17:22:56 -Generating unique operation named: batchRemoveUsingPOST_1
2019-06-04 17:22:56 -Generating unique operation named: editUsingGET_7
2019-06-04 17:22:56 -Generating unique operation named: listUsingGET_8
2019-06-04 17:22:56 -Generating unique operation named: addUsingGET_6
2019-06-04 17:22:56 -Generating unique operation named: editUsingGET_8
2019-06-04 17:22:56 -Generating unique operation named: listUsingGET_9
2019-06-04 17:22:56 -Generating unique operation named: removeUsingPOST_12
2019-06-04 17:22:56 -Generating unique operation named: removeUsingPOST_13
2019-06-04 17:22:56 -Generating unique operation named: saveUsingPOST_6
2019-06-04 17:22:56 -Generating unique operation named: updateUsingGET_4
2019-06-04 17:22:56 -Generating unique operation named: updateUsingHEAD_4
2019-06-04 17:22:56 -Generating unique operation named: updateUsingPOST_7
2019-06-04 17:22:56 -Generating unique operation named: updateUsingPUT_4
2019-06-04 17:22:56 -Generating unique operation named: updateUsingPATCH_4
2019-06-04 17:22:56 -Generating unique operation named: updateUsingDELETE_4
2019-06-04 17:22:56 -Generating unique operation named: updateUsingOPTIONS_4
2019-06-04 17:22:56 -Generating unique operation named: updateUsingTRACE_4
2019-06-04 17:22:56 -Generating unique operation named: addUsingGET_7
2019-06-04 17:22:56 -Generating unique operation named: editUsingGET_9
2019-06-04 17:22:56 -Generating unique operation named: listUsingGET_10
2019-06-04 17:22:56 -Generating unique operation named: removeUsingPOST_14
2019-06-04 17:22:56 -Generating unique operation named: removeUsingPOST_15
2019-06-04 17:22:56 -Generating unique operation named: saveUsingPOST_7
2019-06-04 17:22:56 -Generating unique operation named: updateUsingGET_5
2019-06-04 17:22:56 -Generating unique operation named: updateUsingHEAD_5
2019-06-04 17:22:56 -Generating unique operation named: updateUsingPOST_8
2019-06-04 17:22:56 -Generating unique operation named: updateUsingPUT_5
2019-06-04 17:22:56 -Generating unique operation named: updateUsingPATCH_5
2019-06-04 17:22:56 -Generating unique operation named: updateUsingDELETE_5
2019-06-04 17:22:56 -Generating unique operation named: updateUsingOPTIONS_5
2019-06-04 17:22:56 -Generating unique operation named: updateUsingTRACE_5
2019-06-04 17:22:56 -Generating unique operation named: addUsingGET_8
2019-06-04 17:22:56 -Generating unique operation named: editUsingGET_10
2019-06-04 17:22:56 -Generating unique operation named: listUsingGET_11
2019-06-04 17:22:56 -Generating unique operation named: removeUsingPOST_16
2019-06-04 17:22:56 -Generating unique operation named: removeUsingPOST_17
2019-06-04 17:22:56 -Generating unique operation named: saveUsingPOST_8
2019-06-04 17:22:56 -Generating unique operation named: updateUsingGET_6
2019-06-04 17:22:56 -Generating unique operation named: updateUsingHEAD_6
2019-06-04 17:22:56 -Generating unique operation named: updateUsingPOST_9
2019-06-04 17:22:56 -Generating unique operation named: updateUsingPUT_6
2019-06-04 17:22:56 -Generating unique operation named: updateUsingPATCH_6
2019-06-04 17:22:56 -Generating unique operation named: updateUsingDELETE_6
2019-06-04 17:22:56 -Generating unique operation named: updateUsingOPTIONS_6
2019-06-04 17:22:56 -Generating unique operation named: updateUsingTRACE_6
2019-06-04 17:22:56 -Generating unique operation named: addUsingGET_9
2019-06-04 17:22:56 -Generating unique operation named: batchRemoveUsingPOST_2
2019-06-04 17:22:56 -Generating unique operation named: deployUsingPOST_1
2019-06-04 17:22:56 -Generating unique operation named: listUsingGET_12
2019-06-04 17:22:56 -Generating unique operation named: removeUsingPOST_18
2019-06-04 17:22:56 -Generating unique operation named: addUsingGET_10
2019-06-04 17:22:56 -Generating unique operation named: editUsingGET_11
2019-06-04 17:22:56 -Generating unique operation named: listUsingGET_13
2019-06-04 17:22:56 -Generating unique operation named: removeUsingPOST_19
2019-06-04 17:22:56 -Generating unique operation named: removeUsingPOST_20
2019-06-04 17:22:56 -Trying to infer dataType org.springframework.web.multipart.MultipartFile[]
2019-06-04 17:22:56 -Generating unique operation named: saveUsingPOST_9
2019-06-04 17:22:56 -Trying to infer dataType org.springframework.web.multipart.MultipartFile[]
2019-06-04 17:22:56 -Generating unique operation named: updateUsingGET_7
2019-06-04 17:22:56 -Trying to infer dataType org.springframework.web.multipart.MultipartFile[]
2019-06-04 17:22:56 -Generating unique operation named: updateUsingHEAD_7
2019-06-04 17:22:56 -Trying to infer dataType org.springframework.web.multipart.MultipartFile[]
2019-06-04 17:22:56 -Generating unique operation named: updateUsingPOST_10
2019-06-04 17:22:56 -Trying to infer dataType org.springframework.web.multipart.MultipartFile[]
2019-06-04 17:22:56 -Generating unique operation named: updateUsingPUT_7
2019-06-04 17:22:56 -Trying to infer dataType org.springframework.web.multipart.MultipartFile[]
2019-06-04 17:22:56 -Generating unique operation named: updateUsingPATCH_7
2019-06-04 17:22:56 -Trying to infer dataType org.springframework.web.multipart.MultipartFile[]
2019-06-04 17:22:56 -Generating unique operation named: updateUsingDELETE_7
2019-06-04 17:22:56 -Trying to infer dataType org.springframework.web.multipart.MultipartFile[]
2019-06-04 17:22:56 -Generating unique operation named: updateUsingOPTIONS_7
2019-06-04 17:22:56 -Trying to infer dataType org.springframework.web.multipart.MultipartFile[]
2019-06-04 17:22:56 -Generating unique operation named: updateUsingTRACE_7
2019-06-04 17:22:56 -Generating unique operation named: addUsingGET_11
2019-06-04 17:22:56 -Generating unique operation named: batchRemoveUsingPOST_3
2019-06-04 17:22:56 -Generating unique operation named: editUsingGET_12
2019-06-04 17:22:56 -Generating unique operation named: listUsingGET_14
2019-06-04 17:22:56 -Generating unique operation named: saveUsingPOST_10
2019-06-04 17:22:56 -Generating unique operation named: saveUsingPOST_11
2019-06-04 17:22:56 -Generating unique operation named: updateUsingPOST_11
2019-06-04 17:22:56 -Generating unique operation named: addUsingGET_12
2019-06-04 17:22:56 -Generating unique operation named: editUsingGET_13
2019-06-04 17:22:56 -Generating unique operation named: listUsingGET_15
2019-06-04 17:22:56 -Generating unique operation named: removeUsingPOST_21
2019-06-04 17:22:56 -Generating unique operation named: removeUsingPOST_22
2019-06-04 17:22:56 -Generating unique operation named: updateUsingGET_8
2019-06-04 17:22:56 -Generating unique operation named: updateUsingHEAD_8
2019-06-04 17:22:56 -Generating unique operation named: updateUsingPOST_12
2019-06-04 17:22:56 -Generating unique operation named: updateUsingPUT_8
2019-06-04 17:22:56 -Generating unique operation named: updateUsingPATCH_8
2019-06-04 17:22:56 -Generating unique operation named: updateUsingDELETE_8
2019-06-04 17:22:56 -Generating unique operation named: updateUsingOPTIONS_8
2019-06-04 17:22:56 -Generating unique operation named: updateUsingTRACE_8
2019-06-04 17:22:56 -Generating unique operation named: listUsingGET_16
2019-06-04 17:22:56 -Generating unique operation named: listUsingHEAD_1
2019-06-04 17:22:56 -Generating unique operation named: listUsingPOST_1
2019-06-04 17:22:56 -Generating unique operation named: listUsingPUT_1
2019-06-04 17:22:56 -Generating unique operation named: listUsingPATCH_1
2019-06-04 17:22:56 -Generating unique operation named: listUsingDELETE_1
2019-06-04 17:22:56 -Generating unique operation named: listUsingOPTIONS_1
2019-06-04 17:22:56 -Generating unique operation named: listUsingTRACE_1
2019-06-04 17:22:56 -Generating unique operation named: listUsingGET_17
2019-06-04 17:22:56 -Generating unique operation named: addUsingGET_13
2019-06-04 17:22:57 -Generating unique operation named: batchRemoveUsingPOST_4
2019-06-04 17:22:57 -Generating unique operation named: editUsingGET_14
2019-06-04 17:22:57 -Generating unique operation named: listUsingGET_18
2019-06-04 17:22:57 -Generating unique operation named: removeUsingPOST_23
2019-06-04 17:22:57 -Generating unique operation named: saveUsingPOST_12
2019-06-04 17:22:57 -Generating unique operation named: treeUsingGET_3
2019-06-04 17:22:57 -Generating unique operation named: treeViewUsingGET_1
2019-06-04 17:22:57 -Generating unique operation named: updateUsingPOST_13
2019-06-04 17:22:57 -Generating unique operation named: addUsingGET_14
2019-06-04 17:22:57 -Generating unique operation named: editUsingGET_15
2019-06-04 17:22:57 -Generating unique operation named: listUsingGET_19
2019-06-04 17:22:57 -Generating unique operation named: removeUsingPOST_24
2019-06-04 17:22:57 -Generating unique operation named: removeUsingPOST_25
2019-06-04 17:22:57 -Generating unique operation named: saveUsingPOST_13
2019-06-04 17:22:57 -Generating unique operation named: updateUsingGET_9
2019-06-04 17:22:57 -Generating unique operation named: updateUsingHEAD_9
2019-06-04 17:22:57 -Generating unique operation named: updateUsingPOST_14
2019-06-04 17:22:57 -Generating unique operation named: updateUsingPUT_9
2019-06-04 17:22:57 -Generating unique operation named: updateUsingPATCH_9
2019-06-04 17:22:57 -Generating unique operation named: updateUsingDELETE_9
2019-06-04 17:22:57 -Generating unique operation named: updateUsingOPTIONS_9
2019-06-04 17:22:57 -Generating unique operation named: updateUsingTRACE_9
2019-06-04 17:22:57 -Starting Quartz Scheduler now
2019-06-04 17:22:57 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-06-04 17:22:57 -Starting...
2019-06-04 17:22:57 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-06-04 17:22:57 -Started.
2019-06-04 17:22:57 -Starting ProtocolHandler ["http-nio-8888"]
2019-06-04 17:22:57 -Using a shared selector for servlet write/read
2019-06-04 17:22:57 -Tomcat started on port(s): 8888 (http) with context path ''
2019-06-04 17:22:57 -Started BootdoApplication in 11.155 seconds (JVM running for 3481.123)
2019-06-04 17:22:57 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-06-04 17:22:57 -==> Parameters: 
2019-06-04 17:22:57 -<==      Total: 1
2019-06-04 17:22:57 -Condition evaluation unchanged
2019-06-04 17:23:53 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 2, active threads = 1, queued tasks = 1, completed tasks = 0]
2019-06-04 17:25:47 -Starting BootdoApplication on LAPTOP-ELP5M68R with PID 19480 (D:\workspace\bootdo\bootdo\target\classes started by Lenovo in D:\workspace\bootdo\bootdo)
2019-06-04 17:25:47 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-06-04 17:25:47 -The following profiles are active: dev
2019-06-04 17:25:47 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@49d03fdf: startup date [Tue Jun 04 17:25:47 CST 2019]; root of context hierarchy
2019-06-04 17:25:48 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-06-04 17:25:49 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$ef7615f6] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-04 17:25:49 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$e1cf449d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-04 17:25:49 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-04 17:25:49 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-04 17:25:49 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-04 17:25:49 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-06-04 17:25:49 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-06-04 17:25:49 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-04 17:25:49 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-04 17:25:50 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-04 17:25:50 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-04 17:25:50 -Tomcat initialized with port(s): 8888 (http)
2019-06-04 17:25:50 -Initializing ProtocolHandler ["http-nio-8888"]
2019-06-04 17:25:50 -Starting service [Tomcat]
2019-06-04 17:25:50 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-06-04 17:25:50 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [F:\yff\jdk1.8\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;D:\app\Lenovo\product\11.2.0\dbhome_1\bin;\bin;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\iCLS\;C:\Program Files\Intel\Intel(R) Management Engine Components\iCLS\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;F:\yff\jdk1.8\BIN;D:\Program Files\develop\apache-maven-3.3.9\BIN;D:\Program Files\matlab\v81\runtime\win64;D:\Program Files\matlab\v81\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;F:\yff\redis64;D:\Program Files\Notepad++;D:\Program Files\mysql-5.7.24-winx64\BIN;D:\Program Files\matlab\v81\bin\win64;D:\Program Files\matlab\v81\runtime\win64;D:\Program Files\develop\SVN\bin;D:\Program Files\develop\apache-tomcat-8.5.8-ltcins-common-4280\bin;D:\Program Files\develop\apache-tomcat-8.5.8-ltcins-common-4080\bin;D:\Program Files\develop\zookeeper-3.4.10\BIN;D:\Program Files\develop\Git\cmd;C:\Users\Lenovo\AppData\Local\Microsoft\WindowsApps;C:\Users\Lenovo\AppData\Local\GitHubDesktop\bin;.]
2019-06-04 17:25:50 -Initializing Spring embedded WebApplicationContext
2019-06-04 17:25:50 -Root WebApplicationContext: initialization completed in 3447 ms
2019-06-04 17:25:50 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-06-04 17:25:50 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-06-04 17:25:50 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-06-04 17:25:50 -Mapping filter: 'requestContextFilter' to: [/*]
2019-06-04 17:25:50 -Filter xssFilter was not registered (disabled)
2019-06-04 17:25:50 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-06-04 17:25:50 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-06-04 17:25:50 -Servlet statViewServlet mapped to [/druid/*]
2019-06-04 17:25:50 -Servlet dispatcherServlet mapped to [/]
2019-06-04 17:25:51 -{dataSource-1} inited
2019-06-04 17:25:51 -ProcessEngine default created
2019-06-04 17:25:52 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@49d03fdf: startup date [Tue Jun 04 17:25:47 CST 2019]; root of context hierarchy
2019-06-04 17:25:52 -Using default implementation for ThreadExecutor
2019-06-04 17:25:52 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-06-04 17:25:52 -Quartz Scheduler v.2.2.1 created.
2019-06-04 17:25:52 -RAMJobStore initialized.
2019-06-04 17:25:52 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-06-04 17:25:52 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-06-04 17:25:52 -Quartz scheduler version: 2.2.1
2019-06-04 17:25:52 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@71dd9719
2019-06-04 17:25:52 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-06-04 17:25:52 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-06-04 17:25:53 -Mapped "{[/activiti/model/{id}],methods=[DELETE]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.ModelController.remove(java.lang.String)
2019-06-04 17:25:53 -Mapped "{[/activiti/model/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.activiti.controller.ModelController.list(int,int)
2019-06-04 17:25:53 -Mapped "{[/activiti/model/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.ModelController.batchRemove(java.lang.String[])
2019-06-04 17:25:53 -Mapped "{[/activiti/model],methods=[GET]}" onto org.springframework.web.servlet.ModelAndView com.bootdo.activiti.controller.ModelController.model()
2019-06-04 17:25:53 -Mapped "{[/activiti/model/deploy/{id}],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.ModelController.deploy(java.lang.String) throws java.lang.Exception
2019-06-04 17:25:53 -Mapped "{[/activiti/model/{modelId}/json],methods=[GET]}" onto public com.fasterxml.jackson.databind.node.ObjectNode com.bootdo.activiti.controller.ModelController.getEditorJson(java.lang.String)
2019-06-04 17:25:53 -Mapped "{[/activiti/model/export/{id}],methods=[GET]}" onto public void com.bootdo.activiti.controller.ModelController.exportToXml(java.lang.String,javax.servlet.http.HttpServletResponse)
2019-06-04 17:25:53 -Mapped "{[/activiti/model/add]}" onto public void com.bootdo.activiti.controller.ModelController.newModel(javax.servlet.http.HttpServletResponse) throws java.io.UnsupportedEncodingException
2019-06-04 17:25:53 -Mapped "{[/activiti/model/edit/{id}],methods=[GET]}" onto public void com.bootdo.activiti.controller.ModelController.edit(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-06-04 17:25:53 -Mapped "{[/activiti/model/{modelId}/save],methods=[PUT]}" onto public void com.bootdo.activiti.controller.ModelController.saveModel(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2019-06-04 17:25:53 -Mapped "{[/activiti/editor/stencilset],methods=[GET],produces=[application/json;charset=utf-8]}" onto public java.lang.String com.bootdo.activiti.controller.ModelController.getStencilset()
2019-06-04 17:25:53 -Mapped "{[/activiti/process/add],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.activiti.controller.ProcessController.add()
2019-06-04 17:25:53 -Mapped "{[/activiti/process/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.ProcessController.remove(java.lang.String)
2019-06-04 17:25:53 -Mapped "{[/activiti/process/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.activiti.controller.ProcessController.list(int,int)
2019-06-04 17:25:53 -Mapped "{[/activiti/process/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.ProcessController.batchRemove(java.lang.String[])
2019-06-04 17:25:53 -Mapped "{[/activiti/process],methods=[GET]}" onto org.springframework.web.servlet.ModelAndView com.bootdo.activiti.controller.ProcessController.process()
2019-06-04 17:25:53 -Mapped "{[/activiti/process/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.ProcessController.deploy(java.lang.String,java.lang.String,org.springframework.web.multipart.MultipartFile)
2019-06-04 17:25:53 -Mapped "{[/activiti/process/resource/read/{xml}/{id}]}" onto public void com.bootdo.activiti.controller.ProcessController.resourceRead(java.lang.String,java.lang.String,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-06-04 17:25:53 -Mapped "{[/activiti/process/convertToModel/{procDefId}]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.ProcessController.convertToModel(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes) throws java.io.UnsupportedEncodingException,javax.xml.stream.XMLStreamException
2019-06-04 17:25:53 -Mapped "{[/act/salary/form],methods=[GET]}" onto java.lang.String com.bootdo.activiti.controller.SalaryController.add()
2019-06-04 17:25:53 -Mapped "{[/act/salary/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.SalaryController.remove(java.lang.String)
2019-06-04 17:25:53 -Mapped "{[/act/salary/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.SalaryController.remove(java.lang.String[])
2019-06-04 17:25:53 -Mapped "{[/act/salary/update]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.SalaryController.update(com.bootdo.activiti.domain.SalaryDO)
2019-06-04 17:25:53 -Mapped "{[/act/salary/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.activiti.controller.SalaryController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-04 17:25:53 -Mapped "{[/act/salary/form/{taskId}],methods=[GET]}" onto java.lang.String com.bootdo.activiti.controller.SalaryController.edit(java.lang.String,org.springframework.ui.Model)
2019-06-04 17:25:53 -Mapped "{[/act/salary],methods=[GET]}" onto java.lang.String com.bootdo.activiti.controller.SalaryController.Salary()
2019-06-04 17:25:53 -Mapped "{[/act/salary/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.SalaryController.saveOrUpdate(com.bootdo.activiti.domain.SalaryDO)
2019-06-04 17:25:53 -Mapped "{[/activiti/task/form/{procDefId}/{taskId}],methods=[GET]}" onto public void com.bootdo.activiti.controller.TaskController.form(java.lang.String,java.lang.String,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-06-04 17:25:53 -Mapped "{[/activiti/task/gotoList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.activiti.controller.TaskController.list(int,int)
2019-06-04 17:25:53 -Mapped "{[/activiti/task/goto],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.activiti.controller.TaskController.gotoTask()
2019-06-04 17:25:53 -Mapped "{[/activiti/task/form/{procDefId}],methods=[GET]}" onto public void com.bootdo.activiti.controller.TaskController.startForm(java.lang.String,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-06-04 17:25:53 -Mapped "{[/activiti/task/todo],methods=[GET]}" onto org.springframework.web.servlet.ModelAndView com.bootdo.activiti.controller.TaskController.todo()
2019-06-04 17:25:53 -Mapped "{[/activiti/task/todoList],methods=[GET]}" onto java.util.List<com.bootdo.activiti.vo.TaskVO> com.bootdo.activiti.controller.TaskController.todoList()
2019-06-04 17:25:53 -Mapped "{[/activiti/task/trace/photo/{procDefId}/{execId}]}" onto public void com.bootdo.activiti.controller.TaskController.tracePhoto(java.lang.String,java.lang.String,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-06-04 17:25:53 -Mapped "{[/blog/open/page/{categories}],methods=[GET]}" onto java.lang.String com.bootdo.blog.controller.BlogController.about(java.lang.String,org.springframework.ui.Model)
2019-06-04 17:25:53 -Mapped "{[/blog],methods=[GET]}" onto java.lang.String com.bootdo.blog.controller.BlogController.blog()
2019-06-04 17:25:53 -Mapped "{[/blog/open/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.blog.controller.BlogController.opentList(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-04 17:25:53 -Mapped "{[/blog/open/post/{cid}],methods=[GET]}" onto java.lang.String com.bootdo.blog.controller.BlogController.post(java.lang.Long,org.springframework.ui.Model)
2019-06-04 17:25:53 -Mapped "{[/blog/bContent/add],methods=[GET]}" onto java.lang.String com.bootdo.blog.controller.ContentController.add()
2019-06-04 17:25:53 -Mapped "{[/blog/bContent/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.blog.controller.ContentController.remove(java.lang.Long)
2019-06-04 17:25:53 -Mapped "{[/blog/bContent/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.blog.controller.ContentController.remove(java.lang.Long[])
2019-06-04 17:25:53 -Mapped "{[/blog/bContent/update]}" onto public com.bootdo.common.utils.R com.bootdo.blog.controller.ContentController.update(com.bootdo.blog.domain.ContentDO)
2019-06-04 17:25:53 -Mapped "{[/blog/bContent/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.blog.controller.ContentController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-04 17:25:53 -Mapped "{[/blog/bContent/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.blog.controller.ContentController.save(com.bootdo.blog.domain.ContentDO)
2019-06-04 17:25:53 -Mapped "{[/blog/bContent/edit/{cid}],methods=[GET]}" onto java.lang.String com.bootdo.blog.controller.ContentController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-04 17:25:53 -Mapped "{[/blog/bContent],methods=[GET]}" onto java.lang.String com.bootdo.blog.controller.ContentController.bContent()
2019-06-04 17:25:53 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-06-04 17:25:53 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-06-04 17:25:53 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-06-04 17:25:53 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-06-04 17:25:53 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-04 17:25:53 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-06-04 17:25:53 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-06-04 17:25:53 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-04 17:25:53 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-06-04 17:25:53 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-06-04 17:25:53 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-06-04 17:25:53 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-06-04 17:25:53 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-06-04 17:25:53 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-06-04 17:25:53 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-06-04 17:25:53 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-04 17:25:53 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-06-04 17:25:53 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-06-04 17:25:53 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-04 17:25:53 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-06-04 17:25:53 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-06-04 17:25:53 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-04 17:25:53 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-06-04 17:25:53 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-06-04 17:25:53 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-06-04 17:25:53 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-06-04 17:25:53 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-06-04 17:25:53 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-06-04 17:25:53 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-06-04 17:25:53 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-06-04 17:25:53 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-06-04 17:25:53 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-04 17:25:53 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-06-04 17:25:53 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-06-04 17:25:53 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-04 17:25:53 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-06-04 17:25:53 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-06-04 17:25:53 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-06-04 17:25:53 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-06-04 17:25:53 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-04 17:25:53 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-06-04 17:25:53 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-06-04 17:25:53 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-06-04 17:25:53 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-06-04 17:25:53 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-06-04 17:25:53 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-06-04 17:25:53 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-06-04 17:25:53 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-06-04 17:25:53 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-04 17:25:53 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-06-04 17:25:53 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-06-04 17:25:53 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-04 17:25:53 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-06-04 17:25:53 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-06-04 17:25:53 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-04 17:25:53 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-06-04 17:25:53 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-06-04 17:25:53 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-06-04 17:25:53 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-06-04 17:25:53 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-06-04 17:25:53 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-06-04 17:25:53 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-06-04 17:25:53 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-04 17:25:53 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-06-04 17:25:53 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-06-04 17:25:53 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-06-04 17:25:53 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-06-04 17:25:53 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-06-04 17:25:53 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-06-04 17:25:53 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-06-04 17:25:53 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String)
2019-06-04 17:25:53 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-06-04 17:25:53 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-06-04 17:25:53 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-06-04 17:25:53 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-04 17:25:53 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-06-04 17:25:53 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-06-04 17:25:53 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-06-04 17:25:53 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-06-04 17:25:53 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-06-04 17:25:53 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-06-04 17:25:53 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-06-04 17:25:53 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-06-04 17:25:53 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-06-04 17:25:53 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-06-04 17:25:53 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-06-04 17:25:53 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-06-04 17:25:53 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-04 17:25:53 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-06-04 17:25:53 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-06-04 17:25:53 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-06-04 17:25:53 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-06-04 17:25:53 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-04 17:25:53 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-06-04 17:25:53 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-06-04 17:25:53 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-06-04 17:25:53 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-04 17:25:53 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-06-04 17:25:53 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-06-04 17:25:53 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-06-04 17:25:53 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-06-04 17:25:53 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-06-04 17:25:53 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-06-04 17:25:53 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-06-04 17:25:53 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-06-04 17:25:53 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-06-04 17:25:53 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-06-04 17:25:53 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-06-04 17:25:53 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-06-04 17:25:53 -Mapped "{[/wxServer],methods=[GET]}" onto public void org.weixin4j.spring.web.WeixinJieruController.get(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-06-04 17:25:53 -Mapped "{[/wxServer],methods=[POST]}" onto public void org.weixin4j.spring.web.WeixinJieruController.post(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-06-04 17:25:53 -Mapped "{[/weixin/weixinUser/add],methods=[GET]}" onto java.lang.String com.bootdo.weixin.controller.WeixinUserController.add()
2019-06-04 17:25:53 -Mapped "{[/weixin/weixinUser/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.weixin.controller.WeixinUserController.remove(java.lang.Long)
2019-06-04 17:25:53 -Mapped "{[/weixin/weixinUser/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.weixin.controller.WeixinUserController.remove(java.lang.Long[])
2019-06-04 17:25:53 -Mapped "{[/weixin/weixinUser/update]}" onto public com.bootdo.common.utils.R com.bootdo.weixin.controller.WeixinUserController.update(com.bootdo.weixin.domain.WeixinUserDO)
2019-06-04 17:25:53 -Mapped "{[/weixin/weixinUser/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.weixin.controller.WeixinUserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-04 17:25:53 -Mapped "{[/weixin/weixinUser/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.weixin.controller.WeixinUserController.save(com.bootdo.weixin.domain.WeixinUserDO)
2019-06-04 17:25:53 -Mapped "{[/weixin/weixinUser/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.weixin.controller.WeixinUserController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-04 17:25:53 -Mapped "{[/weixin/weixinUser],methods=[GET]}" onto java.lang.String com.bootdo.weixin.controller.WeixinUserController.WeixinUser()
2019-06-04 17:25:53 -Mapped "{[/xjbg/order/add],methods=[GET]}" onto java.lang.String com.bootdo.xjbg.controller.OrderController.add()
2019-06-04 17:25:53 -Mapped "{[/xjbg/order/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.xjbg.controller.OrderController.remove(java.lang.Long)
2019-06-04 17:25:53 -Mapped "{[/xjbg/order/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.xjbg.controller.OrderController.remove(java.lang.Long[])
2019-06-04 17:25:53 -Mapped "{[/xjbg/order/update]}" onto public com.bootdo.common.utils.R com.bootdo.xjbg.controller.OrderController.update(com.bootdo.xjbg.domain.OrderDO)
2019-06-04 17:25:53 -Mapped "{[/xjbg/order/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.xjbg.controller.OrderController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-04 17:25:53 -Mapped "{[/xjbg/order/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.xjbg.controller.OrderController.save(com.bootdo.xjbg.domain.OrderDO)
2019-06-04 17:25:53 -Mapped "{[/xjbg/order/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.xjbg.controller.OrderController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-04 17:25:53 -Mapped "{[/xjbg/order],methods=[GET]}" onto java.lang.String com.bootdo.xjbg.controller.OrderController.Order()
2019-06-04 17:25:53 -Mapped "{[/xjbg/orderItem/add],methods=[GET]}" onto java.lang.String com.bootdo.xjbg.controller.OrderItemController.add()
2019-06-04 17:25:53 -Mapped "{[/xjbg/orderItem/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.xjbg.controller.OrderItemController.remove(java.lang.Long)
2019-06-04 17:25:53 -Mapped "{[/xjbg/orderItem/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.xjbg.controller.OrderItemController.remove(java.lang.Long[])
2019-06-04 17:25:53 -Mapped "{[/xjbg/orderItem/update]}" onto public com.bootdo.common.utils.R com.bootdo.xjbg.controller.OrderItemController.update(com.bootdo.xjbg.domain.OrderItemDO)
2019-06-04 17:25:53 -Mapped "{[/xjbg/orderItem/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.xjbg.controller.OrderItemController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-04 17:25:53 -Mapped "{[/xjbg/orderItem/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.xjbg.controller.OrderItemController.save(com.bootdo.xjbg.domain.OrderItemDO)
2019-06-04 17:25:53 -Mapped "{[/xjbg/orderItem/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.xjbg.controller.OrderItemController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-04 17:25:53 -Mapped "{[/xjbg/orderItem],methods=[GET]}" onto java.lang.String com.bootdo.xjbg.controller.OrderItemController.OrderItem()
2019-06-04 17:25:53 -Mapped "{[/xjbg/product/add],methods=[GET]}" onto java.lang.String com.bootdo.xjbg.controller.ProductController.add()
2019-06-04 17:25:53 -Mapped "{[/xjbg/product/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.xjbg.controller.ProductController.remove(java.lang.Long)
2019-06-04 17:25:53 -Mapped "{[/xjbg/product/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.xjbg.controller.ProductController.remove(java.lang.Long[])
2019-06-04 17:25:53 -Mapped "{[/xjbg/product/update]}" onto public com.bootdo.common.utils.R com.bootdo.xjbg.controller.ProductController.update(com.bootdo.xjbg.domain.ProductDO,org.springframework.web.multipart.MultipartFile[])
2019-06-04 17:25:53 -Mapped "{[/xjbg/product/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.xjbg.controller.ProductController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-04 17:25:53 -Mapped "{[/xjbg/product/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.xjbg.controller.ProductController.save(com.bootdo.xjbg.domain.ProductDO,org.springframework.web.multipart.MultipartFile[])
2019-06-04 17:25:53 -Mapped "{[/xjbg/product/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.xjbg.controller.ProductController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-04 17:25:53 -Mapped "{[/xjbg/product],methods=[GET]}" onto java.lang.String com.bootdo.xjbg.controller.ProductController.Product()
2019-06-04 17:25:53 -Mapped "{[/xjbg/room/add],methods=[GET]}" onto java.lang.String com.bootdo.xjbg.controller.RoomController.add(org.springframework.ui.Model)
2019-06-04 17:25:53 -Mapped "{[/xjbg/room/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.xjbg.controller.RoomController.remove(java.lang.Integer[])
2019-06-04 17:25:53 -Mapped "{[/xjbg/room/kaifan],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.xjbg.controller.RoomController.remove(com.bootdo.xjbg.domain.OrderDO,java.util.List<com.bootdo.xjbg.domain.OrderItemDO>)
2019-06-04 17:25:53 -Mapped "{[/xjbg/room/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.xjbg.controller.RoomController.remove(java.lang.Integer)
2019-06-04 17:25:53 -Mapped "{[/xjbg/room/update]}" onto public com.bootdo.common.utils.R com.bootdo.xjbg.controller.RoomController.update(com.bootdo.xjbg.domain.RoomDO)
2019-06-04 17:25:53 -Mapped "{[/xjbg/room/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.xjbg.controller.RoomController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-04 17:25:53 -Mapped "{[/xjbg/room/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.xjbg.controller.RoomController.save(com.bootdo.xjbg.domain.RoomDO)
2019-06-04 17:25:53 -Mapped "{[/xjbg/room/operation/{roomId}],methods=[GET]}" onto java.lang.String com.bootdo.xjbg.controller.RoomController.operation(java.lang.Integer,org.springframework.ui.Model)
2019-06-04 17:25:53 -Mapped "{[/xjbg/room/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.xjbg.controller.RoomController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-06-04 17:25:53 -Mapped "{[/xjbg/room],methods=[GET]}" onto java.lang.String com.bootdo.xjbg.controller.RoomController.Room(org.springframework.ui.Model)
2019-06-04 17:25:53 -Mapped "{[/xjbg/room/roomMng],methods=[GET]}" onto java.lang.String com.bootdo.xjbg.controller.RoomController.roomMng(org.springframework.ui.Model)
2019-06-04 17:25:53 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-06-04 17:25:53 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-06-04 17:25:53 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-06-04 17:25:53 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-06-04 17:25:54 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-06-04 17:25:54 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-06-04 17:25:54 -Initializing ExecutorService  'brokerChannelExecutor'
2019-06-04 17:25:54 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-06-04 17:25:54 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@49d03fdf: startup date [Tue Jun 04 17:25:47 CST 2019]; root of context hierarchy
2019-06-04 17:25:54 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-06-04 17:25:54 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-06-04 17:25:54 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-06-04 17:25:54 -Mapped URL path [/productPic/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-06-04 17:25:54 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-06-04 17:25:54 -[THYMELEAF][restartedMain] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-06-04 17:25:55 -LiveReload server is running on port 35729
2019-06-04 17:25:55 -Registering beans for JMX exposure on startup
2019-06-04 17:25:55 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-06-04 17:25:55 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-06-04 17:25:55 -Starting beans in phase 2147483647
2019-06-04 17:25:55 -Context refreshed
2019-06-04 17:25:55 -Found 1 custom documentation plugin(s)
2019-06-04 17:25:55 -Scanning for api listing references
2019-06-04 17:25:55 -Generating unique operation named: removeUsingPOST_1
2019-06-04 17:25:55 -Generating unique operation named: addUsingGET_1
2019-06-04 17:25:55 -Generating unique operation named: editUsingGET_1
2019-06-04 17:25:55 -Generating unique operation named: listUsingGET_1
2019-06-04 17:25:55 -Generating unique operation named: removeUsingPOST_2
2019-06-04 17:25:55 -Generating unique operation named: removeUsingPOST_3
2019-06-04 17:25:55 -Generating unique operation named: saveUsingPOST_1
2019-06-04 17:25:55 -Generating unique operation named: updateUsingGET_1
2019-06-04 17:25:55 -Generating unique operation named: updateUsingHEAD_1
2019-06-04 17:25:55 -Generating unique operation named: updateUsingPOST_1
2019-06-04 17:25:55 -Generating unique operation named: updateUsingPUT_1
2019-06-04 17:25:55 -Generating unique operation named: updateUsingPATCH_1
2019-06-04 17:25:55 -Generating unique operation named: updateUsingDELETE_1
2019-06-04 17:25:55 -Generating unique operation named: updateUsingOPTIONS_1
2019-06-04 17:25:55 -Generating unique operation named: updateUsingTRACE_1
2019-06-04 17:25:55 -Generating unique operation named: addUsingGET_2
2019-06-04 17:25:55 -Generating unique operation named: editUsingGET_2
2019-06-04 17:25:55 -Generating unique operation named: listUsingGET_2
2019-06-04 17:25:55 -Generating unique operation named: removeUsingPOST_4
2019-06-04 17:25:55 -Generating unique operation named: removeUsingPOST_5
2019-06-04 17:25:55 -Generating unique operation named: saveUsingPOST_2
2019-06-04 17:25:55 -Generating unique operation named: updateUsingGET_2
2019-06-04 17:25:55 -Generating unique operation named: updateUsingHEAD_2
2019-06-04 17:25:55 -Generating unique operation named: updateUsingPOST_2
2019-06-04 17:25:55 -Generating unique operation named: updateUsingPUT_2
2019-06-04 17:25:55 -Generating unique operation named: updateUsingPATCH_2
2019-06-04 17:25:55 -Generating unique operation named: updateUsingDELETE_2
2019-06-04 17:25:55 -Generating unique operation named: updateUsingOPTIONS_2
2019-06-04 17:25:55 -Generating unique operation named: updateUsingTRACE_2
2019-06-04 17:25:55 -Generating unique operation named: addUsingGET_3
2019-06-04 17:25:55 -Generating unique operation named: editUsingGET_3
2019-06-04 17:25:55 -Generating unique operation named: listUsingGET_3
2019-06-04 17:25:55 -Generating unique operation named: removeUsingPOST_6
2019-06-04 17:25:55 -Generating unique operation named: removeUsingPOST_7
2019-06-04 17:25:55 -Generating unique operation named: saveUsingPOST_3
2019-06-04 17:25:55 -Generating unique operation named: updateUsingGET_3
2019-06-04 17:25:55 -Generating unique operation named: updateUsingHEAD_3
2019-06-04 17:25:55 -Generating unique operation named: updateUsingPOST_3
2019-06-04 17:25:55 -Generating unique operation named: updateUsingPUT_3
2019-06-04 17:25:55 -Generating unique operation named: updateUsingPATCH_3
2019-06-04 17:25:55 -Generating unique operation named: updateUsingDELETE_3
2019-06-04 17:25:55 -Generating unique operation named: updateUsingOPTIONS_3
2019-06-04 17:25:55 -Generating unique operation named: updateUsingTRACE_3
2019-06-04 17:25:56 -Generating unique operation named: editUsingGET_4
2019-06-04 17:25:56 -Generating unique operation named: listUsingGET_4
2019-06-04 17:25:56 -Generating unique operation named: updateUsingPOST_4
2019-06-04 17:25:56 -Generating unique operation named: addUsingGET_4
2019-06-04 17:25:56 -Generating unique operation named: editUsingGET_5
2019-06-04 17:25:56 -Generating unique operation named: infoUsingGET_1
2019-06-04 17:25:56 -Generating unique operation named: infoUsingHEAD_1
2019-06-04 17:25:56 -Generating unique operation named: infoUsingPOST_1
2019-06-04 17:25:56 -Generating unique operation named: infoUsingPUT_1
2019-06-04 17:25:56 -Generating unique operation named: infoUsingPATCH_1
2019-06-04 17:25:56 -Generating unique operation named: infoUsingDELETE_1
2019-06-04 17:25:56 -Generating unique operation named: infoUsingOPTIONS_1
2019-06-04 17:25:56 -Generating unique operation named: infoUsingTRACE_1
2019-06-04 17:25:56 -Generating unique operation named: listUsingGET_5
2019-06-04 17:25:56 -Generating unique operation named: removeUsingPOST_8
2019-06-04 17:25:56 -Generating unique operation named: removeUsingPOST_9
2019-06-04 17:25:56 -Generating unique operation named: saveUsingPOST_4
2019-06-04 17:25:56 -Generating unique operation named: updateUsingPOST_5
2019-06-04 17:25:56 -Generating unique operation named: listUsingGET_6
2019-06-04 17:25:56 -Generating unique operation named: removeUsingPOST_10
2019-06-04 17:25:56 -Generating unique operation named: welcomeUsingGET_1
2019-06-04 17:25:56 -Generating unique operation named: addUsingGET_5
2019-06-04 17:25:56 -Generating unique operation named: editUsingGET_6
2019-06-04 17:25:56 -Generating unique operation named: listUsingGET_7
2019-06-04 17:25:56 -Generating unique operation named: removeUsingPOST_11
2019-06-04 17:25:56 -Generating unique operation named: saveUsingPOST_5
2019-06-04 17:25:56 -Generating unique operation named: treeUsingGET_1
2019-06-04 17:25:56 -Generating unique operation named: treeUsingGET_2
2019-06-04 17:25:56 -Generating unique operation named: updateUsingPOST_6
2019-06-04 17:25:56 -Generating unique operation named: batchRemoveUsingPOST_1
2019-06-04 17:25:56 -Generating unique operation named: editUsingGET_7
2019-06-04 17:25:56 -Generating unique operation named: listUsingGET_8
2019-06-04 17:25:56 -Generating unique operation named: addUsingGET_6
2019-06-04 17:25:56 -Generating unique operation named: editUsingGET_8
2019-06-04 17:25:56 -Generating unique operation named: listUsingGET_9
2019-06-04 17:25:56 -Generating unique operation named: removeUsingPOST_12
2019-06-04 17:25:56 -Generating unique operation named: removeUsingPOST_13
2019-06-04 17:25:56 -Generating unique operation named: saveUsingPOST_6
2019-06-04 17:25:56 -Generating unique operation named: updateUsingGET_4
2019-06-04 17:25:56 -Generating unique operation named: updateUsingHEAD_4
2019-06-04 17:25:56 -Generating unique operation named: updateUsingPOST_7
2019-06-04 17:25:56 -Generating unique operation named: updateUsingPUT_4
2019-06-04 17:25:56 -Generating unique operation named: updateUsingPATCH_4
2019-06-04 17:25:56 -Generating unique operation named: updateUsingDELETE_4
2019-06-04 17:25:56 -Generating unique operation named: updateUsingOPTIONS_4
2019-06-04 17:25:56 -Generating unique operation named: updateUsingTRACE_4
2019-06-04 17:25:56 -Generating unique operation named: addUsingGET_7
2019-06-04 17:25:56 -Generating unique operation named: editUsingGET_9
2019-06-04 17:25:56 -Generating unique operation named: listUsingGET_10
2019-06-04 17:25:56 -Generating unique operation named: removeUsingPOST_14
2019-06-04 17:25:56 -Generating unique operation named: removeUsingPOST_15
2019-06-04 17:25:56 -Generating unique operation named: saveUsingPOST_7
2019-06-04 17:25:56 -Generating unique operation named: updateUsingGET_5
2019-06-04 17:25:56 -Generating unique operation named: updateUsingHEAD_5
2019-06-04 17:25:56 -Generating unique operation named: updateUsingPOST_8
2019-06-04 17:25:56 -Generating unique operation named: updateUsingPUT_5
2019-06-04 17:25:56 -Generating unique operation named: updateUsingPATCH_5
2019-06-04 17:25:56 -Generating unique operation named: updateUsingDELETE_5
2019-06-04 17:25:56 -Generating unique operation named: updateUsingOPTIONS_5
2019-06-04 17:25:56 -Generating unique operation named: updateUsingTRACE_5
2019-06-04 17:25:56 -Generating unique operation named: addUsingGET_8
2019-06-04 17:25:56 -Generating unique operation named: editUsingGET_10
2019-06-04 17:25:56 -Generating unique operation named: listUsingGET_11
2019-06-04 17:25:56 -Generating unique operation named: removeUsingPOST_16
2019-06-04 17:25:56 -Generating unique operation named: removeUsingPOST_17
2019-06-04 17:25:56 -Generating unique operation named: saveUsingPOST_8
2019-06-04 17:25:56 -Generating unique operation named: updateUsingGET_6
2019-06-04 17:25:56 -Generating unique operation named: updateUsingHEAD_6
2019-06-04 17:25:56 -Generating unique operation named: updateUsingPOST_9
2019-06-04 17:25:56 -Generating unique operation named: updateUsingPUT_6
2019-06-04 17:25:56 -Generating unique operation named: updateUsingPATCH_6
2019-06-04 17:25:56 -Generating unique operation named: updateUsingDELETE_6
2019-06-04 17:25:56 -Generating unique operation named: updateUsingOPTIONS_6
2019-06-04 17:25:56 -Generating unique operation named: updateUsingTRACE_6
2019-06-04 17:25:56 -Generating unique operation named: addUsingGET_9
2019-06-04 17:25:56 -Generating unique operation named: batchRemoveUsingPOST_2
2019-06-04 17:25:56 -Generating unique operation named: deployUsingPOST_1
2019-06-04 17:25:56 -Generating unique operation named: listUsingGET_12
2019-06-04 17:25:56 -Generating unique operation named: removeUsingPOST_18
2019-06-04 17:25:56 -Generating unique operation named: addUsingGET_10
2019-06-04 17:25:56 -Generating unique operation named: editUsingGET_11
2019-06-04 17:25:56 -Generating unique operation named: listUsingGET_13
2019-06-04 17:25:56 -Generating unique operation named: removeUsingPOST_19
2019-06-04 17:25:56 -Generating unique operation named: removeUsingPOST_20
2019-06-04 17:25:56 -Trying to infer dataType org.springframework.web.multipart.MultipartFile[]
2019-06-04 17:25:56 -Generating unique operation named: saveUsingPOST_9
2019-06-04 17:25:56 -Trying to infer dataType org.springframework.web.multipart.MultipartFile[]
2019-06-04 17:25:56 -Generating unique operation named: updateUsingGET_7
2019-06-04 17:25:56 -Trying to infer dataType org.springframework.web.multipart.MultipartFile[]
2019-06-04 17:25:56 -Generating unique operation named: updateUsingHEAD_7
2019-06-04 17:25:56 -Trying to infer dataType org.springframework.web.multipart.MultipartFile[]
2019-06-04 17:25:56 -Generating unique operation named: updateUsingPOST_10
2019-06-04 17:25:56 -Trying to infer dataType org.springframework.web.multipart.MultipartFile[]
2019-06-04 17:25:56 -Generating unique operation named: updateUsingPUT_7
2019-06-04 17:25:56 -Trying to infer dataType org.springframework.web.multipart.MultipartFile[]
2019-06-04 17:25:56 -Generating unique operation named: updateUsingPATCH_7
2019-06-04 17:25:56 -Trying to infer dataType org.springframework.web.multipart.MultipartFile[]
2019-06-04 17:25:56 -Generating unique operation named: updateUsingDELETE_7
2019-06-04 17:25:56 -Trying to infer dataType org.springframework.web.multipart.MultipartFile[]
2019-06-04 17:25:56 -Generating unique operation named: updateUsingOPTIONS_7
2019-06-04 17:25:56 -Trying to infer dataType org.springframework.web.multipart.MultipartFile[]
2019-06-04 17:25:56 -Generating unique operation named: updateUsingTRACE_7
2019-06-04 17:25:56 -Generating unique operation named: addUsingGET_11
2019-06-04 17:25:56 -Generating unique operation named: batchRemoveUsingPOST_3
2019-06-04 17:25:56 -Generating unique operation named: editUsingGET_12
2019-06-04 17:25:56 -Generating unique operation named: listUsingGET_14
2019-06-04 17:25:56 -Generating unique operation named: saveUsingPOST_10
2019-06-04 17:25:56 -Generating unique operation named: saveUsingPOST_11
2019-06-04 17:25:56 -Generating unique operation named: updateUsingPOST_11
2019-06-04 17:25:56 -Generating unique operation named: addUsingGET_12
2019-06-04 17:25:56 -Generating unique operation named: editUsingGET_13
2019-06-04 17:25:56 -Generating unique operation named: listUsingGET_15
2019-06-04 17:25:56 -Generating unique operation named: removeUsingPOST_21
2019-06-04 17:25:56 -Trying to infer dataType java.util.List<com.bootdo.xjbg.domain.OrderItemDO>
2019-06-04 17:25:56 -Generating unique operation named: removeUsingPOST_22
2019-06-04 17:25:56 -Generating unique operation named: removeUsingPOST_23
2019-06-04 17:25:56 -Generating unique operation named: saveUsingPOST_12
2019-06-04 17:25:56 -Generating unique operation named: updateUsingGET_8
2019-06-04 17:25:56 -Generating unique operation named: updateUsingHEAD_8
2019-06-04 17:25:56 -Generating unique operation named: updateUsingPOST_12
2019-06-04 17:25:56 -Generating unique operation named: updateUsingPUT_8
2019-06-04 17:25:56 -Generating unique operation named: updateUsingPATCH_8
2019-06-04 17:25:56 -Generating unique operation named: updateUsingDELETE_8
2019-06-04 17:25:56 -Generating unique operation named: updateUsingOPTIONS_8
2019-06-04 17:25:56 -Generating unique operation named: updateUsingTRACE_8
2019-06-04 17:25:56 -Generating unique operation named: addUsingGET_13
2019-06-04 17:25:56 -Generating unique operation named: editUsingGET_14
2019-06-04 17:25:56 -Generating unique operation named: listUsingGET_16
2019-06-04 17:25:56 -Generating unique operation named: removeUsingPOST_24
2019-06-04 17:25:56 -Generating unique operation named: removeUsingPOST_25
2019-06-04 17:25:56 -Generating unique operation named: updateUsingGET_9
2019-06-04 17:25:56 -Generating unique operation named: updateUsingHEAD_9
2019-06-04 17:25:56 -Generating unique operation named: updateUsingPOST_13
2019-06-04 17:25:56 -Generating unique operation named: updateUsingPUT_9
2019-06-04 17:25:56 -Generating unique operation named: updateUsingPATCH_9
2019-06-04 17:25:56 -Generating unique operation named: updateUsingDELETE_9
2019-06-04 17:25:56 -Generating unique operation named: updateUsingOPTIONS_9
2019-06-04 17:25:56 -Generating unique operation named: updateUsingTRACE_9
2019-06-04 17:25:56 -Generating unique operation named: listUsingGET_17
2019-06-04 17:25:56 -Generating unique operation named: listUsingHEAD_1
2019-06-04 17:25:56 -Generating unique operation named: listUsingPOST_1
2019-06-04 17:25:56 -Generating unique operation named: listUsingPUT_1
2019-06-04 17:25:56 -Generating unique operation named: listUsingPATCH_1
2019-06-04 17:25:56 -Generating unique operation named: listUsingDELETE_1
2019-06-04 17:25:56 -Generating unique operation named: listUsingOPTIONS_1
2019-06-04 17:25:56 -Generating unique operation named: listUsingTRACE_1
2019-06-04 17:25:56 -Generating unique operation named: listUsingGET_18
2019-06-04 17:25:56 -Generating unique operation named: addUsingGET_14
2019-06-04 17:25:56 -Generating unique operation named: batchRemoveUsingPOST_4
2019-06-04 17:25:56 -Generating unique operation named: editUsingGET_15
2019-06-04 17:25:56 -Generating unique operation named: listUsingGET_19
2019-06-04 17:25:56 -Generating unique operation named: removeUsingPOST_26
2019-06-04 17:25:56 -Generating unique operation named: saveUsingPOST_13
2019-06-04 17:25:56 -Generating unique operation named: treeUsingGET_3
2019-06-04 17:25:56 -Generating unique operation named: treeViewUsingGET_1
2019-06-04 17:25:56 -Generating unique operation named: updateUsingPOST_14
2019-06-04 17:25:56 -Generating unique operation named: addUsingGET_15
2019-06-04 17:25:56 -Generating unique operation named: editUsingGET_16
2019-06-04 17:25:56 -Generating unique operation named: listUsingGET_20
2019-06-04 17:25:56 -Generating unique operation named: removeUsingPOST_27
2019-06-04 17:25:56 -Generating unique operation named: removeUsingPOST_28
2019-06-04 17:25:56 -Generating unique operation named: saveUsingPOST_14
2019-06-04 17:25:56 -Generating unique operation named: updateUsingGET_10
2019-06-04 17:25:56 -Generating unique operation named: updateUsingHEAD_10
2019-06-04 17:25:56 -Generating unique operation named: updateUsingPOST_15
2019-06-04 17:25:56 -Generating unique operation named: updateUsingPUT_10
2019-06-04 17:25:56 -Generating unique operation named: updateUsingPATCH_10
2019-06-04 17:25:56 -Generating unique operation named: updateUsingDELETE_10
2019-06-04 17:25:56 -Generating unique operation named: updateUsingOPTIONS_10
2019-06-04 17:25:56 -Generating unique operation named: updateUsingTRACE_10
2019-06-04 17:25:56 -Starting Quartz Scheduler now
2019-06-04 17:25:56 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-06-04 17:25:56 -Starting...
2019-06-04 17:25:56 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-06-04 17:25:56 -Started.
2019-06-04 17:25:56 -Starting ProtocolHandler ["http-nio-8888"]
2019-06-04 17:25:56 -Using a shared selector for servlet write/read
2019-06-04 17:25:56 -Tomcat started on port(s): 8888 (http) with context path ''
2019-06-04 17:25:56 -Started BootdoApplication in 10.27 seconds (JVM running for 11.63)
2019-06-04 17:25:56 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-06-04 17:25:56 -==> Parameters: 
2019-06-04 17:25:56 -<==      Total: 1
2019-06-04 17:26:16 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-06-04 17:26:16 -FrameworkServlet 'dispatcherServlet': initialization started
2019-06-04 17:26:16 -FrameworkServlet 'dispatcherServlet': initialization completed in 34 ms
2019-06-04 17:26:16 -Enabling session validation scheduler...
2019-06-04 17:26:16 -请求地址 : http://localhost:8888/login;JSESSIONID=26e7919a-402e-4e58-843b-862c3a5651bb
2019-06-04 17:26:16 -HTTP METHOD : GET
2019-06-04 17:26:16 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-06-04 17:26:16 -参数 : [{}]
2019-06-04 17:26:16 -耗时 : 2
2019-06-04 17:26:16 -返回值 : login
2019-06-04 17:26:17 -请求地址 : http://localhost:8888/login
2019-06-04 17:26:17 -HTTP METHOD : POST
2019-06-04 17:26:17 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-06-04 17:26:17 -参数 : [admin, 111111]
2019-06-04 17:26:17 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-06-04 17:26:17 -==> Parameters: admin(String)
2019-06-04 17:26:17 -<==      Total: 1
2019-06-04 17:26:17 -耗时 : 19
2019-06-04 17:26:17 -返回值 : {msg=操作成功, code=0}
2019-06-04 17:26:18 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-06-04 17:26:18 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-04 17:26:18 -==> Parameters: 1(Long), admin(String), 登录(String), 19(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-06-04 17:26:18.031(Timestamp)
2019-06-04 17:26:18 -请求地址 : http://localhost:8888/index
2019-06-04 17:26:18 -HTTP METHOD : GET
2019-06-04 17:26:18 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-06-04 17:26:18 -参数 : [{}]
2019-06-04 17:26:18 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-06-04 17:26:18 -==> Parameters: 1(Long)
2019-06-04 17:26:18 -<==      Total: 34
2019-06-04 17:26:18 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-06-04 17:26:18 -==> Parameters: 144(Long)
2019-06-04 17:26:18 -<==      Total: 1
2019-06-04 17:26:18 -耗时 : 32
2019-06-04 17:26:18 -返回值 : index_v1
2019-06-04 17:26:18 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-04 17:26:18 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 32(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-commenting","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user","url":"/weixin/weixinUser"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"109","text":"用户管理"}],"hasChildren":true,"hasParent":false,"id":"109","parentId":"0","text":"微信管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","text":"基础管理"},{"attributes":{"icon":"fa fa-hotel","url":""},"checked":false,"children":[{"attributes":{"icon":"","url":"/xjbg/room/roomMng"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"105","text":"开房"},{"attributes":{"icon":"fa fa-bed","url":"/xjbg/room"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"106","parentId":"105","text":"房间管理"},{"attributes":{"icon":"","url":"/xjbg/product"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"105","text":"商品管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"欣吉宾馆"},{"attributes":{"icon":"fa fa-desktop"},"checked":false,"children":[{"attributes":{"icon":"fa fa-user","url":"sys/user/"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"6","parentId":"3","text":"用户管理"},{"attributes":{"icon":"fa fa-paw","url":"sys/role"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"7","parentId":"3","text":"角色管理"},{"attributes":{"icon":"fa fa-th-list","url":"sys/menu/"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"3","text":"系统菜单"},{"attributes":{"icon":"fa fa-users","url":"/system/sysDept"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"73","parentId":"3","text":"部门管理"}],"hasChildren":true,"hasParent":false,"id":"3","parentId":"0","text":"系统管理"},{"attributes":{"icon":"fa fa-gear","url":""},"checked":false,"children":[{"attributes":{"icon":"","url":"/swagger-ui.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"104","parentId":"77","text":"swagger"},{"attributes":{"icon":"fa fa-code","url":"common/generator"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"48","parentId":"77","text":"代码生成"},{"attributes":{"icon":"fa fa-hourglass-1","url":"common/job"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"72","parentId":"77","text":"计划任务"}],"hasChildren":true,"hasParent":false,"id":"77","parentId":"0","text":"系统工具"},{"attributes":{"icon":"fa fa-laptop","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-pencil-square","url":"oa/notify"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"85","parentId":"84","text":"通知公告"},{"attributes":{"icon":"fa fa-envelope-square","url":"oa/notify/selfNotify"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"90","parentId":"84","text":"我的通知"}],"hasChildren":true,"hasParent":false,"id":"84","parentId":"0","text":"办公管理"},{"attributes":{"icon":"fa fa-video-camera","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user","url":"sys/online"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"92","parentId":"91","text":"在线用户"},{"attributes":{"icon":"fa fa-warning","url":"common/log"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"27","parentId":"91","text":"系统日志"},{"attributes":{"icon":"fa fa-caret-square-o-right","url":"/druid/index.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"57","parentId":"91","text":"运行监控"}],"hasChildren":true,"hasParent":false,"id":"91","parentId":"0","text":"系统监控"},{"attributes":{"icon":"fa fa-rss","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-edit","url":"/blog/bContent/add"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"68","parentId":"49","text":"发布文章"},{"attributes":{"icon":"fa fa-file-image-o","url":"blog/bContent"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"50","parentId":"49","text":"文章列表"}],"hasChildren":true,"hasParent":false,"id":"49","parentId":"0","text":"博客管理"},{"attributes":{"icon":"fa fa-print","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-flag","url":"activiti/process"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"96","parentId":"93","text":"流程管理"},{"attributes":{"icon":"","url":"activiti/task/todo"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"101","parentId":"93","text":"待办任务"},{"attr(String), 127.0.0.1(String), 2019-06-04 17:26:18.159(Timestamp)
2019-06-04 17:26:18 -<==    Updates: 1
2019-06-04 17:26:18 -<==    Updates: 1
2019-06-04 17:26:18 -请求地址 : http://localhost:8888/main
2019-06-04 17:26:18 -HTTP METHOD : GET
2019-06-04 17:26:18 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-04 17:26:18 -参数 : []
2019-06-04 17:26:18 -耗时 : 1
2019-06-04 17:26:18 -返回值 : main
2019-06-04 17:26:18 -请求地址 : http://localhost:8888/oa/notify/message
2019-06-04 17:26:18 -HTTP METHOD : GET
2019-06-04 17:26:18 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-06-04 17:26:18 -参数 : []
2019-06-04 17:26:18 -请求地址 : http://localhost:8888/main
2019-06-04 17:26:18 -HTTP METHOD : GET
2019-06-04 17:26:18 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-04 17:26:18 -参数 : []
2019-06-04 17:26:18 -耗时 : 0
2019-06-04 17:26:18 -返回值 : main
2019-06-04 17:26:18 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-06-04 17:26:18 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-06-04 17:26:18 -<==      Total: 0
2019-06-04 17:26:18 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-06-04 17:26:18 -==> Parameters: 1(Long), 0(String)
2019-06-04 17:26:18 -<==      Total: 1
2019-06-04 17:26:18 -耗时 : 19
2019-06-04 17:26:18 -返回值 : com.bootdo.common.utils.PageUtils@45ad2296
2019-06-04 17:26:19 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-06-04 17:26:19 -==> Parameters: 1(Long)
2019-06-04 17:26:19 -<==      Total: 58
2019-06-04 17:26:19 -请求地址 : http://localhost:8888/weixin/weixinUser
2019-06-04 17:26:19 -HTTP METHOD : GET
2019-06-04 17:26:19 -CLASS_METHOD : com.bootdo.weixin.controller.WeixinUserController.WeixinUser
2019-06-04 17:26:19 -参数 : []
2019-06-04 17:26:19 -耗时 : 0
2019-06-04 17:26:19 -返回值 : weixin/weixinUser/weixinUser
2019-06-04 17:26:20 -请求地址 : http://localhost:8888/weixin/weixinUser/list
2019-06-04 17:26:20 -HTTP METHOD : GET
2019-06-04 17:26:20 -CLASS_METHOD : com.bootdo.weixin.controller.WeixinUserController.list
2019-06-04 17:26:20 -参数 : [{limit=10, offset=0}]
2019-06-04 17:26:20 -==>  Preparing: select `id`,`open_id`,`is_removed`,`create_time`,`remove_time` from weixin_user order by id desc limit ?, ? 
2019-06-04 17:26:20 -==> Parameters: 0(Integer), 10(Integer)
2019-06-04 17:26:20 -<==      Total: 1
2019-06-04 17:26:20 -==>  Preparing: select count(*) from weixin_user 
2019-06-04 17:26:20 -==> Parameters: 
2019-06-04 17:26:20 -<==      Total: 1
2019-06-04 17:26:20 -耗时 : 10
2019-06-04 17:26:20 -返回值 : com.bootdo.common.utils.PageUtils@2bcbe4dc
2019-06-04 17:26:21 -请求地址 : http://localhost:8888/xjbg/room/roomMng
2019-06-04 17:26:21 -HTTP METHOD : GET
2019-06-04 17:26:21 -CLASS_METHOD : com.bootdo.xjbg.controller.RoomController.roomMng
2019-06-04 17:26:21 -参数 : [{}]
2019-06-04 17:26:21 -==>  Preparing: select `id`,`room_no`,`room_type`,`floor`,`room_state`,`price`,`create_time`,`update_time`,`create_user`,`update_user` from xjbg_room 
2019-06-04 17:26:21 -==> Parameters: 
2019-06-04 17:26:21 -<==      Total: 8
2019-06-04 17:26:21 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 17:26:21 -==> Parameters: room_type(String)
2019-06-04 17:26:21 -<==      Total: 7
2019-06-04 17:26:21 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 17:26:21 -==> Parameters: floor(String)
2019-06-04 17:26:21 -<==      Total: 5
2019-06-04 17:26:21 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 17:26:21 -==> Parameters: room_state(String)
2019-06-04 17:26:21 -<==      Total: 2
2019-06-04 17:26:21 -==>  Preparing: select * from sys_user 
2019-06-04 17:26:21 -==> Parameters: 
2019-06-04 17:26:21 -<==      Total: 11
2019-06-04 17:26:21 -耗时 : 24
2019-06-04 17:26:21 -返回值 : xjbg/room/roomMng
2019-06-04 17:26:22 -请求地址 : http://localhost:8888/xjbg/room/operation/1
2019-06-04 17:26:22 -HTTP METHOD : GET
2019-06-04 17:26:22 -CLASS_METHOD : com.bootdo.xjbg.controller.RoomController.operation
2019-06-04 17:26:22 -参数 : [1, {}]
2019-06-04 17:26:22 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 17:26:22 -==> Parameters: room_type(String)
2019-06-04 17:26:22 -<==      Total: 7
2019-06-04 17:26:22 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 17:26:22 -==> Parameters: floor(String)
2019-06-04 17:26:22 -<==      Total: 5
2019-06-04 17:26:22 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 17:26:22 -==> Parameters: room_state(String)
2019-06-04 17:26:22 -<==      Total: 2
2019-06-04 17:26:22 -==>  Preparing: select * from sys_user 
2019-06-04 17:26:22 -==> Parameters: 
2019-06-04 17:26:22 -<==      Total: 11
2019-06-04 17:26:22 -==>  Preparing: select `id`,`product_name`,`purchase_price`,`selling_price`,`product_pic`,`create_time`,`create_user`,`update_time`,`update_user` from xjbg_product order by id desc 
2019-06-04 17:26:22 -==> Parameters: 
2019-06-04 17:26:22 -<==      Total: 5
2019-06-04 17:26:22 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 17:26:22 -==> Parameters: order_type(String)
2019-06-04 17:26:22 -<==      Total: 3
2019-06-04 17:26:22 -==>  Preparing: select `id`,`room_no`,`room_type`,`floor`,`room_state`,`price`,`create_time`,`update_time`,`create_user`,`update_user` from xjbg_room where id = ? 
2019-06-04 17:26:22 -==> Parameters: 1(Integer)
2019-06-04 17:26:22 -<==      Total: 1
2019-06-04 17:26:22 -耗时 : 21
2019-06-04 17:26:22 -返回值 : xjbg/room/operation
2019-06-04 17:26:37 -请求地址 : http://localhost:8888/xjbg/room/operation/1
2019-06-04 17:26:37 -HTTP METHOD : GET
2019-06-04 17:26:37 -CLASS_METHOD : com.bootdo.xjbg.controller.RoomController.operation
2019-06-04 17:26:37 -参数 : [1, {}]
2019-06-04 17:26:37 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 17:26:37 -==> Parameters: room_type(String)
2019-06-04 17:26:37 -<==      Total: 7
2019-06-04 17:26:37 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 17:26:37 -==> Parameters: floor(String)
2019-06-04 17:26:37 -<==      Total: 5
2019-06-04 17:26:37 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 17:26:37 -==> Parameters: room_state(String)
2019-06-04 17:26:37 -<==      Total: 2
2019-06-04 17:26:37 -==>  Preparing: select * from sys_user 
2019-06-04 17:26:37 -==> Parameters: 
2019-06-04 17:26:37 -<==      Total: 11
2019-06-04 17:26:37 -==>  Preparing: select `id`,`product_name`,`purchase_price`,`selling_price`,`product_pic`,`create_time`,`create_user`,`update_time`,`update_user` from xjbg_product order by id desc 
2019-06-04 17:26:37 -==> Parameters: 
2019-06-04 17:26:37 -<==      Total: 5
2019-06-04 17:26:37 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 17:26:37 -==> Parameters: order_type(String)
2019-06-04 17:26:37 -<==      Total: 3
2019-06-04 17:26:37 -==>  Preparing: select `id`,`room_no`,`room_type`,`floor`,`room_state`,`price`,`create_time`,`update_time`,`create_user`,`update_user` from xjbg_room where id = ? 
2019-06-04 17:26:37 -==> Parameters: 1(Integer)
2019-06-04 17:26:37 -<==      Total: 1
2019-06-04 17:26:37 -耗时 : 11
2019-06-04 17:26:37 -返回值 : xjbg/room/operation
2019-06-04 17:26:54 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 1 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 9, active threads = 0, queued tasks = 0, completed tasks = 9], outboundChannelpool size = 1, active threads = 0, queued tasks = 0, completed tasks = 1], sockJsScheduler[pool size = 8, active threads = 1, queued tasks = 3, completed tasks = 9]
2019-06-04 17:28:36 -请求地址 : http://localhost:8888/index
2019-06-04 17:28:36 -HTTP METHOD : GET
2019-06-04 17:28:36 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-06-04 17:28:36 -参数 : [{}]
2019-06-04 17:28:36 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-06-04 17:28:36 -==> Parameters: 1(Long)
2019-06-04 17:28:36 -<==      Total: 34
2019-06-04 17:28:36 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-06-04 17:28:36 -==> Parameters: 144(Long)
2019-06-04 17:28:36 -<==      Total: 1
2019-06-04 17:28:36 -耗时 : 7
2019-06-04 17:28:36 -返回值 : index_v1
2019-06-04 17:28:36 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-04 17:28:36 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 7(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-hotel","url":""},"checked":false,"children":[{"attributes":{"icon":"","url":"/xjbg/room/roomMng"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"105","text":"开房"},{"attributes":{"icon":"fa fa-bed","url":"/xjbg/room"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"106","parentId":"105","text":"房间管理"},{"attributes":{"icon":"","url":"/xjbg/product"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"105","text":"商品管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"欣吉宾馆"},{"attributes":{"icon":"fa fa-commenting","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user","url":"/weixin/weixinUser"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"109","text":"用户管理"}],"hasChildren":true,"hasParent":false,"id":"109","parentId":"0","text":"微信管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","text":"基础管理"},{"attributes":{"icon":"fa fa-desktop"},"checked":false,"children":[{"attributes":{"icon":"fa fa-user","url":"sys/user/"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"6","parentId":"3","text":"用户管理"},{"attributes":{"icon":"fa fa-paw","url":"sys/role"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"7","parentId":"3","text":"角色管理"},{"attributes":{"icon":"fa fa-th-list","url":"sys/menu/"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"3","text":"系统菜单"},{"attributes":{"icon":"fa fa-users","url":"/system/sysDept"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"73","parentId":"3","text":"部门管理"}],"hasChildren":true,"hasParent":false,"id":"3","parentId":"0","text":"系统管理"},{"attributes":{"icon":"fa fa-gear","url":""},"checked":false,"children":[{"attributes":{"icon":"","url":"/swagger-ui.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"104","parentId":"77","text":"swagger"},{"attributes":{"icon":"fa fa-code","url":"common/generator"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"48","parentId":"77","text":"代码生成"},{"attributes":{"icon":"fa fa-hourglass-1","url":"common/job"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"72","parentId":"77","text":"计划任务"}],"hasChildren":true,"hasParent":false,"id":"77","parentId":"0","text":"系统工具"},{"attributes":{"icon":"fa fa-video-camera","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user","url":"sys/online"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"92","parentId":"91","text":"在线用户"},{"attributes":{"icon":"fa fa-warning","url":"common/log"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"27","parentId":"91","text":"系统日志"},{"attributes":{"icon":"fa fa-caret-square-o-right","url":"/druid/index.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"57","parentId":"91","text":"运行监控"}],"hasChildren":true,"hasParent":false,"id":"91","parentId":"0","text":"系统监控"},{"attributes":{"icon":"fa fa-laptop","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-pencil-square","url":"oa/notify"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"85","parentId":"84","text":"通知公告"},{"attributes":{"icon":"fa fa-envelope-square","url":"oa/notify/selfNotify"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"90","parentId":"84","text":"我的通知"}],"hasChildren":true,"hasParent":false,"id":"84","parentId":"0","text":"办公管理"},{"attributes":{"icon":"fa fa-print","url":""},"checked":false,"children":[{"attributes":{"icon":"","url":"activiti/task/todo"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"101","parentId":"93","text":"待办任务"},{"attributes":{"icon":"fa fa-sort-amount-asc","url":"activiti/model"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"94","parentId":"93","text":"模型管理"},{"attributes":{"icon":"fa fa-flag","url":"activiti/process"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"96","parentId":"93","text":"流程管理"}],"hasChildren":true,"hasParent":false,"id":"93","parentId":"0","text":"工作流程"},{"attributes":{"icon":"fa fa-rss","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-edit","url":"/blog/bContent/add"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"68","parentId":"49","text":"发布文章"},{"(String), 127.0.0.1(String), 2019-06-04 17:28:36.63(Timestamp)
2019-06-04 17:28:36 -<==    Updates: 1
2019-06-04 17:28:36 -请求地址 : http://localhost:8888/main
2019-06-04 17:28:36 -HTTP METHOD : GET
2019-06-04 17:28:36 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-04 17:28:36 -参数 : []
2019-06-04 17:28:36 -耗时 : 0
2019-06-04 17:28:36 -返回值 : main
2019-06-04 17:28:36 -请求地址 : http://localhost:8888/oa/notify/message
2019-06-04 17:28:36 -HTTP METHOD : GET
2019-06-04 17:28:36 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-06-04 17:28:36 -参数 : []
2019-06-04 17:28:36 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-06-04 17:28:36 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-06-04 17:28:36 -<==      Total: 0
2019-06-04 17:28:36 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-06-04 17:28:36 -==> Parameters: 1(Long), 0(String)
2019-06-04 17:28:36 -<==      Total: 1
2019-06-04 17:28:36 -耗时 : 4
2019-06-04 17:28:36 -返回值 : com.bootdo.common.utils.PageUtils@5e47a0e2
2019-06-04 17:28:37 -请求地址 : http://localhost:8888/main
2019-06-04 17:28:37 -HTTP METHOD : GET
2019-06-04 17:28:37 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-04 17:28:37 -参数 : []
2019-06-04 17:28:37 -耗时 : 1
2019-06-04 17:28:37 -返回值 : main
2019-06-04 17:28:38 -请求地址 : http://localhost:8888/xjbg/room/roomMng
2019-06-04 17:28:38 -HTTP METHOD : GET
2019-06-04 17:28:38 -CLASS_METHOD : com.bootdo.xjbg.controller.RoomController.roomMng
2019-06-04 17:28:38 -参数 : [{}]
2019-06-04 17:28:38 -==>  Preparing: select `id`,`room_no`,`room_type`,`floor`,`room_state`,`price`,`create_time`,`update_time`,`create_user`,`update_user` from xjbg_room 
2019-06-04 17:28:38 -==> Parameters: 
2019-06-04 17:28:38 -<==      Total: 8
2019-06-04 17:28:38 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 17:28:38 -==> Parameters: room_type(String)
2019-06-04 17:28:38 -<==      Total: 7
2019-06-04 17:28:38 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 17:28:38 -==> Parameters: floor(String)
2019-06-04 17:28:38 -<==      Total: 5
2019-06-04 17:28:38 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 17:28:38 -==> Parameters: room_state(String)
2019-06-04 17:28:38 -<==      Total: 2
2019-06-04 17:28:38 -==>  Preparing: select * from sys_user 
2019-06-04 17:28:38 -==> Parameters: 
2019-06-04 17:28:38 -<==      Total: 11
2019-06-04 17:28:38 -耗时 : 24
2019-06-04 17:28:38 -返回值 : xjbg/room/roomMng
2019-06-04 17:28:39 -请求地址 : http://localhost:8888/xjbg/room/operation/1
2019-06-04 17:28:39 -HTTP METHOD : GET
2019-06-04 17:28:39 -CLASS_METHOD : com.bootdo.xjbg.controller.RoomController.operation
2019-06-04 17:28:39 -参数 : [1, {}]
2019-06-04 17:28:39 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 17:28:39 -==> Parameters: room_type(String)
2019-06-04 17:28:39 -<==      Total: 7
2019-06-04 17:28:39 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 17:28:39 -==> Parameters: floor(String)
2019-06-04 17:28:39 -<==      Total: 5
2019-06-04 17:28:39 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 17:28:39 -==> Parameters: room_state(String)
2019-06-04 17:28:39 -<==      Total: 2
2019-06-04 17:28:39 -==>  Preparing: select * from sys_user 
2019-06-04 17:28:39 -==> Parameters: 
2019-06-04 17:28:39 -<==      Total: 11
2019-06-04 17:28:39 -==>  Preparing: select `id`,`product_name`,`purchase_price`,`selling_price`,`product_pic`,`create_time`,`create_user`,`update_time`,`update_user` from xjbg_product order by id desc 
2019-06-04 17:28:39 -==> Parameters: 
2019-06-04 17:28:39 -<==      Total: 5
2019-06-04 17:28:39 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 17:28:39 -==> Parameters: order_type(String)
2019-06-04 17:28:39 -<==      Total: 3
2019-06-04 17:28:39 -==>  Preparing: select `id`,`room_no`,`room_type`,`floor`,`room_state`,`price`,`create_time`,`update_time`,`create_user`,`update_user` from xjbg_room where id = ? 
2019-06-04 17:28:39 -==> Parameters: 1(Integer)
2019-06-04 17:28:39 -<==      Total: 1
2019-06-04 17:28:39 -耗时 : 18
2019-06-04 17:28:39 -返回值 : xjbg/room/operation
2019-06-04 17:28:53 -请求地址 : http://localhost:8888/xjbg/room/operation/1
2019-06-04 17:28:53 -HTTP METHOD : GET
2019-06-04 17:28:53 -CLASS_METHOD : com.bootdo.xjbg.controller.RoomController.operation
2019-06-04 17:28:53 -参数 : [1, {}]
2019-06-04 17:28:53 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 17:28:53 -==> Parameters: room_type(String)
2019-06-04 17:28:53 -<==      Total: 7
2019-06-04 17:28:53 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 17:28:53 -==> Parameters: floor(String)
2019-06-04 17:28:53 -<==      Total: 5
2019-06-04 17:28:53 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 17:28:53 -==> Parameters: room_state(String)
2019-06-04 17:28:53 -<==      Total: 2
2019-06-04 17:28:53 -==>  Preparing: select * from sys_user 
2019-06-04 17:28:53 -==> Parameters: 
2019-06-04 17:28:53 -<==      Total: 11
2019-06-04 17:28:53 -==>  Preparing: select `id`,`product_name`,`purchase_price`,`selling_price`,`product_pic`,`create_time`,`create_user`,`update_time`,`update_user` from xjbg_product order by id desc 
2019-06-04 17:28:53 -==> Parameters: 
2019-06-04 17:28:53 -<==      Total: 5
2019-06-04 17:28:53 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 17:28:53 -==> Parameters: order_type(String)
2019-06-04 17:28:53 -<==      Total: 3
2019-06-04 17:28:53 -==>  Preparing: select `id`,`room_no`,`room_type`,`floor`,`room_state`,`price`,`create_time`,`update_time`,`create_user`,`update_user` from xjbg_room where id = ? 
2019-06-04 17:28:53 -==> Parameters: 1(Integer)
2019-06-04 17:28:53 -<==      Total: 1
2019-06-04 17:28:53 -耗时 : 15
2019-06-04 17:28:53 -返回值 : xjbg/room/operation
2019-06-04 17:29:09 -请求地址 : http://localhost:8888/xjbg/room/operation/1
2019-06-04 17:29:09 -HTTP METHOD : GET
2019-06-04 17:29:09 -CLASS_METHOD : com.bootdo.xjbg.controller.RoomController.operation
2019-06-04 17:29:09 -参数 : [1, {}]
2019-06-04 17:29:09 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 17:29:09 -==> Parameters: room_type(String)
2019-06-04 17:29:09 -<==      Total: 7
2019-06-04 17:29:09 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 17:29:09 -==> Parameters: floor(String)
2019-06-04 17:29:09 -<==      Total: 5
2019-06-04 17:29:09 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 17:29:09 -==> Parameters: room_state(String)
2019-06-04 17:29:09 -<==      Total: 2
2019-06-04 17:29:09 -==>  Preparing: select * from sys_user 
2019-06-04 17:29:09 -==> Parameters: 
2019-06-04 17:29:09 -<==      Total: 11
2019-06-04 17:29:09 -==>  Preparing: select `id`,`product_name`,`purchase_price`,`selling_price`,`product_pic`,`create_time`,`create_user`,`update_time`,`update_user` from xjbg_product order by id desc 
2019-06-04 17:29:09 -==> Parameters: 
2019-06-04 17:29:09 -<==      Total: 5
2019-06-04 17:29:09 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 17:29:09 -==> Parameters: order_type(String)
2019-06-04 17:29:09 -<==      Total: 3
2019-06-04 17:29:09 -==>  Preparing: select `id`,`room_no`,`room_type`,`floor`,`room_state`,`price`,`create_time`,`update_time`,`create_user`,`update_user` from xjbg_room where id = ? 
2019-06-04 17:29:09 -==> Parameters: 1(Integer)
2019-06-04 17:29:09 -<==      Total: 1
2019-06-04 17:29:09 -耗时 : 11
2019-06-04 17:29:09 -返回值 : xjbg/room/operation
2019-06-04 17:29:33 -请求地址 : http://localhost:8888/index
2019-06-04 17:29:33 -HTTP METHOD : GET
2019-06-04 17:29:33 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-06-04 17:29:33 -参数 : [{}]
2019-06-04 17:29:33 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-06-04 17:29:33 -==> Parameters: 1(Long)
2019-06-04 17:29:33 -<==      Total: 34
2019-06-04 17:29:33 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-06-04 17:29:33 -==> Parameters: 144(Long)
2019-06-04 17:29:33 -<==      Total: 1
2019-06-04 17:29:33 -耗时 : 8
2019-06-04 17:29:33 -返回值 : index_v1
2019-06-04 17:29:33 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-04 17:29:33 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 8(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-hotel","url":""},"checked":false,"children":[{"attributes":{"icon":"","url":"/xjbg/room/roomMng"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"105","text":"开房"},{"attributes":{"icon":"fa fa-bed","url":"/xjbg/room"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"106","parentId":"105","text":"房间管理"},{"attributes":{"icon":"","url":"/xjbg/product"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"105","text":"商品管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"欣吉宾馆"},{"attributes":{"icon":"fa fa-commenting","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user","url":"/weixin/weixinUser"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"109","text":"用户管理"}],"hasChildren":true,"hasParent":false,"id":"109","parentId":"0","text":"微信管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","text":"基础管理"},{"attributes":{"icon":"fa fa-desktop"},"checked":false,"children":[{"attributes":{"icon":"fa fa-user","url":"sys/user/"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"6","parentId":"3","text":"用户管理"},{"attributes":{"icon":"fa fa-paw","url":"sys/role"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"7","parentId":"3","text":"角色管理"},{"attributes":{"icon":"fa fa-th-list","url":"sys/menu/"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"3","text":"系统菜单"},{"attributes":{"icon":"fa fa-users","url":"/system/sysDept"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"73","parentId":"3","text":"部门管理"}],"hasChildren":true,"hasParent":false,"id":"3","parentId":"0","text":"系统管理"},{"attributes":{"icon":"fa fa-gear","url":""},"checked":false,"children":[{"attributes":{"icon":"","url":"/swagger-ui.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"104","parentId":"77","text":"swagger"},{"attributes":{"icon":"fa fa-code","url":"common/generator"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"48","parentId":"77","text":"代码生成"},{"attributes":{"icon":"fa fa-hourglass-1","url":"common/job"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"72","parentId":"77","text":"计划任务"}],"hasChildren":true,"hasParent":false,"id":"77","parentId":"0","text":"系统工具"},{"attributes":{"icon":"fa fa-video-camera","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user","url":"sys/online"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"92","parentId":"91","text":"在线用户"},{"attributes":{"icon":"fa fa-warning","url":"common/log"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"27","parentId":"91","text":"系统日志"},{"attributes":{"icon":"fa fa-caret-square-o-right","url":"/druid/index.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"57","parentId":"91","text":"运行监控"}],"hasChildren":true,"hasParent":false,"id":"91","parentId":"0","text":"系统监控"},{"attributes":{"icon":"fa fa-laptop","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-pencil-square","url":"oa/notify"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"85","parentId":"84","text":"通知公告"},{"attributes":{"icon":"fa fa-envelope-square","url":"oa/notify/selfNotify"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"90","parentId":"84","text":"我的通知"}],"hasChildren":true,"hasParent":false,"id":"84","parentId":"0","text":"办公管理"},{"attributes":{"icon":"fa fa-print","url":""},"checked":false,"children":[{"attributes":{"icon":"","url":"activiti/task/todo"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"101","parentId":"93","text":"待办任务"},{"attributes":{"icon":"fa fa-sort-amount-asc","url":"activiti/model"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"94","parentId":"93","text":"模型管理"},{"attributes":{"icon":"fa fa-flag","url":"activiti/process"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"96","parentId":"93","text":"流程管理"}],"hasChildren":true,"hasParent":false,"id":"93","parentId":"0","text":"工作流程"},{"attributes":{"icon":"fa fa-rss","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-edit","url":"/blog/bContent/add"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"68","parentId":"49","text":"发布文章"},{"(String), 127.0.0.1(String), 2019-06-04 17:29:33.208(Timestamp)
2019-06-04 17:29:33 -<==    Updates: 1
2019-06-04 17:29:33 -请求地址 : http://localhost:8888/main
2019-06-04 17:29:33 -HTTP METHOD : GET
2019-06-04 17:29:33 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-04 17:29:33 -参数 : []
2019-06-04 17:29:33 -耗时 : 1
2019-06-04 17:29:33 -返回值 : main
2019-06-04 17:29:33 -请求地址 : http://localhost:8888/oa/notify/message
2019-06-04 17:29:33 -HTTP METHOD : GET
2019-06-04 17:29:33 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-06-04 17:29:33 -参数 : []
2019-06-04 17:29:33 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-06-04 17:29:33 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-06-04 17:29:33 -<==      Total: 0
2019-06-04 17:29:33 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-06-04 17:29:33 -==> Parameters: 1(Long), 0(String)
2019-06-04 17:29:33 -<==      Total: 1
2019-06-04 17:29:33 -耗时 : 3
2019-06-04 17:29:33 -返回值 : com.bootdo.common.utils.PageUtils@441d88b9
2019-06-04 17:29:33 -请求地址 : http://localhost:8888/main
2019-06-04 17:29:33 -HTTP METHOD : GET
2019-06-04 17:29:33 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-04 17:29:33 -参数 : []
2019-06-04 17:29:33 -耗时 : 0
2019-06-04 17:29:33 -返回值 : main
2019-06-04 17:29:34 -请求地址 : http://localhost:8888/xjbg/room/roomMng
2019-06-04 17:29:34 -HTTP METHOD : GET
2019-06-04 17:29:34 -CLASS_METHOD : com.bootdo.xjbg.controller.RoomController.roomMng
2019-06-04 17:29:34 -参数 : [{}]
2019-06-04 17:29:34 -==>  Preparing: select `id`,`room_no`,`room_type`,`floor`,`room_state`,`price`,`create_time`,`update_time`,`create_user`,`update_user` from xjbg_room 
2019-06-04 17:29:34 -==> Parameters: 
2019-06-04 17:29:34 -<==      Total: 8
2019-06-04 17:29:34 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 17:29:34 -==> Parameters: room_type(String)
2019-06-04 17:29:34 -<==      Total: 7
2019-06-04 17:29:34 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 17:29:34 -==> Parameters: floor(String)
2019-06-04 17:29:34 -<==      Total: 5
2019-06-04 17:29:34 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 17:29:34 -==> Parameters: room_state(String)
2019-06-04 17:29:34 -<==      Total: 2
2019-06-04 17:29:34 -==>  Preparing: select * from sys_user 
2019-06-04 17:29:34 -==> Parameters: 
2019-06-04 17:29:34 -<==      Total: 11
2019-06-04 17:29:34 -耗时 : 9
2019-06-04 17:29:34 -返回值 : xjbg/room/roomMng
2019-06-04 17:29:35 -请求地址 : http://localhost:8888/xjbg/room/operation/1
2019-06-04 17:29:35 -HTTP METHOD : GET
2019-06-04 17:29:35 -CLASS_METHOD : com.bootdo.xjbg.controller.RoomController.operation
2019-06-04 17:29:35 -参数 : [1, {}]
2019-06-04 17:29:35 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 17:29:35 -==> Parameters: room_type(String)
2019-06-04 17:29:35 -<==      Total: 7
2019-06-04 17:29:35 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 17:29:35 -==> Parameters: floor(String)
2019-06-04 17:29:35 -<==      Total: 5
2019-06-04 17:29:35 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 17:29:35 -==> Parameters: room_state(String)
2019-06-04 17:29:35 -<==      Total: 2
2019-06-04 17:29:35 -==>  Preparing: select * from sys_user 
2019-06-04 17:29:35 -==> Parameters: 
2019-06-04 17:29:35 -<==      Total: 11
2019-06-04 17:29:35 -==>  Preparing: select `id`,`product_name`,`purchase_price`,`selling_price`,`product_pic`,`create_time`,`create_user`,`update_time`,`update_user` from xjbg_product order by id desc 
2019-06-04 17:29:35 -==> Parameters: 
2019-06-04 17:29:35 -<==      Total: 5
2019-06-04 17:29:35 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 17:29:35 -==> Parameters: order_type(String)
2019-06-04 17:29:35 -<==      Total: 3
2019-06-04 17:29:35 -==>  Preparing: select `id`,`room_no`,`room_type`,`floor`,`room_state`,`price`,`create_time`,`update_time`,`create_user`,`update_user` from xjbg_room where id = ? 
2019-06-04 17:29:35 -==> Parameters: 1(Integer)
2019-06-04 17:29:35 -<==      Total: 1
2019-06-04 17:29:35 -耗时 : 11
2019-06-04 17:29:35 -返回值 : xjbg/room/operation
2019-06-04 17:29:39 -请求地址 : http://localhost:8888/xjbg/room/operation/1
2019-06-04 17:29:39 -HTTP METHOD : GET
2019-06-04 17:29:39 -CLASS_METHOD : com.bootdo.xjbg.controller.RoomController.operation
2019-06-04 17:29:39 -参数 : [1, {}]
2019-06-04 17:29:39 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 17:29:39 -==> Parameters: room_type(String)
2019-06-04 17:29:39 -<==      Total: 7
2019-06-04 17:29:39 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 17:29:39 -==> Parameters: floor(String)
2019-06-04 17:29:39 -<==      Total: 5
2019-06-04 17:29:39 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 17:29:39 -==> Parameters: room_state(String)
2019-06-04 17:29:39 -<==      Total: 2
2019-06-04 17:29:39 -==>  Preparing: select * from sys_user 
2019-06-04 17:29:39 -==> Parameters: 
2019-06-04 17:29:39 -<==      Total: 11
2019-06-04 17:29:39 -==>  Preparing: select `id`,`product_name`,`purchase_price`,`selling_price`,`product_pic`,`create_time`,`create_user`,`update_time`,`update_user` from xjbg_product order by id desc 
2019-06-04 17:29:39 -==> Parameters: 
2019-06-04 17:29:39 -<==      Total: 5
2019-06-04 17:29:39 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 17:29:39 -==> Parameters: order_type(String)
2019-06-04 17:29:39 -<==      Total: 3
2019-06-04 17:29:39 -==>  Preparing: select `id`,`room_no`,`room_type`,`floor`,`room_state`,`price`,`create_time`,`update_time`,`create_user`,`update_user` from xjbg_room where id = ? 
2019-06-04 17:29:39 -==> Parameters: 1(Integer)
2019-06-04 17:29:39 -<==      Total: 1
2019-06-04 17:29:39 -耗时 : 9
2019-06-04 17:29:39 -返回值 : xjbg/room/operation
2019-06-04 17:30:49 -请求地址 : http://localhost:8888/index
2019-06-04 17:30:49 -HTTP METHOD : GET
2019-06-04 17:30:49 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-06-04 17:30:49 -参数 : [{}]
2019-06-04 17:30:49 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-06-04 17:30:49 -==> Parameters: 1(Long)
2019-06-04 17:30:49 -<==      Total: 34
2019-06-04 17:30:49 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-06-04 17:30:49 -==> Parameters: 144(Long)
2019-06-04 17:30:49 -<==      Total: 1
2019-06-04 17:30:49 -耗时 : 6
2019-06-04 17:30:49 -返回值 : index_v1
2019-06-04 17:30:49 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-04 17:30:49 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 6(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-hotel","url":""},"checked":false,"children":[{"attributes":{"icon":"","url":"/xjbg/room/roomMng"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"105","text":"开房"},{"attributes":{"icon":"fa fa-bed","url":"/xjbg/room"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"106","parentId":"105","text":"房间管理"},{"attributes":{"icon":"","url":"/xjbg/product"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"105","text":"商品管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"欣吉宾馆"},{"attributes":{"icon":"fa fa-commenting","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user","url":"/weixin/weixinUser"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"109","text":"用户管理"}],"hasChildren":true,"hasParent":false,"id":"109","parentId":"0","text":"微信管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","text":"基础管理"},{"attributes":{"icon":"fa fa-desktop"},"checked":false,"children":[{"attributes":{"icon":"fa fa-user","url":"sys/user/"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"6","parentId":"3","text":"用户管理"},{"attributes":{"icon":"fa fa-paw","url":"sys/role"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"7","parentId":"3","text":"角色管理"},{"attributes":{"icon":"fa fa-th-list","url":"sys/menu/"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"3","text":"系统菜单"},{"attributes":{"icon":"fa fa-users","url":"/system/sysDept"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"73","parentId":"3","text":"部门管理"}],"hasChildren":true,"hasParent":false,"id":"3","parentId":"0","text":"系统管理"},{"attributes":{"icon":"fa fa-gear","url":""},"checked":false,"children":[{"attributes":{"icon":"","url":"/swagger-ui.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"104","parentId":"77","text":"swagger"},{"attributes":{"icon":"fa fa-code","url":"common/generator"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"48","parentId":"77","text":"代码生成"},{"attributes":{"icon":"fa fa-hourglass-1","url":"common/job"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"72","parentId":"77","text":"计划任务"}],"hasChildren":true,"hasParent":false,"id":"77","parentId":"0","text":"系统工具"},{"attributes":{"icon":"fa fa-video-camera","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user","url":"sys/online"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"92","parentId":"91","text":"在线用户"},{"attributes":{"icon":"fa fa-warning","url":"common/log"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"27","parentId":"91","text":"系统日志"},{"attributes":{"icon":"fa fa-caret-square-o-right","url":"/druid/index.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"57","parentId":"91","text":"运行监控"}],"hasChildren":true,"hasParent":false,"id":"91","parentId":"0","text":"系统监控"},{"attributes":{"icon":"fa fa-laptop","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-pencil-square","url":"oa/notify"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"85","parentId":"84","text":"通知公告"},{"attributes":{"icon":"fa fa-envelope-square","url":"oa/notify/selfNotify"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"90","parentId":"84","text":"我的通知"}],"hasChildren":true,"hasParent":false,"id":"84","parentId":"0","text":"办公管理"},{"attributes":{"icon":"fa fa-print","url":""},"checked":false,"children":[{"attributes":{"icon":"","url":"activiti/task/todo"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"101","parentId":"93","text":"待办任务"},{"attributes":{"icon":"fa fa-sort-amount-asc","url":"activiti/model"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"94","parentId":"93","text":"模型管理"},{"attributes":{"icon":"fa fa-flag","url":"activiti/process"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"96","parentId":"93","text":"流程管理"}],"hasChildren":true,"hasParent":false,"id":"93","parentId":"0","text":"工作流程"},{"attributes":{"icon":"fa fa-rss","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-edit","url":"/blog/bContent/add"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"68","parentId":"49","text":"发布文章"},{"(String), 127.0.0.1(String), 2019-06-04 17:30:49.456(Timestamp)
2019-06-04 17:30:49 -<==    Updates: 1
2019-06-04 17:30:49 -请求地址 : http://localhost:8888/main
2019-06-04 17:30:49 -HTTP METHOD : GET
2019-06-04 17:30:49 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-04 17:30:49 -参数 : []
2019-06-04 17:30:49 -耗时 : 1
2019-06-04 17:30:49 -返回值 : main
2019-06-04 17:30:49 -请求地址 : http://localhost:8888/oa/notify/message
2019-06-04 17:30:49 -HTTP METHOD : GET
2019-06-04 17:30:49 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-06-04 17:30:49 -参数 : []
2019-06-04 17:30:49 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-06-04 17:30:49 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-06-04 17:30:49 -<==      Total: 0
2019-06-04 17:30:49 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-06-04 17:30:49 -==> Parameters: 1(Long), 0(String)
2019-06-04 17:30:49 -<==      Total: 1
2019-06-04 17:30:49 -耗时 : 4
2019-06-04 17:30:49 -返回值 : com.bootdo.common.utils.PageUtils@6e227657
2019-06-04 17:30:49 -请求地址 : http://localhost:8888/main
2019-06-04 17:30:49 -HTTP METHOD : GET
2019-06-04 17:30:49 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-04 17:30:49 -参数 : []
2019-06-04 17:30:49 -耗时 : 1
2019-06-04 17:30:49 -返回值 : main
2019-06-04 17:30:51 -请求地址 : http://localhost:8888/xjbg/room/roomMng
2019-06-04 17:30:51 -HTTP METHOD : GET
2019-06-04 17:30:51 -CLASS_METHOD : com.bootdo.xjbg.controller.RoomController.roomMng
2019-06-04 17:30:51 -参数 : [{}]
2019-06-04 17:30:51 -==>  Preparing: select `id`,`room_no`,`room_type`,`floor`,`room_state`,`price`,`create_time`,`update_time`,`create_user`,`update_user` from xjbg_room 
2019-06-04 17:30:51 -==> Parameters: 
2019-06-04 17:30:51 -<==      Total: 8
2019-06-04 17:30:51 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 17:30:51 -==> Parameters: room_type(String)
2019-06-04 17:30:51 -<==      Total: 7
2019-06-04 17:30:51 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 17:30:51 -==> Parameters: floor(String)
2019-06-04 17:30:51 -<==      Total: 5
2019-06-04 17:30:51 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 17:30:51 -==> Parameters: room_state(String)
2019-06-04 17:30:51 -<==      Total: 2
2019-06-04 17:30:51 -==>  Preparing: select * from sys_user 
2019-06-04 17:30:51 -==> Parameters: 
2019-06-04 17:30:51 -<==      Total: 11
2019-06-04 17:30:51 -耗时 : 7
2019-06-04 17:30:51 -返回值 : xjbg/room/roomMng
2019-06-04 17:30:51 -请求地址 : http://localhost:8888/xjbg/room/operation/1
2019-06-04 17:30:51 -HTTP METHOD : GET
2019-06-04 17:30:51 -CLASS_METHOD : com.bootdo.xjbg.controller.RoomController.operation
2019-06-04 17:30:51 -参数 : [1, {}]
2019-06-04 17:30:51 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 17:30:51 -==> Parameters: room_type(String)
2019-06-04 17:30:51 -<==      Total: 7
2019-06-04 17:30:51 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 17:30:51 -==> Parameters: floor(String)
2019-06-04 17:30:51 -<==      Total: 5
2019-06-04 17:30:51 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 17:30:51 -==> Parameters: room_state(String)
2019-06-04 17:30:51 -<==      Total: 2
2019-06-04 17:30:51 -==>  Preparing: select * from sys_user 
2019-06-04 17:30:51 -==> Parameters: 
2019-06-04 17:30:51 -<==      Total: 11
2019-06-04 17:30:51 -==>  Preparing: select `id`,`product_name`,`purchase_price`,`selling_price`,`product_pic`,`create_time`,`create_user`,`update_time`,`update_user` from xjbg_product order by id desc 
2019-06-04 17:30:51 -==> Parameters: 
2019-06-04 17:30:51 -<==      Total: 5
2019-06-04 17:30:51 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 17:30:51 -==> Parameters: order_type(String)
2019-06-04 17:30:51 -<==      Total: 3
2019-06-04 17:30:51 -==>  Preparing: select `id`,`room_no`,`room_type`,`floor`,`room_state`,`price`,`create_time`,`update_time`,`create_user`,`update_user` from xjbg_room where id = ? 
2019-06-04 17:30:51 -==> Parameters: 1(Integer)
2019-06-04 17:30:51 -<==      Total: 1
2019-06-04 17:30:51 -耗时 : 14
2019-06-04 17:30:51 -返回值 : xjbg/room/operation
2019-06-04 17:31:35 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-04 17:31:35 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8888/xjbg/room/kaifan(String), java.lang.IllegalStateException: No primary or default constructor found for interface java.util.List(String), null, 2019-06-04 17:31:35.206(Timestamp)
2019-06-04 17:31:35 -No primary or default constructor found for interface java.util.List
java.lang.IllegalStateException: No primary or default constructor found for interface java.util.List
	at org.springframework.web.method.annotation.ModelAttributeMethodProcessor.createAttribute(ModelAttributeMethodProcessor.java:212)
	at org.springframework.web.servlet.mvc.method.annotation.ServletModelAttributeMethodProcessor.createAttribute(ServletModelAttributeMethodProcessor.java:84)
	at org.springframework.web.method.annotation.ModelAttributeMethodProcessor.resolveArgument(ModelAttributeMethodProcessor.java:132)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:124)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:161)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:131)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.NoSuchMethodException: java.util.List.<init>()
	at java.lang.Class.getConstructor0(Class.java:3082)
	at java.lang.Class.getDeclaredConstructor(Class.java:2178)
	at org.springframework.web.method.annotation.ModelAttributeMethodProcessor.createAttribute(ModelAttributeMethodProcessor.java:209)
	... 70 common frames omitted
2019-06-04 17:31:35 -Resolved exception caused by Handler execution: java.lang.IllegalStateException: No primary or default constructor found for interface java.util.List
2019-06-04 17:31:35 -请求地址 : http://localhost:8888/xjbg/room/operation/1
2019-06-04 17:31:35 -HTTP METHOD : GET
2019-06-04 17:31:35 -CLASS_METHOD : com.bootdo.xjbg.controller.RoomController.operation
2019-06-04 17:31:35 -参数 : [1, {}]
2019-06-04 17:31:35 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 17:31:35 -==> Parameters: room_type(String)
2019-06-04 17:31:35 -<==      Total: 7
2019-06-04 17:31:35 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 17:31:35 -==> Parameters: floor(String)
2019-06-04 17:31:35 -<==      Total: 5
2019-06-04 17:31:35 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 17:31:35 -==> Parameters: room_state(String)
2019-06-04 17:31:35 -<==      Total: 2
2019-06-04 17:31:35 -==>  Preparing: select * from sys_user 
2019-06-04 17:31:35 -==> Parameters: 
2019-06-04 17:31:35 -<==      Total: 11
2019-06-04 17:31:35 -==>  Preparing: select `id`,`product_name`,`purchase_price`,`selling_price`,`product_pic`,`create_time`,`create_user`,`update_time`,`update_user` from xjbg_product order by id desc 
2019-06-04 17:31:35 -==> Parameters: 
2019-06-04 17:31:35 -<==      Total: 5
2019-06-04 17:31:35 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 17:31:35 -==> Parameters: order_type(String)
2019-06-04 17:31:35 -<==      Total: 3
2019-06-04 17:31:35 -==>  Preparing: select `id`,`room_no`,`room_type`,`floor`,`room_state`,`price`,`create_time`,`update_time`,`create_user`,`update_user` from xjbg_room where id = ? 
2019-06-04 17:31:35 -==> Parameters: 1(Integer)
2019-06-04 17:31:35 -<==      Total: 1
2019-06-04 17:31:35 -耗时 : 16
2019-06-04 17:31:35 -返回值 : xjbg/room/operation
2019-06-04 17:31:35 -<==    Updates: 1
2019-06-04 17:31:39 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-04 17:31:39 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8888/xjbg/room/kaifan(String), java.lang.IllegalStateException: No primary or default constructor found for interface java.util.List(String), null, 2019-06-04 17:31:39.299(Timestamp)
2019-06-04 17:31:39 -No primary or default constructor found for interface java.util.List
java.lang.IllegalStateException: No primary or default constructor found for interface java.util.List
	at org.springframework.web.method.annotation.ModelAttributeMethodProcessor.createAttribute(ModelAttributeMethodProcessor.java:212)
	at org.springframework.web.servlet.mvc.method.annotation.ServletModelAttributeMethodProcessor.createAttribute(ServletModelAttributeMethodProcessor.java:84)
	at org.springframework.web.method.annotation.ModelAttributeMethodProcessor.resolveArgument(ModelAttributeMethodProcessor.java:132)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:124)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:161)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:131)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.NoSuchMethodException: java.util.List.<init>()
	at java.lang.Class.getConstructor0(Class.java:3082)
	at java.lang.Class.getDeclaredConstructor(Class.java:2178)
	at org.springframework.web.method.annotation.ModelAttributeMethodProcessor.createAttribute(ModelAttributeMethodProcessor.java:209)
	... 70 common frames omitted
2019-06-04 17:31:39 -Resolved exception caused by Handler execution: java.lang.IllegalStateException: No primary or default constructor found for interface java.util.List
2019-06-04 17:31:39 -请求地址 : http://localhost:8888/xjbg/room/operation/1
2019-06-04 17:31:39 -HTTP METHOD : GET
2019-06-04 17:31:39 -CLASS_METHOD : com.bootdo.xjbg.controller.RoomController.operation
2019-06-04 17:31:39 -参数 : [1, {}]
2019-06-04 17:31:39 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 17:31:39 -==> Parameters: room_type(String)
2019-06-04 17:31:39 -<==      Total: 7
2019-06-04 17:31:39 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 17:31:39 -==> Parameters: floor(String)
2019-06-04 17:31:39 -<==      Total: 5
2019-06-04 17:31:39 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 17:31:39 -==> Parameters: room_state(String)
2019-06-04 17:31:39 -<==      Total: 2
2019-06-04 17:31:39 -==>  Preparing: select * from sys_user 
2019-06-04 17:31:39 -==> Parameters: 
2019-06-04 17:31:39 -<==      Total: 11
2019-06-04 17:31:39 -==>  Preparing: select `id`,`product_name`,`purchase_price`,`selling_price`,`product_pic`,`create_time`,`create_user`,`update_time`,`update_user` from xjbg_product order by id desc 
2019-06-04 17:31:39 -==> Parameters: 
2019-06-04 17:31:39 -<==      Total: 5
2019-06-04 17:31:39 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 17:31:39 -==> Parameters: order_type(String)
2019-06-04 17:31:39 -<==      Total: 3
2019-06-04 17:31:39 -==>  Preparing: select `id`,`room_no`,`room_type`,`floor`,`room_state`,`price`,`create_time`,`update_time`,`create_user`,`update_user` from xjbg_room where id = ? 
2019-06-04 17:31:39 -==> Parameters: 1(Integer)
2019-06-04 17:31:39 -<==      Total: 1
2019-06-04 17:31:39 -耗时 : 7
2019-06-04 17:31:39 -返回值 : xjbg/room/operation
2019-06-04 17:31:39 -<==    Updates: 1
2019-06-04 17:32:39 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-04 17:32:39 -No primary or default constructor found for interface java.util.List
java.lang.IllegalStateException: No primary or default constructor found for interface java.util.List
	at org.springframework.web.method.annotation.ModelAttributeMethodProcessor.createAttribute(ModelAttributeMethodProcessor.java:212)
	at org.springframework.web.servlet.mvc.method.annotation.ServletModelAttributeMethodProcessor.createAttribute(ServletModelAttributeMethodProcessor.java:84)
	at org.springframework.web.method.annotation.ModelAttributeMethodProcessor.resolveArgument(ModelAttributeMethodProcessor.java:132)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:124)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:161)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:131)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.NoSuchMethodException: java.util.List.<init>()
	at java.lang.Class.getConstructor0(Class.java:3082)
	at java.lang.Class.getDeclaredConstructor(Class.java:2178)
	at org.springframework.web.method.annotation.ModelAttributeMethodProcessor.createAttribute(ModelAttributeMethodProcessor.java:209)
	... 70 common frames omitted
2019-06-04 17:32:39 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8888/xjbg/room/kaifan(String), java.lang.IllegalStateException: No primary or default constructor found for interface java.util.List(String), null, 2019-06-04 17:32:39.664(Timestamp)
2019-06-04 17:32:39 -Resolved exception caused by Handler execution: java.lang.IllegalStateException: No primary or default constructor found for interface java.util.List
2019-06-04 17:32:39 -请求地址 : http://localhost:8888/xjbg/room/operation/1
2019-06-04 17:32:39 -HTTP METHOD : GET
2019-06-04 17:32:39 -CLASS_METHOD : com.bootdo.xjbg.controller.RoomController.operation
2019-06-04 17:32:39 -参数 : [1, {}]
2019-06-04 17:32:39 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 17:32:39 -==> Parameters: room_type(String)
2019-06-04 17:32:39 -<==      Total: 7
2019-06-04 17:32:39 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 17:32:39 -==> Parameters: floor(String)
2019-06-04 17:32:39 -<==      Total: 5
2019-06-04 17:32:39 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 17:32:39 -==> Parameters: room_state(String)
2019-06-04 17:32:39 -<==      Total: 2
2019-06-04 17:32:39 -==>  Preparing: select * from sys_user 
2019-06-04 17:32:39 -==> Parameters: 
2019-06-04 17:32:39 -<==      Total: 11
2019-06-04 17:32:39 -==>  Preparing: select `id`,`product_name`,`purchase_price`,`selling_price`,`product_pic`,`create_time`,`create_user`,`update_time`,`update_user` from xjbg_product order by id desc 
2019-06-04 17:32:39 -==> Parameters: 
2019-06-04 17:32:39 -<==      Total: 5
2019-06-04 17:32:39 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 17:32:39 -==> Parameters: order_type(String)
2019-06-04 17:32:39 -<==      Total: 3
2019-06-04 17:32:39 -==>  Preparing: select `id`,`room_no`,`room_type`,`floor`,`room_state`,`price`,`create_time`,`update_time`,`create_user`,`update_user` from xjbg_room where id = ? 
2019-06-04 17:32:39 -==> Parameters: 1(Integer)
2019-06-04 17:32:39 -<==      Total: 1
2019-06-04 17:32:39 -耗时 : 16
2019-06-04 17:32:39 -返回值 : xjbg/room/operation
2019-06-04 17:32:40 -<==    Updates: 1
2019-06-04 17:33:17 -Starting BootdoApplication on LAPTOP-ELP5M68R with PID 8564 (D:\workspace\bootdo\bootdo\target\classes started by Lenovo in D:\workspace\bootdo\bootdo)
2019-06-04 17:33:17 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-06-04 17:33:17 -The following profiles are active: dev
2019-06-04 17:33:17 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@57be6df2: startup date [Tue Jun 04 17:33:17 CST 2019]; root of context hierarchy
2019-06-04 17:33:19 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-06-04 17:33:20 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$32e5fd9d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-04 17:33:20 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$253f2c44] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-04 17:33:21 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-04 17:33:21 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-04 17:33:21 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-04 17:33:21 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-06-04 17:33:21 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-06-04 17:33:21 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-04 17:33:21 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-04 17:33:21 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-04 17:33:21 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-04 17:33:21 -Tomcat initialized with port(s): 8888 (http)
2019-06-04 17:33:21 -Initializing ProtocolHandler ["http-nio-8888"]
2019-06-04 17:33:21 -Starting service [Tomcat]
2019-06-04 17:33:21 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-06-04 17:33:21 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [F:\yff\jdk1.8\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;D:\app\Lenovo\product\11.2.0\dbhome_1\bin;\bin;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\iCLS\;C:\Program Files\Intel\Intel(R) Management Engine Components\iCLS\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;F:\yff\jdk1.8\BIN;D:\Program Files\develop\apache-maven-3.3.9\BIN;D:\Program Files\matlab\v81\runtime\win64;D:\Program Files\matlab\v81\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;F:\yff\redis64;D:\Program Files\Notepad++;D:\Program Files\mysql-5.7.24-winx64\BIN;D:\Program Files\matlab\v81\bin\win64;D:\Program Files\matlab\v81\runtime\win64;D:\Program Files\develop\SVN\bin;D:\Program Files\develop\apache-tomcat-8.5.8-ltcins-common-4280\bin;D:\Program Files\develop\apache-tomcat-8.5.8-ltcins-common-4080\bin;D:\Program Files\develop\zookeeper-3.4.10\BIN;D:\Program Files\develop\Git\cmd;C:\Users\Lenovo\AppData\Local\Microsoft\WindowsApps;C:\Users\Lenovo\AppData\Local\GitHubDesktop\bin;.]
2019-06-04 17:33:22 -Initializing Spring embedded WebApplicationContext
2019-06-04 17:33:22 -Root WebApplicationContext: initialization completed in 4147 ms
2019-06-04 17:33:22 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-06-04 17:33:22 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-06-04 17:33:22 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-06-04 17:33:22 -Mapping filter: 'requestContextFilter' to: [/*]
2019-06-04 17:33:22 -Filter xssFilter was not registered (disabled)
2019-06-04 17:33:22 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-06-04 17:33:22 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-06-04 17:33:22 -Servlet statViewServlet mapped to [/druid/*]
2019-06-04 17:33:22 -Servlet dispatcherServlet mapped to [/]
2019-06-04 17:33:22 -{dataSource-1} inited
2019-06-04 17:33:23 -ProcessEngine default created
2019-06-04 17:33:23 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@57be6df2: startup date [Tue Jun 04 17:33:17 CST 2019]; root of context hierarchy
2019-06-04 17:33:24 -Using default implementation for ThreadExecutor
2019-06-04 17:33:24 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-06-04 17:33:24 -Quartz Scheduler v.2.2.1 created.
2019-06-04 17:33:24 -RAMJobStore initialized.
2019-06-04 17:33:24 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-06-04 17:33:24 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-06-04 17:33:24 -Quartz scheduler version: 2.2.1
2019-06-04 17:33:24 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@6885d19c
2019-06-04 17:33:24 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-06-04 17:33:24 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-06-04 17:33:25 -Mapped "{[/activiti/model/{id}],methods=[DELETE]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.ModelController.remove(java.lang.String)
2019-06-04 17:33:25 -Mapped "{[/activiti/model/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.activiti.controller.ModelController.list(int,int)
2019-06-04 17:33:25 -Mapped "{[/activiti/model/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.ModelController.batchRemove(java.lang.String[])
2019-06-04 17:33:25 -Mapped "{[/activiti/model],methods=[GET]}" onto org.springframework.web.servlet.ModelAndView com.bootdo.activiti.controller.ModelController.model()
2019-06-04 17:33:25 -Mapped "{[/activiti/model/{modelId}/json],methods=[GET]}" onto public com.fasterxml.jackson.databind.node.ObjectNode com.bootdo.activiti.controller.ModelController.getEditorJson(java.lang.String)
2019-06-04 17:33:25 -Mapped "{[/activiti/model/edit/{id}],methods=[GET]}" onto public void com.bootdo.activiti.controller.ModelController.edit(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-06-04 17:33:25 -Mapped "{[/activiti/model/deploy/{id}],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.ModelController.deploy(java.lang.String) throws java.lang.Exception
2019-06-04 17:33:25 -Mapped "{[/activiti/model/add]}" onto public void com.bootdo.activiti.controller.ModelController.newModel(javax.servlet.http.HttpServletResponse) throws java.io.UnsupportedEncodingException
2019-06-04 17:33:25 -Mapped "{[/activiti/editor/stencilset],methods=[GET],produces=[application/json;charset=utf-8]}" onto public java.lang.String com.bootdo.activiti.controller.ModelController.getStencilset()
2019-06-04 17:33:25 -Mapped "{[/activiti/model/{modelId}/save],methods=[PUT]}" onto public void com.bootdo.activiti.controller.ModelController.saveModel(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2019-06-04 17:33:25 -Mapped "{[/activiti/model/export/{id}],methods=[GET]}" onto public void com.bootdo.activiti.controller.ModelController.exportToXml(java.lang.String,javax.servlet.http.HttpServletResponse)
2019-06-04 17:33:25 -Mapped "{[/activiti/process/add],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.activiti.controller.ProcessController.add()
2019-06-04 17:33:25 -Mapped "{[/activiti/process/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.ProcessController.remove(java.lang.String)
2019-06-04 17:33:25 -Mapped "{[/activiti/process/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.activiti.controller.ProcessController.list(int,int)
2019-06-04 17:33:25 -Mapped "{[/activiti/process/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.ProcessController.batchRemove(java.lang.String[])
2019-06-04 17:33:25 -Mapped "{[/activiti/process],methods=[GET]}" onto org.springframework.web.servlet.ModelAndView com.bootdo.activiti.controller.ProcessController.process()
2019-06-04 17:33:25 -Mapped "{[/activiti/process/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.ProcessController.deploy(java.lang.String,java.lang.String,org.springframework.web.multipart.MultipartFile)
2019-06-04 17:33:25 -Mapped "{[/activiti/process/resource/read/{xml}/{id}]}" onto public void com.bootdo.activiti.controller.ProcessController.resourceRead(java.lang.String,java.lang.String,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-06-04 17:33:25 -Mapped "{[/activiti/process/convertToModel/{procDefId}]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.ProcessController.convertToModel(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes) throws java.io.UnsupportedEncodingException,javax.xml.stream.XMLStreamException
2019-06-04 17:33:25 -Mapped "{[/act/salary/form],methods=[GET]}" onto java.lang.String com.bootdo.activiti.controller.SalaryController.add()
2019-06-04 17:33:25 -Mapped "{[/act/salary/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.SalaryController.remove(java.lang.String)
2019-06-04 17:33:25 -Mapped "{[/act/salary/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.SalaryController.remove(java.lang.String[])
2019-06-04 17:33:25 -Mapped "{[/act/salary/update]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.SalaryController.update(com.bootdo.activiti.domain.SalaryDO)
2019-06-04 17:33:25 -Mapped "{[/act/salary/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.activiti.controller.SalaryController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-04 17:33:25 -Mapped "{[/act/salary/form/{taskId}],methods=[GET]}" onto java.lang.String com.bootdo.activiti.controller.SalaryController.edit(java.lang.String,org.springframework.ui.Model)
2019-06-04 17:33:25 -Mapped "{[/act/salary/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.SalaryController.saveOrUpdate(com.bootdo.activiti.domain.SalaryDO)
2019-06-04 17:33:25 -Mapped "{[/act/salary],methods=[GET]}" onto java.lang.String com.bootdo.activiti.controller.SalaryController.Salary()
2019-06-04 17:33:25 -Mapped "{[/activiti/task/form/{procDefId}/{taskId}],methods=[GET]}" onto public void com.bootdo.activiti.controller.TaskController.form(java.lang.String,java.lang.String,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-06-04 17:33:25 -Mapped "{[/activiti/task/gotoList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.activiti.controller.TaskController.list(int,int)
2019-06-04 17:33:25 -Mapped "{[/activiti/task/form/{procDefId}],methods=[GET]}" onto public void com.bootdo.activiti.controller.TaskController.startForm(java.lang.String,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-06-04 17:33:25 -Mapped "{[/activiti/task/todo],methods=[GET]}" onto org.springframework.web.servlet.ModelAndView com.bootdo.activiti.controller.TaskController.todo()
2019-06-04 17:33:25 -Mapped "{[/activiti/task/goto],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.activiti.controller.TaskController.gotoTask()
2019-06-04 17:33:25 -Mapped "{[/activiti/task/todoList],methods=[GET]}" onto java.util.List<com.bootdo.activiti.vo.TaskVO> com.bootdo.activiti.controller.TaskController.todoList()
2019-06-04 17:33:25 -Mapped "{[/activiti/task/trace/photo/{procDefId}/{execId}]}" onto public void com.bootdo.activiti.controller.TaskController.tracePhoto(java.lang.String,java.lang.String,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-06-04 17:33:25 -Mapped "{[/blog/open/post/{cid}],methods=[GET]}" onto java.lang.String com.bootdo.blog.controller.BlogController.post(java.lang.Long,org.springframework.ui.Model)
2019-06-04 17:33:25 -Mapped "{[/blog],methods=[GET]}" onto java.lang.String com.bootdo.blog.controller.BlogController.blog()
2019-06-04 17:33:25 -Mapped "{[/blog/open/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.blog.controller.BlogController.opentList(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-04 17:33:25 -Mapped "{[/blog/open/page/{categories}],methods=[GET]}" onto java.lang.String com.bootdo.blog.controller.BlogController.about(java.lang.String,org.springframework.ui.Model)
2019-06-04 17:33:25 -Mapped "{[/blog/bContent/add],methods=[GET]}" onto java.lang.String com.bootdo.blog.controller.ContentController.add()
2019-06-04 17:33:25 -Mapped "{[/blog/bContent/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.blog.controller.ContentController.remove(java.lang.Long)
2019-06-04 17:33:25 -Mapped "{[/blog/bContent/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.blog.controller.ContentController.remove(java.lang.Long[])
2019-06-04 17:33:25 -Mapped "{[/blog/bContent/update]}" onto public com.bootdo.common.utils.R com.bootdo.blog.controller.ContentController.update(com.bootdo.blog.domain.ContentDO)
2019-06-04 17:33:25 -Mapped "{[/blog/bContent/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.blog.controller.ContentController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-04 17:33:25 -Mapped "{[/blog/bContent/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.blog.controller.ContentController.save(com.bootdo.blog.domain.ContentDO)
2019-06-04 17:33:25 -Mapped "{[/blog/bContent/edit/{cid}],methods=[GET]}" onto java.lang.String com.bootdo.blog.controller.ContentController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-04 17:33:25 -Mapped "{[/blog/bContent],methods=[GET]}" onto java.lang.String com.bootdo.blog.controller.ContentController.bContent()
2019-06-04 17:33:25 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-06-04 17:33:25 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-06-04 17:33:25 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-06-04 17:33:25 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-06-04 17:33:25 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-04 17:33:25 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-06-04 17:33:25 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-06-04 17:33:25 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-04 17:33:25 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-06-04 17:33:25 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-06-04 17:33:25 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-06-04 17:33:25 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-06-04 17:33:25 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-06-04 17:33:25 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-06-04 17:33:25 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-06-04 17:33:25 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-04 17:33:25 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-06-04 17:33:25 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-06-04 17:33:25 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-04 17:33:25 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-06-04 17:33:25 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-06-04 17:33:25 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-04 17:33:25 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-06-04 17:33:25 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-06-04 17:33:25 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-06-04 17:33:25 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-06-04 17:33:25 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-06-04 17:33:25 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-06-04 17:33:25 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-06-04 17:33:25 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-06-04 17:33:25 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-06-04 17:33:25 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-04 17:33:25 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-06-04 17:33:25 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-06-04 17:33:25 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-04 17:33:25 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-06-04 17:33:25 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-06-04 17:33:25 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-06-04 17:33:25 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-06-04 17:33:25 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-04 17:33:25 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-06-04 17:33:25 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-06-04 17:33:25 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-06-04 17:33:25 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-06-04 17:33:25 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-06-04 17:33:25 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-06-04 17:33:25 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-06-04 17:33:25 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-06-04 17:33:25 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-04 17:33:25 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-06-04 17:33:25 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-06-04 17:33:25 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-04 17:33:25 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-06-04 17:33:25 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-06-04 17:33:25 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-04 17:33:25 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-06-04 17:33:25 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-06-04 17:33:25 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-06-04 17:33:25 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-06-04 17:33:25 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-06-04 17:33:25 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-06-04 17:33:25 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-06-04 17:33:25 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-04 17:33:25 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-06-04 17:33:25 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-06-04 17:33:25 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-06-04 17:33:25 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-06-04 17:33:25 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-06-04 17:33:25 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-06-04 17:33:25 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String)
2019-06-04 17:33:25 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-06-04 17:33:25 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-06-04 17:33:25 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-06-04 17:33:25 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-06-04 17:33:25 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-04 17:33:25 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-06-04 17:33:25 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-06-04 17:33:25 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-06-04 17:33:25 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-06-04 17:33:25 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-06-04 17:33:25 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-06-04 17:33:25 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-06-04 17:33:25 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-06-04 17:33:25 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-06-04 17:33:25 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-06-04 17:33:25 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-06-04 17:33:25 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-06-04 17:33:25 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-04 17:33:25 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-06-04 17:33:25 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-06-04 17:33:25 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-06-04 17:33:25 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-06-04 17:33:25 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-04 17:33:25 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-06-04 17:33:25 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-06-04 17:33:25 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-06-04 17:33:25 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-04 17:33:25 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-06-04 17:33:25 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-06-04 17:33:25 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-06-04 17:33:25 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-06-04 17:33:25 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-06-04 17:33:25 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-06-04 17:33:25 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-06-04 17:33:25 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-06-04 17:33:25 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-06-04 17:33:25 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-06-04 17:33:25 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-06-04 17:33:25 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-06-04 17:33:25 -Mapped "{[/wxServer],methods=[GET]}" onto public void org.weixin4j.spring.web.WeixinJieruController.get(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-06-04 17:33:25 -Mapped "{[/wxServer],methods=[POST]}" onto public void org.weixin4j.spring.web.WeixinJieruController.post(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-06-04 17:33:25 -Mapped "{[/weixin/weixinUser/add],methods=[GET]}" onto java.lang.String com.bootdo.weixin.controller.WeixinUserController.add()
2019-06-04 17:33:25 -Mapped "{[/weixin/weixinUser/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.weixin.controller.WeixinUserController.remove(java.lang.Long)
2019-06-04 17:33:25 -Mapped "{[/weixin/weixinUser/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.weixin.controller.WeixinUserController.remove(java.lang.Long[])
2019-06-04 17:33:25 -Mapped "{[/weixin/weixinUser/update]}" onto public com.bootdo.common.utils.R com.bootdo.weixin.controller.WeixinUserController.update(com.bootdo.weixin.domain.WeixinUserDO)
2019-06-04 17:33:25 -Mapped "{[/weixin/weixinUser/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.weixin.controller.WeixinUserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-04 17:33:25 -Mapped "{[/weixin/weixinUser/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.weixin.controller.WeixinUserController.save(com.bootdo.weixin.domain.WeixinUserDO)
2019-06-04 17:33:25 -Mapped "{[/weixin/weixinUser/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.weixin.controller.WeixinUserController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-04 17:33:25 -Mapped "{[/weixin/weixinUser],methods=[GET]}" onto java.lang.String com.bootdo.weixin.controller.WeixinUserController.WeixinUser()
2019-06-04 17:33:25 -Mapped "{[/xjbg/order/add],methods=[GET]}" onto java.lang.String com.bootdo.xjbg.controller.OrderController.add()
2019-06-04 17:33:25 -Mapped "{[/xjbg/order/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.xjbg.controller.OrderController.remove(java.lang.Long)
2019-06-04 17:33:25 -Mapped "{[/xjbg/order/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.xjbg.controller.OrderController.remove(java.lang.Long[])
2019-06-04 17:33:25 -Mapped "{[/xjbg/order/update]}" onto public com.bootdo.common.utils.R com.bootdo.xjbg.controller.OrderController.update(com.bootdo.xjbg.domain.OrderDO)
2019-06-04 17:33:25 -Mapped "{[/xjbg/order/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.xjbg.controller.OrderController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-04 17:33:25 -Mapped "{[/xjbg/order/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.xjbg.controller.OrderController.save(com.bootdo.xjbg.domain.OrderDO)
2019-06-04 17:33:25 -Mapped "{[/xjbg/order/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.xjbg.controller.OrderController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-04 17:33:25 -Mapped "{[/xjbg/order],methods=[GET]}" onto java.lang.String com.bootdo.xjbg.controller.OrderController.Order()
2019-06-04 17:33:25 -Mapped "{[/xjbg/orderItem/add],methods=[GET]}" onto java.lang.String com.bootdo.xjbg.controller.OrderItemController.add()
2019-06-04 17:33:25 -Mapped "{[/xjbg/orderItem/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.xjbg.controller.OrderItemController.remove(java.lang.Long)
2019-06-04 17:33:25 -Mapped "{[/xjbg/orderItem/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.xjbg.controller.OrderItemController.remove(java.lang.Long[])
2019-06-04 17:33:25 -Mapped "{[/xjbg/orderItem/update]}" onto public com.bootdo.common.utils.R com.bootdo.xjbg.controller.OrderItemController.update(com.bootdo.xjbg.domain.OrderItemDO)
2019-06-04 17:33:25 -Mapped "{[/xjbg/orderItem/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.xjbg.controller.OrderItemController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-04 17:33:25 -Mapped "{[/xjbg/orderItem/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.xjbg.controller.OrderItemController.save(com.bootdo.xjbg.domain.OrderItemDO)
2019-06-04 17:33:25 -Mapped "{[/xjbg/orderItem/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.xjbg.controller.OrderItemController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-04 17:33:25 -Mapped "{[/xjbg/orderItem],methods=[GET]}" onto java.lang.String com.bootdo.xjbg.controller.OrderItemController.OrderItem()
2019-06-04 17:33:25 -Mapped "{[/xjbg/product/add],methods=[GET]}" onto java.lang.String com.bootdo.xjbg.controller.ProductController.add()
2019-06-04 17:33:25 -Mapped "{[/xjbg/product/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.xjbg.controller.ProductController.remove(java.lang.Long)
2019-06-04 17:33:25 -Mapped "{[/xjbg/product/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.xjbg.controller.ProductController.remove(java.lang.Long[])
2019-06-04 17:33:25 -Mapped "{[/xjbg/product/update]}" onto public com.bootdo.common.utils.R com.bootdo.xjbg.controller.ProductController.update(com.bootdo.xjbg.domain.ProductDO,org.springframework.web.multipart.MultipartFile[])
2019-06-04 17:33:25 -Mapped "{[/xjbg/product/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.xjbg.controller.ProductController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-04 17:33:25 -Mapped "{[/xjbg/product/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.xjbg.controller.ProductController.save(com.bootdo.xjbg.domain.ProductDO,org.springframework.web.multipart.MultipartFile[])
2019-06-04 17:33:25 -Mapped "{[/xjbg/product/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.xjbg.controller.ProductController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-04 17:33:25 -Mapped "{[/xjbg/product],methods=[GET]}" onto java.lang.String com.bootdo.xjbg.controller.ProductController.Product()
2019-06-04 17:33:25 -Mapped "{[/xjbg/room/add],methods=[GET]}" onto java.lang.String com.bootdo.xjbg.controller.RoomController.add(org.springframework.ui.Model)
2019-06-04 17:33:25 -Mapped "{[/xjbg/room/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.xjbg.controller.RoomController.remove(java.lang.Integer[])
2019-06-04 17:33:25 -Mapped "{[/xjbg/room/kaifan],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.xjbg.controller.RoomController.remove(com.bootdo.xjbg.domain.OrderDO,java.util.List<com.bootdo.xjbg.domain.OrderItemDO>)
2019-06-04 17:33:25 -Mapped "{[/xjbg/room/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.xjbg.controller.RoomController.remove(java.lang.Integer)
2019-06-04 17:33:25 -Mapped "{[/xjbg/room/update]}" onto public com.bootdo.common.utils.R com.bootdo.xjbg.controller.RoomController.update(com.bootdo.xjbg.domain.RoomDO)
2019-06-04 17:33:25 -Mapped "{[/xjbg/room/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.xjbg.controller.RoomController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-04 17:33:25 -Mapped "{[/xjbg/room/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.xjbg.controller.RoomController.save(com.bootdo.xjbg.domain.RoomDO)
2019-06-04 17:33:25 -Mapped "{[/xjbg/room/operation/{roomId}],methods=[GET]}" onto java.lang.String com.bootdo.xjbg.controller.RoomController.operation(java.lang.Integer,org.springframework.ui.Model)
2019-06-04 17:33:25 -Mapped "{[/xjbg/room/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.xjbg.controller.RoomController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-06-04 17:33:25 -Mapped "{[/xjbg/room],methods=[GET]}" onto java.lang.String com.bootdo.xjbg.controller.RoomController.Room(org.springframework.ui.Model)
2019-06-04 17:33:25 -Mapped "{[/xjbg/room/roomMng],methods=[GET]}" onto java.lang.String com.bootdo.xjbg.controller.RoomController.roomMng(org.springframework.ui.Model)
2019-06-04 17:33:25 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-06-04 17:33:25 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-06-04 17:33:25 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-06-04 17:33:25 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-06-04 17:33:25 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-06-04 17:33:25 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-06-04 17:33:25 -Initializing ExecutorService  'brokerChannelExecutor'
2019-06-04 17:33:26 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-06-04 17:33:26 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@57be6df2: startup date [Tue Jun 04 17:33:17 CST 2019]; root of context hierarchy
2019-06-04 17:33:26 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-06-04 17:33:26 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-06-04 17:33:26 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-06-04 17:33:26 -Mapped URL path [/productPic/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-06-04 17:33:26 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-06-04 17:33:26 -[THYMELEAF][restartedMain] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-06-04 17:33:27 -LiveReload server is running on port 35729
2019-06-04 17:33:27 -Registering beans for JMX exposure on startup
2019-06-04 17:33:27 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-06-04 17:33:27 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-06-04 17:33:27 -Starting beans in phase 2147483647
2019-06-04 17:33:27 -Context refreshed
2019-06-04 17:33:27 -Found 1 custom documentation plugin(s)
2019-06-04 17:33:27 -Scanning for api listing references
2019-06-04 17:33:27 -Generating unique operation named: removeUsingPOST_1
2019-06-04 17:33:27 -Generating unique operation named: addUsingGET_1
2019-06-04 17:33:27 -Generating unique operation named: editUsingGET_1
2019-06-04 17:33:27 -Generating unique operation named: listUsingGET_1
2019-06-04 17:33:27 -Generating unique operation named: removeUsingPOST_2
2019-06-04 17:33:27 -Generating unique operation named: removeUsingPOST_3
2019-06-04 17:33:27 -Generating unique operation named: saveUsingPOST_1
2019-06-04 17:33:27 -Generating unique operation named: updateUsingGET_1
2019-06-04 17:33:27 -Generating unique operation named: updateUsingHEAD_1
2019-06-04 17:33:27 -Generating unique operation named: updateUsingPOST_1
2019-06-04 17:33:27 -Generating unique operation named: updateUsingPUT_1
2019-06-04 17:33:27 -Generating unique operation named: updateUsingPATCH_1
2019-06-04 17:33:27 -Generating unique operation named: updateUsingDELETE_1
2019-06-04 17:33:27 -Generating unique operation named: updateUsingOPTIONS_1
2019-06-04 17:33:27 -Generating unique operation named: updateUsingTRACE_1
2019-06-04 17:33:27 -Generating unique operation named: addUsingGET_2
2019-06-04 17:33:27 -Generating unique operation named: editUsingGET_2
2019-06-04 17:33:27 -Generating unique operation named: listUsingGET_2
2019-06-04 17:33:27 -Generating unique operation named: removeUsingPOST_4
2019-06-04 17:33:27 -Generating unique operation named: removeUsingPOST_5
2019-06-04 17:33:27 -Generating unique operation named: saveUsingPOST_2
2019-06-04 17:33:27 -Generating unique operation named: updateUsingGET_2
2019-06-04 17:33:27 -Generating unique operation named: updateUsingHEAD_2
2019-06-04 17:33:27 -Generating unique operation named: updateUsingPOST_2
2019-06-04 17:33:27 -Generating unique operation named: updateUsingPUT_2
2019-06-04 17:33:27 -Generating unique operation named: updateUsingPATCH_2
2019-06-04 17:33:27 -Generating unique operation named: updateUsingDELETE_2
2019-06-04 17:33:27 -Generating unique operation named: updateUsingOPTIONS_2
2019-06-04 17:33:27 -Generating unique operation named: updateUsingTRACE_2
2019-06-04 17:33:27 -Generating unique operation named: addUsingGET_3
2019-06-04 17:33:27 -Generating unique operation named: editUsingGET_3
2019-06-04 17:33:27 -Generating unique operation named: listUsingGET_3
2019-06-04 17:33:27 -Generating unique operation named: removeUsingPOST_6
2019-06-04 17:33:27 -Generating unique operation named: removeUsingPOST_7
2019-06-04 17:33:27 -Generating unique operation named: saveUsingPOST_3
2019-06-04 17:33:27 -Generating unique operation named: updateUsingGET_3
2019-06-04 17:33:27 -Generating unique operation named: updateUsingHEAD_3
2019-06-04 17:33:27 -Generating unique operation named: updateUsingPOST_3
2019-06-04 17:33:27 -Generating unique operation named: updateUsingPUT_3
2019-06-04 17:33:27 -Generating unique operation named: updateUsingPATCH_3
2019-06-04 17:33:27 -Generating unique operation named: updateUsingDELETE_3
2019-06-04 17:33:27 -Generating unique operation named: updateUsingOPTIONS_3
2019-06-04 17:33:27 -Generating unique operation named: updateUsingTRACE_3
2019-06-04 17:33:27 -Generating unique operation named: editUsingGET_4
2019-06-04 17:33:27 -Generating unique operation named: listUsingGET_4
2019-06-04 17:33:27 -Generating unique operation named: updateUsingPOST_4
2019-06-04 17:33:27 -Generating unique operation named: addUsingGET_4
2019-06-04 17:33:27 -Generating unique operation named: editUsingGET_5
2019-06-04 17:33:27 -Generating unique operation named: infoUsingGET_1
2019-06-04 17:33:27 -Generating unique operation named: infoUsingHEAD_1
2019-06-04 17:33:27 -Generating unique operation named: infoUsingPOST_1
2019-06-04 17:33:27 -Generating unique operation named: infoUsingPUT_1
2019-06-04 17:33:27 -Generating unique operation named: infoUsingPATCH_1
2019-06-04 17:33:27 -Generating unique operation named: infoUsingDELETE_1
2019-06-04 17:33:27 -Generating unique operation named: infoUsingOPTIONS_1
2019-06-04 17:33:27 -Generating unique operation named: infoUsingTRACE_1
2019-06-04 17:33:27 -Generating unique operation named: listUsingGET_5
2019-06-04 17:33:27 -Generating unique operation named: removeUsingPOST_8
2019-06-04 17:33:27 -Generating unique operation named: removeUsingPOST_9
2019-06-04 17:33:27 -Generating unique operation named: saveUsingPOST_4
2019-06-04 17:33:27 -Generating unique operation named: updateUsingPOST_5
2019-06-04 17:33:27 -Generating unique operation named: listUsingGET_6
2019-06-04 17:33:27 -Generating unique operation named: removeUsingPOST_10
2019-06-04 17:33:27 -Generating unique operation named: welcomeUsingGET_1
2019-06-04 17:33:27 -Generating unique operation named: addUsingGET_5
2019-06-04 17:33:27 -Generating unique operation named: editUsingGET_6
2019-06-04 17:33:27 -Generating unique operation named: listUsingGET_7
2019-06-04 17:33:27 -Generating unique operation named: removeUsingPOST_11
2019-06-04 17:33:27 -Generating unique operation named: saveUsingPOST_5
2019-06-04 17:33:27 -Generating unique operation named: treeUsingGET_1
2019-06-04 17:33:27 -Generating unique operation named: treeUsingGET_2
2019-06-04 17:33:27 -Generating unique operation named: updateUsingPOST_6
2019-06-04 17:33:27 -Generating unique operation named: batchRemoveUsingPOST_1
2019-06-04 17:33:27 -Generating unique operation named: editUsingGET_7
2019-06-04 17:33:27 -Generating unique operation named: listUsingGET_8
2019-06-04 17:33:27 -Generating unique operation named: addUsingGET_6
2019-06-04 17:33:27 -Generating unique operation named: editUsingGET_8
2019-06-04 17:33:27 -Generating unique operation named: listUsingGET_9
2019-06-04 17:33:27 -Generating unique operation named: removeUsingPOST_12
2019-06-04 17:33:27 -Generating unique operation named: removeUsingPOST_13
2019-06-04 17:33:27 -Generating unique operation named: saveUsingPOST_6
2019-06-04 17:33:27 -Generating unique operation named: updateUsingGET_4
2019-06-04 17:33:27 -Generating unique operation named: updateUsingHEAD_4
2019-06-04 17:33:28 -Generating unique operation named: updateUsingPOST_7
2019-06-04 17:33:28 -Generating unique operation named: updateUsingPUT_4
2019-06-04 17:33:28 -Generating unique operation named: updateUsingPATCH_4
2019-06-04 17:33:28 -Generating unique operation named: updateUsingDELETE_4
2019-06-04 17:33:28 -Generating unique operation named: updateUsingOPTIONS_4
2019-06-04 17:33:28 -Generating unique operation named: updateUsingTRACE_4
2019-06-04 17:33:28 -Generating unique operation named: addUsingGET_7
2019-06-04 17:33:28 -Generating unique operation named: editUsingGET_9
2019-06-04 17:33:28 -Generating unique operation named: listUsingGET_10
2019-06-04 17:33:28 -Generating unique operation named: removeUsingPOST_14
2019-06-04 17:33:28 -Generating unique operation named: removeUsingPOST_15
2019-06-04 17:33:28 -Generating unique operation named: saveUsingPOST_7
2019-06-04 17:33:28 -Generating unique operation named: updateUsingGET_5
2019-06-04 17:33:28 -Generating unique operation named: updateUsingHEAD_5
2019-06-04 17:33:28 -Generating unique operation named: updateUsingPOST_8
2019-06-04 17:33:28 -Generating unique operation named: updateUsingPUT_5
2019-06-04 17:33:28 -Generating unique operation named: updateUsingPATCH_5
2019-06-04 17:33:28 -Generating unique operation named: updateUsingDELETE_5
2019-06-04 17:33:28 -Generating unique operation named: updateUsingOPTIONS_5
2019-06-04 17:33:28 -Generating unique operation named: updateUsingTRACE_5
2019-06-04 17:33:28 -Generating unique operation named: addUsingGET_8
2019-06-04 17:33:28 -Generating unique operation named: editUsingGET_10
2019-06-04 17:33:28 -Generating unique operation named: listUsingGET_11
2019-06-04 17:33:28 -Generating unique operation named: removeUsingPOST_16
2019-06-04 17:33:28 -Generating unique operation named: removeUsingPOST_17
2019-06-04 17:33:28 -Generating unique operation named: saveUsingPOST_8
2019-06-04 17:33:28 -Generating unique operation named: updateUsingGET_6
2019-06-04 17:33:28 -Generating unique operation named: updateUsingHEAD_6
2019-06-04 17:33:28 -Generating unique operation named: updateUsingPOST_9
2019-06-04 17:33:28 -Generating unique operation named: updateUsingPUT_6
2019-06-04 17:33:28 -Generating unique operation named: updateUsingPATCH_6
2019-06-04 17:33:28 -Generating unique operation named: updateUsingDELETE_6
2019-06-04 17:33:28 -Generating unique operation named: updateUsingOPTIONS_6
2019-06-04 17:33:28 -Generating unique operation named: updateUsingTRACE_6
2019-06-04 17:33:28 -Generating unique operation named: addUsingGET_9
2019-06-04 17:33:28 -Generating unique operation named: batchRemoveUsingPOST_2
2019-06-04 17:33:28 -Generating unique operation named: deployUsingPOST_1
2019-06-04 17:33:28 -Generating unique operation named: listUsingGET_12
2019-06-04 17:33:28 -Generating unique operation named: removeUsingPOST_18
2019-06-04 17:33:28 -Generating unique operation named: addUsingGET_10
2019-06-04 17:33:28 -Generating unique operation named: editUsingGET_11
2019-06-04 17:33:28 -Generating unique operation named: listUsingGET_13
2019-06-04 17:33:28 -Generating unique operation named: removeUsingPOST_19
2019-06-04 17:33:28 -Generating unique operation named: removeUsingPOST_20
2019-06-04 17:33:28 -Trying to infer dataType org.springframework.web.multipart.MultipartFile[]
2019-06-04 17:33:28 -Generating unique operation named: saveUsingPOST_9
2019-06-04 17:33:28 -Trying to infer dataType org.springframework.web.multipart.MultipartFile[]
2019-06-04 17:33:28 -Generating unique operation named: updateUsingGET_7
2019-06-04 17:33:28 -Trying to infer dataType org.springframework.web.multipart.MultipartFile[]
2019-06-04 17:33:28 -Generating unique operation named: updateUsingHEAD_7
2019-06-04 17:33:28 -Trying to infer dataType org.springframework.web.multipart.MultipartFile[]
2019-06-04 17:33:28 -Generating unique operation named: updateUsingPOST_10
2019-06-04 17:33:28 -Trying to infer dataType org.springframework.web.multipart.MultipartFile[]
2019-06-04 17:33:28 -Generating unique operation named: updateUsingPUT_7
2019-06-04 17:33:28 -Trying to infer dataType org.springframework.web.multipart.MultipartFile[]
2019-06-04 17:33:28 -Generating unique operation named: updateUsingPATCH_7
2019-06-04 17:33:28 -Trying to infer dataType org.springframework.web.multipart.MultipartFile[]
2019-06-04 17:33:28 -Generating unique operation named: updateUsingDELETE_7
2019-06-04 17:33:28 -Trying to infer dataType org.springframework.web.multipart.MultipartFile[]
2019-06-04 17:33:28 -Generating unique operation named: updateUsingOPTIONS_7
2019-06-04 17:33:28 -Trying to infer dataType org.springframework.web.multipart.MultipartFile[]
2019-06-04 17:33:28 -Generating unique operation named: updateUsingTRACE_7
2019-06-04 17:33:28 -Generating unique operation named: addUsingGET_11
2019-06-04 17:33:28 -Generating unique operation named: batchRemoveUsingPOST_3
2019-06-04 17:33:28 -Generating unique operation named: editUsingGET_12
2019-06-04 17:33:28 -Generating unique operation named: listUsingGET_14
2019-06-04 17:33:28 -Generating unique operation named: saveUsingPOST_10
2019-06-04 17:33:28 -Generating unique operation named: saveUsingPOST_11
2019-06-04 17:33:28 -Generating unique operation named: updateUsingPOST_11
2019-06-04 17:33:28 -Generating unique operation named: addUsingGET_12
2019-06-04 17:33:28 -Generating unique operation named: editUsingGET_13
2019-06-04 17:33:28 -Generating unique operation named: listUsingGET_15
2019-06-04 17:33:28 -Generating unique operation named: removeUsingPOST_21
2019-06-04 17:33:28 -Trying to infer dataType java.util.List<com.bootdo.xjbg.domain.OrderItemDO>
2019-06-04 17:33:28 -Generating unique operation named: removeUsingPOST_22
2019-06-04 17:33:28 -Generating unique operation named: removeUsingPOST_23
2019-06-04 17:33:28 -Generating unique operation named: saveUsingPOST_12
2019-06-04 17:33:28 -Generating unique operation named: updateUsingGET_8
2019-06-04 17:33:28 -Generating unique operation named: updateUsingHEAD_8
2019-06-04 17:33:28 -Generating unique operation named: updateUsingPOST_12
2019-06-04 17:33:28 -Generating unique operation named: updateUsingPUT_8
2019-06-04 17:33:28 -Generating unique operation named: updateUsingPATCH_8
2019-06-04 17:33:28 -Generating unique operation named: updateUsingDELETE_8
2019-06-04 17:33:28 -Generating unique operation named: updateUsingOPTIONS_8
2019-06-04 17:33:28 -Generating unique operation named: updateUsingTRACE_8
2019-06-04 17:33:28 -Generating unique operation named: addUsingGET_13
2019-06-04 17:33:28 -Generating unique operation named: editUsingGET_14
2019-06-04 17:33:28 -Generating unique operation named: listUsingGET_16
2019-06-04 17:33:28 -Generating unique operation named: removeUsingPOST_24
2019-06-04 17:33:28 -Generating unique operation named: removeUsingPOST_25
2019-06-04 17:33:28 -Generating unique operation named: updateUsingGET_9
2019-06-04 17:33:28 -Generating unique operation named: updateUsingHEAD_9
2019-06-04 17:33:28 -Generating unique operation named: updateUsingPOST_13
2019-06-04 17:33:28 -Generating unique operation named: updateUsingPUT_9
2019-06-04 17:33:28 -Generating unique operation named: updateUsingPATCH_9
2019-06-04 17:33:28 -Generating unique operation named: updateUsingDELETE_9
2019-06-04 17:33:28 -Generating unique operation named: updateUsingOPTIONS_9
2019-06-04 17:33:28 -Generating unique operation named: updateUsingTRACE_9
2019-06-04 17:33:28 -Generating unique operation named: listUsingGET_17
2019-06-04 17:33:28 -Generating unique operation named: listUsingHEAD_1
2019-06-04 17:33:28 -Generating unique operation named: listUsingPOST_1
2019-06-04 17:33:28 -Generating unique operation named: listUsingPUT_1
2019-06-04 17:33:28 -Generating unique operation named: listUsingPATCH_1
2019-06-04 17:33:28 -Generating unique operation named: listUsingDELETE_1
2019-06-04 17:33:28 -Generating unique operation named: listUsingOPTIONS_1
2019-06-04 17:33:28 -Generating unique operation named: listUsingTRACE_1
2019-06-04 17:33:28 -Generating unique operation named: listUsingGET_18
2019-06-04 17:33:28 -Generating unique operation named: addUsingGET_14
2019-06-04 17:33:28 -Generating unique operation named: batchRemoveUsingPOST_4
2019-06-04 17:33:28 -Generating unique operation named: editUsingGET_15
2019-06-04 17:33:28 -Generating unique operation named: listUsingGET_19
2019-06-04 17:33:28 -Generating unique operation named: removeUsingPOST_26
2019-06-04 17:33:28 -Generating unique operation named: saveUsingPOST_13
2019-06-04 17:33:28 -Generating unique operation named: treeUsingGET_3
2019-06-04 17:33:28 -Generating unique operation named: treeViewUsingGET_1
2019-06-04 17:33:28 -Generating unique operation named: updateUsingPOST_14
2019-06-04 17:33:28 -Generating unique operation named: addUsingGET_15
2019-06-04 17:33:28 -Generating unique operation named: editUsingGET_16
2019-06-04 17:33:28 -Generating unique operation named: listUsingGET_20
2019-06-04 17:33:28 -Generating unique operation named: removeUsingPOST_27
2019-06-04 17:33:28 -Generating unique operation named: removeUsingPOST_28
2019-06-04 17:33:28 -Generating unique operation named: saveUsingPOST_14
2019-06-04 17:33:28 -Generating unique operation named: updateUsingGET_10
2019-06-04 17:33:28 -Generating unique operation named: updateUsingHEAD_10
2019-06-04 17:33:28 -Generating unique operation named: updateUsingPOST_15
2019-06-04 17:33:28 -Generating unique operation named: updateUsingPUT_10
2019-06-04 17:33:28 -Generating unique operation named: updateUsingPATCH_10
2019-06-04 17:33:28 -Generating unique operation named: updateUsingDELETE_10
2019-06-04 17:33:28 -Generating unique operation named: updateUsingOPTIONS_10
2019-06-04 17:33:28 -Generating unique operation named: updateUsingTRACE_10
2019-06-04 17:33:28 -Starting Quartz Scheduler now
2019-06-04 17:33:28 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-06-04 17:33:28 -Starting...
2019-06-04 17:33:28 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-06-04 17:33:28 -Started.
2019-06-04 17:33:28 -Starting ProtocolHandler ["http-nio-8888"]
2019-06-04 17:33:28 -Using a shared selector for servlet write/read
2019-06-04 17:33:28 -Tomcat started on port(s): 8888 (http) with context path ''
2019-06-04 17:33:28 -Started BootdoApplication in 11.226 seconds (JVM running for 12.942)
2019-06-04 17:33:28 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-06-04 17:33:28 -==> Parameters: 
2019-06-04 17:33:28 -<==      Total: 1
2019-06-04 17:33:44 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-06-04 17:33:44 -FrameworkServlet 'dispatcherServlet': initialization started
2019-06-04 17:33:44 -FrameworkServlet 'dispatcherServlet': initialization completed in 33 ms
2019-06-04 17:33:44 -Enabling session validation scheduler...
2019-06-04 17:33:44 -请求地址 : http://localhost:8888/login;JSESSIONID=b24ed080-0cb5-46f5-b5cc-a7a70b808f05
2019-06-04 17:33:44 -HTTP METHOD : GET
2019-06-04 17:33:44 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-06-04 17:33:44 -参数 : [{}]
2019-06-04 17:33:44 -耗时 : 2
2019-06-04 17:33:44 -返回值 : login
2019-06-04 17:33:48 -请求地址 : http://localhost:8888/login
2019-06-04 17:33:48 -HTTP METHOD : POST
2019-06-04 17:33:48 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-06-04 17:33:48 -参数 : [admin, 111111]
2019-06-04 17:33:48 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-06-04 17:33:48 -==> Parameters: admin(String)
2019-06-04 17:33:48 -<==      Total: 1
2019-06-04 17:33:48 -耗时 : 15
2019-06-04 17:33:48 -返回值 : {msg=操作成功, code=0}
2019-06-04 17:33:48 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-06-04 17:33:48 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-04 17:33:48 -==> Parameters: 1(Long), admin(String), 登录(String), 15(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-06-04 17:33:48.064(Timestamp)
2019-06-04 17:33:48 -请求地址 : http://localhost:8888/index
2019-06-04 17:33:48 -HTTP METHOD : GET
2019-06-04 17:33:48 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-06-04 17:33:48 -参数 : [{}]
2019-06-04 17:33:48 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-06-04 17:33:48 -==> Parameters: 1(Long)
2019-06-04 17:33:48 -<==      Total: 34
2019-06-04 17:33:48 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-06-04 17:33:48 -==> Parameters: 144(Long)
2019-06-04 17:33:48 -<==      Total: 1
2019-06-04 17:33:48 -耗时 : 33
2019-06-04 17:33:48 -返回值 : index_v1
2019-06-04 17:33:48 -<==    Updates: 1
2019-06-04 17:33:48 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-04 17:33:48 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 33(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-hotel","url":""},"checked":false,"children":[{"attributes":{"icon":"","url":"/xjbg/room/roomMng"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"105","text":"开房"},{"attributes":{"icon":"fa fa-bed","url":"/xjbg/room"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"106","parentId":"105","text":"房间管理"},{"attributes":{"icon":"","url":"/xjbg/product"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"105","text":"商品管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"欣吉宾馆"},{"attributes":{"icon":"fa fa-commenting","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user","url":"/weixin/weixinUser"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"109","text":"用户管理"}],"hasChildren":true,"hasParent":false,"id":"109","parentId":"0","text":"微信管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","text":"基础管理"},{"attributes":{"icon":"fa fa-desktop"},"checked":false,"children":[{"attributes":{"icon":"fa fa-user","url":"sys/user/"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"6","parentId":"3","text":"用户管理"},{"attributes":{"icon":"fa fa-paw","url":"sys/role"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"7","parentId":"3","text":"角色管理"},{"attributes":{"icon":"fa fa-th-list","url":"sys/menu/"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"3","text":"系统菜单"},{"attributes":{"icon":"fa fa-users","url":"/system/sysDept"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"73","parentId":"3","text":"部门管理"}],"hasChildren":true,"hasParent":false,"id":"3","parentId":"0","text":"系统管理"},{"attributes":{"icon":"fa fa-gear","url":""},"checked":false,"children":[{"attributes":{"icon":"","url":"/swagger-ui.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"104","parentId":"77","text":"swagger"},{"attributes":{"icon":"fa fa-code","url":"common/generator"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"48","parentId":"77","text":"代码生成"},{"attributes":{"icon":"fa fa-hourglass-1","url":"common/job"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"72","parentId":"77","text":"计划任务"}],"hasChildren":true,"hasParent":false,"id":"77","parentId":"0","text":"系统工具"},{"attributes":{"icon":"fa fa-video-camera","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user","url":"sys/online"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"92","parentId":"91","text":"在线用户"},{"attributes":{"icon":"fa fa-warning","url":"common/log"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"27","parentId":"91","text":"系统日志"},{"attributes":{"icon":"fa fa-caret-square-o-right","url":"/druid/index.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"57","parentId":"91","text":"运行监控"}],"hasChildren":true,"hasParent":false,"id":"91","parentId":"0","text":"系统监控"},{"attributes":{"icon":"fa fa-laptop","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-pencil-square","url":"oa/notify"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"85","parentId":"84","text":"通知公告"},{"attributes":{"icon":"fa fa-envelope-square","url":"oa/notify/selfNotify"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"90","parentId":"84","text":"我的通知"}],"hasChildren":true,"hasParent":false,"id":"84","parentId":"0","text":"办公管理"},{"attributes":{"icon":"fa fa-print","url":""},"checked":false,"children":[{"attributes":{"icon":"","url":"activiti/task/todo"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"101","parentId":"93","text":"待办任务"},{"attributes":{"icon":"fa fa-sort-amount-asc","url":"activiti/model"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"94","parentId":"93","text":"模型管理"},{"attributes":{"icon":"fa fa-flag","url":"activiti/process"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"96","parentId":"93","text":"流程管理"}],"hasChildren":true,"hasParent":false,"id":"93","parentId":"0","text":"工作流程"},{"attributes":{"icon":"fa fa-rss","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-edit","url":"/blog/bContent/add"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"68","parentId":"49","text":"发布文章"},{"(String), 127.0.0.1(String), 2019-06-04 17:33:48.159(Timestamp)
2019-06-04 17:33:48 -<==    Updates: 1
2019-06-04 17:33:48 -请求地址 : http://localhost:8888/main
2019-06-04 17:33:48 -HTTP METHOD : GET
2019-06-04 17:33:48 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-04 17:33:48 -参数 : []
2019-06-04 17:33:48 -耗时 : 1
2019-06-04 17:33:48 -返回值 : main
2019-06-04 17:33:48 -请求地址 : http://localhost:8888/oa/notify/message
2019-06-04 17:33:48 -HTTP METHOD : GET
2019-06-04 17:33:48 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-06-04 17:33:48 -参数 : []
2019-06-04 17:33:48 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-06-04 17:33:48 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-06-04 17:33:48 -<==      Total: 0
2019-06-04 17:33:48 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-06-04 17:33:48 -==> Parameters: 1(Long), 0(String)
2019-06-04 17:33:48 -<==      Total: 1
2019-06-04 17:33:48 -耗时 : 12
2019-06-04 17:33:48 -返回值 : com.bootdo.common.utils.PageUtils@b0b0daa
2019-06-04 17:33:48 -请求地址 : http://localhost:8888/main
2019-06-04 17:33:48 -HTTP METHOD : GET
2019-06-04 17:33:48 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-04 17:33:48 -参数 : []
2019-06-04 17:33:48 -耗时 : 0
2019-06-04 17:33:48 -返回值 : main
2019-06-04 17:33:50 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-06-04 17:33:50 -==> Parameters: 1(Long)
2019-06-04 17:33:50 -<==      Total: 58
2019-06-04 17:33:50 -请求地址 : http://localhost:8888/xjbg/room/roomMng
2019-06-04 17:33:50 -HTTP METHOD : GET
2019-06-04 17:33:50 -CLASS_METHOD : com.bootdo.xjbg.controller.RoomController.roomMng
2019-06-04 17:33:50 -参数 : [{}]
2019-06-04 17:33:50 -==>  Preparing: select `id`,`room_no`,`room_type`,`floor`,`room_state`,`price`,`create_time`,`update_time`,`create_user`,`update_user` from xjbg_room 
2019-06-04 17:33:50 -==> Parameters: 
2019-06-04 17:33:50 -<==      Total: 8
2019-06-04 17:33:50 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 17:33:50 -==> Parameters: room_type(String)
2019-06-04 17:33:50 -<==      Total: 7
2019-06-04 17:33:50 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 17:33:50 -==> Parameters: floor(String)
2019-06-04 17:33:50 -<==      Total: 5
2019-06-04 17:33:50 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 17:33:50 -==> Parameters: room_state(String)
2019-06-04 17:33:50 -<==      Total: 2
2019-06-04 17:33:50 -==>  Preparing: select * from sys_user 
2019-06-04 17:33:50 -==> Parameters: 
2019-06-04 17:33:50 -<==      Total: 11
2019-06-04 17:33:50 -耗时 : 22
2019-06-04 17:33:50 -返回值 : xjbg/room/roomMng
2019-06-04 17:33:51 -请求地址 : http://localhost:8888/xjbg/room/operation/1
2019-06-04 17:33:51 -HTTP METHOD : GET
2019-06-04 17:33:51 -CLASS_METHOD : com.bootdo.xjbg.controller.RoomController.operation
2019-06-04 17:33:51 -参数 : [1, {}]
2019-06-04 17:33:51 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 17:33:51 -==> Parameters: room_type(String)
2019-06-04 17:33:51 -<==      Total: 7
2019-06-04 17:33:51 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 17:33:51 -==> Parameters: floor(String)
2019-06-04 17:33:51 -<==      Total: 5
2019-06-04 17:33:51 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 17:33:51 -==> Parameters: room_state(String)
2019-06-04 17:33:51 -<==      Total: 2
2019-06-04 17:33:51 -==>  Preparing: select * from sys_user 
2019-06-04 17:33:51 -==> Parameters: 
2019-06-04 17:33:51 -<==      Total: 11
2019-06-04 17:33:51 -==>  Preparing: select `id`,`product_name`,`purchase_price`,`selling_price`,`product_pic`,`create_time`,`create_user`,`update_time`,`update_user` from xjbg_product order by id desc 
2019-06-04 17:33:51 -==> Parameters: 
2019-06-04 17:33:51 -<==      Total: 5
2019-06-04 17:33:51 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 17:33:51 -==> Parameters: order_type(String)
2019-06-04 17:33:51 -<==      Total: 3
2019-06-04 17:33:51 -==>  Preparing: select `id`,`room_no`,`room_type`,`floor`,`room_state`,`price`,`create_time`,`update_time`,`create_user`,`update_user` from xjbg_room where id = ? 
2019-06-04 17:33:51 -==> Parameters: 1(Integer)
2019-06-04 17:33:51 -<==      Total: 1
2019-06-04 17:33:51 -耗时 : 24
2019-06-04 17:33:51 -返回值 : xjbg/room/operation
2019-06-04 17:33:55 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-04 17:33:55 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8888/xjbg/room/kaifan(String), java.lang.IllegalStateException: No primary or default constructor found for interface java.util.List(String), null, 2019-06-04 17:33:55.585(Timestamp)
2019-06-04 17:33:55 -No primary or default constructor found for interface java.util.List
java.lang.IllegalStateException: No primary or default constructor found for interface java.util.List
	at org.springframework.web.method.annotation.ModelAttributeMethodProcessor.createAttribute(ModelAttributeMethodProcessor.java:212)
	at org.springframework.web.servlet.mvc.method.annotation.ServletModelAttributeMethodProcessor.createAttribute(ServletModelAttributeMethodProcessor.java:84)
	at org.springframework.web.method.annotation.ModelAttributeMethodProcessor.resolveArgument(ModelAttributeMethodProcessor.java:132)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:124)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:161)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:131)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.NoSuchMethodException: java.util.List.<init>()
	at java.lang.Class.getConstructor0(Class.java:3082)
	at java.lang.Class.getDeclaredConstructor(Class.java:2178)
	at org.springframework.web.method.annotation.ModelAttributeMethodProcessor.createAttribute(ModelAttributeMethodProcessor.java:209)
	... 70 common frames omitted
2019-06-04 17:33:55 -Resolved exception caused by Handler execution: java.lang.IllegalStateException: No primary or default constructor found for interface java.util.List
2019-06-04 17:33:55 -请求地址 : http://localhost:8888/xjbg/room/operation/1
2019-06-04 17:33:55 -HTTP METHOD : GET
2019-06-04 17:33:55 -CLASS_METHOD : com.bootdo.xjbg.controller.RoomController.operation
2019-06-04 17:33:55 -参数 : [1, {}]
2019-06-04 17:33:55 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 17:33:55 -==> Parameters: room_type(String)
2019-06-04 17:33:55 -<==      Total: 7
2019-06-04 17:33:55 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 17:33:55 -==> Parameters: floor(String)
2019-06-04 17:33:55 -<==      Total: 5
2019-06-04 17:33:55 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 17:33:55 -==> Parameters: room_state(String)
2019-06-04 17:33:55 -<==      Total: 2
2019-06-04 17:33:55 -==>  Preparing: select * from sys_user 
2019-06-04 17:33:55 -==> Parameters: 
2019-06-04 17:33:55 -<==      Total: 11
2019-06-04 17:33:55 -==>  Preparing: select `id`,`product_name`,`purchase_price`,`selling_price`,`product_pic`,`create_time`,`create_user`,`update_time`,`update_user` from xjbg_product order by id desc 
2019-06-04 17:33:55 -==> Parameters: 
2019-06-04 17:33:55 -<==      Total: 5
2019-06-04 17:33:55 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 17:33:55 -==> Parameters: order_type(String)
2019-06-04 17:33:55 -<==      Total: 3
2019-06-04 17:33:55 -==>  Preparing: select `id`,`room_no`,`room_type`,`floor`,`room_state`,`price`,`create_time`,`update_time`,`create_user`,`update_user` from xjbg_room where id = ? 
2019-06-04 17:33:55 -==> Parameters: 1(Integer)
2019-06-04 17:33:55 -<==      Total: 1
2019-06-04 17:33:55 -耗时 : 21
2019-06-04 17:33:55 -返回值 : xjbg/room/operation
2019-06-04 17:33:55 -<==    Updates: 1
2019-06-04 17:33:58 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-04 17:33:58 -No primary or default constructor found for interface java.util.List
java.lang.IllegalStateException: No primary or default constructor found for interface java.util.List
	at org.springframework.web.method.annotation.ModelAttributeMethodProcessor.createAttribute(ModelAttributeMethodProcessor.java:212)
	at org.springframework.web.servlet.mvc.method.annotation.ServletModelAttributeMethodProcessor.createAttribute(ServletModelAttributeMethodProcessor.java:84)
	at org.springframework.web.method.annotation.ModelAttributeMethodProcessor.resolveArgument(ModelAttributeMethodProcessor.java:132)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:124)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:161)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:131)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.NoSuchMethodException: java.util.List.<init>()
	at java.lang.Class.getConstructor0(Class.java:3082)
	at java.lang.Class.getDeclaredConstructor(Class.java:2178)
	at org.springframework.web.method.annotation.ModelAttributeMethodProcessor.createAttribute(ModelAttributeMethodProcessor.java:209)
	... 70 common frames omitted
2019-06-04 17:33:58 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8888/xjbg/room/kaifan(String), java.lang.IllegalStateException: No primary or default constructor found for interface java.util.List(String), null, 2019-06-04 17:33:58.934(Timestamp)
2019-06-04 17:33:58 -Resolved exception caused by Handler execution: java.lang.IllegalStateException: No primary or default constructor found for interface java.util.List
2019-06-04 17:33:58 -<==    Updates: 1
2019-06-04 17:34:01 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-04 17:34:01 -No primary or default constructor found for interface java.util.List
java.lang.IllegalStateException: No primary or default constructor found for interface java.util.List
	at org.springframework.web.method.annotation.ModelAttributeMethodProcessor.createAttribute(ModelAttributeMethodProcessor.java:212)
	at org.springframework.web.servlet.mvc.method.annotation.ServletModelAttributeMethodProcessor.createAttribute(ServletModelAttributeMethodProcessor.java:84)
	at org.springframework.web.method.annotation.ModelAttributeMethodProcessor.resolveArgument(ModelAttributeMethodProcessor.java:132)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:124)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:161)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:131)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.NoSuchMethodException: java.util.List.<init>()
	at java.lang.Class.getConstructor0(Class.java:3082)
	at java.lang.Class.getDeclaredConstructor(Class.java:2178)
	at org.springframework.web.method.annotation.ModelAttributeMethodProcessor.createAttribute(ModelAttributeMethodProcessor.java:209)
	... 70 common frames omitted
2019-06-04 17:34:01 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8888/xjbg/room/kaifan(String), java.lang.IllegalStateException: No primary or default constructor found for interface java.util.List(String), null, 2019-06-04 17:34:01.794(Timestamp)
2019-06-04 17:34:01 -Resolved exception caused by Handler execution: java.lang.IllegalStateException: No primary or default constructor found for interface java.util.List
2019-06-04 17:34:01 -<==    Updates: 1
2019-06-04 17:34:14 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-04 17:34:14 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8888/xjbg/room/kaifan(String), java.lang.IllegalStateException: No primary or default constructor found for interface java.util.List(String), null, 2019-06-04 17:34:14.906(Timestamp)
2019-06-04 17:34:14 -No primary or default constructor found for interface java.util.List
java.lang.IllegalStateException: No primary or default constructor found for interface java.util.List
	at org.springframework.web.method.annotation.ModelAttributeMethodProcessor.createAttribute(ModelAttributeMethodProcessor.java:212)
	at org.springframework.web.servlet.mvc.method.annotation.ServletModelAttributeMethodProcessor.createAttribute(ServletModelAttributeMethodProcessor.java:84)
	at org.springframework.web.method.annotation.ModelAttributeMethodProcessor.resolveArgument(ModelAttributeMethodProcessor.java:132)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:124)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:161)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:131)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.NoSuchMethodException: java.util.List.<init>()
	at java.lang.Class.getConstructor0(Class.java:3082)
	at java.lang.Class.getDeclaredConstructor(Class.java:2178)
	at org.springframework.web.method.annotation.ModelAttributeMethodProcessor.createAttribute(ModelAttributeMethodProcessor.java:209)
	... 70 common frames omitted
2019-06-04 17:34:14 -Resolved exception caused by Handler execution: java.lang.IllegalStateException: No primary or default constructor found for interface java.util.List
2019-06-04 17:34:15 -<==    Updates: 1
2019-06-04 17:34:25 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 1 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 9, active threads = 0, queued tasks = 0, completed tasks = 9], outboundChannelpool size = 1, active threads = 0, queued tasks = 0, completed tasks = 1], sockJsScheduler[pool size = 8, active threads = 1, queued tasks = 3, completed tasks = 9]
2019-06-04 17:35:27 -Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@57be6df2: startup date [Tue Jun 04 17:33:17 CST 2019]; root of context hierarchy
2019-06-04 17:35:27 -Stopping beans in phase 2147483647
2019-06-04 17:35:27 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED paused.
2019-06-04 17:35:27 -Stopping...
2019-06-04 17:35:27 -BrokerAvailabilityEvent[available=false, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[1 sessions]]]]
2019-06-04 17:35:27 -Stopped.
2019-06-04 17:35:27 -Unregistering JMX-exposed beans on shutdown
2019-06-04 17:35:27 -Unregistering JMX-exposed beans
2019-06-04 17:35:27 -Shutting down ExecutorService 'brokerChannelExecutor'
2019-06-04 17:35:27 -Shutting down ExecutorService 'messageBrokerTaskScheduler'
2019-06-04 17:35:27 -Shutting down ExecutorService 'clientOutboundChannelExecutor'
2019-06-04 17:35:27 -Shutting down ExecutorService 'clientInboundChannelExecutor'
2019-06-04 17:35:27 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED shutting down.
2019-06-04 17:35:27 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED paused.
2019-06-04 17:35:27 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED shutdown complete.
2019-06-04 17:35:27 -Shutting down Quartz Scheduler
2019-06-04 17:35:27 -{dataSource-1} closed
2019-06-04 17:35:27 -Disabled session validation scheduler.
2019-06-04 17:35:28 -Starting BootdoApplication on LAPTOP-ELP5M68R with PID 8564 (D:\workspace\bootdo\bootdo\target\classes started by Lenovo in D:\workspace\bootdo\bootdo)
2019-06-04 17:35:28 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-06-04 17:35:28 -The following profiles are active: dev
2019-06-04 17:35:28 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@78587c4c: startup date [Tue Jun 04 17:35:28 CST 2019]; root of context hierarchy
2019-06-04 17:35:28 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-06-04 17:35:29 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$32e5fd9d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-04 17:35:29 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$253f2c44] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-04 17:35:29 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-04 17:35:29 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-04 17:35:29 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-04 17:35:29 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache.1' does not yet exist.  Creating now.
2019-06-04 17:35:29 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache.1]
2019-06-04 17:35:29 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-04 17:35:29 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-04 17:35:29 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-04 17:35:29 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-04 17:35:29 -Tomcat initialized with port(s): 8888 (http)
2019-06-04 17:35:29 -Initializing ProtocolHandler ["http-nio-8888"]
2019-06-04 17:35:29 -Starting service [Tomcat]
2019-06-04 17:35:29 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-06-04 17:35:29 -Initializing Spring embedded WebApplicationContext
2019-06-04 17:35:29 -Root WebApplicationContext: initialization completed in 1181 ms
2019-06-04 17:35:29 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-06-04 17:35:29 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-06-04 17:35:29 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-06-04 17:35:29 -Mapping filter: 'requestContextFilter' to: [/*]
2019-06-04 17:35:29 -Filter xssFilter was not registered (disabled)
2019-06-04 17:35:29 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-06-04 17:35:29 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-06-04 17:35:29 -Servlet statViewServlet mapped to [/druid/*]
2019-06-04 17:35:29 -Servlet dispatcherServlet mapped to [/]
2019-06-04 17:35:29 -{dataSource-2} inited
2019-06-04 17:35:29 -ProcessEngine default created
2019-06-04 17:35:30 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@78587c4c: startup date [Tue Jun 04 17:35:28 CST 2019]; root of context hierarchy
2019-06-04 17:35:30 -Using default implementation for ThreadExecutor
2019-06-04 17:35:30 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-06-04 17:35:30 -Quartz Scheduler v.2.2.1 created.
2019-06-04 17:35:30 -RAMJobStore initialized.
2019-06-04 17:35:30 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-06-04 17:35:30 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-06-04 17:35:30 -Quartz scheduler version: 2.2.1
2019-06-04 17:35:30 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@768336ce
2019-06-04 17:35:30 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-06-04 17:35:30 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-06-04 17:35:31 -Mapped "{[/activiti/model/{id}],methods=[DELETE]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.ModelController.remove(java.lang.String)
2019-06-04 17:35:31 -Mapped "{[/activiti/model/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.activiti.controller.ModelController.list(int,int)
2019-06-04 17:35:31 -Mapped "{[/activiti/model/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.ModelController.batchRemove(java.lang.String[])
2019-06-04 17:35:31 -Mapped "{[/activiti/model],methods=[GET]}" onto org.springframework.web.servlet.ModelAndView com.bootdo.activiti.controller.ModelController.model()
2019-06-04 17:35:31 -Mapped "{[/activiti/model/{modelId}/json],methods=[GET]}" onto public com.fasterxml.jackson.databind.node.ObjectNode com.bootdo.activiti.controller.ModelController.getEditorJson(java.lang.String)
2019-06-04 17:35:31 -Mapped "{[/activiti/model/edit/{id}],methods=[GET]}" onto public void com.bootdo.activiti.controller.ModelController.edit(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-06-04 17:35:31 -Mapped "{[/activiti/model/deploy/{id}],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.ModelController.deploy(java.lang.String) throws java.lang.Exception
2019-06-04 17:35:31 -Mapped "{[/activiti/model/add]}" onto public void com.bootdo.activiti.controller.ModelController.newModel(javax.servlet.http.HttpServletResponse) throws java.io.UnsupportedEncodingException
2019-06-04 17:35:31 -Mapped "{[/activiti/editor/stencilset],methods=[GET],produces=[application/json;charset=utf-8]}" onto public java.lang.String com.bootdo.activiti.controller.ModelController.getStencilset()
2019-06-04 17:35:31 -Mapped "{[/activiti/model/{modelId}/save],methods=[PUT]}" onto public void com.bootdo.activiti.controller.ModelController.saveModel(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2019-06-04 17:35:31 -Mapped "{[/activiti/model/export/{id}],methods=[GET]}" onto public void com.bootdo.activiti.controller.ModelController.exportToXml(java.lang.String,javax.servlet.http.HttpServletResponse)
2019-06-04 17:35:31 -Mapped "{[/activiti/process/add],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.activiti.controller.ProcessController.add()
2019-06-04 17:35:31 -Mapped "{[/activiti/process/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.ProcessController.remove(java.lang.String)
2019-06-04 17:35:31 -Mapped "{[/activiti/process/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.activiti.controller.ProcessController.list(int,int)
2019-06-04 17:35:31 -Mapped "{[/activiti/process/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.ProcessController.batchRemove(java.lang.String[])
2019-06-04 17:35:31 -Mapped "{[/activiti/process],methods=[GET]}" onto org.springframework.web.servlet.ModelAndView com.bootdo.activiti.controller.ProcessController.process()
2019-06-04 17:35:31 -Mapped "{[/activiti/process/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.ProcessController.deploy(java.lang.String,java.lang.String,org.springframework.web.multipart.MultipartFile)
2019-06-04 17:35:31 -Mapped "{[/activiti/process/resource/read/{xml}/{id}]}" onto public void com.bootdo.activiti.controller.ProcessController.resourceRead(java.lang.String,java.lang.String,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-06-04 17:35:31 -Mapped "{[/activiti/process/convertToModel/{procDefId}]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.ProcessController.convertToModel(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes) throws java.io.UnsupportedEncodingException,javax.xml.stream.XMLStreamException
2019-06-04 17:35:31 -Mapped "{[/act/salary/form],methods=[GET]}" onto java.lang.String com.bootdo.activiti.controller.SalaryController.add()
2019-06-04 17:35:31 -Mapped "{[/act/salary/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.SalaryController.remove(java.lang.String)
2019-06-04 17:35:31 -Mapped "{[/act/salary/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.SalaryController.remove(java.lang.String[])
2019-06-04 17:35:31 -Mapped "{[/act/salary/update]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.SalaryController.update(com.bootdo.activiti.domain.SalaryDO)
2019-06-04 17:35:31 -Mapped "{[/act/salary/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.activiti.controller.SalaryController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-04 17:35:31 -Mapped "{[/act/salary/form/{taskId}],methods=[GET]}" onto java.lang.String com.bootdo.activiti.controller.SalaryController.edit(java.lang.String,org.springframework.ui.Model)
2019-06-04 17:35:31 -Mapped "{[/act/salary/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.SalaryController.saveOrUpdate(com.bootdo.activiti.domain.SalaryDO)
2019-06-04 17:35:31 -Mapped "{[/act/salary],methods=[GET]}" onto java.lang.String com.bootdo.activiti.controller.SalaryController.Salary()
2019-06-04 17:35:31 -Mapped "{[/activiti/task/form/{procDefId}/{taskId}],methods=[GET]}" onto public void com.bootdo.activiti.controller.TaskController.form(java.lang.String,java.lang.String,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-06-04 17:35:31 -Mapped "{[/activiti/task/gotoList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.activiti.controller.TaskController.list(int,int)
2019-06-04 17:35:31 -Mapped "{[/activiti/task/form/{procDefId}],methods=[GET]}" onto public void com.bootdo.activiti.controller.TaskController.startForm(java.lang.String,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-06-04 17:35:31 -Mapped "{[/activiti/task/todo],methods=[GET]}" onto org.springframework.web.servlet.ModelAndView com.bootdo.activiti.controller.TaskController.todo()
2019-06-04 17:35:31 -Mapped "{[/activiti/task/goto],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.activiti.controller.TaskController.gotoTask()
2019-06-04 17:35:31 -Mapped "{[/activiti/task/todoList],methods=[GET]}" onto java.util.List<com.bootdo.activiti.vo.TaskVO> com.bootdo.activiti.controller.TaskController.todoList()
2019-06-04 17:35:31 -Mapped "{[/activiti/task/trace/photo/{procDefId}/{execId}]}" onto public void com.bootdo.activiti.controller.TaskController.tracePhoto(java.lang.String,java.lang.String,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-06-04 17:35:31 -Mapped "{[/blog/open/post/{cid}],methods=[GET]}" onto java.lang.String com.bootdo.blog.controller.BlogController.post(java.lang.Long,org.springframework.ui.Model)
2019-06-04 17:35:31 -Mapped "{[/blog],methods=[GET]}" onto java.lang.String com.bootdo.blog.controller.BlogController.blog()
2019-06-04 17:35:31 -Mapped "{[/blog/open/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.blog.controller.BlogController.opentList(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-04 17:35:31 -Mapped "{[/blog/open/page/{categories}],methods=[GET]}" onto java.lang.String com.bootdo.blog.controller.BlogController.about(java.lang.String,org.springframework.ui.Model)
2019-06-04 17:35:31 -Mapped "{[/blog/bContent/add],methods=[GET]}" onto java.lang.String com.bootdo.blog.controller.ContentController.add()
2019-06-04 17:35:31 -Mapped "{[/blog/bContent/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.blog.controller.ContentController.remove(java.lang.Long)
2019-06-04 17:35:31 -Mapped "{[/blog/bContent/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.blog.controller.ContentController.remove(java.lang.Long[])
2019-06-04 17:35:31 -Mapped "{[/blog/bContent/update]}" onto public com.bootdo.common.utils.R com.bootdo.blog.controller.ContentController.update(com.bootdo.blog.domain.ContentDO)
2019-06-04 17:35:31 -Mapped "{[/blog/bContent/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.blog.controller.ContentController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-04 17:35:31 -Mapped "{[/blog/bContent/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.blog.controller.ContentController.save(com.bootdo.blog.domain.ContentDO)
2019-06-04 17:35:31 -Mapped "{[/blog/bContent/edit/{cid}],methods=[GET]}" onto java.lang.String com.bootdo.blog.controller.ContentController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-04 17:35:31 -Mapped "{[/blog/bContent],methods=[GET]}" onto java.lang.String com.bootdo.blog.controller.ContentController.bContent()
2019-06-04 17:35:31 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-06-04 17:35:31 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-06-04 17:35:31 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-06-04 17:35:31 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-06-04 17:35:31 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-04 17:35:31 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-06-04 17:35:31 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-06-04 17:35:31 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-04 17:35:31 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-06-04 17:35:31 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-06-04 17:35:31 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-06-04 17:35:31 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-06-04 17:35:31 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-06-04 17:35:31 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-06-04 17:35:31 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-06-04 17:35:31 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-04 17:35:31 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-06-04 17:35:31 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-06-04 17:35:31 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-04 17:35:31 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-06-04 17:35:31 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-06-04 17:35:31 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-04 17:35:31 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-06-04 17:35:31 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-06-04 17:35:31 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-06-04 17:35:31 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-06-04 17:35:31 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-06-04 17:35:31 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-06-04 17:35:31 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-06-04 17:35:31 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-06-04 17:35:31 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-06-04 17:35:31 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-04 17:35:31 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-06-04 17:35:31 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-06-04 17:35:31 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-04 17:35:31 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-06-04 17:35:31 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-06-04 17:35:31 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-06-04 17:35:31 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-06-04 17:35:31 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-04 17:35:31 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-06-04 17:35:31 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-06-04 17:35:31 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-06-04 17:35:31 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-06-04 17:35:31 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-06-04 17:35:31 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-06-04 17:35:31 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-06-04 17:35:31 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-06-04 17:35:31 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-04 17:35:31 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-06-04 17:35:31 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-06-04 17:35:31 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-04 17:35:31 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-06-04 17:35:31 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-06-04 17:35:31 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-04 17:35:31 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-06-04 17:35:31 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-06-04 17:35:31 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-06-04 17:35:31 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-06-04 17:35:31 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-06-04 17:35:31 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-06-04 17:35:31 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-06-04 17:35:31 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-04 17:35:31 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-06-04 17:35:31 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-06-04 17:35:31 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-06-04 17:35:31 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-06-04 17:35:31 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-06-04 17:35:31 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-06-04 17:35:31 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String)
2019-06-04 17:35:31 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-06-04 17:35:31 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-06-04 17:35:31 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-06-04 17:35:31 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-06-04 17:35:31 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-04 17:35:31 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-06-04 17:35:31 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-06-04 17:35:31 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-06-04 17:35:31 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-06-04 17:35:31 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-06-04 17:35:31 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-06-04 17:35:31 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-06-04 17:35:31 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-06-04 17:35:31 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-06-04 17:35:31 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-06-04 17:35:31 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-06-04 17:35:31 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-06-04 17:35:31 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-04 17:35:31 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-06-04 17:35:31 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-06-04 17:35:31 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-06-04 17:35:31 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-06-04 17:35:31 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-04 17:35:31 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-06-04 17:35:31 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-06-04 17:35:31 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-06-04 17:35:31 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-04 17:35:31 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-06-04 17:35:31 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-06-04 17:35:31 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-06-04 17:35:31 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-06-04 17:35:31 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-06-04 17:35:31 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-06-04 17:35:31 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-06-04 17:35:31 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-06-04 17:35:31 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-06-04 17:35:31 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-06-04 17:35:31 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-06-04 17:35:31 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-06-04 17:35:31 -Mapped "{[/wxServer],methods=[GET]}" onto public void org.weixin4j.spring.web.WeixinJieruController.get(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-06-04 17:35:31 -Mapped "{[/wxServer],methods=[POST]}" onto public void org.weixin4j.spring.web.WeixinJieruController.post(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-06-04 17:35:31 -Mapped "{[/weixin/weixinUser/add],methods=[GET]}" onto java.lang.String com.bootdo.weixin.controller.WeixinUserController.add()
2019-06-04 17:35:31 -Mapped "{[/weixin/weixinUser/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.weixin.controller.WeixinUserController.remove(java.lang.Long)
2019-06-04 17:35:31 -Mapped "{[/weixin/weixinUser/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.weixin.controller.WeixinUserController.remove(java.lang.Long[])
2019-06-04 17:35:31 -Mapped "{[/weixin/weixinUser/update]}" onto public com.bootdo.common.utils.R com.bootdo.weixin.controller.WeixinUserController.update(com.bootdo.weixin.domain.WeixinUserDO)
2019-06-04 17:35:31 -Mapped "{[/weixin/weixinUser/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.weixin.controller.WeixinUserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-04 17:35:31 -Mapped "{[/weixin/weixinUser/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.weixin.controller.WeixinUserController.save(com.bootdo.weixin.domain.WeixinUserDO)
2019-06-04 17:35:31 -Mapped "{[/weixin/weixinUser/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.weixin.controller.WeixinUserController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-04 17:35:31 -Mapped "{[/weixin/weixinUser],methods=[GET]}" onto java.lang.String com.bootdo.weixin.controller.WeixinUserController.WeixinUser()
2019-06-04 17:35:31 -Mapped "{[/xjbg/order/add],methods=[GET]}" onto java.lang.String com.bootdo.xjbg.controller.OrderController.add()
2019-06-04 17:35:31 -Mapped "{[/xjbg/order/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.xjbg.controller.OrderController.remove(java.lang.Long)
2019-06-04 17:35:31 -Mapped "{[/xjbg/order/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.xjbg.controller.OrderController.remove(java.lang.Long[])
2019-06-04 17:35:31 -Mapped "{[/xjbg/order/update]}" onto public com.bootdo.common.utils.R com.bootdo.xjbg.controller.OrderController.update(com.bootdo.xjbg.domain.OrderDO)
2019-06-04 17:35:31 -Mapped "{[/xjbg/order/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.xjbg.controller.OrderController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-04 17:35:31 -Mapped "{[/xjbg/order/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.xjbg.controller.OrderController.save(com.bootdo.xjbg.domain.OrderDO)
2019-06-04 17:35:31 -Mapped "{[/xjbg/order/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.xjbg.controller.OrderController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-04 17:35:31 -Mapped "{[/xjbg/order],methods=[GET]}" onto java.lang.String com.bootdo.xjbg.controller.OrderController.Order()
2019-06-04 17:35:31 -Mapped "{[/xjbg/orderItem/add],methods=[GET]}" onto java.lang.String com.bootdo.xjbg.controller.OrderItemController.add()
2019-06-04 17:35:31 -Mapped "{[/xjbg/orderItem/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.xjbg.controller.OrderItemController.remove(java.lang.Long)
2019-06-04 17:35:31 -Mapped "{[/xjbg/orderItem/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.xjbg.controller.OrderItemController.remove(java.lang.Long[])
2019-06-04 17:35:31 -Mapped "{[/xjbg/orderItem/update]}" onto public com.bootdo.common.utils.R com.bootdo.xjbg.controller.OrderItemController.update(com.bootdo.xjbg.domain.OrderItemDO)
2019-06-04 17:35:31 -Mapped "{[/xjbg/orderItem/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.xjbg.controller.OrderItemController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-04 17:35:31 -Mapped "{[/xjbg/orderItem/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.xjbg.controller.OrderItemController.save(com.bootdo.xjbg.domain.OrderItemDO)
2019-06-04 17:35:31 -Mapped "{[/xjbg/orderItem/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.xjbg.controller.OrderItemController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-04 17:35:31 -Mapped "{[/xjbg/orderItem],methods=[GET]}" onto java.lang.String com.bootdo.xjbg.controller.OrderItemController.OrderItem()
2019-06-04 17:35:31 -Mapped "{[/xjbg/product/add],methods=[GET]}" onto java.lang.String com.bootdo.xjbg.controller.ProductController.add()
2019-06-04 17:35:31 -Mapped "{[/xjbg/product/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.xjbg.controller.ProductController.remove(java.lang.Long)
2019-06-04 17:35:31 -Mapped "{[/xjbg/product/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.xjbg.controller.ProductController.remove(java.lang.Long[])
2019-06-04 17:35:31 -Mapped "{[/xjbg/product/update]}" onto public com.bootdo.common.utils.R com.bootdo.xjbg.controller.ProductController.update(com.bootdo.xjbg.domain.ProductDO,org.springframework.web.multipart.MultipartFile[])
2019-06-04 17:35:31 -Mapped "{[/xjbg/product/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.xjbg.controller.ProductController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-04 17:35:31 -Mapped "{[/xjbg/product/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.xjbg.controller.ProductController.save(com.bootdo.xjbg.domain.ProductDO,org.springframework.web.multipart.MultipartFile[])
2019-06-04 17:35:31 -Mapped "{[/xjbg/product/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.xjbg.controller.ProductController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-04 17:35:31 -Mapped "{[/xjbg/product],methods=[GET]}" onto java.lang.String com.bootdo.xjbg.controller.ProductController.Product()
2019-06-04 17:35:31 -Mapped "{[/xjbg/room/add],methods=[GET]}" onto java.lang.String com.bootdo.xjbg.controller.RoomController.add(org.springframework.ui.Model)
2019-06-04 17:35:31 -Mapped "{[/xjbg/room/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.xjbg.controller.RoomController.remove(java.lang.Integer[])
2019-06-04 17:35:31 -Mapped "{[/xjbg/room/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.xjbg.controller.RoomController.remove(java.lang.Integer)
2019-06-04 17:35:31 -Mapped "{[/xjbg/room/update]}" onto public com.bootdo.common.utils.R com.bootdo.xjbg.controller.RoomController.update(com.bootdo.xjbg.domain.RoomDO)
2019-06-04 17:35:31 -Mapped "{[/xjbg/room/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.xjbg.controller.RoomController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-04 17:35:31 -Mapped "{[/xjbg/room/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.xjbg.controller.RoomController.save(com.bootdo.xjbg.domain.RoomDO)
2019-06-04 17:35:31 -Mapped "{[/xjbg/room/operation/{roomId}],methods=[GET]}" onto java.lang.String com.bootdo.xjbg.controller.RoomController.operation(java.lang.Integer,org.springframework.ui.Model)
2019-06-04 17:35:31 -Mapped "{[/xjbg/room/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.xjbg.controller.RoomController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-06-04 17:35:31 -Mapped "{[/xjbg/room],methods=[GET]}" onto java.lang.String com.bootdo.xjbg.controller.RoomController.Room(org.springframework.ui.Model)
2019-06-04 17:35:31 -Mapped "{[/xjbg/room/roomMng],methods=[GET]}" onto java.lang.String com.bootdo.xjbg.controller.RoomController.roomMng(org.springframework.ui.Model)
2019-06-04 17:35:31 -Mapped "{[/xjbg/room/kaifan],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.xjbg.controller.RoomController.kaifan(com.bootdo.xjbg.domain.OrderDO,java.util.List<com.bootdo.xjbg.domain.OrderItemDO>)
2019-06-04 17:35:31 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-06-04 17:35:31 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-06-04 17:35:31 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-06-04 17:35:31 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-06-04 17:35:31 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-06-04 17:35:31 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-06-04 17:35:31 -Initializing ExecutorService  'brokerChannelExecutor'
2019-06-04 17:35:31 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-06-04 17:35:31 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@78587c4c: startup date [Tue Jun 04 17:35:28 CST 2019]; root of context hierarchy
2019-06-04 17:35:31 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-06-04 17:35:31 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-06-04 17:35:31 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-06-04 17:35:31 -Mapped URL path [/productPic/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-06-04 17:35:31 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-06-04 17:35:31 -[THYMELEAF][restartedMain] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-06-04 17:35:31 -LiveReload server is running on port 35729
2019-06-04 17:35:32 -Registering beans for JMX exposure on startup
2019-06-04 17:35:32 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-06-04 17:35:32 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-06-04 17:35:32 -Starting beans in phase 2147483647
2019-06-04 17:35:32 -Context refreshed
2019-06-04 17:35:32 -Found 1 custom documentation plugin(s)
2019-06-04 17:35:32 -Scanning for api listing references
2019-06-04 17:35:32 -Generating unique operation named: removeUsingPOST_1
2019-06-04 17:35:32 -Generating unique operation named: addUsingGET_1
2019-06-04 17:35:32 -Generating unique operation named: editUsingGET_1
2019-06-04 17:35:32 -Generating unique operation named: listUsingGET_1
2019-06-04 17:35:32 -Generating unique operation named: removeUsingPOST_2
2019-06-04 17:35:32 -Generating unique operation named: removeUsingPOST_3
2019-06-04 17:35:32 -Generating unique operation named: saveUsingPOST_1
2019-06-04 17:35:32 -Generating unique operation named: updateUsingGET_1
2019-06-04 17:35:32 -Generating unique operation named: updateUsingHEAD_1
2019-06-04 17:35:32 -Generating unique operation named: updateUsingPOST_1
2019-06-04 17:35:32 -Generating unique operation named: updateUsingPUT_1
2019-06-04 17:35:32 -Generating unique operation named: updateUsingPATCH_1
2019-06-04 17:35:32 -Generating unique operation named: updateUsingDELETE_1
2019-06-04 17:35:32 -Generating unique operation named: updateUsingOPTIONS_1
2019-06-04 17:35:32 -Generating unique operation named: updateUsingTRACE_1
2019-06-04 17:35:32 -Generating unique operation named: addUsingGET_2
2019-06-04 17:35:32 -Generating unique operation named: editUsingGET_2
2019-06-04 17:35:32 -Generating unique operation named: listUsingGET_2
2019-06-04 17:35:32 -Generating unique operation named: removeUsingPOST_4
2019-06-04 17:35:32 -Generating unique operation named: removeUsingPOST_5
2019-06-04 17:35:32 -Generating unique operation named: saveUsingPOST_2
2019-06-04 17:35:32 -Generating unique operation named: updateUsingGET_2
2019-06-04 17:35:32 -Generating unique operation named: updateUsingHEAD_2
2019-06-04 17:35:32 -Generating unique operation named: updateUsingPOST_2
2019-06-04 17:35:32 -Generating unique operation named: updateUsingPUT_2
2019-06-04 17:35:32 -Generating unique operation named: updateUsingPATCH_2
2019-06-04 17:35:32 -Generating unique operation named: updateUsingDELETE_2
2019-06-04 17:35:32 -Generating unique operation named: updateUsingOPTIONS_2
2019-06-04 17:35:32 -Generating unique operation named: updateUsingTRACE_2
2019-06-04 17:35:32 -Generating unique operation named: addUsingGET_3
2019-06-04 17:35:32 -Generating unique operation named: editUsingGET_3
2019-06-04 17:35:32 -Generating unique operation named: listUsingGET_3
2019-06-04 17:35:32 -Generating unique operation named: removeUsingPOST_6
2019-06-04 17:35:32 -Generating unique operation named: removeUsingPOST_7
2019-06-04 17:35:32 -Generating unique operation named: saveUsingPOST_3
2019-06-04 17:35:32 -Generating unique operation named: updateUsingGET_3
2019-06-04 17:35:32 -Generating unique operation named: updateUsingHEAD_3
2019-06-04 17:35:32 -Generating unique operation named: updateUsingPOST_3
2019-06-04 17:35:32 -Generating unique operation named: updateUsingPUT_3
2019-06-04 17:35:32 -Generating unique operation named: updateUsingPATCH_3
2019-06-04 17:35:32 -Generating unique operation named: updateUsingDELETE_3
2019-06-04 17:35:32 -Generating unique operation named: updateUsingOPTIONS_3
2019-06-04 17:35:32 -Generating unique operation named: updateUsingTRACE_3
2019-06-04 17:35:32 -Generating unique operation named: editUsingGET_4
2019-06-04 17:35:32 -Generating unique operation named: listUsingGET_4
2019-06-04 17:35:32 -Generating unique operation named: updateUsingPOST_4
2019-06-04 17:35:32 -Generating unique operation named: addUsingGET_4
2019-06-04 17:35:32 -Generating unique operation named: editUsingGET_5
2019-06-04 17:35:32 -Generating unique operation named: infoUsingGET_1
2019-06-04 17:35:32 -Generating unique operation named: infoUsingHEAD_1
2019-06-04 17:35:32 -Generating unique operation named: infoUsingPOST_1
2019-06-04 17:35:32 -Generating unique operation named: infoUsingPUT_1
2019-06-04 17:35:32 -Generating unique operation named: infoUsingPATCH_1
2019-06-04 17:35:32 -Generating unique operation named: infoUsingDELETE_1
2019-06-04 17:35:32 -Generating unique operation named: infoUsingOPTIONS_1
2019-06-04 17:35:32 -Generating unique operation named: infoUsingTRACE_1
2019-06-04 17:35:32 -Generating unique operation named: listUsingGET_5
2019-06-04 17:35:32 -Generating unique operation named: removeUsingPOST_8
2019-06-04 17:35:32 -Generating unique operation named: removeUsingPOST_9
2019-06-04 17:35:32 -Generating unique operation named: saveUsingPOST_4
2019-06-04 17:35:32 -Generating unique operation named: updateUsingPOST_5
2019-06-04 17:35:32 -Generating unique operation named: listUsingGET_6
2019-06-04 17:35:32 -Generating unique operation named: removeUsingPOST_10
2019-06-04 17:35:32 -Generating unique operation named: welcomeUsingGET_1
2019-06-04 17:35:32 -Generating unique operation named: addUsingGET_5
2019-06-04 17:35:32 -Generating unique operation named: editUsingGET_6
2019-06-04 17:35:32 -Generating unique operation named: listUsingGET_7
2019-06-04 17:35:32 -Generating unique operation named: removeUsingPOST_11
2019-06-04 17:35:32 -Generating unique operation named: saveUsingPOST_5
2019-06-04 17:35:32 -Generating unique operation named: treeUsingGET_1
2019-06-04 17:35:32 -Generating unique operation named: treeUsingGET_2
2019-06-04 17:35:32 -Generating unique operation named: updateUsingPOST_6
2019-06-04 17:35:32 -Generating unique operation named: batchRemoveUsingPOST_1
2019-06-04 17:35:32 -Generating unique operation named: editUsingGET_7
2019-06-04 17:35:32 -Generating unique operation named: listUsingGET_8
2019-06-04 17:35:32 -Generating unique operation named: addUsingGET_6
2019-06-04 17:35:32 -Generating unique operation named: editUsingGET_8
2019-06-04 17:35:32 -Generating unique operation named: listUsingGET_9
2019-06-04 17:35:32 -Generating unique operation named: removeUsingPOST_12
2019-06-04 17:35:32 -Generating unique operation named: removeUsingPOST_13
2019-06-04 17:35:32 -Generating unique operation named: saveUsingPOST_6
2019-06-04 17:35:32 -Generating unique operation named: updateUsingGET_4
2019-06-04 17:35:32 -Generating unique operation named: updateUsingHEAD_4
2019-06-04 17:35:32 -Generating unique operation named: updateUsingPOST_7
2019-06-04 17:35:32 -Generating unique operation named: updateUsingPUT_4
2019-06-04 17:35:32 -Generating unique operation named: updateUsingPATCH_4
2019-06-04 17:35:32 -Generating unique operation named: updateUsingDELETE_4
2019-06-04 17:35:32 -Generating unique operation named: updateUsingOPTIONS_4
2019-06-04 17:35:32 -Generating unique operation named: updateUsingTRACE_4
2019-06-04 17:35:32 -Generating unique operation named: addUsingGET_7
2019-06-04 17:35:32 -Generating unique operation named: editUsingGET_9
2019-06-04 17:35:32 -Generating unique operation named: listUsingGET_10
2019-06-04 17:35:32 -Generating unique operation named: removeUsingPOST_14
2019-06-04 17:35:32 -Generating unique operation named: removeUsingPOST_15
2019-06-04 17:35:32 -Generating unique operation named: saveUsingPOST_7
2019-06-04 17:35:32 -Generating unique operation named: updateUsingGET_5
2019-06-04 17:35:32 -Generating unique operation named: updateUsingHEAD_5
2019-06-04 17:35:32 -Generating unique operation named: updateUsingPOST_8
2019-06-04 17:35:32 -Generating unique operation named: updateUsingPUT_5
2019-06-04 17:35:32 -Generating unique operation named: updateUsingPATCH_5
2019-06-04 17:35:32 -Generating unique operation named: updateUsingDELETE_5
2019-06-04 17:35:32 -Generating unique operation named: updateUsingOPTIONS_5
2019-06-04 17:35:32 -Generating unique operation named: updateUsingTRACE_5
2019-06-04 17:35:32 -Generating unique operation named: addUsingGET_8
2019-06-04 17:35:32 -Generating unique operation named: editUsingGET_10
2019-06-04 17:35:32 -Generating unique operation named: listUsingGET_11
2019-06-04 17:35:32 -Generating unique operation named: removeUsingPOST_16
2019-06-04 17:35:32 -Generating unique operation named: removeUsingPOST_17
2019-06-04 17:35:32 -Generating unique operation named: saveUsingPOST_8
2019-06-04 17:35:32 -Generating unique operation named: updateUsingGET_6
2019-06-04 17:35:32 -Generating unique operation named: updateUsingHEAD_6
2019-06-04 17:35:32 -Generating unique operation named: updateUsingPOST_9
2019-06-04 17:35:32 -Generating unique operation named: updateUsingPUT_6
2019-06-04 17:35:32 -Generating unique operation named: updateUsingPATCH_6
2019-06-04 17:35:32 -Generating unique operation named: updateUsingDELETE_6
2019-06-04 17:35:32 -Generating unique operation named: updateUsingOPTIONS_6
2019-06-04 17:35:32 -Generating unique operation named: updateUsingTRACE_6
2019-06-04 17:35:32 -Generating unique operation named: addUsingGET_9
2019-06-04 17:35:32 -Generating unique operation named: batchRemoveUsingPOST_2
2019-06-04 17:35:32 -Generating unique operation named: deployUsingPOST_1
2019-06-04 17:35:32 -Generating unique operation named: listUsingGET_12
2019-06-04 17:35:32 -Generating unique operation named: removeUsingPOST_18
2019-06-04 17:35:32 -Generating unique operation named: addUsingGET_10
2019-06-04 17:35:32 -Generating unique operation named: editUsingGET_11
2019-06-04 17:35:32 -Generating unique operation named: listUsingGET_13
2019-06-04 17:35:32 -Generating unique operation named: removeUsingPOST_19
2019-06-04 17:35:32 -Generating unique operation named: removeUsingPOST_20
2019-06-04 17:35:32 -Trying to infer dataType org.springframework.web.multipart.MultipartFile[]
2019-06-04 17:35:32 -Generating unique operation named: saveUsingPOST_9
2019-06-04 17:35:32 -Trying to infer dataType org.springframework.web.multipart.MultipartFile[]
2019-06-04 17:35:32 -Generating unique operation named: updateUsingGET_7
2019-06-04 17:35:32 -Trying to infer dataType org.springframework.web.multipart.MultipartFile[]
2019-06-04 17:35:32 -Generating unique operation named: updateUsingHEAD_7
2019-06-04 17:35:32 -Trying to infer dataType org.springframework.web.multipart.MultipartFile[]
2019-06-04 17:35:32 -Generating unique operation named: updateUsingPOST_10
2019-06-04 17:35:32 -Trying to infer dataType org.springframework.web.multipart.MultipartFile[]
2019-06-04 17:35:32 -Generating unique operation named: updateUsingPUT_7
2019-06-04 17:35:32 -Trying to infer dataType org.springframework.web.multipart.MultipartFile[]
2019-06-04 17:35:32 -Generating unique operation named: updateUsingPATCH_7
2019-06-04 17:35:32 -Trying to infer dataType org.springframework.web.multipart.MultipartFile[]
2019-06-04 17:35:32 -Generating unique operation named: updateUsingDELETE_7
2019-06-04 17:35:32 -Trying to infer dataType org.springframework.web.multipart.MultipartFile[]
2019-06-04 17:35:32 -Generating unique operation named: updateUsingOPTIONS_7
2019-06-04 17:35:32 -Trying to infer dataType org.springframework.web.multipart.MultipartFile[]
2019-06-04 17:35:32 -Generating unique operation named: updateUsingTRACE_7
2019-06-04 17:35:32 -Generating unique operation named: addUsingGET_11
2019-06-04 17:35:32 -Generating unique operation named: batchRemoveUsingPOST_3
2019-06-04 17:35:32 -Generating unique operation named: editUsingGET_12
2019-06-04 17:35:32 -Generating unique operation named: listUsingGET_14
2019-06-04 17:35:32 -Generating unique operation named: saveUsingPOST_10
2019-06-04 17:35:32 -Generating unique operation named: saveUsingPOST_11
2019-06-04 17:35:32 -Generating unique operation named: updateUsingPOST_11
2019-06-04 17:35:32 -Generating unique operation named: addUsingGET_12
2019-06-04 17:35:32 -Generating unique operation named: editUsingGET_13
2019-06-04 17:35:32 -Trying to infer dataType java.util.List<com.bootdo.xjbg.domain.OrderItemDO>
2019-06-04 17:35:32 -Generating unique operation named: listUsingGET_15
2019-06-04 17:35:32 -Generating unique operation named: removeUsingPOST_21
2019-06-04 17:35:32 -Generating unique operation named: removeUsingPOST_22
2019-06-04 17:35:32 -Generating unique operation named: saveUsingPOST_12
2019-06-04 17:35:32 -Generating unique operation named: updateUsingGET_8
2019-06-04 17:35:32 -Generating unique operation named: updateUsingHEAD_8
2019-06-04 17:35:32 -Generating unique operation named: updateUsingPOST_12
2019-06-04 17:35:32 -Generating unique operation named: updateUsingPUT_8
2019-06-04 17:35:32 -Generating unique operation named: updateUsingPATCH_8
2019-06-04 17:35:32 -Generating unique operation named: updateUsingDELETE_8
2019-06-04 17:35:32 -Generating unique operation named: updateUsingOPTIONS_8
2019-06-04 17:35:32 -Generating unique operation named: updateUsingTRACE_8
2019-06-04 17:35:32 -Generating unique operation named: addUsingGET_13
2019-06-04 17:35:32 -Generating unique operation named: editUsingGET_14
2019-06-04 17:35:32 -Generating unique operation named: listUsingGET_16
2019-06-04 17:35:32 -Generating unique operation named: removeUsingPOST_23
2019-06-04 17:35:32 -Generating unique operation named: removeUsingPOST_24
2019-06-04 17:35:32 -Generating unique operation named: updateUsingGET_9
2019-06-04 17:35:32 -Generating unique operation named: updateUsingHEAD_9
2019-06-04 17:35:32 -Generating unique operation named: updateUsingPOST_13
2019-06-04 17:35:32 -Generating unique operation named: updateUsingPUT_9
2019-06-04 17:35:32 -Generating unique operation named: updateUsingPATCH_9
2019-06-04 17:35:32 -Generating unique operation named: updateUsingDELETE_9
2019-06-04 17:35:32 -Generating unique operation named: updateUsingOPTIONS_9
2019-06-04 17:35:32 -Generating unique operation named: updateUsingTRACE_9
2019-06-04 17:35:32 -Generating unique operation named: listUsingGET_17
2019-06-04 17:35:32 -Generating unique operation named: listUsingHEAD_1
2019-06-04 17:35:32 -Generating unique operation named: listUsingPOST_1
2019-06-04 17:35:32 -Generating unique operation named: listUsingPUT_1
2019-06-04 17:35:32 -Generating unique operation named: listUsingPATCH_1
2019-06-04 17:35:32 -Generating unique operation named: listUsingDELETE_1
2019-06-04 17:35:32 -Generating unique operation named: listUsingOPTIONS_1
2019-06-04 17:35:32 -Generating unique operation named: listUsingTRACE_1
2019-06-04 17:35:32 -Generating unique operation named: listUsingGET_18
2019-06-04 17:35:32 -Generating unique operation named: addUsingGET_14
2019-06-04 17:35:32 -Generating unique operation named: batchRemoveUsingPOST_4
2019-06-04 17:35:32 -Generating unique operation named: editUsingGET_15
2019-06-04 17:35:32 -Generating unique operation named: listUsingGET_19
2019-06-04 17:35:32 -Generating unique operation named: removeUsingPOST_25
2019-06-04 17:35:32 -Generating unique operation named: saveUsingPOST_13
2019-06-04 17:35:32 -Generating unique operation named: treeUsingGET_3
2019-06-04 17:35:32 -Generating unique operation named: treeViewUsingGET_1
2019-06-04 17:35:32 -Generating unique operation named: updateUsingPOST_14
2019-06-04 17:35:32 -Generating unique operation named: addUsingGET_15
2019-06-04 17:35:32 -Generating unique operation named: editUsingGET_16
2019-06-04 17:35:32 -Generating unique operation named: listUsingGET_20
2019-06-04 17:35:32 -Generating unique operation named: removeUsingPOST_26
2019-06-04 17:35:32 -Generating unique operation named: removeUsingPOST_27
2019-06-04 17:35:32 -Generating unique operation named: saveUsingPOST_14
2019-06-04 17:35:32 -Generating unique operation named: updateUsingGET_10
2019-06-04 17:35:32 -Generating unique operation named: updateUsingHEAD_10
2019-06-04 17:35:32 -Generating unique operation named: updateUsingPOST_15
2019-06-04 17:35:32 -Generating unique operation named: updateUsingPUT_10
2019-06-04 17:35:32 -Generating unique operation named: updateUsingPATCH_10
2019-06-04 17:35:32 -Generating unique operation named: updateUsingDELETE_10
2019-06-04 17:35:32 -Generating unique operation named: updateUsingOPTIONS_10
2019-06-04 17:35:32 -Generating unique operation named: updateUsingTRACE_10
2019-06-04 17:35:32 -Starting Quartz Scheduler now
2019-06-04 17:35:32 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-06-04 17:35:32 -Starting...
2019-06-04 17:35:32 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-06-04 17:35:32 -Started.
2019-06-04 17:35:32 -Starting ProtocolHandler ["http-nio-8888"]
2019-06-04 17:35:32 -Using a shared selector for servlet write/read
2019-06-04 17:35:32 -Tomcat started on port(s): 8888 (http) with context path ''
2019-06-04 17:35:32 -Started BootdoApplication in 4.711 seconds (JVM running for 137.372)
2019-06-04 17:35:32 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-06-04 17:35:32 -==> Parameters: 
2019-06-04 17:35:32 -<==      Total: 1
2019-06-04 17:35:32 -Condition evaluation unchanged
2019-06-04 17:35:39 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-06-04 17:35:39 -FrameworkServlet 'dispatcherServlet': initialization started
2019-06-04 17:35:39 -FrameworkServlet 'dispatcherServlet': initialization completed in 10 ms
2019-06-04 17:35:39 -Enabling session validation scheduler...
2019-06-04 17:35:39 -请求地址 : http://localhost:8888/login;JSESSIONID=68b26cf8-e8cd-4ce8-93bb-2035e36b2fb9
2019-06-04 17:35:39 -HTTP METHOD : GET
2019-06-04 17:35:39 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-06-04 17:35:39 -参数 : [{}]
2019-06-04 17:35:39 -耗时 : 1
2019-06-04 17:35:39 -返回值 : login
2019-06-04 17:35:40 -请求地址 : http://localhost:8888/login
2019-06-04 17:35:40 -HTTP METHOD : POST
2019-06-04 17:35:40 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-06-04 17:35:40 -参数 : [admin, 111111]
2019-06-04 17:35:40 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-06-04 17:35:40 -==> Parameters: admin(String)
2019-06-04 17:35:40 -<==      Total: 1
2019-06-04 17:35:40 -耗时 : 7
2019-06-04 17:35:40 -返回值 : {msg=操作成功, code=0}
2019-06-04 17:35:40 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-06-04 17:35:40 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-04 17:35:40 -==> Parameters: 1(Long), admin(String), 登录(String), 7(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-06-04 17:35:40.911(Timestamp)
2019-06-04 17:35:40 -请求地址 : http://localhost:8888/index
2019-06-04 17:35:40 -HTTP METHOD : GET
2019-06-04 17:35:40 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-06-04 17:35:40 -参数 : [{}]
2019-06-04 17:35:40 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-06-04 17:35:40 -==> Parameters: 1(Long)
2019-06-04 17:35:40 -<==      Total: 34
2019-06-04 17:35:40 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-06-04 17:35:40 -==> Parameters: 144(Long)
2019-06-04 17:35:40 -<==      Total: 1
2019-06-04 17:35:40 -耗时 : 19
2019-06-04 17:35:40 -返回值 : index_v1
2019-06-04 17:35:40 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-04 17:35:40 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 19(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-hotel","url":""},"checked":false,"children":[{"attributes":{"icon":"","url":"/xjbg/room/roomMng"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"105","text":"开房"},{"attributes":{"icon":"fa fa-bed","url":"/xjbg/room"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"106","parentId":"105","text":"房间管理"},{"attributes":{"icon":"","url":"/xjbg/product"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"105","text":"商品管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"欣吉宾馆"},{"attributes":{"icon":"fa fa-commenting","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user","url":"/weixin/weixinUser"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"109","text":"用户管理"}],"hasChildren":true,"hasParent":false,"id":"109","parentId":"0","text":"微信管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","text":"基础管理"},{"attributes":{"icon":"fa fa-desktop"},"checked":false,"children":[{"attributes":{"icon":"fa fa-user","url":"sys/user/"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"6","parentId":"3","text":"用户管理"},{"attributes":{"icon":"fa fa-paw","url":"sys/role"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"7","parentId":"3","text":"角色管理"},{"attributes":{"icon":"fa fa-th-list","url":"sys/menu/"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"3","text":"系统菜单"},{"attributes":{"icon":"fa fa-users","url":"/system/sysDept"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"73","parentId":"3","text":"部门管理"}],"hasChildren":true,"hasParent":false,"id":"3","parentId":"0","text":"系统管理"},{"attributes":{"icon":"fa fa-gear","url":""},"checked":false,"children":[{"attributes":{"icon":"","url":"/swagger-ui.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"104","parentId":"77","text":"swagger"},{"attributes":{"icon":"fa fa-code","url":"common/generator"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"48","parentId":"77","text":"代码生成"},{"attributes":{"icon":"fa fa-hourglass-1","url":"common/job"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"72","parentId":"77","text":"计划任务"}],"hasChildren":true,"hasParent":false,"id":"77","parentId":"0","text":"系统工具"},{"attributes":{"icon":"fa fa-video-camera","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user","url":"sys/online"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"92","parentId":"91","text":"在线用户"},{"attributes":{"icon":"fa fa-warning","url":"common/log"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"27","parentId":"91","text":"系统日志"},{"attributes":{"icon":"fa fa-caret-square-o-right","url":"/druid/index.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"57","parentId":"91","text":"运行监控"}],"hasChildren":true,"hasParent":false,"id":"91","parentId":"0","text":"系统监控"},{"attributes":{"icon":"fa fa-laptop","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-pencil-square","url":"oa/notify"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"85","parentId":"84","text":"通知公告"},{"attributes":{"icon":"fa fa-envelope-square","url":"oa/notify/selfNotify"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"90","parentId":"84","text":"我的通知"}],"hasChildren":true,"hasParent":false,"id":"84","parentId":"0","text":"办公管理"},{"attributes":{"icon":"fa fa-print","url":""},"checked":false,"children":[{"attributes":{"icon":"","url":"activiti/task/todo"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"101","parentId":"93","text":"待办任务"},{"attributes":{"icon":"fa fa-sort-amount-asc","url":"activiti/model"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"94","parentId":"93","text":"模型管理"},{"attributes":{"icon":"fa fa-flag","url":"activiti/process"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"96","parentId":"93","text":"流程管理"}],"hasChildren":true,"hasParent":false,"id":"93","parentId":"0","text":"工作流程"},{"attributes":{"icon":"fa fa-rss","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-edit","url":"/blog/bContent/add"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"68","parentId":"49","text":"发布文章"},{"(String), 127.0.0.1(String), 2019-06-04 17:35:40.951(Timestamp)
2019-06-04 17:35:40 -<==    Updates: 1
2019-06-04 17:35:41 -<==    Updates: 1
2019-06-04 17:35:41 -请求地址 : http://localhost:8888/main
2019-06-04 17:35:41 -HTTP METHOD : GET
2019-06-04 17:35:41 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-04 17:35:41 -参数 : []
2019-06-04 17:35:41 -耗时 : 0
2019-06-04 17:35:41 -返回值 : main
2019-06-04 17:35:41 -请求地址 : http://localhost:8888/oa/notify/message
2019-06-04 17:35:41 -HTTP METHOD : GET
2019-06-04 17:35:41 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-06-04 17:35:41 -参数 : []
2019-06-04 17:35:41 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-06-04 17:35:41 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-06-04 17:35:41 -<==      Total: 0
2019-06-04 17:35:41 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-06-04 17:35:41 -==> Parameters: 1(Long), 0(String)
2019-06-04 17:35:41 -<==      Total: 1
2019-06-04 17:35:41 -耗时 : 11
2019-06-04 17:35:41 -返回值 : com.bootdo.common.utils.PageUtils@6bbdd01e
2019-06-04 17:35:41 -请求地址 : http://localhost:8888/main
2019-06-04 17:35:41 -HTTP METHOD : GET
2019-06-04 17:35:41 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-04 17:35:41 -参数 : []
2019-06-04 17:35:41 -耗时 : 1
2019-06-04 17:35:41 -返回值 : main
2019-06-04 17:35:42 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-06-04 17:35:42 -==> Parameters: 1(Long)
2019-06-04 17:35:42 -<==      Total: 58
2019-06-04 17:35:42 -请求地址 : http://localhost:8888/xjbg/room/roomMng
2019-06-04 17:35:42 -HTTP METHOD : GET
2019-06-04 17:35:42 -CLASS_METHOD : com.bootdo.xjbg.controller.RoomController.roomMng
2019-06-04 17:35:42 -参数 : [{}]
2019-06-04 17:35:42 -==>  Preparing: select `id`,`room_no`,`room_type`,`floor`,`room_state`,`price`,`create_time`,`update_time`,`create_user`,`update_user` from xjbg_room 
2019-06-04 17:35:42 -==> Parameters: 
2019-06-04 17:35:42 -<==      Total: 8
2019-06-04 17:35:42 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 17:35:42 -==> Parameters: room_type(String)
2019-06-04 17:35:42 -<==      Total: 7
2019-06-04 17:35:42 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 17:35:42 -==> Parameters: floor(String)
2019-06-04 17:35:42 -<==      Total: 5
2019-06-04 17:35:42 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 17:35:42 -==> Parameters: room_state(String)
2019-06-04 17:35:42 -<==      Total: 2
2019-06-04 17:35:42 -==>  Preparing: select * from sys_user 
2019-06-04 17:35:42 -==> Parameters: 
2019-06-04 17:35:42 -<==      Total: 11
2019-06-04 17:35:42 -耗时 : 23
2019-06-04 17:35:42 -返回值 : xjbg/room/roomMng
2019-06-04 17:35:43 -请求地址 : http://localhost:8888/xjbg/room/operation/1
2019-06-04 17:35:43 -HTTP METHOD : GET
2019-06-04 17:35:43 -CLASS_METHOD : com.bootdo.xjbg.controller.RoomController.operation
2019-06-04 17:35:43 -参数 : [1, {}]
2019-06-04 17:35:43 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 17:35:43 -==> Parameters: room_type(String)
2019-06-04 17:35:43 -<==      Total: 7
2019-06-04 17:35:43 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 17:35:43 -==> Parameters: floor(String)
2019-06-04 17:35:43 -<==      Total: 5
2019-06-04 17:35:43 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 17:35:43 -==> Parameters: room_state(String)
2019-06-04 17:35:43 -<==      Total: 2
2019-06-04 17:35:43 -==>  Preparing: select * from sys_user 
2019-06-04 17:35:43 -==> Parameters: 
2019-06-04 17:35:43 -<==      Total: 11
2019-06-04 17:35:43 -==>  Preparing: select `id`,`product_name`,`purchase_price`,`selling_price`,`product_pic`,`create_time`,`create_user`,`update_time`,`update_user` from xjbg_product order by id desc 
2019-06-04 17:35:43 -==> Parameters: 
2019-06-04 17:35:43 -<==      Total: 5
2019-06-04 17:35:43 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 17:35:43 -==> Parameters: order_type(String)
2019-06-04 17:35:43 -<==      Total: 3
2019-06-04 17:35:43 -==>  Preparing: select `id`,`room_no`,`room_type`,`floor`,`room_state`,`price`,`create_time`,`update_time`,`create_user`,`update_user` from xjbg_room where id = ? 
2019-06-04 17:35:43 -==> Parameters: 1(Integer)
2019-06-04 17:35:43 -<==      Total: 1
2019-06-04 17:35:43 -耗时 : 16
2019-06-04 17:35:43 -返回值 : xjbg/room/operation
2019-06-04 17:35:44 -No primary or default constructor found for interface java.util.List
java.lang.IllegalStateException: No primary or default constructor found for interface java.util.List
	at org.springframework.web.method.annotation.ModelAttributeMethodProcessor.createAttribute(ModelAttributeMethodProcessor.java:212)
	at org.springframework.web.servlet.mvc.method.annotation.ServletModelAttributeMethodProcessor.createAttribute(ServletModelAttributeMethodProcessor.java:84)
	at org.springframework.web.method.annotation.ModelAttributeMethodProcessor.resolveArgument(ModelAttributeMethodProcessor.java:132)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:124)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:161)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:131)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.NoSuchMethodException: java.util.List.<init>()
	at java.lang.Class.getConstructor0(Class.java:3082)
	at java.lang.Class.getDeclaredConstructor(Class.java:2178)
	at org.springframework.web.method.annotation.ModelAttributeMethodProcessor.createAttribute(ModelAttributeMethodProcessor.java:209)
	... 70 common frames omitted
2019-06-04 17:35:44 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-04 17:35:44 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8888/xjbg/room/kaifan(String), java.lang.IllegalStateException: No primary or default constructor found for interface java.util.List(String), null, 2019-06-04 17:35:44.717(Timestamp)
2019-06-04 17:35:44 -Resolved exception caused by Handler execution: java.lang.IllegalStateException: No primary or default constructor found for interface java.util.List
2019-06-04 17:35:44 -请求地址 : http://localhost:8888/xjbg/room/operation/1
2019-06-04 17:35:44 -HTTP METHOD : GET
2019-06-04 17:35:44 -CLASS_METHOD : com.bootdo.xjbg.controller.RoomController.operation
2019-06-04 17:35:44 -参数 : [1, {}]
2019-06-04 17:35:44 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 17:35:44 -==> Parameters: room_type(String)
2019-06-04 17:35:44 -<==      Total: 7
2019-06-04 17:35:44 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 17:35:44 -==> Parameters: floor(String)
2019-06-04 17:35:44 -<==      Total: 5
2019-06-04 17:35:44 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 17:35:44 -==> Parameters: room_state(String)
2019-06-04 17:35:44 -<==      Total: 2
2019-06-04 17:35:44 -==>  Preparing: select * from sys_user 
2019-06-04 17:35:44 -==> Parameters: 
2019-06-04 17:35:44 -<==      Total: 11
2019-06-04 17:35:44 -==>  Preparing: select `id`,`product_name`,`purchase_price`,`selling_price`,`product_pic`,`create_time`,`create_user`,`update_time`,`update_user` from xjbg_product order by id desc 
2019-06-04 17:35:44 -==> Parameters: 
2019-06-04 17:35:44 -<==      Total: 5
2019-06-04 17:35:44 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 17:35:44 -==> Parameters: order_type(String)
2019-06-04 17:35:44 -<==      Total: 3
2019-06-04 17:35:44 -==>  Preparing: select `id`,`room_no`,`room_type`,`floor`,`room_state`,`price`,`create_time`,`update_time`,`create_user`,`update_user` from xjbg_room where id = ? 
2019-06-04 17:35:44 -==> Parameters: 1(Integer)
2019-06-04 17:35:44 -<==      Total: 1
2019-06-04 17:35:44 -耗时 : 14
2019-06-04 17:35:44 -返回值 : xjbg/room/operation
2019-06-04 17:35:44 -<==    Updates: 1
2019-06-04 17:36:31 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 1 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 9, active threads = 0, queued tasks = 0, completed tasks = 9], outboundChannelpool size = 1, active threads = 0, queued tasks = 0, completed tasks = 1], sockJsScheduler[pool size = 8, active threads = 1, queued tasks = 3, completed tasks = 11]
2019-06-04 17:39:14 -Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@78587c4c: startup date [Tue Jun 04 17:35:28 CST 2019]; root of context hierarchy
2019-06-04 17:39:14 -Stopping beans in phase 2147483647
2019-06-04 17:39:14 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED paused.
2019-06-04 17:39:14 -Stopping...
2019-06-04 17:39:14 -BrokerAvailabilityEvent[available=false, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-06-04 17:39:14 -Stopped.
2019-06-04 17:39:14 -Unregistering JMX-exposed beans on shutdown
2019-06-04 17:39:14 -Unregistering JMX-exposed beans
2019-06-04 17:39:14 -Shutting down ExecutorService 'brokerChannelExecutor'
2019-06-04 17:39:14 -Shutting down ExecutorService 'messageBrokerTaskScheduler'
2019-06-04 17:39:14 -Shutting down ExecutorService 'clientOutboundChannelExecutor'
2019-06-04 17:39:14 -Shutting down ExecutorService 'clientInboundChannelExecutor'
2019-06-04 17:39:14 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED shutting down.
2019-06-04 17:39:14 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED paused.
2019-06-04 17:39:14 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED shutdown complete.
2019-06-04 17:39:14 -Shutting down Quartz Scheduler
2019-06-04 17:39:14 -{dataSource-2} closed
2019-06-04 17:39:14 -Disabled session validation scheduler.
2019-06-04 17:39:15 -Starting BootdoApplication on LAPTOP-ELP5M68R with PID 8564 (D:\workspace\bootdo\bootdo\target\classes started by Lenovo in D:\workspace\bootdo\bootdo)
2019-06-04 17:39:15 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-06-04 17:39:15 -The following profiles are active: dev
2019-06-04 17:39:15 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@553dd641: startup date [Tue Jun 04 17:39:15 CST 2019]; root of context hierarchy
2019-06-04 17:39:16 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-06-04 17:39:16 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$32e5fd9d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-04 17:39:16 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$253f2c44] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-04 17:39:16 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-04 17:39:16 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-04 17:39:16 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-04 17:39:16 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache.2' does not yet exist.  Creating now.
2019-06-04 17:39:16 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache.2]
2019-06-04 17:39:16 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-04 17:39:16 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-04 17:39:16 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-04 17:39:16 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-04 17:39:17 -Tomcat initialized with port(s): 8888 (http)
2019-06-04 17:39:17 -Initializing ProtocolHandler ["http-nio-8888"]
2019-06-04 17:39:17 -Starting service [Tomcat]
2019-06-04 17:39:17 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-06-04 17:39:17 -Initializing Spring embedded WebApplicationContext
2019-06-04 17:39:17 -Root WebApplicationContext: initialization completed in 1811 ms
2019-06-04 17:39:17 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-06-04 17:39:17 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-06-04 17:39:17 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-06-04 17:39:17 -Mapping filter: 'requestContextFilter' to: [/*]
2019-06-04 17:39:17 -Filter xssFilter was not registered (disabled)
2019-06-04 17:39:17 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-06-04 17:39:17 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-06-04 17:39:17 -Servlet statViewServlet mapped to [/druid/*]
2019-06-04 17:39:17 -Servlet dispatcherServlet mapped to [/]
2019-06-04 17:39:17 -{dataSource-3} inited
2019-06-04 17:39:17 -ProcessEngine default created
2019-06-04 17:39:18 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@553dd641: startup date [Tue Jun 04 17:39:15 CST 2019]; root of context hierarchy
2019-06-04 17:39:18 -Using default implementation for ThreadExecutor
2019-06-04 17:39:18 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-06-04 17:39:18 -Quartz Scheduler v.2.2.1 created.
2019-06-04 17:39:18 -RAMJobStore initialized.
2019-06-04 17:39:18 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-06-04 17:39:18 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-06-04 17:39:18 -Quartz scheduler version: 2.2.1
2019-06-04 17:39:18 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@681758d6
2019-06-04 17:39:19 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-06-04 17:39:19 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-06-04 17:39:20 -Mapped "{[/activiti/model/{id}],methods=[DELETE]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.ModelController.remove(java.lang.String)
2019-06-04 17:39:20 -Mapped "{[/activiti/model/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.activiti.controller.ModelController.list(int,int)
2019-06-04 17:39:20 -Mapped "{[/activiti/model/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.ModelController.batchRemove(java.lang.String[])
2019-06-04 17:39:20 -Mapped "{[/activiti/model],methods=[GET]}" onto org.springframework.web.servlet.ModelAndView com.bootdo.activiti.controller.ModelController.model()
2019-06-04 17:39:20 -Mapped "{[/activiti/model/{modelId}/json],methods=[GET]}" onto public com.fasterxml.jackson.databind.node.ObjectNode com.bootdo.activiti.controller.ModelController.getEditorJson(java.lang.String)
2019-06-04 17:39:20 -Mapped "{[/activiti/model/edit/{id}],methods=[GET]}" onto public void com.bootdo.activiti.controller.ModelController.edit(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-06-04 17:39:20 -Mapped "{[/activiti/model/deploy/{id}],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.ModelController.deploy(java.lang.String) throws java.lang.Exception
2019-06-04 17:39:20 -Mapped "{[/activiti/model/add]}" onto public void com.bootdo.activiti.controller.ModelController.newModel(javax.servlet.http.HttpServletResponse) throws java.io.UnsupportedEncodingException
2019-06-04 17:39:20 -Mapped "{[/activiti/editor/stencilset],methods=[GET],produces=[application/json;charset=utf-8]}" onto public java.lang.String com.bootdo.activiti.controller.ModelController.getStencilset()
2019-06-04 17:39:20 -Mapped "{[/activiti/model/{modelId}/save],methods=[PUT]}" onto public void com.bootdo.activiti.controller.ModelController.saveModel(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2019-06-04 17:39:20 -Mapped "{[/activiti/model/export/{id}],methods=[GET]}" onto public void com.bootdo.activiti.controller.ModelController.exportToXml(java.lang.String,javax.servlet.http.HttpServletResponse)
2019-06-04 17:39:20 -Mapped "{[/activiti/process/add],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.activiti.controller.ProcessController.add()
2019-06-04 17:39:20 -Mapped "{[/activiti/process/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.ProcessController.remove(java.lang.String)
2019-06-04 17:39:20 -Mapped "{[/activiti/process/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.activiti.controller.ProcessController.list(int,int)
2019-06-04 17:39:20 -Mapped "{[/activiti/process/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.ProcessController.batchRemove(java.lang.String[])
2019-06-04 17:39:20 -Mapped "{[/activiti/process],methods=[GET]}" onto org.springframework.web.servlet.ModelAndView com.bootdo.activiti.controller.ProcessController.process()
2019-06-04 17:39:20 -Mapped "{[/activiti/process/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.ProcessController.deploy(java.lang.String,java.lang.String,org.springframework.web.multipart.MultipartFile)
2019-06-04 17:39:20 -Mapped "{[/activiti/process/resource/read/{xml}/{id}]}" onto public void com.bootdo.activiti.controller.ProcessController.resourceRead(java.lang.String,java.lang.String,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-06-04 17:39:20 -Mapped "{[/activiti/process/convertToModel/{procDefId}]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.ProcessController.convertToModel(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes) throws java.io.UnsupportedEncodingException,javax.xml.stream.XMLStreamException
2019-06-04 17:39:20 -Mapped "{[/act/salary/form],methods=[GET]}" onto java.lang.String com.bootdo.activiti.controller.SalaryController.add()
2019-06-04 17:39:20 -Mapped "{[/act/salary/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.SalaryController.remove(java.lang.String)
2019-06-04 17:39:20 -Mapped "{[/act/salary/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.SalaryController.remove(java.lang.String[])
2019-06-04 17:39:20 -Mapped "{[/act/salary/update]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.SalaryController.update(com.bootdo.activiti.domain.SalaryDO)
2019-06-04 17:39:20 -Mapped "{[/act/salary/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.activiti.controller.SalaryController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-04 17:39:20 -Mapped "{[/act/salary/form/{taskId}],methods=[GET]}" onto java.lang.String com.bootdo.activiti.controller.SalaryController.edit(java.lang.String,org.springframework.ui.Model)
2019-06-04 17:39:20 -Mapped "{[/act/salary/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.SalaryController.saveOrUpdate(com.bootdo.activiti.domain.SalaryDO)
2019-06-04 17:39:20 -Mapped "{[/act/salary],methods=[GET]}" onto java.lang.String com.bootdo.activiti.controller.SalaryController.Salary()
2019-06-04 17:39:20 -Mapped "{[/activiti/task/form/{procDefId}/{taskId}],methods=[GET]}" onto public void com.bootdo.activiti.controller.TaskController.form(java.lang.String,java.lang.String,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-06-04 17:39:20 -Mapped "{[/activiti/task/gotoList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.activiti.controller.TaskController.list(int,int)
2019-06-04 17:39:20 -Mapped "{[/activiti/task/form/{procDefId}],methods=[GET]}" onto public void com.bootdo.activiti.controller.TaskController.startForm(java.lang.String,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-06-04 17:39:20 -Mapped "{[/activiti/task/todo],methods=[GET]}" onto org.springframework.web.servlet.ModelAndView com.bootdo.activiti.controller.TaskController.todo()
2019-06-04 17:39:20 -Mapped "{[/activiti/task/goto],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.activiti.controller.TaskController.gotoTask()
2019-06-04 17:39:20 -Mapped "{[/activiti/task/todoList],methods=[GET]}" onto java.util.List<com.bootdo.activiti.vo.TaskVO> com.bootdo.activiti.controller.TaskController.todoList()
2019-06-04 17:39:20 -Mapped "{[/activiti/task/trace/photo/{procDefId}/{execId}]}" onto public void com.bootdo.activiti.controller.TaskController.tracePhoto(java.lang.String,java.lang.String,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-06-04 17:39:20 -Mapped "{[/blog/open/post/{cid}],methods=[GET]}" onto java.lang.String com.bootdo.blog.controller.BlogController.post(java.lang.Long,org.springframework.ui.Model)
2019-06-04 17:39:20 -Mapped "{[/blog],methods=[GET]}" onto java.lang.String com.bootdo.blog.controller.BlogController.blog()
2019-06-04 17:39:20 -Mapped "{[/blog/open/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.blog.controller.BlogController.opentList(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-04 17:39:20 -Mapped "{[/blog/open/page/{categories}],methods=[GET]}" onto java.lang.String com.bootdo.blog.controller.BlogController.about(java.lang.String,org.springframework.ui.Model)
2019-06-04 17:39:20 -Mapped "{[/blog/bContent/add],methods=[GET]}" onto java.lang.String com.bootdo.blog.controller.ContentController.add()
2019-06-04 17:39:20 -Mapped "{[/blog/bContent/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.blog.controller.ContentController.remove(java.lang.Long)
2019-06-04 17:39:20 -Mapped "{[/blog/bContent/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.blog.controller.ContentController.remove(java.lang.Long[])
2019-06-04 17:39:20 -Mapped "{[/blog/bContent/update]}" onto public com.bootdo.common.utils.R com.bootdo.blog.controller.ContentController.update(com.bootdo.blog.domain.ContentDO)
2019-06-04 17:39:20 -Mapped "{[/blog/bContent/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.blog.controller.ContentController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-04 17:39:20 -Mapped "{[/blog/bContent/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.blog.controller.ContentController.save(com.bootdo.blog.domain.ContentDO)
2019-06-04 17:39:20 -Mapped "{[/blog/bContent/edit/{cid}],methods=[GET]}" onto java.lang.String com.bootdo.blog.controller.ContentController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-04 17:39:20 -Mapped "{[/blog/bContent],methods=[GET]}" onto java.lang.String com.bootdo.blog.controller.ContentController.bContent()
2019-06-04 17:39:20 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-06-04 17:39:20 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-06-04 17:39:20 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-06-04 17:39:20 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-06-04 17:39:20 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-04 17:39:20 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-06-04 17:39:20 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-06-04 17:39:20 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-04 17:39:20 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-06-04 17:39:20 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-06-04 17:39:20 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-06-04 17:39:20 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-06-04 17:39:20 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-06-04 17:39:20 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-06-04 17:39:20 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-06-04 17:39:20 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-04 17:39:20 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-06-04 17:39:20 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-06-04 17:39:20 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-04 17:39:20 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-06-04 17:39:20 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-06-04 17:39:20 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-04 17:39:20 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-06-04 17:39:20 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-06-04 17:39:20 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-06-04 17:39:20 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-06-04 17:39:20 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-06-04 17:39:20 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-06-04 17:39:20 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-06-04 17:39:20 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-06-04 17:39:20 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-06-04 17:39:20 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-04 17:39:20 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-06-04 17:39:20 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-06-04 17:39:20 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-04 17:39:20 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-06-04 17:39:20 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-06-04 17:39:20 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-06-04 17:39:20 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-06-04 17:39:20 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-04 17:39:20 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-06-04 17:39:20 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-06-04 17:39:20 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-06-04 17:39:20 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-06-04 17:39:20 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-06-04 17:39:20 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-06-04 17:39:20 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-06-04 17:39:20 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-06-04 17:39:20 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-04 17:39:20 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-06-04 17:39:20 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-06-04 17:39:20 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-04 17:39:20 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-06-04 17:39:20 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-06-04 17:39:20 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-04 17:39:20 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-06-04 17:39:20 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-06-04 17:39:20 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-06-04 17:39:20 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-06-04 17:39:20 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-06-04 17:39:20 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-06-04 17:39:20 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-06-04 17:39:20 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-04 17:39:20 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-06-04 17:39:20 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-06-04 17:39:20 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-06-04 17:39:20 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-06-04 17:39:20 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-06-04 17:39:20 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-06-04 17:39:20 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String)
2019-06-04 17:39:20 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-06-04 17:39:20 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-06-04 17:39:20 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-06-04 17:39:20 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-06-04 17:39:20 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-04 17:39:20 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-06-04 17:39:20 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-06-04 17:39:20 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-06-04 17:39:20 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-06-04 17:39:20 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-06-04 17:39:20 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-06-04 17:39:20 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-06-04 17:39:20 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-06-04 17:39:20 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-06-04 17:39:20 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-06-04 17:39:20 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-06-04 17:39:20 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-06-04 17:39:20 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-04 17:39:20 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-06-04 17:39:20 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-06-04 17:39:20 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-06-04 17:39:20 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-06-04 17:39:20 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-04 17:39:20 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-06-04 17:39:20 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-06-04 17:39:20 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-06-04 17:39:20 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-04 17:39:20 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-06-04 17:39:20 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-06-04 17:39:20 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-06-04 17:39:20 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-06-04 17:39:20 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-06-04 17:39:20 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-06-04 17:39:20 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-06-04 17:39:20 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-06-04 17:39:20 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-06-04 17:39:20 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-06-04 17:39:20 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-06-04 17:39:20 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-06-04 17:39:20 -Mapped "{[/wxServer],methods=[GET]}" onto public void org.weixin4j.spring.web.WeixinJieruController.get(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-06-04 17:39:20 -Mapped "{[/wxServer],methods=[POST]}" onto public void org.weixin4j.spring.web.WeixinJieruController.post(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-06-04 17:39:20 -Mapped "{[/weixin/weixinUser/add],methods=[GET]}" onto java.lang.String com.bootdo.weixin.controller.WeixinUserController.add()
2019-06-04 17:39:20 -Mapped "{[/weixin/weixinUser/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.weixin.controller.WeixinUserController.remove(java.lang.Long)
2019-06-04 17:39:20 -Mapped "{[/weixin/weixinUser/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.weixin.controller.WeixinUserController.remove(java.lang.Long[])
2019-06-04 17:39:20 -Mapped "{[/weixin/weixinUser/update]}" onto public com.bootdo.common.utils.R com.bootdo.weixin.controller.WeixinUserController.update(com.bootdo.weixin.domain.WeixinUserDO)
2019-06-04 17:39:20 -Mapped "{[/weixin/weixinUser/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.weixin.controller.WeixinUserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-04 17:39:20 -Mapped "{[/weixin/weixinUser/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.weixin.controller.WeixinUserController.save(com.bootdo.weixin.domain.WeixinUserDO)
2019-06-04 17:39:20 -Mapped "{[/weixin/weixinUser/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.weixin.controller.WeixinUserController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-04 17:39:20 -Mapped "{[/weixin/weixinUser],methods=[GET]}" onto java.lang.String com.bootdo.weixin.controller.WeixinUserController.WeixinUser()
2019-06-04 17:39:20 -Mapped "{[/xjbg/order/add],methods=[GET]}" onto java.lang.String com.bootdo.xjbg.controller.OrderController.add()
2019-06-04 17:39:20 -Mapped "{[/xjbg/order/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.xjbg.controller.OrderController.remove(java.lang.Long)
2019-06-04 17:39:20 -Mapped "{[/xjbg/order/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.xjbg.controller.OrderController.remove(java.lang.Long[])
2019-06-04 17:39:20 -Mapped "{[/xjbg/order/update]}" onto public com.bootdo.common.utils.R com.bootdo.xjbg.controller.OrderController.update(com.bootdo.xjbg.domain.OrderDO)
2019-06-04 17:39:20 -Mapped "{[/xjbg/order/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.xjbg.controller.OrderController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-04 17:39:20 -Mapped "{[/xjbg/order/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.xjbg.controller.OrderController.save(com.bootdo.xjbg.domain.OrderDO)
2019-06-04 17:39:20 -Mapped "{[/xjbg/order/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.xjbg.controller.OrderController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-04 17:39:20 -Mapped "{[/xjbg/order],methods=[GET]}" onto java.lang.String com.bootdo.xjbg.controller.OrderController.Order()
2019-06-04 17:39:20 -Mapped "{[/xjbg/orderItem/add],methods=[GET]}" onto java.lang.String com.bootdo.xjbg.controller.OrderItemController.add()
2019-06-04 17:39:20 -Mapped "{[/xjbg/orderItem/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.xjbg.controller.OrderItemController.remove(java.lang.Long)
2019-06-04 17:39:20 -Mapped "{[/xjbg/orderItem/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.xjbg.controller.OrderItemController.remove(java.lang.Long[])
2019-06-04 17:39:20 -Mapped "{[/xjbg/orderItem/update]}" onto public com.bootdo.common.utils.R com.bootdo.xjbg.controller.OrderItemController.update(com.bootdo.xjbg.domain.OrderItemDO)
2019-06-04 17:39:20 -Mapped "{[/xjbg/orderItem/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.xjbg.controller.OrderItemController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-04 17:39:20 -Mapped "{[/xjbg/orderItem/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.xjbg.controller.OrderItemController.save(com.bootdo.xjbg.domain.OrderItemDO)
2019-06-04 17:39:20 -Mapped "{[/xjbg/orderItem/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.xjbg.controller.OrderItemController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-04 17:39:20 -Mapped "{[/xjbg/orderItem],methods=[GET]}" onto java.lang.String com.bootdo.xjbg.controller.OrderItemController.OrderItem()
2019-06-04 17:39:20 -Mapped "{[/xjbg/product/add],methods=[GET]}" onto java.lang.String com.bootdo.xjbg.controller.ProductController.add()
2019-06-04 17:39:20 -Mapped "{[/xjbg/product/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.xjbg.controller.ProductController.remove(java.lang.Long)
2019-06-04 17:39:20 -Mapped "{[/xjbg/product/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.xjbg.controller.ProductController.remove(java.lang.Long[])
2019-06-04 17:39:20 -Mapped "{[/xjbg/product/update]}" onto public com.bootdo.common.utils.R com.bootdo.xjbg.controller.ProductController.update(com.bootdo.xjbg.domain.ProductDO,org.springframework.web.multipart.MultipartFile[])
2019-06-04 17:39:20 -Mapped "{[/xjbg/product/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.xjbg.controller.ProductController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-04 17:39:20 -Mapped "{[/xjbg/product/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.xjbg.controller.ProductController.save(com.bootdo.xjbg.domain.ProductDO,org.springframework.web.multipart.MultipartFile[])
2019-06-04 17:39:20 -Mapped "{[/xjbg/product/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.xjbg.controller.ProductController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-04 17:39:20 -Mapped "{[/xjbg/product],methods=[GET]}" onto java.lang.String com.bootdo.xjbg.controller.ProductController.Product()
2019-06-04 17:39:20 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-06-04 17:39:20 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-06-04 17:39:20 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-06-04 17:39:20 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-06-04 17:39:20 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-06-04 17:39:20 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-06-04 17:39:20 -Initializing ExecutorService  'brokerChannelExecutor'
2019-06-04 17:39:21 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-06-04 17:39:21 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@553dd641: startup date [Tue Jun 04 17:39:15 CST 2019]; root of context hierarchy
2019-06-04 17:39:21 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-06-04 17:39:21 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-06-04 17:39:21 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-06-04 17:39:21 -Mapped URL path [/productPic/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-06-04 17:39:21 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-06-04 17:39:21 -[THYMELEAF][restartedMain] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-06-04 17:39:23 -LiveReload server is running on port 35729
2019-06-04 17:39:23 -Registering beans for JMX exposure on startup
2019-06-04 17:39:23 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-06-04 17:39:23 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-06-04 17:39:23 -Starting beans in phase 2147483647
2019-06-04 17:39:23 -Context refreshed
2019-06-04 17:39:23 -Found 1 custom documentation plugin(s)
2019-06-04 17:39:23 -Scanning for api listing references
2019-06-04 17:39:23 -Generating unique operation named: removeUsingPOST_1
2019-06-04 17:39:23 -Generating unique operation named: addUsingGET_1
2019-06-04 17:39:23 -Generating unique operation named: editUsingGET_1
2019-06-04 17:39:23 -Generating unique operation named: listUsingGET_1
2019-06-04 17:39:23 -Generating unique operation named: removeUsingPOST_2
2019-06-04 17:39:23 -Generating unique operation named: removeUsingPOST_3
2019-06-04 17:39:23 -Generating unique operation named: saveUsingPOST_1
2019-06-04 17:39:23 -Generating unique operation named: updateUsingGET_1
2019-06-04 17:39:23 -Generating unique operation named: updateUsingHEAD_1
2019-06-04 17:39:23 -Generating unique operation named: updateUsingPOST_1
2019-06-04 17:39:23 -Generating unique operation named: updateUsingPUT_1
2019-06-04 17:39:23 -Generating unique operation named: updateUsingPATCH_1
2019-06-04 17:39:23 -Generating unique operation named: updateUsingDELETE_1
2019-06-04 17:39:23 -Generating unique operation named: updateUsingOPTIONS_1
2019-06-04 17:39:23 -Generating unique operation named: updateUsingTRACE_1
2019-06-04 17:39:23 -Generating unique operation named: addUsingGET_2
2019-06-04 17:39:23 -Generating unique operation named: editUsingGET_2
2019-06-04 17:39:23 -Generating unique operation named: listUsingGET_2
2019-06-04 17:39:23 -Generating unique operation named: removeUsingPOST_4
2019-06-04 17:39:23 -Generating unique operation named: removeUsingPOST_5
2019-06-04 17:39:23 -Generating unique operation named: saveUsingPOST_2
2019-06-04 17:39:23 -Generating unique operation named: updateUsingGET_2
2019-06-04 17:39:23 -Generating unique operation named: updateUsingHEAD_2
2019-06-04 17:39:23 -Generating unique operation named: updateUsingPOST_2
2019-06-04 17:39:23 -Generating unique operation named: updateUsingPUT_2
2019-06-04 17:39:23 -Generating unique operation named: updateUsingPATCH_2
2019-06-04 17:39:23 -Generating unique operation named: updateUsingDELETE_2
2019-06-04 17:39:23 -Generating unique operation named: updateUsingOPTIONS_2
2019-06-04 17:39:23 -Generating unique operation named: updateUsingTRACE_2
2019-06-04 17:39:23 -Generating unique operation named: addUsingGET_3
2019-06-04 17:39:23 -Generating unique operation named: editUsingGET_3
2019-06-04 17:39:23 -Generating unique operation named: listUsingGET_3
2019-06-04 17:39:23 -Generating unique operation named: removeUsingPOST_6
2019-06-04 17:39:23 -Generating unique operation named: removeUsingPOST_7
2019-06-04 17:39:23 -Generating unique operation named: saveUsingPOST_3
2019-06-04 17:39:23 -Generating unique operation named: updateUsingGET_3
2019-06-04 17:39:23 -Generating unique operation named: updateUsingHEAD_3
2019-06-04 17:39:23 -Generating unique operation named: updateUsingPOST_3
2019-06-04 17:39:23 -Generating unique operation named: updateUsingPUT_3
2019-06-04 17:39:23 -Generating unique operation named: updateUsingPATCH_3
2019-06-04 17:39:23 -Generating unique operation named: updateUsingDELETE_3
2019-06-04 17:39:23 -Generating unique operation named: updateUsingOPTIONS_3
2019-06-04 17:39:23 -Generating unique operation named: updateUsingTRACE_3
2019-06-04 17:39:23 -Generating unique operation named: editUsingGET_4
2019-06-04 17:39:23 -Generating unique operation named: listUsingGET_4
2019-06-04 17:39:23 -Generating unique operation named: updateUsingPOST_4
2019-06-04 17:39:23 -Generating unique operation named: addUsingGET_4
2019-06-04 17:39:23 -Generating unique operation named: editUsingGET_5
2019-06-04 17:39:23 -Generating unique operation named: infoUsingGET_1
2019-06-04 17:39:23 -Generating unique operation named: infoUsingHEAD_1
2019-06-04 17:39:23 -Generating unique operation named: infoUsingPOST_1
2019-06-04 17:39:23 -Generating unique operation named: infoUsingPUT_1
2019-06-04 17:39:23 -Generating unique operation named: infoUsingPATCH_1
2019-06-04 17:39:23 -Generating unique operation named: infoUsingDELETE_1
2019-06-04 17:39:23 -Generating unique operation named: infoUsingOPTIONS_1
2019-06-04 17:39:23 -Generating unique operation named: infoUsingTRACE_1
2019-06-04 17:39:23 -Generating unique operation named: listUsingGET_5
2019-06-04 17:39:23 -Generating unique operation named: removeUsingPOST_8
2019-06-04 17:39:23 -Generating unique operation named: removeUsingPOST_9
2019-06-04 17:39:23 -Generating unique operation named: saveUsingPOST_4
2019-06-04 17:39:23 -Generating unique operation named: updateUsingPOST_5
2019-06-04 17:39:23 -Generating unique operation named: listUsingGET_6
2019-06-04 17:39:23 -Generating unique operation named: removeUsingPOST_10
2019-06-04 17:39:23 -Generating unique operation named: welcomeUsingGET_1
2019-06-04 17:39:23 -Generating unique operation named: addUsingGET_5
2019-06-04 17:39:23 -Generating unique operation named: editUsingGET_6
2019-06-04 17:39:23 -Generating unique operation named: listUsingGET_7
2019-06-04 17:39:23 -Generating unique operation named: removeUsingPOST_11
2019-06-04 17:39:23 -Generating unique operation named: saveUsingPOST_5
2019-06-04 17:39:23 -Generating unique operation named: treeUsingGET_1
2019-06-04 17:39:23 -Generating unique operation named: treeUsingGET_2
2019-06-04 17:39:23 -Generating unique operation named: updateUsingPOST_6
2019-06-04 17:39:24 -Generating unique operation named: batchRemoveUsingPOST_1
2019-06-04 17:39:24 -Generating unique operation named: editUsingGET_7
2019-06-04 17:39:24 -Generating unique operation named: listUsingGET_8
2019-06-04 17:39:24 -Generating unique operation named: addUsingGET_6
2019-06-04 17:39:24 -Generating unique operation named: editUsingGET_8
2019-06-04 17:39:24 -Generating unique operation named: listUsingGET_9
2019-06-04 17:39:24 -Generating unique operation named: removeUsingPOST_12
2019-06-04 17:39:24 -Generating unique operation named: removeUsingPOST_13
2019-06-04 17:39:24 -Generating unique operation named: saveUsingPOST_6
2019-06-04 17:39:24 -Generating unique operation named: updateUsingGET_4
2019-06-04 17:39:24 -Generating unique operation named: updateUsingHEAD_4
2019-06-04 17:39:24 -Generating unique operation named: updateUsingPOST_7
2019-06-04 17:39:24 -Generating unique operation named: updateUsingPUT_4
2019-06-04 17:39:24 -Generating unique operation named: updateUsingPATCH_4
2019-06-04 17:39:24 -Generating unique operation named: updateUsingDELETE_4
2019-06-04 17:39:24 -Generating unique operation named: updateUsingOPTIONS_4
2019-06-04 17:39:24 -Generating unique operation named: updateUsingTRACE_4
2019-06-04 17:39:24 -Generating unique operation named: addUsingGET_7
2019-06-04 17:39:24 -Generating unique operation named: editUsingGET_9
2019-06-04 17:39:24 -Generating unique operation named: listUsingGET_10
2019-06-04 17:39:24 -Generating unique operation named: removeUsingPOST_14
2019-06-04 17:39:24 -Generating unique operation named: removeUsingPOST_15
2019-06-04 17:39:24 -Generating unique operation named: saveUsingPOST_7
2019-06-04 17:39:24 -Generating unique operation named: updateUsingGET_5
2019-06-04 17:39:24 -Generating unique operation named: updateUsingHEAD_5
2019-06-04 17:39:24 -Generating unique operation named: updateUsingPOST_8
2019-06-04 17:39:24 -Generating unique operation named: updateUsingPUT_5
2019-06-04 17:39:24 -Generating unique operation named: updateUsingPATCH_5
2019-06-04 17:39:24 -Generating unique operation named: updateUsingDELETE_5
2019-06-04 17:39:24 -Generating unique operation named: updateUsingOPTIONS_5
2019-06-04 17:39:24 -Generating unique operation named: updateUsingTRACE_5
2019-06-04 17:39:24 -Generating unique operation named: addUsingGET_8
2019-06-04 17:39:24 -Generating unique operation named: editUsingGET_10
2019-06-04 17:39:24 -Generating unique operation named: listUsingGET_11
2019-06-04 17:39:24 -Generating unique operation named: removeUsingPOST_16
2019-06-04 17:39:24 -Generating unique operation named: removeUsingPOST_17
2019-06-04 17:39:24 -Generating unique operation named: saveUsingPOST_8
2019-06-04 17:39:24 -Generating unique operation named: updateUsingGET_6
2019-06-04 17:39:24 -Generating unique operation named: updateUsingHEAD_6
2019-06-04 17:39:24 -Generating unique operation named: updateUsingPOST_9
2019-06-04 17:39:24 -Generating unique operation named: updateUsingPUT_6
2019-06-04 17:39:24 -Generating unique operation named: updateUsingPATCH_6
2019-06-04 17:39:24 -Generating unique operation named: updateUsingDELETE_6
2019-06-04 17:39:24 -Generating unique operation named: updateUsingOPTIONS_6
2019-06-04 17:39:24 -Generating unique operation named: updateUsingTRACE_6
2019-06-04 17:39:24 -Generating unique operation named: addUsingGET_9
2019-06-04 17:39:24 -Generating unique operation named: batchRemoveUsingPOST_2
2019-06-04 17:39:24 -Generating unique operation named: deployUsingPOST_1
2019-06-04 17:39:24 -Generating unique operation named: listUsingGET_12
2019-06-04 17:39:24 -Generating unique operation named: removeUsingPOST_18
2019-06-04 17:39:24 -Generating unique operation named: addUsingGET_10
2019-06-04 17:39:24 -Generating unique operation named: editUsingGET_11
2019-06-04 17:39:24 -Generating unique operation named: listUsingGET_13
2019-06-04 17:39:24 -Generating unique operation named: removeUsingPOST_19
2019-06-04 17:39:24 -Generating unique operation named: removeUsingPOST_20
2019-06-04 17:39:24 -Trying to infer dataType org.springframework.web.multipart.MultipartFile[]
2019-06-04 17:39:24 -Generating unique operation named: saveUsingPOST_9
2019-06-04 17:39:24 -Trying to infer dataType org.springframework.web.multipart.MultipartFile[]
2019-06-04 17:39:24 -Generating unique operation named: updateUsingGET_7
2019-06-04 17:39:24 -Trying to infer dataType org.springframework.web.multipart.MultipartFile[]
2019-06-04 17:39:24 -Generating unique operation named: updateUsingHEAD_7
2019-06-04 17:39:24 -Trying to infer dataType org.springframework.web.multipart.MultipartFile[]
2019-06-04 17:39:24 -Generating unique operation named: updateUsingPOST_10
2019-06-04 17:39:24 -Trying to infer dataType org.springframework.web.multipart.MultipartFile[]
2019-06-04 17:39:24 -Generating unique operation named: updateUsingPUT_7
2019-06-04 17:39:24 -Trying to infer dataType org.springframework.web.multipart.MultipartFile[]
2019-06-04 17:39:24 -Generating unique operation named: updateUsingPATCH_7
2019-06-04 17:39:24 -Trying to infer dataType org.springframework.web.multipart.MultipartFile[]
2019-06-04 17:39:24 -Generating unique operation named: updateUsingDELETE_7
2019-06-04 17:39:24 -Trying to infer dataType org.springframework.web.multipart.MultipartFile[]
2019-06-04 17:39:24 -Generating unique operation named: updateUsingOPTIONS_7
2019-06-04 17:39:24 -Trying to infer dataType org.springframework.web.multipart.MultipartFile[]
2019-06-04 17:39:24 -Generating unique operation named: updateUsingTRACE_7
2019-06-04 17:39:24 -Generating unique operation named: addUsingGET_11
2019-06-04 17:39:24 -Generating unique operation named: batchRemoveUsingPOST_3
2019-06-04 17:39:24 -Generating unique operation named: editUsingGET_12
2019-06-04 17:39:24 -Generating unique operation named: listUsingGET_14
2019-06-04 17:39:24 -Generating unique operation named: saveUsingPOST_10
2019-06-04 17:39:24 -Generating unique operation named: saveUsingPOST_11
2019-06-04 17:39:24 -Generating unique operation named: updateUsingPOST_11
2019-06-04 17:39:24 -Generating unique operation named: addUsingGET_12
2019-06-04 17:39:24 -Generating unique operation named: editUsingGET_13
2019-06-04 17:39:24 -Generating unique operation named: listUsingGET_15
2019-06-04 17:39:24 -Generating unique operation named: removeUsingPOST_21
2019-06-04 17:39:24 -Generating unique operation named: removeUsingPOST_22
2019-06-04 17:39:24 -Generating unique operation named: updateUsingGET_8
2019-06-04 17:39:24 -Generating unique operation named: updateUsingHEAD_8
2019-06-04 17:39:24 -Generating unique operation named: updateUsingPOST_12
2019-06-04 17:39:24 -Generating unique operation named: updateUsingPUT_8
2019-06-04 17:39:24 -Generating unique operation named: updateUsingPATCH_8
2019-06-04 17:39:24 -Generating unique operation named: updateUsingDELETE_8
2019-06-04 17:39:24 -Generating unique operation named: updateUsingOPTIONS_8
2019-06-04 17:39:24 -Generating unique operation named: updateUsingTRACE_8
2019-06-04 17:39:24 -Generating unique operation named: listUsingGET_16
2019-06-04 17:39:24 -Generating unique operation named: listUsingHEAD_1
2019-06-04 17:39:24 -Generating unique operation named: listUsingPOST_1
2019-06-04 17:39:24 -Generating unique operation named: listUsingPUT_1
2019-06-04 17:39:24 -Generating unique operation named: listUsingPATCH_1
2019-06-04 17:39:24 -Generating unique operation named: listUsingDELETE_1
2019-06-04 17:39:24 -Generating unique operation named: listUsingOPTIONS_1
2019-06-04 17:39:24 -Generating unique operation named: listUsingTRACE_1
2019-06-04 17:39:24 -Generating unique operation named: listUsingGET_17
2019-06-04 17:39:24 -Generating unique operation named: addUsingGET_13
2019-06-04 17:39:24 -Generating unique operation named: batchRemoveUsingPOST_4
2019-06-04 17:39:24 -Generating unique operation named: editUsingGET_14
2019-06-04 17:39:24 -Generating unique operation named: listUsingGET_18
2019-06-04 17:39:24 -Generating unique operation named: removeUsingPOST_23
2019-06-04 17:39:24 -Generating unique operation named: saveUsingPOST_12
2019-06-04 17:39:24 -Generating unique operation named: treeUsingGET_3
2019-06-04 17:39:24 -Generating unique operation named: treeViewUsingGET_1
2019-06-04 17:39:24 -Generating unique operation named: updateUsingPOST_13
2019-06-04 17:39:25 -Generating unique operation named: addUsingGET_14
2019-06-04 17:39:25 -Generating unique operation named: editUsingGET_15
2019-06-04 17:39:25 -Generating unique operation named: listUsingGET_19
2019-06-04 17:39:25 -Generating unique operation named: removeUsingPOST_24
2019-06-04 17:39:25 -Generating unique operation named: removeUsingPOST_25
2019-06-04 17:39:25 -Generating unique operation named: saveUsingPOST_13
2019-06-04 17:39:25 -Generating unique operation named: updateUsingGET_9
2019-06-04 17:39:25 -Generating unique operation named: updateUsingHEAD_9
2019-06-04 17:39:25 -Generating unique operation named: updateUsingPOST_14
2019-06-04 17:39:25 -Generating unique operation named: updateUsingPUT_9
2019-06-04 17:39:25 -Generating unique operation named: updateUsingPATCH_9
2019-06-04 17:39:25 -Generating unique operation named: updateUsingDELETE_9
2019-06-04 17:39:25 -Generating unique operation named: updateUsingOPTIONS_9
2019-06-04 17:39:25 -Generating unique operation named: updateUsingTRACE_9
2019-06-04 17:39:25 -Starting Quartz Scheduler now
2019-06-04 17:39:25 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-06-04 17:39:25 -Starting...
2019-06-04 17:39:25 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-06-04 17:39:25 -Started.
2019-06-04 17:39:25 -Starting ProtocolHandler ["http-nio-8888"]
2019-06-04 17:39:25 -Using a shared selector for servlet write/read
2019-06-04 17:39:25 -Tomcat started on port(s): 8888 (http) with context path ''
2019-06-04 17:39:25 -Started BootdoApplication in 9.929 seconds (JVM running for 369.528)
2019-06-04 17:39:25 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-06-04 17:39:25 -==> Parameters: 
2019-06-04 17:39:25 -<==      Total: 1
2019-06-04 17:39:25 -Condition evaluation unchanged
2019-06-04 17:39:29 -Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@553dd641: startup date [Tue Jun 04 17:39:15 CST 2019]; root of context hierarchy
2019-06-04 17:39:29 -Stopping beans in phase 2147483647
2019-06-04 17:39:29 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED paused.
2019-06-04 17:39:29 -Stopping...
2019-06-04 17:39:29 -BrokerAvailabilityEvent[available=false, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-06-04 17:39:29 -Stopped.
2019-06-04 17:39:29 -Unregistering JMX-exposed beans on shutdown
2019-06-04 17:39:29 -Unregistering JMX-exposed beans
2019-06-04 17:39:29 -Shutting down ExecutorService 'brokerChannelExecutor'
2019-06-04 17:39:29 -Shutting down ExecutorService 'messageBrokerTaskScheduler'
2019-06-04 17:39:29 -Shutting down ExecutorService 'clientOutboundChannelExecutor'
2019-06-04 17:39:29 -Shutting down ExecutorService 'clientInboundChannelExecutor'
2019-06-04 17:39:29 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED shutting down.
2019-06-04 17:39:29 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED paused.
2019-06-04 17:39:29 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED shutdown complete.
2019-06-04 17:39:29 -Shutting down Quartz Scheduler
2019-06-04 17:39:29 -{dataSource-3} closed
2019-06-04 17:39:30 -Starting BootdoApplication on LAPTOP-ELP5M68R with PID 8564 (D:\workspace\bootdo\bootdo\target\classes started by Lenovo in D:\workspace\bootdo\bootdo)
2019-06-04 17:39:30 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-06-04 17:39:30 -The following profiles are active: dev
2019-06-04 17:39:30 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@5d8f10bd: startup date [Tue Jun 04 17:39:30 CST 2019]; root of context hierarchy
2019-06-04 17:39:32 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-06-04 17:39:33 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$32e5fd9d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-04 17:39:33 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$253f2c44] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-04 17:39:33 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-04 17:39:33 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-04 17:39:33 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-04 17:39:33 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache.3' does not yet exist.  Creating now.
2019-06-04 17:39:33 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache.3]
2019-06-04 17:39:33 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-04 17:39:33 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-04 17:39:33 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-04 17:39:33 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-04 17:39:33 -Tomcat initialized with port(s): 8888 (http)
2019-06-04 17:39:33 -Initializing ProtocolHandler ["http-nio-8888"]
2019-06-04 17:39:33 -Starting service [Tomcat]
2019-06-04 17:39:33 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-06-04 17:39:33 -Initializing Spring embedded WebApplicationContext
2019-06-04 17:39:33 -Root WebApplicationContext: initialization completed in 2655 ms
2019-06-04 17:39:33 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-06-04 17:39:33 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-06-04 17:39:33 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-06-04 17:39:33 -Mapping filter: 'requestContextFilter' to: [/*]
2019-06-04 17:39:33 -Filter xssFilter was not registered (disabled)
2019-06-04 17:39:33 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-06-04 17:39:33 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-06-04 17:39:33 -Servlet statViewServlet mapped to [/druid/*]
2019-06-04 17:39:33 -Servlet dispatcherServlet mapped to [/]
2019-06-04 17:39:33 -{dataSource-4} inited
2019-06-04 17:39:34 -ProcessEngine default created
2019-06-04 17:39:35 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@5d8f10bd: startup date [Tue Jun 04 17:39:30 CST 2019]; root of context hierarchy
2019-06-04 17:39:36 -Using default implementation for ThreadExecutor
2019-06-04 17:39:36 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-06-04 17:39:36 -Quartz Scheduler v.2.2.1 created.
2019-06-04 17:39:36 -RAMJobStore initialized.
2019-06-04 17:39:36 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-06-04 17:39:36 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-06-04 17:39:36 -Quartz scheduler version: 2.2.1
2019-06-04 17:39:36 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@3040b507
2019-06-04 17:39:36 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-06-04 17:39:36 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-06-04 17:39:37 -Mapped "{[/activiti/model/{id}],methods=[DELETE]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.ModelController.remove(java.lang.String)
2019-06-04 17:39:37 -Mapped "{[/activiti/model/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.activiti.controller.ModelController.list(int,int)
2019-06-04 17:39:37 -Mapped "{[/activiti/model/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.ModelController.batchRemove(java.lang.String[])
2019-06-04 17:39:37 -Mapped "{[/activiti/model],methods=[GET]}" onto org.springframework.web.servlet.ModelAndView com.bootdo.activiti.controller.ModelController.model()
2019-06-04 17:39:37 -Mapped "{[/activiti/model/{modelId}/json],methods=[GET]}" onto public com.fasterxml.jackson.databind.node.ObjectNode com.bootdo.activiti.controller.ModelController.getEditorJson(java.lang.String)
2019-06-04 17:39:37 -Mapped "{[/activiti/model/edit/{id}],methods=[GET]}" onto public void com.bootdo.activiti.controller.ModelController.edit(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-06-04 17:39:37 -Mapped "{[/activiti/model/deploy/{id}],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.ModelController.deploy(java.lang.String) throws java.lang.Exception
2019-06-04 17:39:37 -Mapped "{[/activiti/model/add]}" onto public void com.bootdo.activiti.controller.ModelController.newModel(javax.servlet.http.HttpServletResponse) throws java.io.UnsupportedEncodingException
2019-06-04 17:39:37 -Mapped "{[/activiti/editor/stencilset],methods=[GET],produces=[application/json;charset=utf-8]}" onto public java.lang.String com.bootdo.activiti.controller.ModelController.getStencilset()
2019-06-04 17:39:37 -Mapped "{[/activiti/model/{modelId}/save],methods=[PUT]}" onto public void com.bootdo.activiti.controller.ModelController.saveModel(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2019-06-04 17:39:37 -Mapped "{[/activiti/model/export/{id}],methods=[GET]}" onto public void com.bootdo.activiti.controller.ModelController.exportToXml(java.lang.String,javax.servlet.http.HttpServletResponse)
2019-06-04 17:39:37 -Mapped "{[/activiti/process/add],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.activiti.controller.ProcessController.add()
2019-06-04 17:39:37 -Mapped "{[/activiti/process/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.ProcessController.remove(java.lang.String)
2019-06-04 17:39:37 -Mapped "{[/activiti/process/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.activiti.controller.ProcessController.list(int,int)
2019-06-04 17:39:37 -Mapped "{[/activiti/process/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.ProcessController.batchRemove(java.lang.String[])
2019-06-04 17:39:37 -Mapped "{[/activiti/process],methods=[GET]}" onto org.springframework.web.servlet.ModelAndView com.bootdo.activiti.controller.ProcessController.process()
2019-06-04 17:39:37 -Mapped "{[/activiti/process/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.ProcessController.deploy(java.lang.String,java.lang.String,org.springframework.web.multipart.MultipartFile)
2019-06-04 17:39:37 -Mapped "{[/activiti/process/resource/read/{xml}/{id}]}" onto public void com.bootdo.activiti.controller.ProcessController.resourceRead(java.lang.String,java.lang.String,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-06-04 17:39:37 -Mapped "{[/activiti/process/convertToModel/{procDefId}]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.ProcessController.convertToModel(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes) throws java.io.UnsupportedEncodingException,javax.xml.stream.XMLStreamException
2019-06-04 17:39:37 -Mapped "{[/act/salary/form],methods=[GET]}" onto java.lang.String com.bootdo.activiti.controller.SalaryController.add()
2019-06-04 17:39:37 -Mapped "{[/act/salary/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.SalaryController.remove(java.lang.String)
2019-06-04 17:39:37 -Mapped "{[/act/salary/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.SalaryController.remove(java.lang.String[])
2019-06-04 17:39:37 -Mapped "{[/act/salary/update]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.SalaryController.update(com.bootdo.activiti.domain.SalaryDO)
2019-06-04 17:39:37 -Mapped "{[/act/salary/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.activiti.controller.SalaryController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-04 17:39:37 -Mapped "{[/act/salary/form/{taskId}],methods=[GET]}" onto java.lang.String com.bootdo.activiti.controller.SalaryController.edit(java.lang.String,org.springframework.ui.Model)
2019-06-04 17:39:37 -Mapped "{[/act/salary/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.SalaryController.saveOrUpdate(com.bootdo.activiti.domain.SalaryDO)
2019-06-04 17:39:37 -Mapped "{[/act/salary],methods=[GET]}" onto java.lang.String com.bootdo.activiti.controller.SalaryController.Salary()
2019-06-04 17:39:37 -Mapped "{[/activiti/task/form/{procDefId}/{taskId}],methods=[GET]}" onto public void com.bootdo.activiti.controller.TaskController.form(java.lang.String,java.lang.String,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-06-04 17:39:37 -Mapped "{[/activiti/task/gotoList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.activiti.controller.TaskController.list(int,int)
2019-06-04 17:39:37 -Mapped "{[/activiti/task/form/{procDefId}],methods=[GET]}" onto public void com.bootdo.activiti.controller.TaskController.startForm(java.lang.String,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-06-04 17:39:37 -Mapped "{[/activiti/task/todo],methods=[GET]}" onto org.springframework.web.servlet.ModelAndView com.bootdo.activiti.controller.TaskController.todo()
2019-06-04 17:39:37 -Mapped "{[/activiti/task/goto],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.activiti.controller.TaskController.gotoTask()
2019-06-04 17:39:37 -Mapped "{[/activiti/task/todoList],methods=[GET]}" onto java.util.List<com.bootdo.activiti.vo.TaskVO> com.bootdo.activiti.controller.TaskController.todoList()
2019-06-04 17:39:37 -Mapped "{[/activiti/task/trace/photo/{procDefId}/{execId}]}" onto public void com.bootdo.activiti.controller.TaskController.tracePhoto(java.lang.String,java.lang.String,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-06-04 17:39:37 -Mapped "{[/blog/open/post/{cid}],methods=[GET]}" onto java.lang.String com.bootdo.blog.controller.BlogController.post(java.lang.Long,org.springframework.ui.Model)
2019-06-04 17:39:37 -Mapped "{[/blog],methods=[GET]}" onto java.lang.String com.bootdo.blog.controller.BlogController.blog()
2019-06-04 17:39:37 -Mapped "{[/blog/open/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.blog.controller.BlogController.opentList(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-04 17:39:37 -Mapped "{[/blog/open/page/{categories}],methods=[GET]}" onto java.lang.String com.bootdo.blog.controller.BlogController.about(java.lang.String,org.springframework.ui.Model)
2019-06-04 17:39:37 -Mapped "{[/blog/bContent/add],methods=[GET]}" onto java.lang.String com.bootdo.blog.controller.ContentController.add()
2019-06-04 17:39:37 -Mapped "{[/blog/bContent/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.blog.controller.ContentController.remove(java.lang.Long)
2019-06-04 17:39:37 -Mapped "{[/blog/bContent/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.blog.controller.ContentController.remove(java.lang.Long[])
2019-06-04 17:39:37 -Mapped "{[/blog/bContent/update]}" onto public com.bootdo.common.utils.R com.bootdo.blog.controller.ContentController.update(com.bootdo.blog.domain.ContentDO)
2019-06-04 17:39:37 -Mapped "{[/blog/bContent/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.blog.controller.ContentController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-04 17:39:37 -Mapped "{[/blog/bContent/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.blog.controller.ContentController.save(com.bootdo.blog.domain.ContentDO)
2019-06-04 17:39:37 -Mapped "{[/blog/bContent/edit/{cid}],methods=[GET]}" onto java.lang.String com.bootdo.blog.controller.ContentController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-04 17:39:37 -Mapped "{[/blog/bContent],methods=[GET]}" onto java.lang.String com.bootdo.blog.controller.ContentController.bContent()
2019-06-04 17:39:37 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-06-04 17:39:37 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-06-04 17:39:37 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-06-04 17:39:37 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-06-04 17:39:37 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-04 17:39:37 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-06-04 17:39:37 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-06-04 17:39:37 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-04 17:39:37 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-06-04 17:39:37 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-06-04 17:39:37 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-06-04 17:39:37 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-06-04 17:39:37 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-06-04 17:39:37 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-06-04 17:39:37 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-06-04 17:39:37 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-04 17:39:37 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-06-04 17:39:37 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-06-04 17:39:37 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-04 17:39:37 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-06-04 17:39:37 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-06-04 17:39:37 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-04 17:39:37 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-06-04 17:39:37 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-06-04 17:39:37 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-06-04 17:39:37 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-06-04 17:39:37 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-06-04 17:39:37 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-06-04 17:39:37 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-06-04 17:39:37 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-06-04 17:39:37 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-06-04 17:39:37 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-04 17:39:37 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-06-04 17:39:37 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-06-04 17:39:37 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-04 17:39:37 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-06-04 17:39:37 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-06-04 17:39:37 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-06-04 17:39:37 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-06-04 17:39:37 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-04 17:39:37 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-06-04 17:39:37 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-06-04 17:39:37 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-06-04 17:39:37 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-06-04 17:39:37 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-06-04 17:39:37 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-06-04 17:39:37 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-06-04 17:39:37 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-06-04 17:39:37 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-04 17:39:37 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-06-04 17:39:37 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-06-04 17:39:37 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-04 17:39:37 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-06-04 17:39:37 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-06-04 17:39:37 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-04 17:39:37 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-06-04 17:39:37 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-06-04 17:39:37 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-06-04 17:39:37 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-06-04 17:39:37 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-06-04 17:39:37 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-06-04 17:39:37 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-06-04 17:39:37 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-04 17:39:37 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-06-04 17:39:37 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-06-04 17:39:37 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-06-04 17:39:37 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-06-04 17:39:37 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-06-04 17:39:37 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-06-04 17:39:37 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String)
2019-06-04 17:39:37 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-06-04 17:39:37 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-06-04 17:39:37 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-06-04 17:39:37 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-06-04 17:39:37 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-04 17:39:37 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-06-04 17:39:37 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-06-04 17:39:37 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-06-04 17:39:37 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-06-04 17:39:37 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-06-04 17:39:37 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-06-04 17:39:37 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-06-04 17:39:37 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-06-04 17:39:37 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-06-04 17:39:37 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-06-04 17:39:37 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-06-04 17:39:37 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-06-04 17:39:37 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-04 17:39:37 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-06-04 17:39:37 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-06-04 17:39:37 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-06-04 17:39:37 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-06-04 17:39:37 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-04 17:39:37 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-06-04 17:39:37 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-06-04 17:39:37 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-06-04 17:39:37 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-04 17:39:37 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-06-04 17:39:37 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-06-04 17:39:37 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-06-04 17:39:37 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-06-04 17:39:37 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-06-04 17:39:37 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-06-04 17:39:37 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-06-04 17:39:37 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-06-04 17:39:37 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-06-04 17:39:37 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-06-04 17:39:37 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-06-04 17:39:37 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-06-04 17:39:37 -Mapped "{[/wxServer],methods=[GET]}" onto public void org.weixin4j.spring.web.WeixinJieruController.get(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-06-04 17:39:37 -Mapped "{[/wxServer],methods=[POST]}" onto public void org.weixin4j.spring.web.WeixinJieruController.post(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-06-04 17:39:37 -Mapped "{[/weixin/weixinUser/add],methods=[GET]}" onto java.lang.String com.bootdo.weixin.controller.WeixinUserController.add()
2019-06-04 17:39:37 -Mapped "{[/weixin/weixinUser/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.weixin.controller.WeixinUserController.remove(java.lang.Long)
2019-06-04 17:39:37 -Mapped "{[/weixin/weixinUser/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.weixin.controller.WeixinUserController.remove(java.lang.Long[])
2019-06-04 17:39:37 -Mapped "{[/weixin/weixinUser/update]}" onto public com.bootdo.common.utils.R com.bootdo.weixin.controller.WeixinUserController.update(com.bootdo.weixin.domain.WeixinUserDO)
2019-06-04 17:39:37 -Mapped "{[/weixin/weixinUser/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.weixin.controller.WeixinUserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-04 17:39:37 -Mapped "{[/weixin/weixinUser/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.weixin.controller.WeixinUserController.save(com.bootdo.weixin.domain.WeixinUserDO)
2019-06-04 17:39:37 -Mapped "{[/weixin/weixinUser/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.weixin.controller.WeixinUserController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-04 17:39:37 -Mapped "{[/weixin/weixinUser],methods=[GET]}" onto java.lang.String com.bootdo.weixin.controller.WeixinUserController.WeixinUser()
2019-06-04 17:39:37 -Mapped "{[/xjbg/order/add],methods=[GET]}" onto java.lang.String com.bootdo.xjbg.controller.OrderController.add()
2019-06-04 17:39:37 -Mapped "{[/xjbg/order/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.xjbg.controller.OrderController.remove(java.lang.Long)
2019-06-04 17:39:37 -Mapped "{[/xjbg/order/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.xjbg.controller.OrderController.remove(java.lang.Long[])
2019-06-04 17:39:37 -Mapped "{[/xjbg/order/update]}" onto public com.bootdo.common.utils.R com.bootdo.xjbg.controller.OrderController.update(com.bootdo.xjbg.domain.OrderDO)
2019-06-04 17:39:37 -Mapped "{[/xjbg/order/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.xjbg.controller.OrderController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-04 17:39:37 -Mapped "{[/xjbg/order/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.xjbg.controller.OrderController.save(com.bootdo.xjbg.domain.OrderDO)
2019-06-04 17:39:37 -Mapped "{[/xjbg/order/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.xjbg.controller.OrderController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-04 17:39:37 -Mapped "{[/xjbg/order],methods=[GET]}" onto java.lang.String com.bootdo.xjbg.controller.OrderController.Order()
2019-06-04 17:39:37 -Mapped "{[/xjbg/orderItem/add],methods=[GET]}" onto java.lang.String com.bootdo.xjbg.controller.OrderItemController.add()
2019-06-04 17:39:37 -Mapped "{[/xjbg/orderItem/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.xjbg.controller.OrderItemController.remove(java.lang.Long)
2019-06-04 17:39:37 -Mapped "{[/xjbg/orderItem/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.xjbg.controller.OrderItemController.remove(java.lang.Long[])
2019-06-04 17:39:37 -Mapped "{[/xjbg/orderItem/update]}" onto public com.bootdo.common.utils.R com.bootdo.xjbg.controller.OrderItemController.update(com.bootdo.xjbg.domain.OrderItemDO)
2019-06-04 17:39:37 -Mapped "{[/xjbg/orderItem/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.xjbg.controller.OrderItemController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-04 17:39:37 -Mapped "{[/xjbg/orderItem/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.xjbg.controller.OrderItemController.save(com.bootdo.xjbg.domain.OrderItemDO)
2019-06-04 17:39:37 -Mapped "{[/xjbg/orderItem/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.xjbg.controller.OrderItemController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-04 17:39:37 -Mapped "{[/xjbg/orderItem],methods=[GET]}" onto java.lang.String com.bootdo.xjbg.controller.OrderItemController.OrderItem()
2019-06-04 17:39:37 -Mapped "{[/xjbg/product/add],methods=[GET]}" onto java.lang.String com.bootdo.xjbg.controller.ProductController.add()
2019-06-04 17:39:37 -Mapped "{[/xjbg/product/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.xjbg.controller.ProductController.remove(java.lang.Long)
2019-06-04 17:39:37 -Mapped "{[/xjbg/product/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.xjbg.controller.ProductController.remove(java.lang.Long[])
2019-06-04 17:39:37 -Mapped "{[/xjbg/product/update]}" onto public com.bootdo.common.utils.R com.bootdo.xjbg.controller.ProductController.update(com.bootdo.xjbg.domain.ProductDO,org.springframework.web.multipart.MultipartFile[])
2019-06-04 17:39:37 -Mapped "{[/xjbg/product/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.xjbg.controller.ProductController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-04 17:39:37 -Mapped "{[/xjbg/product/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.xjbg.controller.ProductController.save(com.bootdo.xjbg.domain.ProductDO,org.springframework.web.multipart.MultipartFile[])
2019-06-04 17:39:37 -Mapped "{[/xjbg/product/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.xjbg.controller.ProductController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-04 17:39:37 -Mapped "{[/xjbg/product],methods=[GET]}" onto java.lang.String com.bootdo.xjbg.controller.ProductController.Product()
2019-06-04 17:39:37 -Mapped "{[/xjbg/room/add],methods=[GET]}" onto java.lang.String com.bootdo.xjbg.controller.RoomController.add(org.springframework.ui.Model)
2019-06-04 17:39:37 -Mapped "{[/xjbg/room/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.xjbg.controller.RoomController.remove(java.lang.Integer[])
2019-06-04 17:39:37 -Mapped "{[/xjbg/room/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.xjbg.controller.RoomController.remove(java.lang.Integer)
2019-06-04 17:39:37 -Mapped "{[/xjbg/room/update]}" onto public com.bootdo.common.utils.R com.bootdo.xjbg.controller.RoomController.update(com.bootdo.xjbg.domain.RoomDO)
2019-06-04 17:39:37 -Mapped "{[/xjbg/room/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.xjbg.controller.RoomController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-04 17:39:37 -Mapped "{[/xjbg/room/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.xjbg.controller.RoomController.save(com.bootdo.xjbg.domain.RoomDO)
2019-06-04 17:39:37 -Mapped "{[/xjbg/room/operation/{roomId}],methods=[GET]}" onto java.lang.String com.bootdo.xjbg.controller.RoomController.operation(java.lang.Integer,org.springframework.ui.Model)
2019-06-04 17:39:37 -Mapped "{[/xjbg/room/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.xjbg.controller.RoomController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-06-04 17:39:37 -Mapped "{[/xjbg/room],methods=[GET]}" onto java.lang.String com.bootdo.xjbg.controller.RoomController.Room(org.springframework.ui.Model)
2019-06-04 17:39:37 -Mapped "{[/xjbg/room/roomMng],methods=[GET]}" onto java.lang.String com.bootdo.xjbg.controller.RoomController.roomMng(org.springframework.ui.Model)
2019-06-04 17:39:37 -Mapped "{[/xjbg/room/kaifan],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.xjbg.controller.RoomController.kaifan(com.bootdo.xjbg.domain.OrderDO,java.util.List<com.bootdo.xjbg.domain.OrderItemDO>)
2019-06-04 17:39:37 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-06-04 17:39:37 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-06-04 17:39:37 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-06-04 17:39:37 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-06-04 17:39:37 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-06-04 17:39:37 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-06-04 17:39:37 -Initializing ExecutorService  'brokerChannelExecutor'
2019-06-04 17:39:38 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-06-04 17:39:38 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@5d8f10bd: startup date [Tue Jun 04 17:39:30 CST 2019]; root of context hierarchy
2019-06-04 17:39:38 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-06-04 17:39:38 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-06-04 17:39:38 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-06-04 17:39:38 -Mapped URL path [/productPic/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-06-04 17:39:38 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-06-04 17:39:38 -[THYMELEAF][restartedMain] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-06-04 17:39:39 -LiveReload server is running on port 35729
2019-06-04 17:39:39 -Registering beans for JMX exposure on startup
2019-06-04 17:39:39 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-06-04 17:39:39 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-06-04 17:39:39 -Starting beans in phase 2147483647
2019-06-04 17:39:39 -Context refreshed
2019-06-04 17:39:39 -Found 1 custom documentation plugin(s)
2019-06-04 17:39:39 -Scanning for api listing references
2019-06-04 17:39:39 -Generating unique operation named: removeUsingPOST_1
2019-06-04 17:39:39 -Generating unique operation named: addUsingGET_1
2019-06-04 17:39:39 -Generating unique operation named: editUsingGET_1
2019-06-04 17:39:39 -Generating unique operation named: listUsingGET_1
2019-06-04 17:39:39 -Generating unique operation named: removeUsingPOST_2
2019-06-04 17:39:39 -Generating unique operation named: removeUsingPOST_3
2019-06-04 17:39:39 -Generating unique operation named: saveUsingPOST_1
2019-06-04 17:39:39 -Generating unique operation named: updateUsingGET_1
2019-06-04 17:39:39 -Generating unique operation named: updateUsingHEAD_1
2019-06-04 17:39:39 -Generating unique operation named: updateUsingPOST_1
2019-06-04 17:39:39 -Generating unique operation named: updateUsingPUT_1
2019-06-04 17:39:39 -Generating unique operation named: updateUsingPATCH_1
2019-06-04 17:39:39 -Generating unique operation named: updateUsingDELETE_1
2019-06-04 17:39:39 -Generating unique operation named: updateUsingOPTIONS_1
2019-06-04 17:39:39 -Generating unique operation named: updateUsingTRACE_1
2019-06-04 17:39:39 -Generating unique operation named: addUsingGET_2
2019-06-04 17:39:39 -Generating unique operation named: editUsingGET_2
2019-06-04 17:39:39 -Generating unique operation named: listUsingGET_2
2019-06-04 17:39:39 -Generating unique operation named: removeUsingPOST_4
2019-06-04 17:39:39 -Generating unique operation named: removeUsingPOST_5
2019-06-04 17:39:39 -Generating unique operation named: saveUsingPOST_2
2019-06-04 17:39:39 -Generating unique operation named: updateUsingGET_2
2019-06-04 17:39:39 -Generating unique operation named: updateUsingHEAD_2
2019-06-04 17:39:39 -Generating unique operation named: updateUsingPOST_2
2019-06-04 17:39:39 -Generating unique operation named: updateUsingPUT_2
2019-06-04 17:39:39 -Generating unique operation named: updateUsingPATCH_2
2019-06-04 17:39:39 -Generating unique operation named: updateUsingDELETE_2
2019-06-04 17:39:39 -Generating unique operation named: updateUsingOPTIONS_2
2019-06-04 17:39:39 -Generating unique operation named: updateUsingTRACE_2
2019-06-04 17:39:39 -Generating unique operation named: addUsingGET_3
2019-06-04 17:39:39 -Generating unique operation named: editUsingGET_3
2019-06-04 17:39:39 -Generating unique operation named: listUsingGET_3
2019-06-04 17:39:39 -Generating unique operation named: removeUsingPOST_6
2019-06-04 17:39:39 -Generating unique operation named: removeUsingPOST_7
2019-06-04 17:39:39 -Generating unique operation named: saveUsingPOST_3
2019-06-04 17:39:39 -Generating unique operation named: updateUsingGET_3
2019-06-04 17:39:39 -Generating unique operation named: updateUsingHEAD_3
2019-06-04 17:39:39 -Generating unique operation named: updateUsingPOST_3
2019-06-04 17:39:39 -Generating unique operation named: updateUsingPUT_3
2019-06-04 17:39:39 -Generating unique operation named: updateUsingPATCH_3
2019-06-04 17:39:39 -Generating unique operation named: updateUsingDELETE_3
2019-06-04 17:39:39 -Generating unique operation named: updateUsingOPTIONS_3
2019-06-04 17:39:39 -Generating unique operation named: updateUsingTRACE_3
2019-06-04 17:39:39 -Generating unique operation named: editUsingGET_4
2019-06-04 17:39:39 -Generating unique operation named: listUsingGET_4
2019-06-04 17:39:39 -Generating unique operation named: updateUsingPOST_4
2019-06-04 17:39:39 -Generating unique operation named: addUsingGET_4
2019-06-04 17:39:39 -Generating unique operation named: editUsingGET_5
2019-06-04 17:39:39 -Generating unique operation named: infoUsingGET_1
2019-06-04 17:39:39 -Generating unique operation named: infoUsingHEAD_1
2019-06-04 17:39:39 -Generating unique operation named: infoUsingPOST_1
2019-06-04 17:39:39 -Generating unique operation named: infoUsingPUT_1
2019-06-04 17:39:39 -Generating unique operation named: infoUsingPATCH_1
2019-06-04 17:39:39 -Generating unique operation named: infoUsingDELETE_1
2019-06-04 17:39:39 -Generating unique operation named: infoUsingOPTIONS_1
2019-06-04 17:39:39 -Generating unique operation named: infoUsingTRACE_1
2019-06-04 17:39:39 -Generating unique operation named: listUsingGET_5
2019-06-04 17:39:39 -Generating unique operation named: removeUsingPOST_8
2019-06-04 17:39:39 -Generating unique operation named: removeUsingPOST_9
2019-06-04 17:39:39 -Generating unique operation named: saveUsingPOST_4
2019-06-04 17:39:39 -Generating unique operation named: updateUsingPOST_5
2019-06-04 17:39:39 -Generating unique operation named: listUsingGET_6
2019-06-04 17:39:39 -Generating unique operation named: removeUsingPOST_10
2019-06-04 17:39:39 -Generating unique operation named: welcomeUsingGET_1
2019-06-04 17:39:39 -Generating unique operation named: addUsingGET_5
2019-06-04 17:39:39 -Generating unique operation named: editUsingGET_6
2019-06-04 17:39:39 -Generating unique operation named: listUsingGET_7
2019-06-04 17:39:39 -Generating unique operation named: removeUsingPOST_11
2019-06-04 17:39:39 -Generating unique operation named: saveUsingPOST_5
2019-06-04 17:39:39 -Generating unique operation named: treeUsingGET_1
2019-06-04 17:39:39 -Generating unique operation named: treeUsingGET_2
2019-06-04 17:39:39 -Generating unique operation named: updateUsingPOST_6
2019-06-04 17:39:39 -Generating unique operation named: batchRemoveUsingPOST_1
2019-06-04 17:39:39 -Generating unique operation named: editUsingGET_7
2019-06-04 17:39:39 -Generating unique operation named: listUsingGET_8
2019-06-04 17:39:39 -Generating unique operation named: addUsingGET_6
2019-06-04 17:39:39 -Generating unique operation named: editUsingGET_8
2019-06-04 17:39:39 -Generating unique operation named: listUsingGET_9
2019-06-04 17:39:39 -Generating unique operation named: removeUsingPOST_12
2019-06-04 17:39:39 -Generating unique operation named: removeUsingPOST_13
2019-06-04 17:39:39 -Generating unique operation named: saveUsingPOST_6
2019-06-04 17:39:39 -Generating unique operation named: updateUsingGET_4
2019-06-04 17:39:39 -Generating unique operation named: updateUsingHEAD_4
2019-06-04 17:39:39 -Generating unique operation named: updateUsingPOST_7
2019-06-04 17:39:39 -Generating unique operation named: updateUsingPUT_4
2019-06-04 17:39:39 -Generating unique operation named: updateUsingPATCH_4
2019-06-04 17:39:39 -Generating unique operation named: updateUsingDELETE_4
2019-06-04 17:39:39 -Generating unique operation named: updateUsingOPTIONS_4
2019-06-04 17:39:39 -Generating unique operation named: updateUsingTRACE_4
2019-06-04 17:39:39 -Generating unique operation named: addUsingGET_7
2019-06-04 17:39:39 -Generating unique operation named: editUsingGET_9
2019-06-04 17:39:39 -Generating unique operation named: listUsingGET_10
2019-06-04 17:39:39 -Generating unique operation named: removeUsingPOST_14
2019-06-04 17:39:39 -Generating unique operation named: removeUsingPOST_15
2019-06-04 17:39:39 -Generating unique operation named: saveUsingPOST_7
2019-06-04 17:39:39 -Generating unique operation named: updateUsingGET_5
2019-06-04 17:39:39 -Generating unique operation named: updateUsingHEAD_5
2019-06-04 17:39:39 -Generating unique operation named: updateUsingPOST_8
2019-06-04 17:39:39 -Generating unique operation named: updateUsingPUT_5
2019-06-04 17:39:39 -Generating unique operation named: updateUsingPATCH_5
2019-06-04 17:39:39 -Generating unique operation named: updateUsingDELETE_5
2019-06-04 17:39:39 -Generating unique operation named: updateUsingOPTIONS_5
2019-06-04 17:39:39 -Generating unique operation named: updateUsingTRACE_5
2019-06-04 17:39:39 -Generating unique operation named: addUsingGET_8
2019-06-04 17:39:39 -Generating unique operation named: editUsingGET_10
2019-06-04 17:39:39 -Generating unique operation named: listUsingGET_11
2019-06-04 17:39:39 -Generating unique operation named: removeUsingPOST_16
2019-06-04 17:39:39 -Generating unique operation named: removeUsingPOST_17
2019-06-04 17:39:39 -Generating unique operation named: saveUsingPOST_8
2019-06-04 17:39:39 -Generating unique operation named: updateUsingGET_6
2019-06-04 17:39:39 -Generating unique operation named: updateUsingHEAD_6
2019-06-04 17:39:39 -Generating unique operation named: updateUsingPOST_9
2019-06-04 17:39:39 -Generating unique operation named: updateUsingPUT_6
2019-06-04 17:39:39 -Generating unique operation named: updateUsingPATCH_6
2019-06-04 17:39:39 -Generating unique operation named: updateUsingDELETE_6
2019-06-04 17:39:39 -Generating unique operation named: updateUsingOPTIONS_6
2019-06-04 17:39:39 -Generating unique operation named: updateUsingTRACE_6
2019-06-04 17:39:39 -Generating unique operation named: addUsingGET_9
2019-06-04 17:39:39 -Generating unique operation named: batchRemoveUsingPOST_2
2019-06-04 17:39:39 -Generating unique operation named: deployUsingPOST_1
2019-06-04 17:39:39 -Generating unique operation named: listUsingGET_12
2019-06-04 17:39:39 -Generating unique operation named: removeUsingPOST_18
2019-06-04 17:39:39 -Generating unique operation named: addUsingGET_10
2019-06-04 17:39:39 -Generating unique operation named: editUsingGET_11
2019-06-04 17:39:39 -Generating unique operation named: listUsingGET_13
2019-06-04 17:39:39 -Generating unique operation named: removeUsingPOST_19
2019-06-04 17:39:39 -Generating unique operation named: removeUsingPOST_20
2019-06-04 17:39:39 -Trying to infer dataType org.springframework.web.multipart.MultipartFile[]
2019-06-04 17:39:39 -Generating unique operation named: saveUsingPOST_9
2019-06-04 17:39:39 -Trying to infer dataType org.springframework.web.multipart.MultipartFile[]
2019-06-04 17:39:39 -Generating unique operation named: updateUsingGET_7
2019-06-04 17:39:39 -Trying to infer dataType org.springframework.web.multipart.MultipartFile[]
2019-06-04 17:39:39 -Generating unique operation named: updateUsingHEAD_7
2019-06-04 17:39:39 -Trying to infer dataType org.springframework.web.multipart.MultipartFile[]
2019-06-04 17:39:39 -Generating unique operation named: updateUsingPOST_10
2019-06-04 17:39:39 -Trying to infer dataType org.springframework.web.multipart.MultipartFile[]
2019-06-04 17:39:39 -Generating unique operation named: updateUsingPUT_7
2019-06-04 17:39:39 -Trying to infer dataType org.springframework.web.multipart.MultipartFile[]
2019-06-04 17:39:39 -Generating unique operation named: updateUsingPATCH_7
2019-06-04 17:39:39 -Trying to infer dataType org.springframework.web.multipart.MultipartFile[]
2019-06-04 17:39:39 -Generating unique operation named: updateUsingDELETE_7
2019-06-04 17:39:39 -Trying to infer dataType org.springframework.web.multipart.MultipartFile[]
2019-06-04 17:39:39 -Generating unique operation named: updateUsingOPTIONS_7
2019-06-04 17:39:39 -Trying to infer dataType org.springframework.web.multipart.MultipartFile[]
2019-06-04 17:39:39 -Generating unique operation named: updateUsingTRACE_7
2019-06-04 17:39:39 -Generating unique operation named: addUsingGET_11
2019-06-04 17:39:39 -Generating unique operation named: batchRemoveUsingPOST_3
2019-06-04 17:39:39 -Generating unique operation named: editUsingGET_12
2019-06-04 17:39:39 -Generating unique operation named: listUsingGET_14
2019-06-04 17:39:39 -Generating unique operation named: saveUsingPOST_10
2019-06-04 17:39:39 -Generating unique operation named: saveUsingPOST_11
2019-06-04 17:39:39 -Generating unique operation named: updateUsingPOST_11
2019-06-04 17:39:39 -Generating unique operation named: addUsingGET_12
2019-06-04 17:39:39 -Generating unique operation named: editUsingGET_13
2019-06-04 17:39:39 -Generating unique operation named: listUsingGET_15
2019-06-04 17:39:39 -Generating unique operation named: removeUsingPOST_21
2019-06-04 17:39:39 -Generating unique operation named: removeUsingPOST_22
2019-06-04 17:39:39 -Generating unique operation named: saveUsingPOST_12
2019-06-04 17:39:39 -Generating unique operation named: updateUsingGET_8
2019-06-04 17:39:39 -Generating unique operation named: updateUsingHEAD_8
2019-06-04 17:39:39 -Generating unique operation named: updateUsingPOST_12
2019-06-04 17:39:39 -Generating unique operation named: updateUsingPUT_8
2019-06-04 17:39:39 -Generating unique operation named: updateUsingPATCH_8
2019-06-04 17:39:39 -Generating unique operation named: updateUsingDELETE_8
2019-06-04 17:39:39 -Generating unique operation named: updateUsingOPTIONS_8
2019-06-04 17:39:39 -Generating unique operation named: updateUsingTRACE_8
2019-06-04 17:39:39 -Generating unique operation named: addUsingGET_13
2019-06-04 17:39:39 -Generating unique operation named: editUsingGET_14
2019-06-04 17:39:39 -Generating unique operation named: listUsingGET_16
2019-06-04 17:39:39 -Generating unique operation named: removeUsingPOST_23
2019-06-04 17:39:39 -Generating unique operation named: removeUsingPOST_24
2019-06-04 17:39:39 -Generating unique operation named: updateUsingGET_9
2019-06-04 17:39:39 -Generating unique operation named: updateUsingHEAD_9
2019-06-04 17:39:39 -Generating unique operation named: updateUsingPOST_13
2019-06-04 17:39:39 -Generating unique operation named: updateUsingPUT_9
2019-06-04 17:39:39 -Generating unique operation named: updateUsingPATCH_9
2019-06-04 17:39:39 -Generating unique operation named: updateUsingDELETE_9
2019-06-04 17:39:39 -Generating unique operation named: updateUsingOPTIONS_9
2019-06-04 17:39:39 -Generating unique operation named: updateUsingTRACE_9
2019-06-04 17:39:39 -Generating unique operation named: listUsingGET_17
2019-06-04 17:39:39 -Generating unique operation named: listUsingHEAD_1
2019-06-04 17:39:39 -Generating unique operation named: listUsingPOST_1
2019-06-04 17:39:39 -Generating unique operation named: listUsingPUT_1
2019-06-04 17:39:39 -Generating unique operation named: listUsingPATCH_1
2019-06-04 17:39:39 -Generating unique operation named: listUsingDELETE_1
2019-06-04 17:39:39 -Generating unique operation named: listUsingOPTIONS_1
2019-06-04 17:39:39 -Generating unique operation named: listUsingTRACE_1
2019-06-04 17:39:39 -Generating unique operation named: listUsingGET_18
2019-06-04 17:39:39 -Generating unique operation named: addUsingGET_14
2019-06-04 17:39:39 -Generating unique operation named: batchRemoveUsingPOST_4
2019-06-04 17:39:39 -Generating unique operation named: editUsingGET_15
2019-06-04 17:39:39 -Generating unique operation named: listUsingGET_19
2019-06-04 17:39:39 -Generating unique operation named: removeUsingPOST_25
2019-06-04 17:39:39 -Generating unique operation named: saveUsingPOST_13
2019-06-04 17:39:39 -Generating unique operation named: treeUsingGET_3
2019-06-04 17:39:39 -Generating unique operation named: treeViewUsingGET_1
2019-06-04 17:39:39 -Generating unique operation named: updateUsingPOST_14
2019-06-04 17:39:39 -Generating unique operation named: addUsingGET_15
2019-06-04 17:39:39 -Generating unique operation named: editUsingGET_16
2019-06-04 17:39:39 -Generating unique operation named: listUsingGET_20
2019-06-04 17:39:39 -Generating unique operation named: removeUsingPOST_26
2019-06-04 17:39:39 -Generating unique operation named: removeUsingPOST_27
2019-06-04 17:39:39 -Generating unique operation named: saveUsingPOST_14
2019-06-04 17:39:39 -Generating unique operation named: updateUsingGET_10
2019-06-04 17:39:39 -Generating unique operation named: updateUsingHEAD_10
2019-06-04 17:39:39 -Generating unique operation named: updateUsingPOST_15
2019-06-04 17:39:39 -Generating unique operation named: updateUsingPUT_10
2019-06-04 17:39:39 -Generating unique operation named: updateUsingPATCH_10
2019-06-04 17:39:39 -Generating unique operation named: updateUsingDELETE_10
2019-06-04 17:39:39 -Generating unique operation named: updateUsingOPTIONS_10
2019-06-04 17:39:39 -Generating unique operation named: updateUsingTRACE_10
2019-06-04 17:39:39 -Starting Quartz Scheduler now
2019-06-04 17:39:39 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-06-04 17:39:39 -Starting...
2019-06-04 17:39:39 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-06-04 17:39:39 -Started.
2019-06-04 17:39:39 -Starting ProtocolHandler ["http-nio-8888"]
2019-06-04 17:39:39 -Using a shared selector for servlet write/read
2019-06-04 17:39:39 -Tomcat started on port(s): 8888 (http) with context path ''
2019-06-04 17:39:39 -Started BootdoApplication in 8.954 seconds (JVM running for 384.333)
2019-06-04 17:39:39 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-06-04 17:39:39 -==> Parameters: 
2019-06-04 17:39:39 -<==      Total: 1
2019-06-04 17:39:39 -Condition evaluation unchanged
2019-06-04 17:40:24 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-06-04 17:40:24 -FrameworkServlet 'dispatcherServlet': initialization started
2019-06-04 17:40:24 -FrameworkServlet 'dispatcherServlet': initialization completed in 12 ms
2019-06-04 17:40:24 -Enabling session validation scheduler...
2019-06-04 17:40:24 -请求地址 : http://localhost:8888/login;JSESSIONID=22e57024-7a98-4e41-9cab-feb61b495d84
2019-06-04 17:40:24 -HTTP METHOD : GET
2019-06-04 17:40:24 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-06-04 17:40:24 -参数 : [{}]
2019-06-04 17:40:24 -耗时 : 1
2019-06-04 17:40:24 -返回值 : login
2019-06-04 17:40:25 -请求地址 : http://localhost:8888/login
2019-06-04 17:40:25 -HTTP METHOD : GET
2019-06-04 17:40:25 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-06-04 17:40:25 -参数 : [{}]
2019-06-04 17:40:25 -耗时 : 0
2019-06-04 17:40:25 -返回值 : login
2019-06-04 17:40:26 -请求地址 : http://localhost:8888/login
2019-06-04 17:40:26 -HTTP METHOD : POST
2019-06-04 17:40:26 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-06-04 17:40:26 -参数 : [admin, 111111]
2019-06-04 17:40:26 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-06-04 17:40:26 -==> Parameters: admin(String)
2019-06-04 17:40:26 -<==      Total: 1
2019-06-04 17:40:26 -耗时 : 8
2019-06-04 17:40:26 -返回值 : {msg=操作成功, code=0}
2019-06-04 17:40:26 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-06-04 17:40:26 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-04 17:40:26 -==> Parameters: 1(Long), admin(String), 登录(String), 8(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-06-04 17:40:26.017(Timestamp)
2019-06-04 17:40:26 -请求地址 : http://localhost:8888/index
2019-06-04 17:40:26 -HTTP METHOD : GET
2019-06-04 17:40:26 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-06-04 17:40:26 -参数 : [{}]
2019-06-04 17:40:26 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-06-04 17:40:26 -==> Parameters: 1(Long)
2019-06-04 17:40:26 -<==      Total: 34
2019-06-04 17:40:26 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-06-04 17:40:26 -==> Parameters: 144(Long)
2019-06-04 17:40:26 -<==      Total: 1
2019-06-04 17:40:26 -耗时 : 19
2019-06-04 17:40:26 -返回值 : index_v1
2019-06-04 17:40:26 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-04 17:40:26 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 20(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-hotel","url":""},"checked":false,"children":[{"attributes":{"icon":"","url":"/xjbg/room/roomMng"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"105","text":"开房"},{"attributes":{"icon":"fa fa-bed","url":"/xjbg/room"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"106","parentId":"105","text":"房间管理"},{"attributes":{"icon":"","url":"/xjbg/product"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"105","text":"商品管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"欣吉宾馆"},{"attributes":{"icon":"fa fa-commenting","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user","url":"/weixin/weixinUser"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"109","text":"用户管理"}],"hasChildren":true,"hasParent":false,"id":"109","parentId":"0","text":"微信管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","text":"基础管理"},{"attributes":{"icon":"fa fa-desktop"},"checked":false,"children":[{"attributes":{"icon":"fa fa-user","url":"sys/user/"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"6","parentId":"3","text":"用户管理"},{"attributes":{"icon":"fa fa-paw","url":"sys/role"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"7","parentId":"3","text":"角色管理"},{"attributes":{"icon":"fa fa-th-list","url":"sys/menu/"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"3","text":"系统菜单"},{"attributes":{"icon":"fa fa-users","url":"/system/sysDept"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"73","parentId":"3","text":"部门管理"}],"hasChildren":true,"hasParent":false,"id":"3","parentId":"0","text":"系统管理"},{"attributes":{"icon":"fa fa-gear","url":""},"checked":false,"children":[{"attributes":{"icon":"","url":"/swagger-ui.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"104","parentId":"77","text":"swagger"},{"attributes":{"icon":"fa fa-code","url":"common/generator"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"48","parentId":"77","text":"代码生成"},{"attributes":{"icon":"fa fa-hourglass-1","url":"common/job"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"72","parentId":"77","text":"计划任务"}],"hasChildren":true,"hasParent":false,"id":"77","parentId":"0","text":"系统工具"},{"attributes":{"icon":"fa fa-video-camera","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user","url":"sys/online"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"92","parentId":"91","text":"在线用户"},{"attributes":{"icon":"fa fa-warning","url":"common/log"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"27","parentId":"91","text":"系统日志"},{"attributes":{"icon":"fa fa-caret-square-o-right","url":"/druid/index.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"57","parentId":"91","text":"运行监控"}],"hasChildren":true,"hasParent":false,"id":"91","parentId":"0","text":"系统监控"},{"attributes":{"icon":"fa fa-laptop","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-pencil-square","url":"oa/notify"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"85","parentId":"84","text":"通知公告"},{"attributes":{"icon":"fa fa-envelope-square","url":"oa/notify/selfNotify"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"90","parentId":"84","text":"我的通知"}],"hasChildren":true,"hasParent":false,"id":"84","parentId":"0","text":"办公管理"},{"attributes":{"icon":"fa fa-print","url":""},"checked":false,"children":[{"attributes":{"icon":"","url":"activiti/task/todo"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"101","parentId":"93","text":"待办任务"},{"attributes":{"icon":"fa fa-sort-amount-asc","url":"activiti/model"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"94","parentId":"93","text":"模型管理"},{"attributes":{"icon":"fa fa-flag","url":"activiti/process"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"96","parentId":"93","text":"流程管理"}],"hasChildren":true,"hasParent":false,"id":"93","parentId":"0","text":"工作流程"},{"attributes":{"icon":"fa fa-rss","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-edit","url":"/blog/bContent/add"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"68","parentId":"49","text":"发布文章"},{"(String), 127.0.0.1(String), 2019-06-04 17:40:26.053(Timestamp)
2019-06-04 17:40:26 -请求地址 : http://localhost:8888/main
2019-06-04 17:40:26 -HTTP METHOD : GET
2019-06-04 17:40:26 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-04 17:40:26 -参数 : []
2019-06-04 17:40:26 -耗时 : 1
2019-06-04 17:40:26 -返回值 : main
2019-06-04 17:40:26 -请求地址 : http://localhost:8888/oa/notify/message
2019-06-04 17:40:26 -HTTP METHOD : GET
2019-06-04 17:40:26 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-06-04 17:40:26 -参数 : []
2019-06-04 17:40:26 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-06-04 17:40:26 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-06-04 17:40:26 -<==      Total: 0
2019-06-04 17:40:26 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-06-04 17:40:26 -==> Parameters: 1(Long), 0(String)
2019-06-04 17:40:26 -<==      Total: 1
2019-06-04 17:40:26 -耗时 : 18
2019-06-04 17:40:26 -返回值 : com.bootdo.common.utils.PageUtils@21783bcc
2019-06-04 17:40:26 -请求地址 : http://localhost:8888/main
2019-06-04 17:40:26 -HTTP METHOD : GET
2019-06-04 17:40:26 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-04 17:40:26 -参数 : []
2019-06-04 17:40:26 -耗时 : 1
2019-06-04 17:40:26 -返回值 : main
2019-06-04 17:40:26 -<==    Updates: 1
2019-06-04 17:40:26 -<==    Updates: 1
2019-06-04 17:40:27 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-06-04 17:40:27 -==> Parameters: 1(Long)
2019-06-04 17:40:27 -<==      Total: 58
2019-06-04 17:40:27 -请求地址 : http://localhost:8888/xjbg/room/roomMng
2019-06-04 17:40:27 -HTTP METHOD : GET
2019-06-04 17:40:27 -CLASS_METHOD : com.bootdo.xjbg.controller.RoomController.roomMng
2019-06-04 17:40:27 -参数 : [{}]
2019-06-04 17:40:27 -==>  Preparing: select `id`,`room_no`,`room_type`,`floor`,`room_state`,`price`,`create_time`,`update_time`,`create_user`,`update_user` from xjbg_room 
2019-06-04 17:40:27 -==> Parameters: 
2019-06-04 17:40:27 -<==      Total: 8
2019-06-04 17:40:27 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 17:40:27 -==> Parameters: room_type(String)
2019-06-04 17:40:27 -<==      Total: 7
2019-06-04 17:40:27 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 17:40:27 -==> Parameters: floor(String)
2019-06-04 17:40:27 -<==      Total: 5
2019-06-04 17:40:27 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 17:40:27 -==> Parameters: room_state(String)
2019-06-04 17:40:27 -<==      Total: 2
2019-06-04 17:40:27 -==>  Preparing: select * from sys_user 
2019-06-04 17:40:27 -==> Parameters: 
2019-06-04 17:40:27 -<==      Total: 11
2019-06-04 17:40:27 -耗时 : 13
2019-06-04 17:40:27 -返回值 : xjbg/room/roomMng
2019-06-04 17:40:28 -请求地址 : http://localhost:8888/xjbg/room/operation/1
2019-06-04 17:40:28 -HTTP METHOD : GET
2019-06-04 17:40:28 -CLASS_METHOD : com.bootdo.xjbg.controller.RoomController.operation
2019-06-04 17:40:28 -参数 : [1, {}]
2019-06-04 17:40:28 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 17:40:28 -==> Parameters: room_type(String)
2019-06-04 17:40:28 -<==      Total: 7
2019-06-04 17:40:28 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 17:40:28 -==> Parameters: floor(String)
2019-06-04 17:40:28 -<==      Total: 5
2019-06-04 17:40:28 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 17:40:28 -==> Parameters: room_state(String)
2019-06-04 17:40:28 -<==      Total: 2
2019-06-04 17:40:28 -==>  Preparing: select * from sys_user 
2019-06-04 17:40:28 -==> Parameters: 
2019-06-04 17:40:28 -<==      Total: 11
2019-06-04 17:40:28 -==>  Preparing: select `id`,`product_name`,`purchase_price`,`selling_price`,`product_pic`,`create_time`,`create_user`,`update_time`,`update_user` from xjbg_product order by id desc 
2019-06-04 17:40:28 -==> Parameters: 
2019-06-04 17:40:28 -<==      Total: 5
2019-06-04 17:40:28 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 17:40:28 -==> Parameters: order_type(String)
2019-06-04 17:40:28 -<==      Total: 3
2019-06-04 17:40:28 -==>  Preparing: select `id`,`room_no`,`room_type`,`floor`,`room_state`,`price`,`create_time`,`update_time`,`create_user`,`update_user` from xjbg_room where id = ? 
2019-06-04 17:40:28 -==> Parameters: 1(Integer)
2019-06-04 17:40:28 -<==      Total: 1
2019-06-04 17:40:28 -耗时 : 16
2019-06-04 17:40:28 -返回值 : xjbg/room/operation
2019-06-04 17:40:32 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-04 17:40:32 -Failed to convert value of type 'java.lang.String' to required type 'java.util.List'; nested exception is java.lang.IllegalStateException: Cannot convert value of type 'java.lang.String' to required type 'com.bootdo.xjbg.domain.OrderItemDO': no matching editors or conversion strategy found
org.springframework.web.method.annotation.MethodArgumentConversionNotSupportedException: Failed to convert value of type 'java.lang.String' to required type 'java.util.List'; nested exception is java.lang.IllegalStateException: Cannot convert value of type 'java.lang.String' to required type 'com.bootdo.xjbg.domain.OrderItemDO': no matching editors or conversion strategy found
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:127)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:124)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:161)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:131)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.IllegalStateException: Cannot convert value of type 'java.lang.String' to required type 'com.bootdo.xjbg.domain.OrderItemDO': no matching editors or conversion strategy found
	at org.springframework.beans.TypeConverterDelegate.convertIfNecessary(TypeConverterDelegate.java:299)
	at org.springframework.beans.TypeConverterDelegate.convertToTypedCollection(TypeConverterDelegate.java:566)
	at org.springframework.beans.TypeConverterDelegate.convertIfNecessary(TypeConverterDelegate.java:213)
	at org.springframework.beans.TypeConverterDelegate.convertIfNecessary(TypeConverterDelegate.java:99)
	at org.springframework.beans.TypeConverterSupport.doConvert(TypeConverterSupport.java:73)
	at org.springframework.beans.TypeConverterSupport.convertIfNecessary(TypeConverterSupport.java:52)
	at org.springframework.validation.DataBinder.convertIfNecessary(DataBinder.java:692)
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:123)
	... 68 common frames omitted
2019-06-04 17:40:32 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8888/xjbg/room/kaifan(String), org.springframework.web.method.annotation.MethodArgumentConversionNotSupportedException: Failed to convert value of type 'java.lang.String' to required type 'java.util.List'; nested exception is java.lang.IllegalStateException: Cannot convert value of type 'java.lang.String' to required type 'com.bootdo.xjbg.domain.OrderItemDO': no matching editors or conversion strategy found(String), null, 2019-06-04 17:40:32.788(Timestamp)
2019-06-04 17:40:32 -Resolved exception caused by Handler execution: org.springframework.web.method.annotation.MethodArgumentConversionNotSupportedException: Failed to convert value of type 'java.lang.String' to required type 'java.util.List'; nested exception is java.lang.IllegalStateException: Cannot convert value of type 'java.lang.String' to required type 'com.bootdo.xjbg.domain.OrderItemDO': no matching editors or conversion strategy found
2019-06-04 17:40:32 -请求地址 : http://localhost:8888/xjbg/room/operation/1
2019-06-04 17:40:32 -HTTP METHOD : GET
2019-06-04 17:40:32 -CLASS_METHOD : com.bootdo.xjbg.controller.RoomController.operation
2019-06-04 17:40:32 -参数 : [1, {}]
2019-06-04 17:40:32 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 17:40:32 -==> Parameters: room_type(String)
2019-06-04 17:40:32 -<==      Total: 7
2019-06-04 17:40:32 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 17:40:32 -==> Parameters: floor(String)
2019-06-04 17:40:32 -<==      Total: 5
2019-06-04 17:40:32 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 17:40:32 -==> Parameters: room_state(String)
2019-06-04 17:40:32 -<==      Total: 2
2019-06-04 17:40:32 -==>  Preparing: select * from sys_user 
2019-06-04 17:40:32 -==> Parameters: 
2019-06-04 17:40:32 -<==      Total: 11
2019-06-04 17:40:32 -==>  Preparing: select `id`,`product_name`,`purchase_price`,`selling_price`,`product_pic`,`create_time`,`create_user`,`update_time`,`update_user` from xjbg_product order by id desc 
2019-06-04 17:40:32 -==> Parameters: 
2019-06-04 17:40:32 -<==      Total: 5
2019-06-04 17:40:32 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 17:40:32 -==> Parameters: order_type(String)
2019-06-04 17:40:32 -<==      Total: 3
2019-06-04 17:40:32 -==>  Preparing: select `id`,`room_no`,`room_type`,`floor`,`room_state`,`price`,`create_time`,`update_time`,`create_user`,`update_user` from xjbg_room where id = ? 
2019-06-04 17:40:32 -==> Parameters: 1(Integer)
2019-06-04 17:40:32 -<==      Total: 1
2019-06-04 17:40:32 -耗时 : 12
2019-06-04 17:40:32 -返回值 : xjbg/room/operation
2019-06-04 17:40:32 -<==    Updates: 1
2019-06-04 17:40:37 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 1 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 9, active threads = 0, queued tasks = 0, completed tasks = 9], outboundChannelpool size = 1, active threads = 0, queued tasks = 0, completed tasks = 1], sockJsScheduler[pool size = 8, active threads = 1, queued tasks = 3, completed tasks = 3]
2019-06-04 17:40:57 -Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@5d8f10bd: startup date [Tue Jun 04 17:39:30 CST 2019]; root of context hierarchy
2019-06-04 17:40:57 -Stopping beans in phase 2147483647
2019-06-04 17:40:57 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED paused.
2019-06-04 17:40:57 -Stopping...
2019-06-04 17:40:57 -BrokerAvailabilityEvent[available=false, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[1 sessions]]]]
2019-06-04 17:40:57 -Stopped.
2019-06-04 17:40:57 -Unregistering JMX-exposed beans on shutdown
2019-06-04 17:40:57 -Unregistering JMX-exposed beans
2019-06-04 17:40:57 -Shutting down ExecutorService 'brokerChannelExecutor'
2019-06-04 17:40:57 -Shutting down ExecutorService 'messageBrokerTaskScheduler'
2019-06-04 17:40:57 -Shutting down ExecutorService 'clientOutboundChannelExecutor'
2019-06-04 17:40:57 -Shutting down ExecutorService 'clientInboundChannelExecutor'
2019-06-04 17:40:57 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED shutting down.
2019-06-04 17:40:57 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED paused.
2019-06-04 17:40:57 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED shutdown complete.
2019-06-04 17:40:57 -Shutting down Quartz Scheduler
2019-06-04 17:40:57 -{dataSource-4} closed
2019-06-04 17:40:57 -Disabled session validation scheduler.
2019-06-04 17:40:59 -Starting BootdoApplication on LAPTOP-ELP5M68R with PID 8564 (D:\workspace\bootdo\bootdo\target\classes started by Lenovo in D:\workspace\bootdo\bootdo)
2019-06-04 17:40:59 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-06-04 17:40:59 -The following profiles are active: dev
2019-06-04 17:40:59 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@7c4ec0f: startup date [Tue Jun 04 17:40:59 CST 2019]; root of context hierarchy
2019-06-04 17:41:00 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-06-04 17:41:00 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$32e5fd9d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-04 17:41:00 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$253f2c44] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-04 17:41:00 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-04 17:41:00 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-04 17:41:00 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-04 17:41:00 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache.4' does not yet exist.  Creating now.
2019-06-04 17:41:00 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache.4]
2019-06-04 17:41:00 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-04 17:41:00 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-04 17:41:00 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-04 17:41:00 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-04 17:41:01 -Tomcat initialized with port(s): 8888 (http)
2019-06-04 17:41:01 -Initializing ProtocolHandler ["http-nio-8888"]
2019-06-04 17:41:01 -Starting service [Tomcat]
2019-06-04 17:41:01 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-06-04 17:41:01 -Initializing Spring embedded WebApplicationContext
2019-06-04 17:41:01 -Root WebApplicationContext: initialization completed in 2358 ms
2019-06-04 17:41:01 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-06-04 17:41:01 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-06-04 17:41:01 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-06-04 17:41:01 -Mapping filter: 'requestContextFilter' to: [/*]
2019-06-04 17:41:01 -Filter xssFilter was not registered (disabled)
2019-06-04 17:41:01 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-06-04 17:41:01 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-06-04 17:41:01 -Servlet statViewServlet mapped to [/druid/*]
2019-06-04 17:41:01 -Servlet dispatcherServlet mapped to [/]
2019-06-04 17:41:01 -{dataSource-5} inited
2019-06-04 17:41:02 -ProcessEngine default created
2019-06-04 17:41:09 -Starting BootdoApplication on LAPTOP-ELP5M68R with PID 7528 (D:\workspace\bootdo\bootdo\target\classes started by Lenovo in D:\workspace\bootdo\bootdo)
2019-06-04 17:41:09 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-06-04 17:41:09 -The following profiles are active: dev
2019-06-04 17:41:09 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@61b39c83: startup date [Tue Jun 04 17:41:09 CST 2019]; root of context hierarchy
2019-06-04 17:41:11 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-06-04 17:41:12 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$32294812] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-04 17:41:12 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$248276b9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-04 17:41:12 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-04 17:41:12 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-04 17:41:12 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-04 17:41:12 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-06-04 17:41:12 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-06-04 17:41:12 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-04 17:41:12 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-04 17:41:12 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-04 17:41:12 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-04 17:41:13 -Tomcat initialized with port(s): 8888 (http)
2019-06-04 17:41:13 -Initializing ProtocolHandler ["http-nio-8888"]
2019-06-04 17:41:13 -Starting service [Tomcat]
2019-06-04 17:41:13 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-06-04 17:41:13 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [F:\yff\jdk1.8\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;D:\app\Lenovo\product\11.2.0\dbhome_1\bin;\bin;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\iCLS\;C:\Program Files\Intel\Intel(R) Management Engine Components\iCLS\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;F:\yff\jdk1.8\BIN;D:\Program Files\develop\apache-maven-3.3.9\BIN;D:\Program Files\matlab\v81\runtime\win64;D:\Program Files\matlab\v81\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;F:\yff\redis64;D:\Program Files\Notepad++;D:\Program Files\mysql-5.7.24-winx64\BIN;D:\Program Files\matlab\v81\bin\win64;D:\Program Files\matlab\v81\runtime\win64;D:\Program Files\develop\SVN\bin;D:\Program Files\develop\apache-tomcat-8.5.8-ltcins-common-4280\bin;D:\Program Files\develop\apache-tomcat-8.5.8-ltcins-common-4080\bin;D:\Program Files\develop\zookeeper-3.4.10\BIN;D:\Program Files\develop\Git\cmd;C:\Users\Lenovo\AppData\Local\Microsoft\WindowsApps;C:\Users\Lenovo\AppData\Local\GitHubDesktop\bin;.]
2019-06-04 17:41:13 -Initializing Spring embedded WebApplicationContext
2019-06-04 17:41:13 -Root WebApplicationContext: initialization completed in 3549 ms
2019-06-04 17:41:13 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-06-04 17:41:13 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-06-04 17:41:13 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-06-04 17:41:13 -Mapping filter: 'requestContextFilter' to: [/*]
2019-06-04 17:41:13 -Filter xssFilter was not registered (disabled)
2019-06-04 17:41:13 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-06-04 17:41:13 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-06-04 17:41:13 -Servlet statViewServlet mapped to [/druid/*]
2019-06-04 17:41:13 -Servlet dispatcherServlet mapped to [/]
2019-06-04 17:41:13 -{dataSource-1} inited
2019-06-04 17:41:14 -ProcessEngine default created
2019-06-04 17:41:15 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@61b39c83: startup date [Tue Jun 04 17:41:09 CST 2019]; root of context hierarchy
2019-06-04 17:41:15 -Using default implementation for ThreadExecutor
2019-06-04 17:41:15 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-06-04 17:41:15 -Quartz Scheduler v.2.2.1 created.
2019-06-04 17:41:15 -RAMJobStore initialized.
2019-06-04 17:41:15 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-06-04 17:41:15 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-06-04 17:41:15 -Quartz scheduler version: 2.2.1
2019-06-04 17:41:15 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@15e3536e
2019-06-04 17:41:15 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-06-04 17:41:15 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-06-04 17:41:16 -Mapped "{[/activiti/model/{id}],methods=[DELETE]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.ModelController.remove(java.lang.String)
2019-06-04 17:41:16 -Mapped "{[/activiti/model/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.activiti.controller.ModelController.list(int,int)
2019-06-04 17:41:16 -Mapped "{[/activiti/model/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.ModelController.batchRemove(java.lang.String[])
2019-06-04 17:41:16 -Mapped "{[/activiti/model],methods=[GET]}" onto org.springframework.web.servlet.ModelAndView com.bootdo.activiti.controller.ModelController.model()
2019-06-04 17:41:16 -Mapped "{[/activiti/model/deploy/{id}],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.ModelController.deploy(java.lang.String) throws java.lang.Exception
2019-06-04 17:41:16 -Mapped "{[/activiti/model/export/{id}],methods=[GET]}" onto public void com.bootdo.activiti.controller.ModelController.exportToXml(java.lang.String,javax.servlet.http.HttpServletResponse)
2019-06-04 17:41:16 -Mapped "{[/activiti/editor/stencilset],methods=[GET],produces=[application/json;charset=utf-8]}" onto public java.lang.String com.bootdo.activiti.controller.ModelController.getStencilset()
2019-06-04 17:41:16 -Mapped "{[/activiti/model/add]}" onto public void com.bootdo.activiti.controller.ModelController.newModel(javax.servlet.http.HttpServletResponse) throws java.io.UnsupportedEncodingException
2019-06-04 17:41:16 -Mapped "{[/activiti/model/{modelId}/json],methods=[GET]}" onto public com.fasterxml.jackson.databind.node.ObjectNode com.bootdo.activiti.controller.ModelController.getEditorJson(java.lang.String)
2019-06-04 17:41:16 -Mapped "{[/activiti/model/edit/{id}],methods=[GET]}" onto public void com.bootdo.activiti.controller.ModelController.edit(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-06-04 17:41:16 -Mapped "{[/activiti/model/{modelId}/save],methods=[PUT]}" onto public void com.bootdo.activiti.controller.ModelController.saveModel(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2019-06-04 17:41:16 -Mapped "{[/activiti/process/add],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.activiti.controller.ProcessController.add()
2019-06-04 17:41:16 -Mapped "{[/activiti/process/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.ProcessController.remove(java.lang.String)
2019-06-04 17:41:16 -Mapped "{[/activiti/process/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.activiti.controller.ProcessController.list(int,int)
2019-06-04 17:41:16 -Mapped "{[/activiti/process/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.ProcessController.batchRemove(java.lang.String[])
2019-06-04 17:41:16 -Mapped "{[/activiti/process],methods=[GET]}" onto org.springframework.web.servlet.ModelAndView com.bootdo.activiti.controller.ProcessController.process()
2019-06-04 17:41:16 -Mapped "{[/activiti/process/convertToModel/{procDefId}]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.ProcessController.convertToModel(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes) throws java.io.UnsupportedEncodingException,javax.xml.stream.XMLStreamException
2019-06-04 17:41:16 -Mapped "{[/activiti/process/resource/read/{xml}/{id}]}" onto public void com.bootdo.activiti.controller.ProcessController.resourceRead(java.lang.String,java.lang.String,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-06-04 17:41:16 -Mapped "{[/activiti/process/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.ProcessController.deploy(java.lang.String,java.lang.String,org.springframework.web.multipart.MultipartFile)
2019-06-04 17:41:16 -Mapped "{[/act/salary/form],methods=[GET]}" onto java.lang.String com.bootdo.activiti.controller.SalaryController.add()
2019-06-04 17:41:16 -Mapped "{[/act/salary/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.SalaryController.remove(java.lang.String)
2019-06-04 17:41:16 -Mapped "{[/act/salary/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.SalaryController.remove(java.lang.String[])
2019-06-04 17:41:16 -Mapped "{[/act/salary/update]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.SalaryController.update(com.bootdo.activiti.domain.SalaryDO)
2019-06-04 17:41:16 -Mapped "{[/act/salary/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.activiti.controller.SalaryController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-04 17:41:16 -Mapped "{[/act/salary],methods=[GET]}" onto java.lang.String com.bootdo.activiti.controller.SalaryController.Salary()
2019-06-04 17:41:16 -Mapped "{[/act/salary/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.SalaryController.saveOrUpdate(com.bootdo.activiti.domain.SalaryDO)
2019-06-04 17:41:16 -Mapped "{[/act/salary/form/{taskId}],methods=[GET]}" onto java.lang.String com.bootdo.activiti.controller.SalaryController.edit(java.lang.String,org.springframework.ui.Model)
2019-06-04 17:41:16 -Mapped "{[/activiti/task/form/{procDefId}/{taskId}],methods=[GET]}" onto public void com.bootdo.activiti.controller.TaskController.form(java.lang.String,java.lang.String,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-06-04 17:41:16 -Mapped "{[/activiti/task/gotoList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.activiti.controller.TaskController.list(int,int)
2019-06-04 17:41:16 -Mapped "{[/activiti/task/todo],methods=[GET]}" onto org.springframework.web.servlet.ModelAndView com.bootdo.activiti.controller.TaskController.todo()
2019-06-04 17:41:16 -Mapped "{[/activiti/task/form/{procDefId}],methods=[GET]}" onto public void com.bootdo.activiti.controller.TaskController.startForm(java.lang.String,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-06-04 17:41:16 -Mapped "{[/activiti/task/trace/photo/{procDefId}/{execId}]}" onto public void com.bootdo.activiti.controller.TaskController.tracePhoto(java.lang.String,java.lang.String,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-06-04 17:41:16 -Mapped "{[/activiti/task/goto],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.activiti.controller.TaskController.gotoTask()
2019-06-04 17:41:16 -Mapped "{[/activiti/task/todoList],methods=[GET]}" onto java.util.List<com.bootdo.activiti.vo.TaskVO> com.bootdo.activiti.controller.TaskController.todoList()
2019-06-04 17:41:16 -Mapped "{[/blog/open/post/{cid}],methods=[GET]}" onto java.lang.String com.bootdo.blog.controller.BlogController.post(java.lang.Long,org.springframework.ui.Model)
2019-06-04 17:41:16 -Mapped "{[/blog/open/page/{categories}],methods=[GET]}" onto java.lang.String com.bootdo.blog.controller.BlogController.about(java.lang.String,org.springframework.ui.Model)
2019-06-04 17:41:16 -Mapped "{[/blog/open/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.blog.controller.BlogController.opentList(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-04 17:41:16 -Mapped "{[/blog],methods=[GET]}" onto java.lang.String com.bootdo.blog.controller.BlogController.blog()
2019-06-04 17:41:16 -Mapped "{[/blog/bContent/add],methods=[GET]}" onto java.lang.String com.bootdo.blog.controller.ContentController.add()
2019-06-04 17:41:16 -Mapped "{[/blog/bContent/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.blog.controller.ContentController.remove(java.lang.Long)
2019-06-04 17:41:16 -Mapped "{[/blog/bContent/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.blog.controller.ContentController.remove(java.lang.Long[])
2019-06-04 17:41:16 -Mapped "{[/blog/bContent/update]}" onto public com.bootdo.common.utils.R com.bootdo.blog.controller.ContentController.update(com.bootdo.blog.domain.ContentDO)
2019-06-04 17:41:16 -Mapped "{[/blog/bContent/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.blog.controller.ContentController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-04 17:41:16 -Mapped "{[/blog/bContent/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.blog.controller.ContentController.save(com.bootdo.blog.domain.ContentDO)
2019-06-04 17:41:16 -Mapped "{[/blog/bContent/edit/{cid}],methods=[GET]}" onto java.lang.String com.bootdo.blog.controller.ContentController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-04 17:41:16 -Mapped "{[/blog/bContent],methods=[GET]}" onto java.lang.String com.bootdo.blog.controller.ContentController.bContent()
2019-06-04 17:41:16 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-06-04 17:41:16 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-06-04 17:41:16 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-06-04 17:41:16 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-06-04 17:41:16 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-04 17:41:16 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-06-04 17:41:16 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-06-04 17:41:16 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-04 17:41:16 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-06-04 17:41:16 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-06-04 17:41:16 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-06-04 17:41:16 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-06-04 17:41:16 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-06-04 17:41:16 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-06-04 17:41:16 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-06-04 17:41:16 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-04 17:41:16 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-06-04 17:41:16 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-06-04 17:41:16 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-04 17:41:16 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-06-04 17:41:16 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-06-04 17:41:16 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-04 17:41:16 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-06-04 17:41:16 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-06-04 17:41:16 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-06-04 17:41:16 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-06-04 17:41:16 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-06-04 17:41:16 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-06-04 17:41:16 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-06-04 17:41:16 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-06-04 17:41:16 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-06-04 17:41:16 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-04 17:41:16 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-06-04 17:41:16 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-06-04 17:41:16 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-04 17:41:16 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-06-04 17:41:16 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-06-04 17:41:16 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-06-04 17:41:16 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-06-04 17:41:16 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-04 17:41:16 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-06-04 17:41:16 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-06-04 17:41:16 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-06-04 17:41:16 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-06-04 17:41:16 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-06-04 17:41:16 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-06-04 17:41:16 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-06-04 17:41:16 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-06-04 17:41:16 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-04 17:41:16 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-06-04 17:41:16 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-06-04 17:41:16 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-04 17:41:16 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-06-04 17:41:16 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-06-04 17:41:16 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-04 17:41:16 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-06-04 17:41:16 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-06-04 17:41:16 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-06-04 17:41:16 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-06-04 17:41:16 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-06-04 17:41:16 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-06-04 17:41:16 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-06-04 17:41:16 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-04 17:41:16 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-06-04 17:41:16 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-06-04 17:41:16 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-06-04 17:41:16 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-06-04 17:41:16 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-06-04 17:41:16 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-06-04 17:41:16 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String)
2019-06-04 17:41:16 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-06-04 17:41:16 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-06-04 17:41:16 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-06-04 17:41:16 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-06-04 17:41:16 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-04 17:41:16 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-06-04 17:41:16 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-06-04 17:41:16 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-06-04 17:41:16 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-06-04 17:41:16 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-06-04 17:41:16 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-06-04 17:41:16 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-06-04 17:41:16 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-06-04 17:41:16 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-06-04 17:41:16 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-06-04 17:41:16 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-06-04 17:41:16 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-06-04 17:41:16 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-04 17:41:16 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-06-04 17:41:16 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-06-04 17:41:16 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-06-04 17:41:16 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-06-04 17:41:16 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-04 17:41:16 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-06-04 17:41:16 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-06-04 17:41:16 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-06-04 17:41:16 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-04 17:41:16 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-06-04 17:41:16 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-06-04 17:41:16 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-06-04 17:41:16 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-06-04 17:41:16 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-06-04 17:41:16 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-06-04 17:41:16 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-06-04 17:41:16 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-06-04 17:41:16 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-06-04 17:41:16 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-06-04 17:41:16 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-06-04 17:41:16 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-06-04 17:41:16 -Mapped "{[/wxServer],methods=[GET]}" onto public void org.weixin4j.spring.web.WeixinJieruController.get(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-06-04 17:41:16 -Mapped "{[/wxServer],methods=[POST]}" onto public void org.weixin4j.spring.web.WeixinJieruController.post(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-06-04 17:41:16 -Mapped "{[/weixin/weixinUser/add],methods=[GET]}" onto java.lang.String com.bootdo.weixin.controller.WeixinUserController.add()
2019-06-04 17:41:16 -Mapped "{[/weixin/weixinUser/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.weixin.controller.WeixinUserController.remove(java.lang.Long)
2019-06-04 17:41:16 -Mapped "{[/weixin/weixinUser/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.weixin.controller.WeixinUserController.remove(java.lang.Long[])
2019-06-04 17:41:16 -Mapped "{[/weixin/weixinUser/update]}" onto public com.bootdo.common.utils.R com.bootdo.weixin.controller.WeixinUserController.update(com.bootdo.weixin.domain.WeixinUserDO)
2019-06-04 17:41:16 -Mapped "{[/weixin/weixinUser/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.weixin.controller.WeixinUserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-04 17:41:16 -Mapped "{[/weixin/weixinUser/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.weixin.controller.WeixinUserController.save(com.bootdo.weixin.domain.WeixinUserDO)
2019-06-04 17:41:16 -Mapped "{[/weixin/weixinUser/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.weixin.controller.WeixinUserController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-04 17:41:16 -Mapped "{[/weixin/weixinUser],methods=[GET]}" onto java.lang.String com.bootdo.weixin.controller.WeixinUserController.WeixinUser()
2019-06-04 17:41:16 -Mapped "{[/xjbg/order/add],methods=[GET]}" onto java.lang.String com.bootdo.xjbg.controller.OrderController.add()
2019-06-04 17:41:16 -Mapped "{[/xjbg/order/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.xjbg.controller.OrderController.remove(java.lang.Long)
2019-06-04 17:41:16 -Mapped "{[/xjbg/order/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.xjbg.controller.OrderController.remove(java.lang.Long[])
2019-06-04 17:41:16 -Mapped "{[/xjbg/order/update]}" onto public com.bootdo.common.utils.R com.bootdo.xjbg.controller.OrderController.update(com.bootdo.xjbg.domain.OrderDO)
2019-06-04 17:41:16 -Mapped "{[/xjbg/order/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.xjbg.controller.OrderController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-04 17:41:16 -Mapped "{[/xjbg/order/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.xjbg.controller.OrderController.save(com.bootdo.xjbg.domain.OrderDO)
2019-06-04 17:41:16 -Mapped "{[/xjbg/order/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.xjbg.controller.OrderController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-04 17:41:16 -Mapped "{[/xjbg/order],methods=[GET]}" onto java.lang.String com.bootdo.xjbg.controller.OrderController.Order()
2019-06-04 17:41:16 -Mapped "{[/xjbg/orderItem/add],methods=[GET]}" onto java.lang.String com.bootdo.xjbg.controller.OrderItemController.add()
2019-06-04 17:41:16 -Mapped "{[/xjbg/orderItem/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.xjbg.controller.OrderItemController.remove(java.lang.Long)
2019-06-04 17:41:16 -Mapped "{[/xjbg/orderItem/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.xjbg.controller.OrderItemController.remove(java.lang.Long[])
2019-06-04 17:41:16 -Mapped "{[/xjbg/orderItem/update]}" onto public com.bootdo.common.utils.R com.bootdo.xjbg.controller.OrderItemController.update(com.bootdo.xjbg.domain.OrderItemDO)
2019-06-04 17:41:16 -Mapped "{[/xjbg/orderItem/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.xjbg.controller.OrderItemController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-04 17:41:16 -Mapped "{[/xjbg/orderItem/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.xjbg.controller.OrderItemController.save(com.bootdo.xjbg.domain.OrderItemDO)
2019-06-04 17:41:16 -Mapped "{[/xjbg/orderItem/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.xjbg.controller.OrderItemController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-04 17:41:16 -Mapped "{[/xjbg/orderItem],methods=[GET]}" onto java.lang.String com.bootdo.xjbg.controller.OrderItemController.OrderItem()
2019-06-04 17:41:16 -Mapped "{[/xjbg/product/add],methods=[GET]}" onto java.lang.String com.bootdo.xjbg.controller.ProductController.add()
2019-06-04 17:41:16 -Mapped "{[/xjbg/product/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.xjbg.controller.ProductController.remove(java.lang.Long)
2019-06-04 17:41:16 -Mapped "{[/xjbg/product/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.xjbg.controller.ProductController.remove(java.lang.Long[])
2019-06-04 17:41:16 -Mapped "{[/xjbg/product/update]}" onto public com.bootdo.common.utils.R com.bootdo.xjbg.controller.ProductController.update(com.bootdo.xjbg.domain.ProductDO,org.springframework.web.multipart.MultipartFile[])
2019-06-04 17:41:16 -Mapped "{[/xjbg/product/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.xjbg.controller.ProductController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-04 17:41:16 -Mapped "{[/xjbg/product/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.xjbg.controller.ProductController.save(com.bootdo.xjbg.domain.ProductDO,org.springframework.web.multipart.MultipartFile[])
2019-06-04 17:41:16 -Mapped "{[/xjbg/product/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.xjbg.controller.ProductController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-04 17:41:16 -Mapped "{[/xjbg/product],methods=[GET]}" onto java.lang.String com.bootdo.xjbg.controller.ProductController.Product()
2019-06-04 17:41:16 -Mapped "{[/xjbg/room/add],methods=[GET]}" onto java.lang.String com.bootdo.xjbg.controller.RoomController.add(org.springframework.ui.Model)
2019-06-04 17:41:16 -Mapped "{[/xjbg/room/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.xjbg.controller.RoomController.remove(java.lang.Integer[])
2019-06-04 17:41:16 -Mapped "{[/xjbg/room/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.xjbg.controller.RoomController.remove(java.lang.Integer)
2019-06-04 17:41:16 -Mapped "{[/xjbg/room/update]}" onto public com.bootdo.common.utils.R com.bootdo.xjbg.controller.RoomController.update(com.bootdo.xjbg.domain.RoomDO)
2019-06-04 17:41:16 -Mapped "{[/xjbg/room/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.xjbg.controller.RoomController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-04 17:41:16 -Mapped "{[/xjbg/room/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.xjbg.controller.RoomController.save(com.bootdo.xjbg.domain.RoomDO)
2019-06-04 17:41:16 -Mapped "{[/xjbg/room/operation/{roomId}],methods=[GET]}" onto java.lang.String com.bootdo.xjbg.controller.RoomController.operation(java.lang.Integer,org.springframework.ui.Model)
2019-06-04 17:41:16 -Mapped "{[/xjbg/room/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.xjbg.controller.RoomController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-06-04 17:41:16 -Mapped "{[/xjbg/room/roomMng],methods=[GET]}" onto java.lang.String com.bootdo.xjbg.controller.RoomController.roomMng(org.springframework.ui.Model)
2019-06-04 17:41:16 -Mapped "{[/xjbg/room],methods=[GET]}" onto java.lang.String com.bootdo.xjbg.controller.RoomController.Room(org.springframework.ui.Model)
2019-06-04 17:41:16 -Mapped "{[/xjbg/room]}" onto public com.bootdo.common.utils.R com.bootdo.xjbg.controller.RoomController.kaifan(com.bootdo.xjbg.domain.OrderDO,java.util.List<com.bootdo.xjbg.domain.OrderItemDO>)
2019-06-04 17:41:16 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-06-04 17:41:16 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-06-04 17:41:16 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-06-04 17:41:16 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-06-04 17:41:16 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-06-04 17:41:16 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-06-04 17:41:16 -Initializing ExecutorService  'brokerChannelExecutor'
2019-06-04 17:41:17 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-06-04 17:41:17 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@61b39c83: startup date [Tue Jun 04 17:41:09 CST 2019]; root of context hierarchy
2019-06-04 17:41:17 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-06-04 17:41:17 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-06-04 17:41:17 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-06-04 17:41:17 -Mapped URL path [/productPic/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-06-04 17:41:17 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-06-04 17:41:17 -[THYMELEAF][restartedMain] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-06-04 17:41:18 -LiveReload server is running on port 35729
2019-06-04 17:41:18 -Registering beans for JMX exposure on startup
2019-06-04 17:41:18 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-06-04 17:41:18 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-06-04 17:41:18 -Starting beans in phase 2147483647
2019-06-04 17:41:18 -Context refreshed
2019-06-04 17:41:18 -Found 1 custom documentation plugin(s)
2019-06-04 17:41:18 -Scanning for api listing references
2019-06-04 17:41:18 -Generating unique operation named: removeUsingPOST_1
2019-06-04 17:41:18 -Generating unique operation named: addUsingGET_1
2019-06-04 17:41:18 -Generating unique operation named: editUsingGET_1
2019-06-04 17:41:18 -Generating unique operation named: listUsingGET_1
2019-06-04 17:41:18 -Generating unique operation named: removeUsingPOST_2
2019-06-04 17:41:18 -Generating unique operation named: removeUsingPOST_3
2019-06-04 17:41:18 -Generating unique operation named: saveUsingPOST_1
2019-06-04 17:41:18 -Generating unique operation named: updateUsingGET_1
2019-06-04 17:41:18 -Generating unique operation named: updateUsingHEAD_1
2019-06-04 17:41:18 -Generating unique operation named: updateUsingPOST_1
2019-06-04 17:41:18 -Generating unique operation named: updateUsingPUT_1
2019-06-04 17:41:18 -Generating unique operation named: updateUsingPATCH_1
2019-06-04 17:41:18 -Generating unique operation named: updateUsingDELETE_1
2019-06-04 17:41:18 -Generating unique operation named: updateUsingOPTIONS_1
2019-06-04 17:41:18 -Generating unique operation named: updateUsingTRACE_1
2019-06-04 17:41:18 -Generating unique operation named: addUsingGET_2
2019-06-04 17:41:18 -Generating unique operation named: editUsingGET_2
2019-06-04 17:41:18 -Generating unique operation named: listUsingGET_2
2019-06-04 17:41:18 -Generating unique operation named: removeUsingPOST_4
2019-06-04 17:41:18 -Generating unique operation named: removeUsingPOST_5
2019-06-04 17:41:18 -Generating unique operation named: saveUsingPOST_2
2019-06-04 17:41:18 -Generating unique operation named: updateUsingGET_2
2019-06-04 17:41:18 -Generating unique operation named: updateUsingHEAD_2
2019-06-04 17:41:18 -Generating unique operation named: updateUsingPOST_2
2019-06-04 17:41:18 -Generating unique operation named: updateUsingPUT_2
2019-06-04 17:41:18 -Generating unique operation named: updateUsingPATCH_2
2019-06-04 17:41:18 -Generating unique operation named: updateUsingDELETE_2
2019-06-04 17:41:18 -Generating unique operation named: updateUsingOPTIONS_2
2019-06-04 17:41:18 -Generating unique operation named: updateUsingTRACE_2
2019-06-04 17:41:18 -Generating unique operation named: addUsingGET_3
2019-06-04 17:41:18 -Generating unique operation named: editUsingGET_3
2019-06-04 17:41:18 -Generating unique operation named: listUsingGET_3
2019-06-04 17:41:18 -Generating unique operation named: removeUsingPOST_6
2019-06-04 17:41:18 -Generating unique operation named: removeUsingPOST_7
2019-06-04 17:41:18 -Generating unique operation named: saveUsingPOST_3
2019-06-04 17:41:18 -Generating unique operation named: updateUsingGET_3
2019-06-04 17:41:18 -Generating unique operation named: updateUsingHEAD_3
2019-06-04 17:41:18 -Generating unique operation named: updateUsingPOST_3
2019-06-04 17:41:18 -Generating unique operation named: updateUsingPUT_3
2019-06-04 17:41:18 -Generating unique operation named: updateUsingPATCH_3
2019-06-04 17:41:18 -Generating unique operation named: updateUsingDELETE_3
2019-06-04 17:41:18 -Generating unique operation named: updateUsingOPTIONS_3
2019-06-04 17:41:18 -Generating unique operation named: updateUsingTRACE_3
2019-06-04 17:41:18 -Generating unique operation named: editUsingGET_4
2019-06-04 17:41:18 -Generating unique operation named: listUsingGET_4
2019-06-04 17:41:18 -Generating unique operation named: updateUsingPOST_4
2019-06-04 17:41:18 -Generating unique operation named: addUsingGET_4
2019-06-04 17:41:18 -Generating unique operation named: editUsingGET_5
2019-06-04 17:41:18 -Generating unique operation named: infoUsingGET_1
2019-06-04 17:41:18 -Generating unique operation named: infoUsingHEAD_1
2019-06-04 17:41:18 -Generating unique operation named: infoUsingPOST_1
2019-06-04 17:41:18 -Generating unique operation named: infoUsingPUT_1
2019-06-04 17:41:18 -Generating unique operation named: infoUsingPATCH_1
2019-06-04 17:41:18 -Generating unique operation named: infoUsingDELETE_1
2019-06-04 17:41:18 -Generating unique operation named: infoUsingOPTIONS_1
2019-06-04 17:41:18 -Generating unique operation named: infoUsingTRACE_1
2019-06-04 17:41:18 -Generating unique operation named: listUsingGET_5
2019-06-04 17:41:18 -Generating unique operation named: removeUsingPOST_8
2019-06-04 17:41:18 -Generating unique operation named: removeUsingPOST_9
2019-06-04 17:41:18 -Generating unique operation named: saveUsingPOST_4
2019-06-04 17:41:18 -Generating unique operation named: updateUsingPOST_5
2019-06-04 17:41:18 -Generating unique operation named: listUsingGET_6
2019-06-04 17:41:18 -Generating unique operation named: removeUsingPOST_10
2019-06-04 17:41:18 -Generating unique operation named: welcomeUsingGET_1
2019-06-04 17:41:18 -Generating unique operation named: addUsingGET_5
2019-06-04 17:41:18 -Generating unique operation named: editUsingGET_6
2019-06-04 17:41:18 -Generating unique operation named: listUsingGET_7
2019-06-04 17:41:18 -Generating unique operation named: removeUsingPOST_11
2019-06-04 17:41:18 -Generating unique operation named: saveUsingPOST_5
2019-06-04 17:41:18 -Generating unique operation named: treeUsingGET_1
2019-06-04 17:41:18 -Generating unique operation named: treeUsingGET_2
2019-06-04 17:41:18 -Generating unique operation named: updateUsingPOST_6
2019-06-04 17:41:18 -Generating unique operation named: batchRemoveUsingPOST_1
2019-06-04 17:41:18 -Generating unique operation named: editUsingGET_7
2019-06-04 17:41:18 -Generating unique operation named: listUsingGET_8
2019-06-04 17:41:19 -Generating unique operation named: addUsingGET_6
2019-06-04 17:41:19 -Generating unique operation named: editUsingGET_8
2019-06-04 17:41:19 -Generating unique operation named: listUsingGET_9
2019-06-04 17:41:19 -Generating unique operation named: removeUsingPOST_12
2019-06-04 17:41:19 -Generating unique operation named: removeUsingPOST_13
2019-06-04 17:41:19 -Generating unique operation named: saveUsingPOST_6
2019-06-04 17:41:19 -Generating unique operation named: updateUsingGET_4
2019-06-04 17:41:19 -Generating unique operation named: updateUsingHEAD_4
2019-06-04 17:41:19 -Generating unique operation named: updateUsingPOST_7
2019-06-04 17:41:19 -Generating unique operation named: updateUsingPUT_4
2019-06-04 17:41:19 -Generating unique operation named: updateUsingPATCH_4
2019-06-04 17:41:19 -Generating unique operation named: updateUsingDELETE_4
2019-06-04 17:41:19 -Generating unique operation named: updateUsingOPTIONS_4
2019-06-04 17:41:19 -Generating unique operation named: updateUsingTRACE_4
2019-06-04 17:41:19 -Generating unique operation named: addUsingGET_7
2019-06-04 17:41:19 -Generating unique operation named: editUsingGET_9
2019-06-04 17:41:19 -Generating unique operation named: listUsingGET_10
2019-06-04 17:41:19 -Generating unique operation named: removeUsingPOST_14
2019-06-04 17:41:19 -Generating unique operation named: removeUsingPOST_15
2019-06-04 17:41:19 -Generating unique operation named: saveUsingPOST_7
2019-06-04 17:41:19 -Generating unique operation named: updateUsingGET_5
2019-06-04 17:41:19 -Generating unique operation named: updateUsingHEAD_5
2019-06-04 17:41:19 -Generating unique operation named: updateUsingPOST_8
2019-06-04 17:41:19 -Generating unique operation named: updateUsingPUT_5
2019-06-04 17:41:19 -Generating unique operation named: updateUsingPATCH_5
2019-06-04 17:41:19 -Generating unique operation named: updateUsingDELETE_5
2019-06-04 17:41:19 -Generating unique operation named: updateUsingOPTIONS_5
2019-06-04 17:41:19 -Generating unique operation named: updateUsingTRACE_5
2019-06-04 17:41:19 -Generating unique operation named: addUsingGET_8
2019-06-04 17:41:19 -Generating unique operation named: editUsingGET_10
2019-06-04 17:41:19 -Generating unique operation named: listUsingGET_11
2019-06-04 17:41:19 -Generating unique operation named: removeUsingPOST_16
2019-06-04 17:41:19 -Generating unique operation named: removeUsingPOST_17
2019-06-04 17:41:19 -Generating unique operation named: saveUsingPOST_8
2019-06-04 17:41:19 -Generating unique operation named: updateUsingGET_6
2019-06-04 17:41:19 -Generating unique operation named: updateUsingHEAD_6
2019-06-04 17:41:19 -Generating unique operation named: updateUsingPOST_9
2019-06-04 17:41:19 -Generating unique operation named: updateUsingPUT_6
2019-06-04 17:41:19 -Generating unique operation named: updateUsingPATCH_6
2019-06-04 17:41:19 -Generating unique operation named: updateUsingDELETE_6
2019-06-04 17:41:19 -Generating unique operation named: updateUsingOPTIONS_6
2019-06-04 17:41:19 -Generating unique operation named: updateUsingTRACE_6
2019-06-04 17:41:19 -Generating unique operation named: addUsingGET_9
2019-06-04 17:41:19 -Generating unique operation named: batchRemoveUsingPOST_2
2019-06-04 17:41:19 -Generating unique operation named: deployUsingPOST_1
2019-06-04 17:41:19 -Generating unique operation named: listUsingGET_12
2019-06-04 17:41:19 -Generating unique operation named: removeUsingPOST_18
2019-06-04 17:41:19 -Generating unique operation named: addUsingGET_10
2019-06-04 17:41:19 -Generating unique operation named: editUsingGET_11
2019-06-04 17:41:19 -Generating unique operation named: listUsingGET_13
2019-06-04 17:41:19 -Generating unique operation named: removeUsingPOST_19
2019-06-04 17:41:19 -Generating unique operation named: removeUsingPOST_20
2019-06-04 17:41:19 -Trying to infer dataType org.springframework.web.multipart.MultipartFile[]
2019-06-04 17:41:19 -Generating unique operation named: saveUsingPOST_9
2019-06-04 17:41:19 -Trying to infer dataType org.springframework.web.multipart.MultipartFile[]
2019-06-04 17:41:19 -Generating unique operation named: updateUsingGET_7
2019-06-04 17:41:19 -Trying to infer dataType org.springframework.web.multipart.MultipartFile[]
2019-06-04 17:41:19 -Generating unique operation named: updateUsingHEAD_7
2019-06-04 17:41:19 -Trying to infer dataType org.springframework.web.multipart.MultipartFile[]
2019-06-04 17:41:19 -Generating unique operation named: updateUsingPOST_10
2019-06-04 17:41:19 -Trying to infer dataType org.springframework.web.multipart.MultipartFile[]
2019-06-04 17:41:19 -Generating unique operation named: updateUsingPUT_7
2019-06-04 17:41:19 -Trying to infer dataType org.springframework.web.multipart.MultipartFile[]
2019-06-04 17:41:19 -Generating unique operation named: updateUsingPATCH_7
2019-06-04 17:41:19 -Trying to infer dataType org.springframework.web.multipart.MultipartFile[]
2019-06-04 17:41:19 -Generating unique operation named: updateUsingDELETE_7
2019-06-04 17:41:19 -Trying to infer dataType org.springframework.web.multipart.MultipartFile[]
2019-06-04 17:41:19 -Generating unique operation named: updateUsingOPTIONS_7
2019-06-04 17:41:19 -Trying to infer dataType org.springframework.web.multipart.MultipartFile[]
2019-06-04 17:41:19 -Generating unique operation named: updateUsingTRACE_7
2019-06-04 17:41:19 -Generating unique operation named: addUsingGET_11
2019-06-04 17:41:19 -Generating unique operation named: batchRemoveUsingPOST_3
2019-06-04 17:41:19 -Generating unique operation named: editUsingGET_12
2019-06-04 17:41:19 -Generating unique operation named: listUsingGET_14
2019-06-04 17:41:19 -Generating unique operation named: saveUsingPOST_10
2019-06-04 17:41:19 -Generating unique operation named: saveUsingPOST_11
2019-06-04 17:41:19 -Generating unique operation named: updateUsingPOST_11
2019-06-04 17:41:19 -Generating unique operation named: addUsingGET_12
2019-06-04 17:41:19 -Generating unique operation named: editUsingGET_13
2019-06-04 17:41:19 -Trying to infer dataType java.util.List<com.bootdo.xjbg.domain.OrderItemDO>
2019-06-04 17:41:19 -Trying to infer dataType java.util.List<com.bootdo.xjbg.domain.OrderItemDO>
2019-06-04 17:41:19 -Trying to infer dataType java.util.List<com.bootdo.xjbg.domain.OrderItemDO>
2019-06-04 17:41:19 -Trying to infer dataType java.util.List<com.bootdo.xjbg.domain.OrderItemDO>
2019-06-04 17:41:19 -Trying to infer dataType java.util.List<com.bootdo.xjbg.domain.OrderItemDO>
2019-06-04 17:41:19 -Trying to infer dataType java.util.List<com.bootdo.xjbg.domain.OrderItemDO>
2019-06-04 17:41:19 -Trying to infer dataType java.util.List<com.bootdo.xjbg.domain.OrderItemDO>
2019-06-04 17:41:19 -Trying to infer dataType java.util.List<com.bootdo.xjbg.domain.OrderItemDO>
2019-06-04 17:41:19 -Generating unique operation named: listUsingGET_15
2019-06-04 17:41:19 -Generating unique operation named: removeUsingPOST_21
2019-06-04 17:41:19 -Generating unique operation named: removeUsingPOST_22
2019-06-04 17:41:19 -Generating unique operation named: saveUsingPOST_12
2019-06-04 17:41:19 -Generating unique operation named: updateUsingGET_8
2019-06-04 17:41:19 -Generating unique operation named: updateUsingHEAD_8
2019-06-04 17:41:19 -Generating unique operation named: updateUsingPOST_12
2019-06-04 17:41:19 -Generating unique operation named: updateUsingPUT_8
2019-06-04 17:41:19 -Generating unique operation named: updateUsingPATCH_8
2019-06-04 17:41:19 -Generating unique operation named: updateUsingDELETE_8
2019-06-04 17:41:19 -Generating unique operation named: updateUsingOPTIONS_8
2019-06-04 17:41:19 -Generating unique operation named: updateUsingTRACE_8
2019-06-04 17:41:19 -Generating unique operation named: addUsingGET_13
2019-06-04 17:41:19 -Generating unique operation named: editUsingGET_14
2019-06-04 17:41:19 -Generating unique operation named: listUsingGET_16
2019-06-04 17:41:19 -Generating unique operation named: removeUsingPOST_23
2019-06-04 17:41:19 -Generating unique operation named: removeUsingPOST_24
2019-06-04 17:41:19 -Generating unique operation named: updateUsingGET_9
2019-06-04 17:41:19 -Generating unique operation named: updateUsingHEAD_9
2019-06-04 17:41:19 -Generating unique operation named: updateUsingPOST_13
2019-06-04 17:41:19 -Generating unique operation named: updateUsingPUT_9
2019-06-04 17:41:19 -Generating unique operation named: updateUsingPATCH_9
2019-06-04 17:41:19 -Generating unique operation named: updateUsingDELETE_9
2019-06-04 17:41:19 -Generating unique operation named: updateUsingOPTIONS_9
2019-06-04 17:41:19 -Generating unique operation named: updateUsingTRACE_9
2019-06-04 17:41:19 -Generating unique operation named: listUsingGET_17
2019-06-04 17:41:19 -Generating unique operation named: listUsingHEAD_1
2019-06-04 17:41:19 -Generating unique operation named: listUsingPOST_1
2019-06-04 17:41:19 -Generating unique operation named: listUsingPUT_1
2019-06-04 17:41:19 -Generating unique operation named: listUsingPATCH_1
2019-06-04 17:41:19 -Generating unique operation named: listUsingDELETE_1
2019-06-04 17:41:19 -Generating unique operation named: listUsingOPTIONS_1
2019-06-04 17:41:19 -Generating unique operation named: listUsingTRACE_1
2019-06-04 17:41:19 -Generating unique operation named: listUsingGET_18
2019-06-04 17:41:19 -Generating unique operation named: addUsingGET_14
2019-06-04 17:41:19 -Generating unique operation named: batchRemoveUsingPOST_4
2019-06-04 17:41:19 -Generating unique operation named: editUsingGET_15
2019-06-04 17:41:19 -Generating unique operation named: listUsingGET_19
2019-06-04 17:41:19 -Generating unique operation named: removeUsingPOST_25
2019-06-04 17:41:19 -Generating unique operation named: saveUsingPOST_13
2019-06-04 17:41:19 -Generating unique operation named: treeUsingGET_3
2019-06-04 17:41:19 -Generating unique operation named: treeViewUsingGET_1
2019-06-04 17:41:19 -Generating unique operation named: updateUsingPOST_14
2019-06-04 17:41:19 -Generating unique operation named: addUsingGET_15
2019-06-04 17:41:19 -Generating unique operation named: editUsingGET_16
2019-06-04 17:41:19 -Generating unique operation named: listUsingGET_20
2019-06-04 17:41:19 -Generating unique operation named: removeUsingPOST_26
2019-06-04 17:41:19 -Generating unique operation named: removeUsingPOST_27
2019-06-04 17:41:19 -Generating unique operation named: saveUsingPOST_14
2019-06-04 17:41:19 -Generating unique operation named: updateUsingGET_10
2019-06-04 17:41:19 -Generating unique operation named: updateUsingHEAD_10
2019-06-04 17:41:19 -Generating unique operation named: updateUsingPOST_15
2019-06-04 17:41:19 -Generating unique operation named: updateUsingPUT_10
2019-06-04 17:41:19 -Generating unique operation named: updateUsingPATCH_10
2019-06-04 17:41:19 -Generating unique operation named: updateUsingDELETE_10
2019-06-04 17:41:19 -Generating unique operation named: updateUsingOPTIONS_10
2019-06-04 17:41:19 -Generating unique operation named: updateUsingTRACE_10
2019-06-04 17:41:19 -Starting Quartz Scheduler now
2019-06-04 17:41:19 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-06-04 17:41:19 -Starting...
2019-06-04 17:41:19 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-06-04 17:41:19 -Started.
2019-06-04 17:41:19 -Starting ProtocolHandler ["http-nio-8888"]
2019-06-04 17:41:19 -Using a shared selector for servlet write/read
2019-06-04 17:41:19 -Tomcat started on port(s): 8888 (http) with context path ''
2019-06-04 17:41:19 -Started BootdoApplication in 10.557 seconds (JVM running for 11.963)
2019-06-04 17:41:19 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-06-04 17:41:19 -==> Parameters: 
2019-06-04 17:41:19 -<==      Total: 1
2019-06-04 17:41:25 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-06-04 17:41:25 -FrameworkServlet 'dispatcherServlet': initialization started
2019-06-04 17:41:25 -FrameworkServlet 'dispatcherServlet': initialization completed in 37 ms
2019-06-04 17:41:25 -Enabling session validation scheduler...
2019-06-04 17:41:25 -请求地址 : http://localhost:8888/login;JSESSIONID=9c5d775b-f41d-4d70-b3ad-9d0df8d00a1e
2019-06-04 17:41:25 -HTTP METHOD : GET
2019-06-04 17:41:25 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-06-04 17:41:25 -参数 : [{}]
2019-06-04 17:41:25 -耗时 : 2
2019-06-04 17:41:25 -返回值 : login
2019-06-04 17:41:26 -请求地址 : http://localhost:8888/login
2019-06-04 17:41:26 -HTTP METHOD : GET
2019-06-04 17:41:26 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-06-04 17:41:26 -参数 : [{}]
2019-06-04 17:41:26 -耗时 : 0
2019-06-04 17:41:26 -返回值 : login
2019-06-04 17:41:27 -请求地址 : http://localhost:8888/login
2019-06-04 17:41:27 -HTTP METHOD : POST
2019-06-04 17:41:27 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-06-04 17:41:27 -参数 : [admin, 111111]
2019-06-04 17:41:27 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-06-04 17:41:27 -==> Parameters: admin(String)
2019-06-04 17:41:27 -<==      Total: 1
2019-06-04 17:41:27 -耗时 : 15
2019-06-04 17:41:27 -返回值 : {msg=操作成功, code=0}
2019-06-04 17:41:27 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-06-04 17:41:27 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-04 17:41:27 -==> Parameters: 1(Long), admin(String), 登录(String), 15(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-06-04 17:41:27.089(Timestamp)
2019-06-04 17:41:27 -请求地址 : http://localhost:8888/index
2019-06-04 17:41:27 -HTTP METHOD : GET
2019-06-04 17:41:27 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-06-04 17:41:27 -参数 : [{}]
2019-06-04 17:41:27 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-06-04 17:41:27 -==> Parameters: 1(Long)
2019-06-04 17:41:27 -<==      Total: 34
2019-06-04 17:41:27 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-06-04 17:41:27 -==> Parameters: 144(Long)
2019-06-04 17:41:27 -<==      Total: 1
2019-06-04 17:41:27 -耗时 : 33
2019-06-04 17:41:27 -返回值 : index_v1
2019-06-04 17:41:27 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-04 17:41:27 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 33(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-hotel","url":""},"checked":false,"children":[{"attributes":{"icon":"","url":"/xjbg/room/roomMng"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"105","text":"开房"},{"attributes":{"icon":"fa fa-bed","url":"/xjbg/room"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"106","parentId":"105","text":"房间管理"},{"attributes":{"icon":"","url":"/xjbg/product"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"105","text":"商品管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"欣吉宾馆"},{"attributes":{"icon":"fa fa-commenting","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user","url":"/weixin/weixinUser"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"109","text":"用户管理"}],"hasChildren":true,"hasParent":false,"id":"109","parentId":"0","text":"微信管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","text":"基础管理"},{"attributes":{"icon":"fa fa-desktop"},"checked":false,"children":[{"attributes":{"icon":"fa fa-user","url":"sys/user/"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"6","parentId":"3","text":"用户管理"},{"attributes":{"icon":"fa fa-paw","url":"sys/role"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"7","parentId":"3","text":"角色管理"},{"attributes":{"icon":"fa fa-th-list","url":"sys/menu/"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"3","text":"系统菜单"},{"attributes":{"icon":"fa fa-users","url":"/system/sysDept"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"73","parentId":"3","text":"部门管理"}],"hasChildren":true,"hasParent":false,"id":"3","parentId":"0","text":"系统管理"},{"attributes":{"icon":"fa fa-gear","url":""},"checked":false,"children":[{"attributes":{"icon":"","url":"/swagger-ui.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"104","parentId":"77","text":"swagger"},{"attributes":{"icon":"fa fa-code","url":"common/generator"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"48","parentId":"77","text":"代码生成"},{"attributes":{"icon":"fa fa-hourglass-1","url":"common/job"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"72","parentId":"77","text":"计划任务"}],"hasChildren":true,"hasParent":false,"id":"77","parentId":"0","text":"系统工具"},{"attributes":{"icon":"fa fa-video-camera","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user","url":"sys/online"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"92","parentId":"91","text":"在线用户"},{"attributes":{"icon":"fa fa-warning","url":"common/log"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"27","parentId":"91","text":"系统日志"},{"attributes":{"icon":"fa fa-caret-square-o-right","url":"/druid/index.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"57","parentId":"91","text":"运行监控"}],"hasChildren":true,"hasParent":false,"id":"91","parentId":"0","text":"系统监控"},{"attributes":{"icon":"fa fa-laptop","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-pencil-square","url":"oa/notify"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"85","parentId":"84","text":"通知公告"},{"attributes":{"icon":"fa fa-envelope-square","url":"oa/notify/selfNotify"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"90","parentId":"84","text":"我的通知"}],"hasChildren":true,"hasParent":false,"id":"84","parentId":"0","text":"办公管理"},{"attributes":{"icon":"fa fa-print","url":""},"checked":false,"children":[{"attributes":{"icon":"","url":"activiti/task/todo"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"101","parentId":"93","text":"待办任务"},{"attributes":{"icon":"fa fa-sort-amount-asc","url":"activiti/model"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"94","parentId":"93","text":"模型管理"},{"attributes":{"icon":"fa fa-flag","url":"activiti/process"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"96","parentId":"93","text":"流程管理"}],"hasChildren":true,"hasParent":false,"id":"93","parentId":"0","text":"工作流程"},{"attributes":{"icon":"fa fa-rss","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-edit","url":"/blog/bContent/add"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"68","parentId":"49","text":"发布文章"},{"(String), 127.0.0.1(String), 2019-06-04 17:41:27.184(Timestamp)
2019-06-04 17:41:27 -请求地址 : http://localhost:8888/main
2019-06-04 17:41:27 -HTTP METHOD : GET
2019-06-04 17:41:27 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-04 17:41:27 -参数 : []
2019-06-04 17:41:27 -耗时 : 0
2019-06-04 17:41:27 -返回值 : main
2019-06-04 17:41:27 -请求地址 : http://localhost:8888/oa/notify/message
2019-06-04 17:41:27 -HTTP METHOD : GET
2019-06-04 17:41:27 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-06-04 17:41:27 -参数 : []
2019-06-04 17:41:27 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-06-04 17:41:27 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-06-04 17:41:27 -<==      Total: 0
2019-06-04 17:41:27 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-06-04 17:41:27 -==> Parameters: 1(Long), 0(String)
2019-06-04 17:41:27 -<==      Total: 1
2019-06-04 17:41:27 -耗时 : 16
2019-06-04 17:41:27 -返回值 : com.bootdo.common.utils.PageUtils@74c10c92
2019-06-04 17:41:27 -请求地址 : http://localhost:8888/main
2019-06-04 17:41:27 -HTTP METHOD : GET
2019-06-04 17:41:27 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-04 17:41:27 -参数 : []
2019-06-04 17:41:27 -耗时 : 0
2019-06-04 17:41:27 -返回值 : main
2019-06-04 17:41:28 -<==    Updates: 1
2019-06-04 17:41:28 -<==    Updates: 1
2019-06-04 17:41:29 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-06-04 17:41:29 -==> Parameters: 1(Long)
2019-06-04 17:41:29 -<==      Total: 58
2019-06-04 17:41:29 -请求地址 : http://localhost:8888/xjbg/room/roomMng
2019-06-04 17:41:29 -HTTP METHOD : GET
2019-06-04 17:41:29 -CLASS_METHOD : com.bootdo.xjbg.controller.RoomController.roomMng
2019-06-04 17:41:29 -参数 : [{}]
2019-06-04 17:41:29 -==>  Preparing: select `id`,`room_no`,`room_type`,`floor`,`room_state`,`price`,`create_time`,`update_time`,`create_user`,`update_user` from xjbg_room 
2019-06-04 17:41:29 -==> Parameters: 
2019-06-04 17:41:29 -<==      Total: 8
2019-06-04 17:41:29 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 17:41:29 -==> Parameters: room_type(String)
2019-06-04 17:41:29 -<==      Total: 7
2019-06-04 17:41:29 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 17:41:29 -==> Parameters: floor(String)
2019-06-04 17:41:29 -<==      Total: 5
2019-06-04 17:41:29 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 17:41:29 -==> Parameters: room_state(String)
2019-06-04 17:41:29 -<==      Total: 2
2019-06-04 17:41:29 -==>  Preparing: select * from sys_user 
2019-06-04 17:41:29 -==> Parameters: 
2019-06-04 17:41:29 -<==      Total: 11
2019-06-04 17:41:29 -耗时 : 21
2019-06-04 17:41:29 -返回值 : xjbg/room/roomMng
2019-06-04 17:41:29 -请求地址 : http://localhost:8888/xjbg/room/operation/1
2019-06-04 17:41:29 -HTTP METHOD : GET
2019-06-04 17:41:29 -CLASS_METHOD : com.bootdo.xjbg.controller.RoomController.operation
2019-06-04 17:41:29 -参数 : [1, {}]
2019-06-04 17:41:29 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 17:41:29 -==> Parameters: room_type(String)
2019-06-04 17:41:29 -<==      Total: 7
2019-06-04 17:41:29 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 17:41:29 -==> Parameters: floor(String)
2019-06-04 17:41:29 -<==      Total: 5
2019-06-04 17:41:29 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 17:41:29 -==> Parameters: room_state(String)
2019-06-04 17:41:29 -<==      Total: 2
2019-06-04 17:41:29 -==>  Preparing: select * from sys_user 
2019-06-04 17:41:29 -==> Parameters: 
2019-06-04 17:41:29 -<==      Total: 11
2019-06-04 17:41:29 -==>  Preparing: select `id`,`product_name`,`purchase_price`,`selling_price`,`product_pic`,`create_time`,`create_user`,`update_time`,`update_user` from xjbg_product order by id desc 
2019-06-04 17:41:29 -==> Parameters: 
2019-06-04 17:41:29 -<==      Total: 5
2019-06-04 17:41:29 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 17:41:29 -==> Parameters: order_type(String)
2019-06-04 17:41:29 -<==      Total: 3
2019-06-04 17:41:29 -==>  Preparing: select `id`,`room_no`,`room_type`,`floor`,`room_state`,`price`,`create_time`,`update_time`,`create_user`,`update_user` from xjbg_room where id = ? 
2019-06-04 17:41:29 -==> Parameters: 1(Integer)
2019-06-04 17:41:29 -<==      Total: 1
2019-06-04 17:41:29 -耗时 : 21
2019-06-04 17:41:29 -返回值 : xjbg/room/operation
2019-06-04 17:41:35 -请求地址 : http://localhost:8888/xjbg/room/operation/1
2019-06-04 17:41:35 -HTTP METHOD : GET
2019-06-04 17:41:35 -CLASS_METHOD : com.bootdo.xjbg.controller.RoomController.operation
2019-06-04 17:41:35 -参数 : [1, {}]
2019-06-04 17:41:35 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 17:41:35 -==> Parameters: room_type(String)
2019-06-04 17:41:35 -<==      Total: 7
2019-06-04 17:41:35 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 17:41:35 -==> Parameters: floor(String)
2019-06-04 17:41:35 -<==      Total: 5
2019-06-04 17:41:35 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 17:41:35 -==> Parameters: room_state(String)
2019-06-04 17:41:35 -<==      Total: 2
2019-06-04 17:41:35 -==>  Preparing: select * from sys_user 
2019-06-04 17:41:35 -==> Parameters: 
2019-06-04 17:41:35 -<==      Total: 11
2019-06-04 17:41:35 -==>  Preparing: select `id`,`product_name`,`purchase_price`,`selling_price`,`product_pic`,`create_time`,`create_user`,`update_time`,`update_user` from xjbg_product order by id desc 
2019-06-04 17:41:35 -==> Parameters: 
2019-06-04 17:41:35 -<==      Total: 5
2019-06-04 17:41:35 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 17:41:35 -==> Parameters: order_type(String)
2019-06-04 17:41:35 -<==      Total: 3
2019-06-04 17:41:35 -==>  Preparing: select `id`,`room_no`,`room_type`,`floor`,`room_state`,`price`,`create_time`,`update_time`,`create_user`,`update_user` from xjbg_room where id = ? 
2019-06-04 17:41:35 -==> Parameters: 1(Integer)
2019-06-04 17:41:35 -<==      Total: 1
2019-06-04 17:41:35 -耗时 : 15
2019-06-04 17:41:35 -返回值 : xjbg/room/operation
2019-06-04 17:41:45 -请求地址 : http://localhost:8888/index
2019-06-04 17:41:45 -HTTP METHOD : GET
2019-06-04 17:41:45 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-06-04 17:41:45 -参数 : [{}]
2019-06-04 17:41:45 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-06-04 17:41:45 -==> Parameters: 1(Long)
2019-06-04 17:41:45 -<==      Total: 34
2019-06-04 17:41:45 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-06-04 17:41:45 -==> Parameters: 144(Long)
2019-06-04 17:41:45 -<==      Total: 1
2019-06-04 17:41:45 -耗时 : 6
2019-06-04 17:41:45 -返回值 : index_v1
2019-06-04 17:41:45 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-04 17:41:45 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 6(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-hotel","url":""},"checked":false,"children":[{"attributes":{"icon":"","url":"/xjbg/room/roomMng"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"105","text":"开房"},{"attributes":{"icon":"fa fa-bed","url":"/xjbg/room"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"106","parentId":"105","text":"房间管理"},{"attributes":{"icon":"","url":"/xjbg/product"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"105","text":"商品管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"欣吉宾馆"},{"attributes":{"icon":"fa fa-commenting","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user","url":"/weixin/weixinUser"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"109","text":"用户管理"}],"hasChildren":true,"hasParent":false,"id":"109","parentId":"0","text":"微信管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","text":"基础管理"},{"attributes":{"icon":"fa fa-desktop"},"checked":false,"children":[{"attributes":{"icon":"fa fa-user","url":"sys/user/"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"6","parentId":"3","text":"用户管理"},{"attributes":{"icon":"fa fa-paw","url":"sys/role"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"7","parentId":"3","text":"角色管理"},{"attributes":{"icon":"fa fa-th-list","url":"sys/menu/"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"3","text":"系统菜单"},{"attributes":{"icon":"fa fa-users","url":"/system/sysDept"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"73","parentId":"3","text":"部门管理"}],"hasChildren":true,"hasParent":false,"id":"3","parentId":"0","text":"系统管理"},{"attributes":{"icon":"fa fa-gear","url":""},"checked":false,"children":[{"attributes":{"icon":"","url":"/swagger-ui.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"104","parentId":"77","text":"swagger"},{"attributes":{"icon":"fa fa-code","url":"common/generator"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"48","parentId":"77","text":"代码生成"},{"attributes":{"icon":"fa fa-hourglass-1","url":"common/job"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"72","parentId":"77","text":"计划任务"}],"hasChildren":true,"hasParent":false,"id":"77","parentId":"0","text":"系统工具"},{"attributes":{"icon":"fa fa-video-camera","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user","url":"sys/online"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"92","parentId":"91","text":"在线用户"},{"attributes":{"icon":"fa fa-warning","url":"common/log"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"27","parentId":"91","text":"系统日志"},{"attributes":{"icon":"fa fa-caret-square-o-right","url":"/druid/index.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"57","parentId":"91","text":"运行监控"}],"hasChildren":true,"hasParent":false,"id":"91","parentId":"0","text":"系统监控"},{"attributes":{"icon":"fa fa-laptop","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-pencil-square","url":"oa/notify"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"85","parentId":"84","text":"通知公告"},{"attributes":{"icon":"fa fa-envelope-square","url":"oa/notify/selfNotify"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"90","parentId":"84","text":"我的通知"}],"hasChildren":true,"hasParent":false,"id":"84","parentId":"0","text":"办公管理"},{"attributes":{"icon":"fa fa-print","url":""},"checked":false,"children":[{"attributes":{"icon":"","url":"activiti/task/todo"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"101","parentId":"93","text":"待办任务"},{"attributes":{"icon":"fa fa-sort-amount-asc","url":"activiti/model"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"94","parentId":"93","text":"模型管理"},{"attributes":{"icon":"fa fa-flag","url":"activiti/process"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"96","parentId":"93","text":"流程管理"}],"hasChildren":true,"hasParent":false,"id":"93","parentId":"0","text":"工作流程"},{"attributes":{"icon":"fa fa-rss","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-edit","url":"/blog/bContent/add"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"68","parentId":"49","text":"发布文章"},{"(String), 127.0.0.1(String), 2019-06-04 17:41:45.477(Timestamp)
2019-06-04 17:41:45 -<==    Updates: 1
2019-06-04 17:41:45 -请求地址 : http://localhost:8888/main
2019-06-04 17:41:45 -HTTP METHOD : GET
2019-06-04 17:41:45 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-04 17:41:45 -参数 : []
2019-06-04 17:41:45 -耗时 : 0
2019-06-04 17:41:45 -返回值 : main
2019-06-04 17:41:45 -请求地址 : http://localhost:8888/oa/notify/message
2019-06-04 17:41:45 -HTTP METHOD : GET
2019-06-04 17:41:45 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-06-04 17:41:45 -参数 : []
2019-06-04 17:41:45 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-06-04 17:41:45 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-06-04 17:41:45 -<==      Total: 0
2019-06-04 17:41:45 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-06-04 17:41:45 -==> Parameters: 1(Long), 0(String)
2019-06-04 17:41:45 -<==      Total: 1
2019-06-04 17:41:45 -耗时 : 4
2019-06-04 17:41:45 -返回值 : com.bootdo.common.utils.PageUtils@6224b643
2019-06-04 17:41:45 -请求地址 : http://localhost:8888/main
2019-06-04 17:41:45 -HTTP METHOD : GET
2019-06-04 17:41:45 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-04 17:41:45 -参数 : []
2019-06-04 17:41:45 -耗时 : 0
2019-06-04 17:41:45 -返回值 : main
2019-06-04 17:41:47 -请求地址 : http://localhost:8888/xjbg/room/roomMng
2019-06-04 17:41:47 -HTTP METHOD : GET
2019-06-04 17:41:47 -CLASS_METHOD : com.bootdo.xjbg.controller.RoomController.roomMng
2019-06-04 17:41:47 -参数 : [{}]
2019-06-04 17:41:47 -==>  Preparing: select `id`,`room_no`,`room_type`,`floor`,`room_state`,`price`,`create_time`,`update_time`,`create_user`,`update_user` from xjbg_room 
2019-06-04 17:41:47 -==> Parameters: 
2019-06-04 17:41:47 -<==      Total: 8
2019-06-04 17:41:47 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 17:41:47 -==> Parameters: room_type(String)
2019-06-04 17:41:47 -<==      Total: 7
2019-06-04 17:41:47 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 17:41:47 -==> Parameters: floor(String)
2019-06-04 17:41:47 -<==      Total: 5
2019-06-04 17:41:47 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 17:41:47 -==> Parameters: room_state(String)
2019-06-04 17:41:47 -<==      Total: 2
2019-06-04 17:41:47 -==>  Preparing: select * from sys_user 
2019-06-04 17:41:47 -==> Parameters: 
2019-06-04 17:41:47 -<==      Total: 11
2019-06-04 17:41:47 -耗时 : 10
2019-06-04 17:41:47 -返回值 : xjbg/room/roomMng
2019-06-04 17:41:47 -请求地址 : http://localhost:8888/xjbg/room/operation/1
2019-06-04 17:41:47 -HTTP METHOD : GET
2019-06-04 17:41:47 -CLASS_METHOD : com.bootdo.xjbg.controller.RoomController.operation
2019-06-04 17:41:47 -参数 : [1, {}]
2019-06-04 17:41:47 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 17:41:47 -==> Parameters: room_type(String)
2019-06-04 17:41:47 -<==      Total: 7
2019-06-04 17:41:47 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 17:41:47 -==> Parameters: floor(String)
2019-06-04 17:41:47 -<==      Total: 5
2019-06-04 17:41:47 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 17:41:47 -==> Parameters: room_state(String)
2019-06-04 17:41:47 -<==      Total: 2
2019-06-04 17:41:47 -==>  Preparing: select * from sys_user 
2019-06-04 17:41:47 -==> Parameters: 
2019-06-04 17:41:47 -<==      Total: 11
2019-06-04 17:41:47 -==>  Preparing: select `id`,`product_name`,`purchase_price`,`selling_price`,`product_pic`,`create_time`,`create_user`,`update_time`,`update_user` from xjbg_product order by id desc 
2019-06-04 17:41:47 -==> Parameters: 
2019-06-04 17:41:47 -<==      Total: 5
2019-06-04 17:41:47 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 17:41:47 -==> Parameters: order_type(String)
2019-06-04 17:41:47 -<==      Total: 3
2019-06-04 17:41:47 -==>  Preparing: select `id`,`room_no`,`room_type`,`floor`,`room_state`,`price`,`create_time`,`update_time`,`create_user`,`update_user` from xjbg_room where id = ? 
2019-06-04 17:41:47 -==> Parameters: 1(Integer)
2019-06-04 17:41:47 -<==      Total: 1
2019-06-04 17:41:47 -耗时 : 12
2019-06-04 17:41:47 -返回值 : xjbg/room/operation
2019-06-04 17:41:53 -请求地址 : http://localhost:8888/xjbg/room/operation/1
2019-06-04 17:41:53 -HTTP METHOD : GET
2019-06-04 17:41:53 -CLASS_METHOD : com.bootdo.xjbg.controller.RoomController.operation
2019-06-04 17:41:53 -参数 : [1, {}]
2019-06-04 17:41:53 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 17:41:53 -==> Parameters: room_type(String)
2019-06-04 17:41:53 -<==      Total: 7
2019-06-04 17:41:53 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 17:41:53 -==> Parameters: floor(String)
2019-06-04 17:41:53 -<==      Total: 5
2019-06-04 17:41:53 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 17:41:53 -==> Parameters: room_state(String)
2019-06-04 17:41:53 -<==      Total: 2
2019-06-04 17:41:53 -==>  Preparing: select * from sys_user 
2019-06-04 17:41:53 -==> Parameters: 
2019-06-04 17:41:53 -<==      Total: 11
2019-06-04 17:41:53 -==>  Preparing: select `id`,`product_name`,`purchase_price`,`selling_price`,`product_pic`,`create_time`,`create_user`,`update_time`,`update_user` from xjbg_product order by id desc 
2019-06-04 17:41:53 -==> Parameters: 
2019-06-04 17:41:53 -<==      Total: 5
2019-06-04 17:41:53 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 17:41:53 -==> Parameters: order_type(String)
2019-06-04 17:41:53 -<==      Total: 3
2019-06-04 17:41:53 -==>  Preparing: select `id`,`room_no`,`room_type`,`floor`,`room_state`,`price`,`create_time`,`update_time`,`create_user`,`update_user` from xjbg_room where id = ? 
2019-06-04 17:41:53 -==> Parameters: 1(Integer)
2019-06-04 17:41:53 -<==      Total: 1
2019-06-04 17:41:53 -耗时 : 18
2019-06-04 17:41:53 -返回值 : xjbg/room/operation
2019-06-04 17:42:16 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 2 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(2)-CONNECTED(2)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 16, active threads = 0, queued tasks = 0, completed tasks = 21], outboundChannelpool size = 3, active threads = 0, queued tasks = 0, completed tasks = 3], sockJsScheduler[pool size = 8, active threads = 1, queued tasks = 3, completed tasks = 11]
2019-06-04 17:42:37 -请求地址 : http://localhost:8888/index
2019-06-04 17:42:37 -HTTP METHOD : GET
2019-06-04 17:42:37 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-06-04 17:42:37 -参数 : [{}]
2019-06-04 17:42:37 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-06-04 17:42:37 -==> Parameters: 1(Long)
2019-06-04 17:42:37 -<==      Total: 34
2019-06-04 17:42:37 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-06-04 17:42:37 -==> Parameters: 144(Long)
2019-06-04 17:42:37 -<==      Total: 1
2019-06-04 17:42:37 -耗时 : 13
2019-06-04 17:42:37 -返回值 : index_v1
2019-06-04 17:42:37 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-04 17:42:37 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 13(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-hotel","url":""},"checked":false,"children":[{"attributes":{"icon":"","url":"/xjbg/room/roomMng"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"105","text":"开房"},{"attributes":{"icon":"fa fa-bed","url":"/xjbg/room"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"106","parentId":"105","text":"房间管理"},{"attributes":{"icon":"","url":"/xjbg/product"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"105","text":"商品管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"欣吉宾馆"},{"attributes":{"icon":"fa fa-commenting","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user","url":"/weixin/weixinUser"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"109","text":"用户管理"}],"hasChildren":true,"hasParent":false,"id":"109","parentId":"0","text":"微信管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","text":"基础管理"},{"attributes":{"icon":"fa fa-desktop"},"checked":false,"children":[{"attributes":{"icon":"fa fa-user","url":"sys/user/"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"6","parentId":"3","text":"用户管理"},{"attributes":{"icon":"fa fa-paw","url":"sys/role"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"7","parentId":"3","text":"角色管理"},{"attributes":{"icon":"fa fa-th-list","url":"sys/menu/"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"3","text":"系统菜单"},{"attributes":{"icon":"fa fa-users","url":"/system/sysDept"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"73","parentId":"3","text":"部门管理"}],"hasChildren":true,"hasParent":false,"id":"3","parentId":"0","text":"系统管理"},{"attributes":{"icon":"fa fa-gear","url":""},"checked":false,"children":[{"attributes":{"icon":"","url":"/swagger-ui.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"104","parentId":"77","text":"swagger"},{"attributes":{"icon":"fa fa-code","url":"common/generator"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"48","parentId":"77","text":"代码生成"},{"attributes":{"icon":"fa fa-hourglass-1","url":"common/job"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"72","parentId":"77","text":"计划任务"}],"hasChildren":true,"hasParent":false,"id":"77","parentId":"0","text":"系统工具"},{"attributes":{"icon":"fa fa-video-camera","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user","url":"sys/online"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"92","parentId":"91","text":"在线用户"},{"attributes":{"icon":"fa fa-warning","url":"common/log"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"27","parentId":"91","text":"系统日志"},{"attributes":{"icon":"fa fa-caret-square-o-right","url":"/druid/index.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"57","parentId":"91","text":"运行监控"}],"hasChildren":true,"hasParent":false,"id":"91","parentId":"0","text":"系统监控"},{"attributes":{"icon":"fa fa-laptop","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-pencil-square","url":"oa/notify"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"85","parentId":"84","text":"通知公告"},{"attributes":{"icon":"fa fa-envelope-square","url":"oa/notify/selfNotify"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"90","parentId":"84","text":"我的通知"}],"hasChildren":true,"hasParent":false,"id":"84","parentId":"0","text":"办公管理"},{"attributes":{"icon":"fa fa-print","url":""},"checked":false,"children":[{"attributes":{"icon":"","url":"activiti/task/todo"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"101","parentId":"93","text":"待办任务"},{"attributes":{"icon":"fa fa-sort-amount-asc","url":"activiti/model"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"94","parentId":"93","text":"模型管理"},{"attributes":{"icon":"fa fa-flag","url":"activiti/process"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"96","parentId":"93","text":"流程管理"}],"hasChildren":true,"hasParent":false,"id":"93","parentId":"0","text":"工作流程"},{"attributes":{"icon":"fa fa-rss","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-edit","url":"/blog/bContent/add"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"68","parentId":"49","text":"发布文章"},{"(String), 127.0.0.1(String), 2019-06-04 17:42:37.354(Timestamp)
2019-06-04 17:42:37 -请求地址 : http://localhost:8888/main
2019-06-04 17:42:37 -HTTP METHOD : GET
2019-06-04 17:42:37 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-04 17:42:37 -参数 : []
2019-06-04 17:42:37 -耗时 : 1
2019-06-04 17:42:37 -返回值 : main
2019-06-04 17:42:37 -请求地址 : http://localhost:8888/oa/notify/message
2019-06-04 17:42:37 -HTTP METHOD : GET
2019-06-04 17:42:37 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-06-04 17:42:37 -参数 : []
2019-06-04 17:42:37 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-06-04 17:42:37 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-06-04 17:42:37 -请求地址 : http://localhost:8888/main
2019-06-04 17:42:37 -HTTP METHOD : GET
2019-06-04 17:42:37 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-04 17:42:37 -参数 : []
2019-06-04 17:42:37 -耗时 : 0
2019-06-04 17:42:37 -返回值 : main
2019-06-04 17:42:37 -<==      Total: 0
2019-06-04 17:42:37 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-06-04 17:42:37 -==> Parameters: 1(Long), 0(String)
2019-06-04 17:42:37 -<==    Updates: 1
2019-06-04 17:42:37 -<==      Total: 1
2019-06-04 17:42:37 -耗时 : 364
2019-06-04 17:42:37 -返回值 : com.bootdo.common.utils.PageUtils@476b7d72
2019-06-04 17:42:38 -请求地址 : http://localhost:8888/xjbg/room/roomMng
2019-06-04 17:42:38 -HTTP METHOD : GET
2019-06-04 17:42:38 -CLASS_METHOD : com.bootdo.xjbg.controller.RoomController.roomMng
2019-06-04 17:42:38 -参数 : [{}]
2019-06-04 17:42:38 -==>  Preparing: select `id`,`room_no`,`room_type`,`floor`,`room_state`,`price`,`create_time`,`update_time`,`create_user`,`update_user` from xjbg_room 
2019-06-04 17:42:38 -==> Parameters: 
2019-06-04 17:42:38 -<==      Total: 8
2019-06-04 17:42:38 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 17:42:38 -==> Parameters: room_type(String)
2019-06-04 17:42:38 -<==      Total: 7
2019-06-04 17:42:38 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 17:42:38 -==> Parameters: floor(String)
2019-06-04 17:42:38 -<==      Total: 5
2019-06-04 17:42:38 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 17:42:38 -==> Parameters: room_state(String)
2019-06-04 17:42:38 -<==      Total: 2
2019-06-04 17:42:38 -==>  Preparing: select * from sys_user 
2019-06-04 17:42:38 -==> Parameters: 
2019-06-04 17:42:38 -<==      Total: 11
2019-06-04 17:42:38 -耗时 : 11
2019-06-04 17:42:38 -返回值 : xjbg/room/roomMng
2019-06-04 17:42:39 -请求地址 : http://localhost:8888/xjbg/room/operation/1
2019-06-04 17:42:39 -HTTP METHOD : GET
2019-06-04 17:42:39 -CLASS_METHOD : com.bootdo.xjbg.controller.RoomController.operation
2019-06-04 17:42:39 -参数 : [1, {}]
2019-06-04 17:42:39 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 17:42:39 -==> Parameters: room_type(String)
2019-06-04 17:42:39 -<==      Total: 7
2019-06-04 17:42:39 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 17:42:39 -==> Parameters: floor(String)
2019-06-04 17:42:39 -<==      Total: 5
2019-06-04 17:42:39 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 17:42:39 -==> Parameters: room_state(String)
2019-06-04 17:42:39 -<==      Total: 2
2019-06-04 17:42:39 -==>  Preparing: select * from sys_user 
2019-06-04 17:42:39 -==> Parameters: 
2019-06-04 17:42:39 -<==      Total: 11
2019-06-04 17:42:39 -==>  Preparing: select `id`,`product_name`,`purchase_price`,`selling_price`,`product_pic`,`create_time`,`create_user`,`update_time`,`update_user` from xjbg_product order by id desc 
2019-06-04 17:42:39 -==> Parameters: 
2019-06-04 17:42:39 -<==      Total: 5
2019-06-04 17:42:39 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 17:42:39 -==> Parameters: order_type(String)
2019-06-04 17:42:39 -<==      Total: 3
2019-06-04 17:42:39 -==>  Preparing: select `id`,`room_no`,`room_type`,`floor`,`room_state`,`price`,`create_time`,`update_time`,`create_user`,`update_user` from xjbg_room where id = ? 
2019-06-04 17:42:39 -==> Parameters: 1(Integer)
2019-06-04 17:42:39 -<==      Total: 1
2019-06-04 17:42:39 -耗时 : 15
2019-06-04 17:42:39 -返回值 : xjbg/room/operation
2019-06-04 17:42:46 -请求地址 : http://localhost:8888/xjbg/room/operation/1
2019-06-04 17:42:46 -HTTP METHOD : GET
2019-06-04 17:42:46 -CLASS_METHOD : com.bootdo.xjbg.controller.RoomController.operation
2019-06-04 17:42:46 -参数 : [1, {}]
2019-06-04 17:42:46 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 17:42:46 -==> Parameters: room_type(String)
2019-06-04 17:42:46 -<==      Total: 7
2019-06-04 17:42:46 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 17:42:46 -==> Parameters: floor(String)
2019-06-04 17:42:46 -<==      Total: 5
2019-06-04 17:42:46 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 17:42:46 -==> Parameters: room_state(String)
2019-06-04 17:42:46 -<==      Total: 2
2019-06-04 17:42:46 -==>  Preparing: select * from sys_user 
2019-06-04 17:42:46 -==> Parameters: 
2019-06-04 17:42:46 -<==      Total: 11
2019-06-04 17:42:46 -==>  Preparing: select `id`,`product_name`,`purchase_price`,`selling_price`,`product_pic`,`create_time`,`create_user`,`update_time`,`update_user` from xjbg_product order by id desc 
2019-06-04 17:42:46 -==> Parameters: 
2019-06-04 17:42:46 -<==      Total: 5
2019-06-04 17:42:46 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 17:42:46 -==> Parameters: order_type(String)
2019-06-04 17:42:46 -<==      Total: 3
2019-06-04 17:42:46 -==>  Preparing: select `id`,`room_no`,`room_type`,`floor`,`room_state`,`price`,`create_time`,`update_time`,`create_user`,`update_user` from xjbg_room where id = ? 
2019-06-04 17:42:46 -==> Parameters: 1(Integer)
2019-06-04 17:42:46 -<==      Total: 1
2019-06-04 17:42:46 -耗时 : 14
2019-06-04 17:42:46 -返回值 : xjbg/room/operation
2019-06-04 17:43:27 -请求地址 : http://localhost:8888/main
2019-06-04 17:43:27 -HTTP METHOD : GET
2019-06-04 17:43:27 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-04 17:43:27 -参数 : []
2019-06-04 17:43:27 -耗时 : 1
2019-06-04 17:43:27 -返回值 : main
2019-06-04 17:43:27 -请求地址 : http://localhost:8888/main
2019-06-04 17:43:27 -HTTP METHOD : GET
2019-06-04 17:43:27 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-04 17:43:27 -参数 : []
2019-06-04 17:43:27 -耗时 : 1
2019-06-04 17:43:27 -返回值 : main
2019-06-04 17:43:37 -请求地址 : http://localhost:8888/index
2019-06-04 17:43:37 -HTTP METHOD : GET
2019-06-04 17:43:37 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-06-04 17:43:37 -参数 : [{}]
2019-06-04 17:43:37 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-06-04 17:43:37 -==> Parameters: 1(Long)
2019-06-04 17:43:37 -<==      Total: 34
2019-06-04 17:43:37 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-06-04 17:43:37 -==> Parameters: 144(Long)
2019-06-04 17:43:37 -<==      Total: 1
2019-06-04 17:43:37 -耗时 : 8
2019-06-04 17:43:37 -返回值 : index_v1
2019-06-04 17:43:37 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-04 17:43:37 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 9(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-hotel","url":""},"checked":false,"children":[{"attributes":{"icon":"","url":"/xjbg/room/roomMng"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"105","text":"开房"},{"attributes":{"icon":"fa fa-bed","url":"/xjbg/room"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"106","parentId":"105","text":"房间管理"},{"attributes":{"icon":"","url":"/xjbg/product"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"105","text":"商品管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"欣吉宾馆"},{"attributes":{"icon":"fa fa-commenting","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user","url":"/weixin/weixinUser"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"109","text":"用户管理"}],"hasChildren":true,"hasParent":false,"id":"109","parentId":"0","text":"微信管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","text":"基础管理"},{"attributes":{"icon":"fa fa-desktop"},"checked":false,"children":[{"attributes":{"icon":"fa fa-user","url":"sys/user/"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"6","parentId":"3","text":"用户管理"},{"attributes":{"icon":"fa fa-paw","url":"sys/role"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"7","parentId":"3","text":"角色管理"},{"attributes":{"icon":"fa fa-th-list","url":"sys/menu/"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"3","text":"系统菜单"},{"attributes":{"icon":"fa fa-users","url":"/system/sysDept"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"73","parentId":"3","text":"部门管理"}],"hasChildren":true,"hasParent":false,"id":"3","parentId":"0","text":"系统管理"},{"attributes":{"icon":"fa fa-gear","url":""},"checked":false,"children":[{"attributes":{"icon":"","url":"/swagger-ui.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"104","parentId":"77","text":"swagger"},{"attributes":{"icon":"fa fa-code","url":"common/generator"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"48","parentId":"77","text":"代码生成"},{"attributes":{"icon":"fa fa-hourglass-1","url":"common/job"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"72","parentId":"77","text":"计划任务"}],"hasChildren":true,"hasParent":false,"id":"77","parentId":"0","text":"系统工具"},{"attributes":{"icon":"fa fa-video-camera","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user","url":"sys/online"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"92","parentId":"91","text":"在线用户"},{"attributes":{"icon":"fa fa-warning","url":"common/log"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"27","parentId":"91","text":"系统日志"},{"attributes":{"icon":"fa fa-caret-square-o-right","url":"/druid/index.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"57","parentId":"91","text":"运行监控"}],"hasChildren":true,"hasParent":false,"id":"91","parentId":"0","text":"系统监控"},{"attributes":{"icon":"fa fa-laptop","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-pencil-square","url":"oa/notify"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"85","parentId":"84","text":"通知公告"},{"attributes":{"icon":"fa fa-envelope-square","url":"oa/notify/selfNotify"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"90","parentId":"84","text":"我的通知"}],"hasChildren":true,"hasParent":false,"id":"84","parentId":"0","text":"办公管理"},{"attributes":{"icon":"fa fa-print","url":""},"checked":false,"children":[{"attributes":{"icon":"","url":"activiti/task/todo"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"101","parentId":"93","text":"待办任务"},{"attributes":{"icon":"fa fa-sort-amount-asc","url":"activiti/model"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"94","parentId":"93","text":"模型管理"},{"attributes":{"icon":"fa fa-flag","url":"activiti/process"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"96","parentId":"93","text":"流程管理"}],"hasChildren":true,"hasParent":false,"id":"93","parentId":"0","text":"工作流程"},{"attributes":{"icon":"fa fa-rss","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-edit","url":"/blog/bContent/add"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"68","parentId":"49","text":"发布文章"},{"(String), 127.0.0.1(String), 2019-06-04 17:43:37.154(Timestamp)
2019-06-04 17:43:37 -请求地址 : http://localhost:8888/main
2019-06-04 17:43:37 -HTTP METHOD : GET
2019-06-04 17:43:37 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-04 17:43:37 -参数 : []
2019-06-04 17:43:37 -耗时 : 0
2019-06-04 17:43:37 -返回值 : main
2019-06-04 17:43:37 -<==    Updates: 1
2019-06-04 17:43:37 -请求地址 : http://localhost:8888/oa/notify/message
2019-06-04 17:43:37 -HTTP METHOD : GET
2019-06-04 17:43:37 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-06-04 17:43:37 -参数 : []
2019-06-04 17:43:37 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-06-04 17:43:37 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-06-04 17:43:37 -<==      Total: 0
2019-06-04 17:43:37 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-06-04 17:43:37 -==> Parameters: 1(Long), 0(String)
2019-06-04 17:43:37 -<==      Total: 1
2019-06-04 17:43:37 -耗时 : 4
2019-06-04 17:43:37 -返回值 : com.bootdo.common.utils.PageUtils@11521f5
2019-06-04 17:43:37 -请求地址 : http://localhost:8888/main
2019-06-04 17:43:37 -HTTP METHOD : GET
2019-06-04 17:43:37 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-04 17:43:37 -参数 : []
2019-06-04 17:43:37 -耗时 : 1
2019-06-04 17:43:37 -返回值 : main
2019-06-04 17:43:38 -请求地址 : http://localhost:8888/xjbg/room/roomMng
2019-06-04 17:43:38 -HTTP METHOD : GET
2019-06-04 17:43:38 -CLASS_METHOD : com.bootdo.xjbg.controller.RoomController.roomMng
2019-06-04 17:43:38 -参数 : [{}]
2019-06-04 17:43:38 -==>  Preparing: select `id`,`room_no`,`room_type`,`floor`,`room_state`,`price`,`create_time`,`update_time`,`create_user`,`update_user` from xjbg_room 
2019-06-04 17:43:38 -==> Parameters: 
2019-06-04 17:43:38 -<==      Total: 8
2019-06-04 17:43:38 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 17:43:38 -==> Parameters: room_type(String)
2019-06-04 17:43:38 -<==      Total: 7
2019-06-04 17:43:38 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 17:43:38 -==> Parameters: floor(String)
2019-06-04 17:43:38 -<==      Total: 5
2019-06-04 17:43:38 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 17:43:38 -==> Parameters: room_state(String)
2019-06-04 17:43:38 -<==      Total: 2
2019-06-04 17:43:38 -==>  Preparing: select * from sys_user 
2019-06-04 17:43:38 -==> Parameters: 
2019-06-04 17:43:38 -<==      Total: 11
2019-06-04 17:43:38 -耗时 : 7
2019-06-04 17:43:38 -返回值 : xjbg/room/roomMng
2019-06-04 17:43:39 -请求地址 : http://localhost:8888/xjbg/room/operation/1
2019-06-04 17:43:39 -HTTP METHOD : GET
2019-06-04 17:43:39 -CLASS_METHOD : com.bootdo.xjbg.controller.RoomController.operation
2019-06-04 17:43:39 -参数 : [1, {}]
2019-06-04 17:43:39 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 17:43:39 -==> Parameters: room_type(String)
2019-06-04 17:43:39 -<==      Total: 7
2019-06-04 17:43:39 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 17:43:39 -==> Parameters: floor(String)
2019-06-04 17:43:39 -<==      Total: 5
2019-06-04 17:43:39 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 17:43:39 -==> Parameters: room_state(String)
2019-06-04 17:43:39 -<==      Total: 2
2019-06-04 17:43:39 -==>  Preparing: select * from sys_user 
2019-06-04 17:43:39 -==> Parameters: 
2019-06-04 17:43:39 -<==      Total: 11
2019-06-04 17:43:39 -==>  Preparing: select `id`,`product_name`,`purchase_price`,`selling_price`,`product_pic`,`create_time`,`create_user`,`update_time`,`update_user` from xjbg_product order by id desc 
2019-06-04 17:43:39 -==> Parameters: 
2019-06-04 17:43:39 -<==      Total: 5
2019-06-04 17:43:39 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 17:43:39 -==> Parameters: order_type(String)
2019-06-04 17:43:39 -<==      Total: 3
2019-06-04 17:43:39 -==>  Preparing: select `id`,`room_no`,`room_type`,`floor`,`room_state`,`price`,`create_time`,`update_time`,`create_user`,`update_user` from xjbg_room where id = ? 
2019-06-04 17:43:39 -==> Parameters: 1(Integer)
2019-06-04 17:43:39 -<==      Total: 1
2019-06-04 17:43:39 -耗时 : 13
2019-06-04 17:43:39 -返回值 : xjbg/room/operation
2019-06-04 17:43:45 -请求地址 : http://localhost:8888/xjbg/room/operation/1
2019-06-04 17:43:45 -HTTP METHOD : GET
2019-06-04 17:43:45 -CLASS_METHOD : com.bootdo.xjbg.controller.RoomController.operation
2019-06-04 17:43:45 -参数 : [1, {}]
2019-06-04 17:43:45 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 17:43:45 -==> Parameters: room_type(String)
2019-06-04 17:43:45 -<==      Total: 7
2019-06-04 17:43:45 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 17:43:45 -==> Parameters: floor(String)
2019-06-04 17:43:45 -<==      Total: 5
2019-06-04 17:43:45 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 17:43:45 -==> Parameters: room_state(String)
2019-06-04 17:43:45 -<==      Total: 2
2019-06-04 17:43:45 -==>  Preparing: select * from sys_user 
2019-06-04 17:43:45 -==> Parameters: 
2019-06-04 17:43:45 -<==      Total: 11
2019-06-04 17:43:45 -==>  Preparing: select `id`,`product_name`,`purchase_price`,`selling_price`,`product_pic`,`create_time`,`create_user`,`update_time`,`update_user` from xjbg_product order by id desc 
2019-06-04 17:43:45 -==> Parameters: 
2019-06-04 17:43:45 -<==      Total: 5
2019-06-04 17:43:45 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 17:43:45 -==> Parameters: order_type(String)
2019-06-04 17:43:45 -<==      Total: 3
2019-06-04 17:43:45 -==>  Preparing: select `id`,`room_no`,`room_type`,`floor`,`room_state`,`price`,`create_time`,`update_time`,`create_user`,`update_user` from xjbg_room where id = ? 
2019-06-04 17:43:45 -==> Parameters: 1(Integer)
2019-06-04 17:43:45 -<==      Total: 1
2019-06-04 17:43:45 -耗时 : 11
2019-06-04 17:43:45 -返回值 : xjbg/room/operation
2019-06-04 17:45:09 -请求地址 : http://localhost:8888/index
2019-06-04 17:45:09 -HTTP METHOD : GET
2019-06-04 17:45:09 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-06-04 17:45:09 -参数 : [{}]
2019-06-04 17:45:09 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-06-04 17:45:09 -==> Parameters: 1(Long)
2019-06-04 17:45:09 -<==      Total: 34
2019-06-04 17:45:09 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-06-04 17:45:09 -==> Parameters: 144(Long)
2019-06-04 17:45:09 -<==      Total: 1
2019-06-04 17:45:09 -耗时 : 6
2019-06-04 17:45:09 -返回值 : index_v1
2019-06-04 17:45:09 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-04 17:45:09 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 6(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-hotel","url":""},"checked":false,"children":[{"attributes":{"icon":"","url":"/xjbg/room/roomMng"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"105","text":"开房"},{"attributes":{"icon":"fa fa-bed","url":"/xjbg/room"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"106","parentId":"105","text":"房间管理"},{"attributes":{"icon":"","url":"/xjbg/product"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"105","text":"商品管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"欣吉宾馆"},{"attributes":{"icon":"fa fa-commenting","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user","url":"/weixin/weixinUser"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"109","text":"用户管理"}],"hasChildren":true,"hasParent":false,"id":"109","parentId":"0","text":"微信管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","text":"基础管理"},{"attributes":{"icon":"fa fa-desktop"},"checked":false,"children":[{"attributes":{"icon":"fa fa-user","url":"sys/user/"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"6","parentId":"3","text":"用户管理"},{"attributes":{"icon":"fa fa-paw","url":"sys/role"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"7","parentId":"3","text":"角色管理"},{"attributes":{"icon":"fa fa-th-list","url":"sys/menu/"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"3","text":"系统菜单"},{"attributes":{"icon":"fa fa-users","url":"/system/sysDept"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"73","parentId":"3","text":"部门管理"}],"hasChildren":true,"hasParent":false,"id":"3","parentId":"0","text":"系统管理"},{"attributes":{"icon":"fa fa-gear","url":""},"checked":false,"children":[{"attributes":{"icon":"","url":"/swagger-ui.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"104","parentId":"77","text":"swagger"},{"attributes":{"icon":"fa fa-code","url":"common/generator"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"48","parentId":"77","text":"代码生成"},{"attributes":{"icon":"fa fa-hourglass-1","url":"common/job"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"72","parentId":"77","text":"计划任务"}],"hasChildren":true,"hasParent":false,"id":"77","parentId":"0","text":"系统工具"},{"attributes":{"icon":"fa fa-video-camera","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user","url":"sys/online"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"92","parentId":"91","text":"在线用户"},{"attributes":{"icon":"fa fa-warning","url":"common/log"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"27","parentId":"91","text":"系统日志"},{"attributes":{"icon":"fa fa-caret-square-o-right","url":"/druid/index.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"57","parentId":"91","text":"运行监控"}],"hasChildren":true,"hasParent":false,"id":"91","parentId":"0","text":"系统监控"},{"attributes":{"icon":"fa fa-laptop","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-pencil-square","url":"oa/notify"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"85","parentId":"84","text":"通知公告"},{"attributes":{"icon":"fa fa-envelope-square","url":"oa/notify/selfNotify"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"90","parentId":"84","text":"我的通知"}],"hasChildren":true,"hasParent":false,"id":"84","parentId":"0","text":"办公管理"},{"attributes":{"icon":"fa fa-print","url":""},"checked":false,"children":[{"attributes":{"icon":"","url":"activiti/task/todo"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"101","parentId":"93","text":"待办任务"},{"attributes":{"icon":"fa fa-sort-amount-asc","url":"activiti/model"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"94","parentId":"93","text":"模型管理"},{"attributes":{"icon":"fa fa-flag","url":"activiti/process"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"96","parentId":"93","text":"流程管理"}],"hasChildren":true,"hasParent":false,"id":"93","parentId":"0","text":"工作流程"},{"attributes":{"icon":"fa fa-rss","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-edit","url":"/blog/bContent/add"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"68","parentId":"49","text":"发布文章"},{"(String), 127.0.0.1(String), 2019-06-04 17:45:09.061(Timestamp)
2019-06-04 17:45:09 -请求地址 : http://localhost:8888/main
2019-06-04 17:45:09 -HTTP METHOD : GET
2019-06-04 17:45:09 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-04 17:45:09 -参数 : []
2019-06-04 17:45:09 -耗时 : 1
2019-06-04 17:45:09 -返回值 : main
2019-06-04 17:45:09 -<==    Updates: 1
2019-06-04 17:45:09 -请求地址 : http://localhost:8888/oa/notify/message
2019-06-04 17:45:09 -HTTP METHOD : GET
2019-06-04 17:45:09 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-06-04 17:45:09 -参数 : []
2019-06-04 17:45:09 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-06-04 17:45:09 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-06-04 17:45:09 -<==      Total: 0
2019-06-04 17:45:09 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-06-04 17:45:09 -==> Parameters: 1(Long), 0(String)
2019-06-04 17:45:09 -<==      Total: 1
2019-06-04 17:45:09 -耗时 : 3
2019-06-04 17:45:09 -返回值 : com.bootdo.common.utils.PageUtils@3e35b437
2019-06-04 17:45:09 -请求地址 : http://localhost:8888/main
2019-06-04 17:45:09 -HTTP METHOD : GET
2019-06-04 17:45:09 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-04 17:45:09 -参数 : []
2019-06-04 17:45:09 -耗时 : 1
2019-06-04 17:45:09 -返回值 : main
2019-06-04 17:45:10 -请求地址 : http://localhost:8888/xjbg/room/roomMng
2019-06-04 17:45:10 -HTTP METHOD : GET
2019-06-04 17:45:10 -CLASS_METHOD : com.bootdo.xjbg.controller.RoomController.roomMng
2019-06-04 17:45:10 -参数 : [{}]
2019-06-04 17:45:10 -==>  Preparing: select `id`,`room_no`,`room_type`,`floor`,`room_state`,`price`,`create_time`,`update_time`,`create_user`,`update_user` from xjbg_room 
2019-06-04 17:45:10 -==> Parameters: 
2019-06-04 17:45:10 -<==      Total: 8
2019-06-04 17:45:10 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 17:45:10 -==> Parameters: room_type(String)
2019-06-04 17:45:10 -<==      Total: 7
2019-06-04 17:45:10 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 17:45:10 -==> Parameters: floor(String)
2019-06-04 17:45:10 -<==      Total: 5
2019-06-04 17:45:10 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 17:45:10 -==> Parameters: room_state(String)
2019-06-04 17:45:10 -<==      Total: 2
2019-06-04 17:45:10 -==>  Preparing: select * from sys_user 
2019-06-04 17:45:10 -==> Parameters: 
2019-06-04 17:45:10 -<==      Total: 11
2019-06-04 17:45:10 -耗时 : 8
2019-06-04 17:45:10 -返回值 : xjbg/room/roomMng
2019-06-04 17:45:11 -请求地址 : http://localhost:8888/xjbg/room/operation/1
2019-06-04 17:45:11 -HTTP METHOD : GET
2019-06-04 17:45:11 -CLASS_METHOD : com.bootdo.xjbg.controller.RoomController.operation
2019-06-04 17:45:11 -参数 : [1, {}]
2019-06-04 17:45:11 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 17:45:11 -==> Parameters: room_type(String)
2019-06-04 17:45:11 -<==      Total: 7
2019-06-04 17:45:11 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 17:45:11 -==> Parameters: floor(String)
2019-06-04 17:45:11 -<==      Total: 5
2019-06-04 17:45:11 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 17:45:11 -==> Parameters: room_state(String)
2019-06-04 17:45:11 -<==      Total: 2
2019-06-04 17:45:11 -==>  Preparing: select * from sys_user 
2019-06-04 17:45:11 -==> Parameters: 
2019-06-04 17:45:11 -<==      Total: 11
2019-06-04 17:45:11 -==>  Preparing: select `id`,`product_name`,`purchase_price`,`selling_price`,`product_pic`,`create_time`,`create_user`,`update_time`,`update_user` from xjbg_product order by id desc 
2019-06-04 17:45:11 -==> Parameters: 
2019-06-04 17:45:11 -<==      Total: 5
2019-06-04 17:45:11 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 17:45:11 -==> Parameters: order_type(String)
2019-06-04 17:45:11 -<==      Total: 3
2019-06-04 17:45:11 -==>  Preparing: select `id`,`room_no`,`room_type`,`floor`,`room_state`,`price`,`create_time`,`update_time`,`create_user`,`update_user` from xjbg_room where id = ? 
2019-06-04 17:45:11 -==> Parameters: 1(Integer)
2019-06-04 17:45:11 -<==      Total: 1
2019-06-04 17:45:11 -耗时 : 11
2019-06-04 17:45:11 -返回值 : xjbg/room/operation
2019-06-04 17:45:14 -请求地址 : http://localhost:8888/xjbg/room/operation/1
2019-06-04 17:45:14 -HTTP METHOD : GET
2019-06-04 17:45:14 -CLASS_METHOD : com.bootdo.xjbg.controller.RoomController.operation
2019-06-04 17:45:14 -参数 : [1, {}]
2019-06-04 17:45:14 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 17:45:14 -==> Parameters: room_type(String)
2019-06-04 17:45:14 -<==      Total: 7
2019-06-04 17:45:14 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 17:45:14 -==> Parameters: floor(String)
2019-06-04 17:45:14 -<==      Total: 5
2019-06-04 17:45:14 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 17:45:14 -==> Parameters: room_state(String)
2019-06-04 17:45:14 -<==      Total: 2
2019-06-04 17:45:14 -==>  Preparing: select * from sys_user 
2019-06-04 17:45:14 -==> Parameters: 
2019-06-04 17:45:14 -<==      Total: 11
2019-06-04 17:45:14 -==>  Preparing: select `id`,`product_name`,`purchase_price`,`selling_price`,`product_pic`,`create_time`,`create_user`,`update_time`,`update_user` from xjbg_product order by id desc 
2019-06-04 17:45:14 -==> Parameters: 
2019-06-04 17:45:14 -<==      Total: 5
2019-06-04 17:45:14 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 17:45:14 -==> Parameters: order_type(String)
2019-06-04 17:45:14 -<==      Total: 3
2019-06-04 17:45:14 -==>  Preparing: select `id`,`room_no`,`room_type`,`floor`,`room_state`,`price`,`create_time`,`update_time`,`create_user`,`update_user` from xjbg_room where id = ? 
2019-06-04 17:45:14 -==> Parameters: 1(Integer)
2019-06-04 17:45:14 -<==      Total: 1
2019-06-04 17:45:14 -耗时 : 14
2019-06-04 17:45:14 -返回值 : xjbg/room/operation
2019-06-04 17:46:53 -Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@61b39c83: startup date [Tue Jun 04 17:41:09 CST 2019]; root of context hierarchy
2019-06-04 17:46:53 -Stopping beans in phase 2147483647
2019-06-04 17:46:53 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED paused.
2019-06-04 17:46:53 -Stopping...
2019-06-04 17:46:53 -BrokerAvailabilityEvent[available=false, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[1 sessions]]]]
2019-06-04 17:46:53 -Stopped.
2019-06-04 17:46:53 -Unregistering JMX-exposed beans on shutdown
2019-06-04 17:46:53 -Unregistering JMX-exposed beans
2019-06-04 17:46:53 -Shutting down ExecutorService 'brokerChannelExecutor'
2019-06-04 17:46:53 -Shutting down ExecutorService 'messageBrokerTaskScheduler'
2019-06-04 17:46:53 -Shutting down ExecutorService 'clientOutboundChannelExecutor'
2019-06-04 17:46:53 -Shutting down ExecutorService 'clientInboundChannelExecutor'
2019-06-04 17:46:53 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED shutting down.
2019-06-04 17:46:53 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED paused.
2019-06-04 17:46:53 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED shutdown complete.
2019-06-04 17:46:53 -Shutting down Quartz Scheduler
2019-06-04 17:46:53 -{dataSource-1} closed
2019-06-04 17:46:53 -Disabled session validation scheduler.
2019-06-04 17:46:54 -Starting BootdoApplication on LAPTOP-ELP5M68R with PID 7528 (D:\workspace\bootdo\bootdo\target\classes started by Lenovo in D:\workspace\bootdo\bootdo)
2019-06-04 17:46:54 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-06-04 17:46:54 -The following profiles are active: dev
2019-06-04 17:46:54 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@2a1bc82: startup date [Tue Jun 04 17:46:54 CST 2019]; root of context hierarchy
2019-06-04 17:46:55 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-06-04 17:46:56 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$32294812] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-04 17:46:56 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$248276b9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-04 17:46:56 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-04 17:46:56 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-04 17:46:56 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-04 17:46:56 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache.1' does not yet exist.  Creating now.
2019-06-04 17:46:56 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache.1]
2019-06-04 17:46:56 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-04 17:46:56 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-04 17:46:56 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-04 17:46:56 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-04 17:46:56 -Tomcat initialized with port(s): 8888 (http)
2019-06-04 17:46:56 -Initializing ProtocolHandler ["http-nio-8888"]
2019-06-04 17:46:56 -Starting service [Tomcat]
2019-06-04 17:46:56 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-06-04 17:46:56 -Initializing Spring embedded WebApplicationContext
2019-06-04 17:46:56 -Root WebApplicationContext: initialization completed in 2359 ms
2019-06-04 17:46:56 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-06-04 17:46:56 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-06-04 17:46:56 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-06-04 17:46:56 -Mapping filter: 'requestContextFilter' to: [/*]
2019-06-04 17:46:56 -Filter xssFilter was not registered (disabled)
2019-06-04 17:46:56 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-06-04 17:46:56 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-06-04 17:46:56 -Servlet statViewServlet mapped to [/druid/*]
2019-06-04 17:46:56 -Servlet dispatcherServlet mapped to [/]
2019-06-04 17:46:56 -{dataSource-2} inited
2019-06-04 17:46:57 -ProcessEngine default created
2019-06-04 17:46:58 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@2a1bc82: startup date [Tue Jun 04 17:46:54 CST 2019]; root of context hierarchy
2019-06-04 17:46:58 -Using default implementation for ThreadExecutor
2019-06-04 17:46:58 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-06-04 17:46:58 -Quartz Scheduler v.2.2.1 created.
2019-06-04 17:46:58 -RAMJobStore initialized.
2019-06-04 17:46:58 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-06-04 17:46:58 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-06-04 17:46:58 -Quartz scheduler version: 2.2.1
2019-06-04 17:46:58 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@41cb9814
2019-06-04 17:46:58 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-06-04 17:46:58 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-06-04 17:47:04 -Starting BootdoApplication on LAPTOP-ELP5M68R with PID 4252 (D:\workspace\bootdo\bootdo\target\classes started by Lenovo in D:\workspace\bootdo\bootdo)
2019-06-04 17:47:04 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-06-04 17:47:04 -The following profiles are active: dev
2019-06-04 17:47:04 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@34a70823: startup date [Tue Jun 04 17:47:04 CST 2019]; root of context hierarchy
2019-06-04 17:47:06 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-06-04 17:47:07 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$e540caba] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-04 17:47:07 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$d799f961] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-04 17:47:08 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-04 17:47:08 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-04 17:47:08 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-04 17:47:08 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-06-04 17:47:08 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-06-04 17:47:08 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-04 17:47:08 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-04 17:47:08 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-04 17:47:08 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-04 17:47:08 -Tomcat initialized with port(s): 8888 (http)
2019-06-04 17:47:08 -Initializing ProtocolHandler ["http-nio-8888"]
2019-06-04 17:47:08 -Starting service [Tomcat]
2019-06-04 17:47:08 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-06-04 17:47:08 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [F:\yff\jdk1.8\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;D:\app\Lenovo\product\11.2.0\dbhome_1\bin;\bin;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\iCLS\;C:\Program Files\Intel\Intel(R) Management Engine Components\iCLS\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;F:\yff\jdk1.8\BIN;D:\Program Files\develop\apache-maven-3.3.9\BIN;D:\Program Files\matlab\v81\runtime\win64;D:\Program Files\matlab\v81\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;F:\yff\redis64;D:\Program Files\Notepad++;D:\Program Files\mysql-5.7.24-winx64\BIN;D:\Program Files\matlab\v81\bin\win64;D:\Program Files\matlab\v81\runtime\win64;D:\Program Files\develop\SVN\bin;D:\Program Files\develop\apache-tomcat-8.5.8-ltcins-common-4280\bin;D:\Program Files\develop\apache-tomcat-8.5.8-ltcins-common-4080\bin;D:\Program Files\develop\zookeeper-3.4.10\BIN;D:\Program Files\develop\Git\cmd;C:\Users\Lenovo\AppData\Local\Microsoft\WindowsApps;C:\Users\Lenovo\AppData\Local\GitHubDesktop\bin;.]
2019-06-04 17:47:09 -Initializing Spring embedded WebApplicationContext
2019-06-04 17:47:09 -Root WebApplicationContext: initialization completed in 4012 ms
2019-06-04 17:47:09 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-06-04 17:47:09 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-06-04 17:47:09 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-06-04 17:47:09 -Mapping filter: 'requestContextFilter' to: [/*]
2019-06-04 17:47:09 -Filter xssFilter was not registered (disabled)
2019-06-04 17:47:09 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-06-04 17:47:09 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-06-04 17:47:09 -Servlet statViewServlet mapped to [/druid/*]
2019-06-04 17:47:09 -Servlet dispatcherServlet mapped to [/]
2019-06-04 17:47:09 -{dataSource-1} inited
2019-06-04 17:47:10 -ProcessEngine default created
2019-06-04 17:47:10 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@34a70823: startup date [Tue Jun 04 17:47:04 CST 2019]; root of context hierarchy
2019-06-04 17:47:10 -Using default implementation for ThreadExecutor
2019-06-04 17:47:11 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-06-04 17:47:11 -Quartz Scheduler v.2.2.1 created.
2019-06-04 17:47:11 -RAMJobStore initialized.
2019-06-04 17:47:11 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-06-04 17:47:11 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-06-04 17:47:11 -Quartz scheduler version: 2.2.1
2019-06-04 17:47:11 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@15957da
2019-06-04 17:47:11 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-06-04 17:47:11 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-06-04 17:47:12 -Mapped "{[/activiti/model/{id}],methods=[DELETE]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.ModelController.remove(java.lang.String)
2019-06-04 17:47:12 -Mapped "{[/activiti/model/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.activiti.controller.ModelController.list(int,int)
2019-06-04 17:47:12 -Mapped "{[/activiti/model/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.ModelController.batchRemove(java.lang.String[])
2019-06-04 17:47:12 -Mapped "{[/activiti/model],methods=[GET]}" onto org.springframework.web.servlet.ModelAndView com.bootdo.activiti.controller.ModelController.model()
2019-06-04 17:47:12 -Mapped "{[/activiti/model/add]}" onto public void com.bootdo.activiti.controller.ModelController.newModel(javax.servlet.http.HttpServletResponse) throws java.io.UnsupportedEncodingException
2019-06-04 17:47:12 -Mapped "{[/activiti/model/{modelId}/save],methods=[PUT]}" onto public void com.bootdo.activiti.controller.ModelController.saveModel(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2019-06-04 17:47:12 -Mapped "{[/activiti/model/deploy/{id}],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.ModelController.deploy(java.lang.String) throws java.lang.Exception
2019-06-04 17:47:12 -Mapped "{[/activiti/model/{modelId}/json],methods=[GET]}" onto public com.fasterxml.jackson.databind.node.ObjectNode com.bootdo.activiti.controller.ModelController.getEditorJson(java.lang.String)
2019-06-04 17:47:12 -Mapped "{[/activiti/editor/stencilset],methods=[GET],produces=[application/json;charset=utf-8]}" onto public java.lang.String com.bootdo.activiti.controller.ModelController.getStencilset()
2019-06-04 17:47:12 -Mapped "{[/activiti/model/export/{id}],methods=[GET]}" onto public void com.bootdo.activiti.controller.ModelController.exportToXml(java.lang.String,javax.servlet.http.HttpServletResponse)
2019-06-04 17:47:12 -Mapped "{[/activiti/model/edit/{id}],methods=[GET]}" onto public void com.bootdo.activiti.controller.ModelController.edit(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-06-04 17:47:12 -Mapped "{[/activiti/process/add],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.activiti.controller.ProcessController.add()
2019-06-04 17:47:12 -Mapped "{[/activiti/process/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.ProcessController.remove(java.lang.String)
2019-06-04 17:47:12 -Mapped "{[/activiti/process/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.activiti.controller.ProcessController.list(int,int)
2019-06-04 17:47:12 -Mapped "{[/activiti/process/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.ProcessController.batchRemove(java.lang.String[])
2019-06-04 17:47:12 -Mapped "{[/activiti/process],methods=[GET]}" onto org.springframework.web.servlet.ModelAndView com.bootdo.activiti.controller.ProcessController.process()
2019-06-04 17:47:12 -Mapped "{[/activiti/process/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.ProcessController.deploy(java.lang.String,java.lang.String,org.springframework.web.multipart.MultipartFile)
2019-06-04 17:47:12 -Mapped "{[/activiti/process/convertToModel/{procDefId}]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.ProcessController.convertToModel(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes) throws java.io.UnsupportedEncodingException,javax.xml.stream.XMLStreamException
2019-06-04 17:47:12 -Mapped "{[/activiti/process/resource/read/{xml}/{id}]}" onto public void com.bootdo.activiti.controller.ProcessController.resourceRead(java.lang.String,java.lang.String,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-06-04 17:47:12 -Mapped "{[/act/salary/form],methods=[GET]}" onto java.lang.String com.bootdo.activiti.controller.SalaryController.add()
2019-06-04 17:47:12 -Mapped "{[/act/salary/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.SalaryController.remove(java.lang.String)
2019-06-04 17:47:12 -Mapped "{[/act/salary/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.SalaryController.remove(java.lang.String[])
2019-06-04 17:47:12 -Mapped "{[/act/salary/update]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.SalaryController.update(com.bootdo.activiti.domain.SalaryDO)
2019-06-04 17:47:12 -Mapped "{[/act/salary/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.activiti.controller.SalaryController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-04 17:47:12 -Mapped "{[/act/salary/form/{taskId}],methods=[GET]}" onto java.lang.String com.bootdo.activiti.controller.SalaryController.edit(java.lang.String,org.springframework.ui.Model)
2019-06-04 17:47:12 -Mapped "{[/act/salary/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.SalaryController.saveOrUpdate(com.bootdo.activiti.domain.SalaryDO)
2019-06-04 17:47:12 -Mapped "{[/act/salary],methods=[GET]}" onto java.lang.String com.bootdo.activiti.controller.SalaryController.Salary()
2019-06-04 17:47:12 -Mapped "{[/activiti/task/form/{procDefId}/{taskId}],methods=[GET]}" onto public void com.bootdo.activiti.controller.TaskController.form(java.lang.String,java.lang.String,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-06-04 17:47:12 -Mapped "{[/activiti/task/gotoList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.activiti.controller.TaskController.list(int,int)
2019-06-04 17:47:12 -Mapped "{[/activiti/task/goto],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.activiti.controller.TaskController.gotoTask()
2019-06-04 17:47:12 -Mapped "{[/activiti/task/form/{procDefId}],methods=[GET]}" onto public void com.bootdo.activiti.controller.TaskController.startForm(java.lang.String,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-06-04 17:47:12 -Mapped "{[/activiti/task/todo],methods=[GET]}" onto org.springframework.web.servlet.ModelAndView com.bootdo.activiti.controller.TaskController.todo()
2019-06-04 17:47:12 -Mapped "{[/activiti/task/todoList],methods=[GET]}" onto java.util.List<com.bootdo.activiti.vo.TaskVO> com.bootdo.activiti.controller.TaskController.todoList()
2019-06-04 17:47:12 -Mapped "{[/activiti/task/trace/photo/{procDefId}/{execId}]}" onto public void com.bootdo.activiti.controller.TaskController.tracePhoto(java.lang.String,java.lang.String,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-06-04 17:47:12 -Mapped "{[/blog/open/post/{cid}],methods=[GET]}" onto java.lang.String com.bootdo.blog.controller.BlogController.post(java.lang.Long,org.springframework.ui.Model)
2019-06-04 17:47:12 -Mapped "{[/blog/open/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.blog.controller.BlogController.opentList(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-04 17:47:12 -Mapped "{[/blog],methods=[GET]}" onto java.lang.String com.bootdo.blog.controller.BlogController.blog()
2019-06-04 17:47:12 -Mapped "{[/blog/open/page/{categories}],methods=[GET]}" onto java.lang.String com.bootdo.blog.controller.BlogController.about(java.lang.String,org.springframework.ui.Model)
2019-06-04 17:47:12 -Mapped "{[/blog/bContent/add],methods=[GET]}" onto java.lang.String com.bootdo.blog.controller.ContentController.add()
2019-06-04 17:47:12 -Mapped "{[/blog/bContent/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.blog.controller.ContentController.remove(java.lang.Long)
2019-06-04 17:47:12 -Mapped "{[/blog/bContent/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.blog.controller.ContentController.remove(java.lang.Long[])
2019-06-04 17:47:12 -Mapped "{[/blog/bContent/update]}" onto public com.bootdo.common.utils.R com.bootdo.blog.controller.ContentController.update(com.bootdo.blog.domain.ContentDO)
2019-06-04 17:47:12 -Mapped "{[/blog/bContent/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.blog.controller.ContentController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-04 17:47:12 -Mapped "{[/blog/bContent/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.blog.controller.ContentController.save(com.bootdo.blog.domain.ContentDO)
2019-06-04 17:47:12 -Mapped "{[/blog/bContent],methods=[GET]}" onto java.lang.String com.bootdo.blog.controller.ContentController.bContent()
2019-06-04 17:47:12 -Mapped "{[/blog/bContent/edit/{cid}],methods=[GET]}" onto java.lang.String com.bootdo.blog.controller.ContentController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-04 17:47:12 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-06-04 17:47:12 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-06-04 17:47:12 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-06-04 17:47:12 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-06-04 17:47:12 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-04 17:47:12 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-06-04 17:47:12 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-06-04 17:47:12 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-06-04 17:47:12 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-06-04 17:47:12 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-06-04 17:47:12 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-04 17:47:12 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-06-04 17:47:12 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-06-04 17:47:12 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-06-04 17:47:12 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-06-04 17:47:12 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-04 17:47:12 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-06-04 17:47:12 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-06-04 17:47:12 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-06-04 17:47:12 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-06-04 17:47:12 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-04 17:47:12 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-04 17:47:12 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-06-04 17:47:12 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-06-04 17:47:12 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-06-04 17:47:12 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-06-04 17:47:12 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-06-04 17:47:12 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-06-04 17:47:12 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-06-04 17:47:12 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-06-04 17:47:12 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-06-04 17:47:12 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-04 17:47:12 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-06-04 17:47:12 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-06-04 17:47:12 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-06-04 17:47:12 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-06-04 17:47:12 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-04 17:47:12 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-06-04 17:47:12 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-06-04 17:47:12 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-04 17:47:12 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-06-04 17:47:12 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-06-04 17:47:12 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-06-04 17:47:12 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-06-04 17:47:12 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-06-04 17:47:12 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-06-04 17:47:12 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-06-04 17:47:12 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-06-04 17:47:12 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-04 17:47:12 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-06-04 17:47:12 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-06-04 17:47:12 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-04 17:47:12 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-06-04 17:47:12 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-06-04 17:47:12 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-04 17:47:12 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-06-04 17:47:12 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-06-04 17:47:12 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-06-04 17:47:12 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-06-04 17:47:12 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-06-04 17:47:12 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-06-04 17:47:12 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-06-04 17:47:12 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-04 17:47:12 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-06-04 17:47:12 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-06-04 17:47:12 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-06-04 17:47:12 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-06-04 17:47:12 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-06-04 17:47:12 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-06-04 17:47:12 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String)
2019-06-04 17:47:12 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-06-04 17:47:12 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-06-04 17:47:12 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-06-04 17:47:12 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-06-04 17:47:12 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-04 17:47:12 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-06-04 17:47:12 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-06-04 17:47:12 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-06-04 17:47:12 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-06-04 17:47:12 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-06-04 17:47:12 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-06-04 17:47:12 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-06-04 17:47:12 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-06-04 17:47:12 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-06-04 17:47:12 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-06-04 17:47:12 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-06-04 17:47:12 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-06-04 17:47:12 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-04 17:47:12 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-06-04 17:47:12 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-06-04 17:47:12 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-06-04 17:47:12 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-06-04 17:47:12 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-04 17:47:12 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-06-04 17:47:12 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-06-04 17:47:12 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-06-04 17:47:12 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-04 17:47:12 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-06-04 17:47:12 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-06-04 17:47:12 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-06-04 17:47:12 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-06-04 17:47:12 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-06-04 17:47:12 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-06-04 17:47:12 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-06-04 17:47:12 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-06-04 17:47:12 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-06-04 17:47:12 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-06-04 17:47:12 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-06-04 17:47:12 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-06-04 17:47:12 -Mapped "{[/wxServer],methods=[GET]}" onto public void org.weixin4j.spring.web.WeixinJieruController.get(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-06-04 17:47:12 -Mapped "{[/wxServer],methods=[POST]}" onto public void org.weixin4j.spring.web.WeixinJieruController.post(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-06-04 17:47:12 -Mapped "{[/weixin/weixinUser/add],methods=[GET]}" onto java.lang.String com.bootdo.weixin.controller.WeixinUserController.add()
2019-06-04 17:47:12 -Mapped "{[/weixin/weixinUser/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.weixin.controller.WeixinUserController.remove(java.lang.Long)
2019-06-04 17:47:12 -Mapped "{[/weixin/weixinUser/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.weixin.controller.WeixinUserController.remove(java.lang.Long[])
2019-06-04 17:47:12 -Mapped "{[/weixin/weixinUser/update]}" onto public com.bootdo.common.utils.R com.bootdo.weixin.controller.WeixinUserController.update(com.bootdo.weixin.domain.WeixinUserDO)
2019-06-04 17:47:12 -Mapped "{[/weixin/weixinUser/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.weixin.controller.WeixinUserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-04 17:47:12 -Mapped "{[/weixin/weixinUser/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.weixin.controller.WeixinUserController.save(com.bootdo.weixin.domain.WeixinUserDO)
2019-06-04 17:47:12 -Mapped "{[/weixin/weixinUser/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.weixin.controller.WeixinUserController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-04 17:47:12 -Mapped "{[/weixin/weixinUser],methods=[GET]}" onto java.lang.String com.bootdo.weixin.controller.WeixinUserController.WeixinUser()
2019-06-04 17:47:12 -Mapped "{[/xjbg/order/add],methods=[GET]}" onto java.lang.String com.bootdo.xjbg.controller.OrderController.add()
2019-06-04 17:47:12 -Mapped "{[/xjbg/order/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.xjbg.controller.OrderController.remove(java.lang.Long)
2019-06-04 17:47:12 -Mapped "{[/xjbg/order/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.xjbg.controller.OrderController.remove(java.lang.Long[])
2019-06-04 17:47:12 -Mapped "{[/xjbg/order/update]}" onto public com.bootdo.common.utils.R com.bootdo.xjbg.controller.OrderController.update(com.bootdo.xjbg.domain.OrderDO)
2019-06-04 17:47:12 -Mapped "{[/xjbg/order/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.xjbg.controller.OrderController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-04 17:47:12 -Mapped "{[/xjbg/order/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.xjbg.controller.OrderController.save(com.bootdo.xjbg.domain.OrderDO)
2019-06-04 17:47:12 -Mapped "{[/xjbg/order/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.xjbg.controller.OrderController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-04 17:47:12 -Mapped "{[/xjbg/order],methods=[GET]}" onto java.lang.String com.bootdo.xjbg.controller.OrderController.Order()
2019-06-04 17:47:12 -Mapped "{[/xjbg/orderItem/add],methods=[GET]}" onto java.lang.String com.bootdo.xjbg.controller.OrderItemController.add()
2019-06-04 17:47:12 -Mapped "{[/xjbg/orderItem/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.xjbg.controller.OrderItemController.remove(java.lang.Long)
2019-06-04 17:47:12 -Mapped "{[/xjbg/orderItem/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.xjbg.controller.OrderItemController.remove(java.lang.Long[])
2019-06-04 17:47:12 -Mapped "{[/xjbg/orderItem/update]}" onto public com.bootdo.common.utils.R com.bootdo.xjbg.controller.OrderItemController.update(com.bootdo.xjbg.domain.OrderItemDO)
2019-06-04 17:47:12 -Mapped "{[/xjbg/orderItem/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.xjbg.controller.OrderItemController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-04 17:47:12 -Mapped "{[/xjbg/orderItem/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.xjbg.controller.OrderItemController.save(com.bootdo.xjbg.domain.OrderItemDO)
2019-06-04 17:47:12 -Mapped "{[/xjbg/orderItem/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.xjbg.controller.OrderItemController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-04 17:47:12 -Mapped "{[/xjbg/orderItem],methods=[GET]}" onto java.lang.String com.bootdo.xjbg.controller.OrderItemController.OrderItem()
2019-06-04 17:47:12 -Mapped "{[/xjbg/product/add],methods=[GET]}" onto java.lang.String com.bootdo.xjbg.controller.ProductController.add()
2019-06-04 17:47:12 -Mapped "{[/xjbg/product/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.xjbg.controller.ProductController.remove(java.lang.Long)
2019-06-04 17:47:12 -Mapped "{[/xjbg/product/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.xjbg.controller.ProductController.remove(java.lang.Long[])
2019-06-04 17:47:12 -Mapped "{[/xjbg/product/update]}" onto public com.bootdo.common.utils.R com.bootdo.xjbg.controller.ProductController.update(com.bootdo.xjbg.domain.ProductDO,org.springframework.web.multipart.MultipartFile[])
2019-06-04 17:47:12 -Mapped "{[/xjbg/product/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.xjbg.controller.ProductController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-04 17:47:12 -Mapped "{[/xjbg/product/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.xjbg.controller.ProductController.save(com.bootdo.xjbg.domain.ProductDO,org.springframework.web.multipart.MultipartFile[])
2019-06-04 17:47:12 -Mapped "{[/xjbg/product/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.xjbg.controller.ProductController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-04 17:47:12 -Mapped "{[/xjbg/product],methods=[GET]}" onto java.lang.String com.bootdo.xjbg.controller.ProductController.Product()
2019-06-04 17:47:12 -Mapped "{[/xjbg/room/add],methods=[GET]}" onto java.lang.String com.bootdo.xjbg.controller.RoomController.add(org.springframework.ui.Model)
2019-06-04 17:47:12 -Mapped "{[/xjbg/room/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.xjbg.controller.RoomController.remove(java.lang.Integer[])
2019-06-04 17:47:12 -Mapped "{[/xjbg/room/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.xjbg.controller.RoomController.remove(java.lang.Integer)
2019-06-04 17:47:12 -Mapped "{[/xjbg/room/update]}" onto public com.bootdo.common.utils.R com.bootdo.xjbg.controller.RoomController.update(com.bootdo.xjbg.domain.RoomDO)
2019-06-04 17:47:12 -Mapped "{[/xjbg/room/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.xjbg.controller.RoomController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-04 17:47:12 -Mapped "{[/xjbg/room/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.xjbg.controller.RoomController.save(com.bootdo.xjbg.domain.RoomDO)
2019-06-04 17:47:12 -Mapped "{[/xjbg/room/operation/{roomId}],methods=[GET]}" onto java.lang.String com.bootdo.xjbg.controller.RoomController.operation(java.lang.Integer,org.springframework.ui.Model)
2019-06-04 17:47:12 -Mapped "{[/xjbg/room/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.xjbg.controller.RoomController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-06-04 17:47:12 -Mapped "{[/xjbg/room/roomMng],methods=[GET]}" onto java.lang.String com.bootdo.xjbg.controller.RoomController.roomMng(org.springframework.ui.Model)
2019-06-04 17:47:12 -Mapped "{[/xjbg/room],methods=[GET]}" onto java.lang.String com.bootdo.xjbg.controller.RoomController.Room(org.springframework.ui.Model)
2019-06-04 17:47:12 -Mapped "{[/xjbg/room/kaifan]}" onto public com.bootdo.common.utils.R com.bootdo.xjbg.controller.RoomController.kaifan(com.bootdo.xjbg.domain.OrderDO,java.util.List<com.bootdo.xjbg.domain.OrderItemDO>)
2019-06-04 17:47:12 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-06-04 17:47:12 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-06-04 17:47:12 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-06-04 17:47:12 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-06-04 17:47:12 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-06-04 17:47:12 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-06-04 17:47:12 -Initializing ExecutorService  'brokerChannelExecutor'
2019-06-04 17:47:12 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-06-04 17:47:12 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@34a70823: startup date [Tue Jun 04 17:47:04 CST 2019]; root of context hierarchy
2019-06-04 17:47:13 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-06-04 17:47:13 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-06-04 17:47:13 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-06-04 17:47:13 -Mapped URL path [/productPic/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-06-04 17:47:13 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-06-04 17:47:13 -[THYMELEAF][restartedMain] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-06-04 17:47:14 -LiveReload server is running on port 35729
2019-06-04 17:47:14 -Registering beans for JMX exposure on startup
2019-06-04 17:47:14 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-06-04 17:47:14 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-06-04 17:47:14 -Starting beans in phase 2147483647
2019-06-04 17:47:14 -Context refreshed
2019-06-04 17:47:14 -Found 1 custom documentation plugin(s)
2019-06-04 17:47:14 -Scanning for api listing references
2019-06-04 17:47:14 -Generating unique operation named: removeUsingPOST_1
2019-06-04 17:47:14 -Generating unique operation named: addUsingGET_1
2019-06-04 17:47:14 -Generating unique operation named: editUsingGET_1
2019-06-04 17:47:14 -Generating unique operation named: listUsingGET_1
2019-06-04 17:47:14 -Generating unique operation named: removeUsingPOST_2
2019-06-04 17:47:14 -Generating unique operation named: removeUsingPOST_3
2019-06-04 17:47:14 -Generating unique operation named: saveUsingPOST_1
2019-06-04 17:47:14 -Generating unique operation named: updateUsingGET_1
2019-06-04 17:47:14 -Generating unique operation named: updateUsingHEAD_1
2019-06-04 17:47:14 -Generating unique operation named: updateUsingPOST_1
2019-06-04 17:47:14 -Generating unique operation named: updateUsingPUT_1
2019-06-04 17:47:14 -Generating unique operation named: updateUsingPATCH_1
2019-06-04 17:47:14 -Generating unique operation named: updateUsingDELETE_1
2019-06-04 17:47:14 -Generating unique operation named: updateUsingOPTIONS_1
2019-06-04 17:47:14 -Generating unique operation named: updateUsingTRACE_1
2019-06-04 17:47:14 -Generating unique operation named: addUsingGET_2
2019-06-04 17:47:14 -Generating unique operation named: editUsingGET_2
2019-06-04 17:47:14 -Generating unique operation named: listUsingGET_2
2019-06-04 17:47:14 -Generating unique operation named: removeUsingPOST_4
2019-06-04 17:47:14 -Generating unique operation named: removeUsingPOST_5
2019-06-04 17:47:14 -Generating unique operation named: saveUsingPOST_2
2019-06-04 17:47:14 -Generating unique operation named: updateUsingGET_2
2019-06-04 17:47:14 -Generating unique operation named: updateUsingHEAD_2
2019-06-04 17:47:14 -Generating unique operation named: updateUsingPOST_2
2019-06-04 17:47:14 -Generating unique operation named: updateUsingPUT_2
2019-06-04 17:47:14 -Generating unique operation named: updateUsingPATCH_2
2019-06-04 17:47:14 -Generating unique operation named: updateUsingDELETE_2
2019-06-04 17:47:14 -Generating unique operation named: updateUsingOPTIONS_2
2019-06-04 17:47:14 -Generating unique operation named: updateUsingTRACE_2
2019-06-04 17:47:14 -Generating unique operation named: addUsingGET_3
2019-06-04 17:47:14 -Generating unique operation named: editUsingGET_3
2019-06-04 17:47:14 -Generating unique operation named: listUsingGET_3
2019-06-04 17:47:14 -Generating unique operation named: removeUsingPOST_6
2019-06-04 17:47:14 -Generating unique operation named: removeUsingPOST_7
2019-06-04 17:47:14 -Generating unique operation named: saveUsingPOST_3
2019-06-04 17:47:14 -Generating unique operation named: updateUsingGET_3
2019-06-04 17:47:14 -Generating unique operation named: updateUsingHEAD_3
2019-06-04 17:47:14 -Generating unique operation named: updateUsingPOST_3
2019-06-04 17:47:14 -Generating unique operation named: updateUsingPUT_3
2019-06-04 17:47:14 -Generating unique operation named: updateUsingPATCH_3
2019-06-04 17:47:14 -Generating unique operation named: updateUsingDELETE_3
2019-06-04 17:47:14 -Generating unique operation named: updateUsingOPTIONS_3
2019-06-04 17:47:14 -Generating unique operation named: updateUsingTRACE_3
2019-06-04 17:47:14 -Generating unique operation named: editUsingGET_4
2019-06-04 17:47:14 -Generating unique operation named: listUsingGET_4
2019-06-04 17:47:14 -Generating unique operation named: updateUsingPOST_4
2019-06-04 17:47:14 -Generating unique operation named: addUsingGET_4
2019-06-04 17:47:14 -Generating unique operation named: editUsingGET_5
2019-06-04 17:47:14 -Generating unique operation named: infoUsingGET_1
2019-06-04 17:47:14 -Generating unique operation named: infoUsingHEAD_1
2019-06-04 17:47:14 -Generating unique operation named: infoUsingPOST_1
2019-06-04 17:47:14 -Generating unique operation named: infoUsingPUT_1
2019-06-04 17:47:14 -Generating unique operation named: infoUsingPATCH_1
2019-06-04 17:47:14 -Generating unique operation named: infoUsingDELETE_1
2019-06-04 17:47:14 -Generating unique operation named: infoUsingOPTIONS_1
2019-06-04 17:47:14 -Generating unique operation named: infoUsingTRACE_1
2019-06-04 17:47:14 -Generating unique operation named: listUsingGET_5
2019-06-04 17:47:14 -Generating unique operation named: removeUsingPOST_8
2019-06-04 17:47:14 -Generating unique operation named: removeUsingPOST_9
2019-06-04 17:47:14 -Generating unique operation named: saveUsingPOST_4
2019-06-04 17:47:14 -Generating unique operation named: updateUsingPOST_5
2019-06-04 17:47:14 -Generating unique operation named: listUsingGET_6
2019-06-04 17:47:14 -Generating unique operation named: removeUsingPOST_10
2019-06-04 17:47:14 -Generating unique operation named: welcomeUsingGET_1
2019-06-04 17:47:14 -Generating unique operation named: addUsingGET_5
2019-06-04 17:47:14 -Generating unique operation named: editUsingGET_6
2019-06-04 17:47:14 -Generating unique operation named: listUsingGET_7
2019-06-04 17:47:14 -Generating unique operation named: removeUsingPOST_11
2019-06-04 17:47:14 -Generating unique operation named: saveUsingPOST_5
2019-06-04 17:47:14 -Generating unique operation named: treeUsingGET_1
2019-06-04 17:47:14 -Generating unique operation named: treeUsingGET_2
2019-06-04 17:47:14 -Generating unique operation named: updateUsingPOST_6
2019-06-04 17:47:14 -Generating unique operation named: batchRemoveUsingPOST_1
2019-06-04 17:47:14 -Generating unique operation named: editUsingGET_7
2019-06-04 17:47:14 -Generating unique operation named: listUsingGET_8
2019-06-04 17:47:14 -Generating unique operation named: addUsingGET_6
2019-06-04 17:47:14 -Generating unique operation named: editUsingGET_8
2019-06-04 17:47:14 -Generating unique operation named: listUsingGET_9
2019-06-04 17:47:14 -Generating unique operation named: removeUsingPOST_12
2019-06-04 17:47:14 -Generating unique operation named: removeUsingPOST_13
2019-06-04 17:47:14 -Generating unique operation named: saveUsingPOST_6
2019-06-04 17:47:14 -Generating unique operation named: updateUsingGET_4
2019-06-04 17:47:14 -Generating unique operation named: updateUsingHEAD_4
2019-06-04 17:47:14 -Generating unique operation named: updateUsingPOST_7
2019-06-04 17:47:14 -Generating unique operation named: updateUsingPUT_4
2019-06-04 17:47:14 -Generating unique operation named: updateUsingPATCH_4
2019-06-04 17:47:14 -Generating unique operation named: updateUsingDELETE_4
2019-06-04 17:47:14 -Generating unique operation named: updateUsingOPTIONS_4
2019-06-04 17:47:14 -Generating unique operation named: updateUsingTRACE_4
2019-06-04 17:47:14 -Generating unique operation named: addUsingGET_7
2019-06-04 17:47:14 -Generating unique operation named: editUsingGET_9
2019-06-04 17:47:14 -Generating unique operation named: listUsingGET_10
2019-06-04 17:47:14 -Generating unique operation named: removeUsingPOST_14
2019-06-04 17:47:14 -Generating unique operation named: removeUsingPOST_15
2019-06-04 17:47:14 -Generating unique operation named: saveUsingPOST_7
2019-06-04 17:47:14 -Generating unique operation named: updateUsingGET_5
2019-06-04 17:47:14 -Generating unique operation named: updateUsingHEAD_5
2019-06-04 17:47:14 -Generating unique operation named: updateUsingPOST_8
2019-06-04 17:47:14 -Generating unique operation named: updateUsingPUT_5
2019-06-04 17:47:14 -Generating unique operation named: updateUsingPATCH_5
2019-06-04 17:47:14 -Generating unique operation named: updateUsingDELETE_5
2019-06-04 17:47:14 -Generating unique operation named: updateUsingOPTIONS_5
2019-06-04 17:47:14 -Generating unique operation named: updateUsingTRACE_5
2019-06-04 17:47:14 -Generating unique operation named: addUsingGET_8
2019-06-04 17:47:14 -Generating unique operation named: editUsingGET_10
2019-06-04 17:47:14 -Generating unique operation named: listUsingGET_11
2019-06-04 17:47:14 -Generating unique operation named: removeUsingPOST_16
2019-06-04 17:47:14 -Generating unique operation named: removeUsingPOST_17
2019-06-04 17:47:14 -Generating unique operation named: saveUsingPOST_8
2019-06-04 17:47:14 -Generating unique operation named: updateUsingGET_6
2019-06-04 17:47:14 -Generating unique operation named: updateUsingHEAD_6
2019-06-04 17:47:14 -Generating unique operation named: updateUsingPOST_9
2019-06-04 17:47:14 -Generating unique operation named: updateUsingPUT_6
2019-06-04 17:47:14 -Generating unique operation named: updateUsingPATCH_6
2019-06-04 17:47:14 -Generating unique operation named: updateUsingDELETE_6
2019-06-04 17:47:14 -Generating unique operation named: updateUsingOPTIONS_6
2019-06-04 17:47:14 -Generating unique operation named: updateUsingTRACE_6
2019-06-04 17:47:14 -Generating unique operation named: addUsingGET_9
2019-06-04 17:47:14 -Generating unique operation named: batchRemoveUsingPOST_2
2019-06-04 17:47:14 -Generating unique operation named: deployUsingPOST_1
2019-06-04 17:47:14 -Generating unique operation named: listUsingGET_12
2019-06-04 17:47:14 -Generating unique operation named: removeUsingPOST_18
2019-06-04 17:47:14 -Generating unique operation named: addUsingGET_10
2019-06-04 17:47:14 -Generating unique operation named: editUsingGET_11
2019-06-04 17:47:14 -Generating unique operation named: listUsingGET_13
2019-06-04 17:47:14 -Generating unique operation named: removeUsingPOST_19
2019-06-04 17:47:14 -Generating unique operation named: removeUsingPOST_20
2019-06-04 17:47:14 -Trying to infer dataType org.springframework.web.multipart.MultipartFile[]
2019-06-04 17:47:14 -Generating unique operation named: saveUsingPOST_9
2019-06-04 17:47:14 -Trying to infer dataType org.springframework.web.multipart.MultipartFile[]
2019-06-04 17:47:14 -Generating unique operation named: updateUsingGET_7
2019-06-04 17:47:14 -Trying to infer dataType org.springframework.web.multipart.MultipartFile[]
2019-06-04 17:47:14 -Generating unique operation named: updateUsingHEAD_7
2019-06-04 17:47:14 -Trying to infer dataType org.springframework.web.multipart.MultipartFile[]
2019-06-04 17:47:14 -Generating unique operation named: updateUsingPOST_10
2019-06-04 17:47:14 -Trying to infer dataType org.springframework.web.multipart.MultipartFile[]
2019-06-04 17:47:14 -Generating unique operation named: updateUsingPUT_7
2019-06-04 17:47:14 -Trying to infer dataType org.springframework.web.multipart.MultipartFile[]
2019-06-04 17:47:14 -Generating unique operation named: updateUsingPATCH_7
2019-06-04 17:47:14 -Trying to infer dataType org.springframework.web.multipart.MultipartFile[]
2019-06-04 17:47:14 -Generating unique operation named: updateUsingDELETE_7
2019-06-04 17:47:14 -Trying to infer dataType org.springframework.web.multipart.MultipartFile[]
2019-06-04 17:47:14 -Generating unique operation named: updateUsingOPTIONS_7
2019-06-04 17:47:14 -Trying to infer dataType org.springframework.web.multipart.MultipartFile[]
2019-06-04 17:47:14 -Generating unique operation named: updateUsingTRACE_7
2019-06-04 17:47:14 -Generating unique operation named: addUsingGET_11
2019-06-04 17:47:14 -Generating unique operation named: batchRemoveUsingPOST_3
2019-06-04 17:47:14 -Generating unique operation named: editUsingGET_12
2019-06-04 17:47:14 -Generating unique operation named: listUsingGET_14
2019-06-04 17:47:14 -Generating unique operation named: saveUsingPOST_10
2019-06-04 17:47:14 -Generating unique operation named: saveUsingPOST_11
2019-06-04 17:47:14 -Generating unique operation named: updateUsingPOST_11
2019-06-04 17:47:14 -Generating unique operation named: addUsingGET_12
2019-06-04 17:47:14 -Generating unique operation named: editUsingGET_13
2019-06-04 17:47:14 -Trying to infer dataType java.util.List<com.bootdo.xjbg.domain.OrderItemDO>
2019-06-04 17:47:14 -Trying to infer dataType java.util.List<com.bootdo.xjbg.domain.OrderItemDO>
2019-06-04 17:47:14 -Trying to infer dataType java.util.List<com.bootdo.xjbg.domain.OrderItemDO>
2019-06-04 17:47:14 -Trying to infer dataType java.util.List<com.bootdo.xjbg.domain.OrderItemDO>
2019-06-04 17:47:14 -Trying to infer dataType java.util.List<com.bootdo.xjbg.domain.OrderItemDO>
2019-06-04 17:47:14 -Trying to infer dataType java.util.List<com.bootdo.xjbg.domain.OrderItemDO>
2019-06-04 17:47:14 -Trying to infer dataType java.util.List<com.bootdo.xjbg.domain.OrderItemDO>
2019-06-04 17:47:14 -Trying to infer dataType java.util.List<com.bootdo.xjbg.domain.OrderItemDO>
2019-06-04 17:47:14 -Generating unique operation named: listUsingGET_15
2019-06-04 17:47:14 -Generating unique operation named: removeUsingPOST_21
2019-06-04 17:47:14 -Generating unique operation named: removeUsingPOST_22
2019-06-04 17:47:14 -Generating unique operation named: saveUsingPOST_12
2019-06-04 17:47:14 -Generating unique operation named: updateUsingGET_8
2019-06-04 17:47:14 -Generating unique operation named: updateUsingHEAD_8
2019-06-04 17:47:14 -Generating unique operation named: updateUsingPOST_12
2019-06-04 17:47:14 -Generating unique operation named: updateUsingPUT_8
2019-06-04 17:47:14 -Generating unique operation named: updateUsingPATCH_8
2019-06-04 17:47:14 -Generating unique operation named: updateUsingDELETE_8
2019-06-04 17:47:14 -Generating unique operation named: updateUsingOPTIONS_8
2019-06-04 17:47:14 -Generating unique operation named: updateUsingTRACE_8
2019-06-04 17:47:14 -Generating unique operation named: addUsingGET_13
2019-06-04 17:47:14 -Generating unique operation named: editUsingGET_14
2019-06-04 17:47:14 -Generating unique operation named: listUsingGET_16
2019-06-04 17:47:14 -Generating unique operation named: removeUsingPOST_23
2019-06-04 17:47:14 -Generating unique operation named: removeUsingPOST_24
2019-06-04 17:47:15 -Generating unique operation named: updateUsingGET_9
2019-06-04 17:47:15 -Generating unique operation named: updateUsingHEAD_9
2019-06-04 17:47:15 -Generating unique operation named: updateUsingPOST_13
2019-06-04 17:47:15 -Generating unique operation named: updateUsingPUT_9
2019-06-04 17:47:15 -Generating unique operation named: updateUsingPATCH_9
2019-06-04 17:47:15 -Generating unique operation named: updateUsingDELETE_9
2019-06-04 17:47:15 -Generating unique operation named: updateUsingOPTIONS_9
2019-06-04 17:47:15 -Generating unique operation named: updateUsingTRACE_9
2019-06-04 17:47:15 -Generating unique operation named: listUsingGET_17
2019-06-04 17:47:15 -Generating unique operation named: listUsingHEAD_1
2019-06-04 17:47:15 -Generating unique operation named: listUsingPOST_1
2019-06-04 17:47:15 -Generating unique operation named: listUsingPUT_1
2019-06-04 17:47:15 -Generating unique operation named: listUsingPATCH_1
2019-06-04 17:47:15 -Generating unique operation named: listUsingDELETE_1
2019-06-04 17:47:15 -Generating unique operation named: listUsingOPTIONS_1
2019-06-04 17:47:15 -Generating unique operation named: listUsingTRACE_1
2019-06-04 17:47:15 -Generating unique operation named: listUsingGET_18
2019-06-04 17:47:15 -Generating unique operation named: addUsingGET_14
2019-06-04 17:47:15 -Generating unique operation named: batchRemoveUsingPOST_4
2019-06-04 17:47:15 -Generating unique operation named: editUsingGET_15
2019-06-04 17:47:15 -Generating unique operation named: listUsingGET_19
2019-06-04 17:47:15 -Generating unique operation named: removeUsingPOST_25
2019-06-04 17:47:15 -Generating unique operation named: saveUsingPOST_13
2019-06-04 17:47:15 -Generating unique operation named: treeUsingGET_3
2019-06-04 17:47:15 -Generating unique operation named: treeViewUsingGET_1
2019-06-04 17:47:15 -Generating unique operation named: updateUsingPOST_14
2019-06-04 17:47:15 -Generating unique operation named: addUsingGET_15
2019-06-04 17:47:15 -Generating unique operation named: editUsingGET_16
2019-06-04 17:47:15 -Generating unique operation named: listUsingGET_20
2019-06-04 17:47:15 -Generating unique operation named: removeUsingPOST_26
2019-06-04 17:47:15 -Generating unique operation named: removeUsingPOST_27
2019-06-04 17:47:15 -Generating unique operation named: saveUsingPOST_14
2019-06-04 17:47:15 -Generating unique operation named: updateUsingGET_10
2019-06-04 17:47:15 -Generating unique operation named: updateUsingHEAD_10
2019-06-04 17:47:15 -Generating unique operation named: updateUsingPOST_15
2019-06-04 17:47:15 -Generating unique operation named: updateUsingPUT_10
2019-06-04 17:47:15 -Generating unique operation named: updateUsingPATCH_10
2019-06-04 17:47:15 -Generating unique operation named: updateUsingDELETE_10
2019-06-04 17:47:15 -Generating unique operation named: updateUsingOPTIONS_10
2019-06-04 17:47:15 -Generating unique operation named: updateUsingTRACE_10
2019-06-04 17:47:15 -Starting Quartz Scheduler now
2019-06-04 17:47:15 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-06-04 17:47:15 -Starting...
2019-06-04 17:47:15 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-06-04 17:47:15 -Started.
2019-06-04 17:47:15 -Starting ProtocolHandler ["http-nio-8888"]
2019-06-04 17:47:15 -Using a shared selector for servlet write/read
2019-06-04 17:47:15 -Tomcat started on port(s): 8888 (http) with context path ''
2019-06-04 17:47:15 -Started BootdoApplication in 10.827 seconds (JVM running for 12.119)
2019-06-04 17:47:15 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-06-04 17:47:15 -==> Parameters: 
2019-06-04 17:47:15 -<==      Total: 1
2019-06-04 17:47:24 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-06-04 17:47:24 -FrameworkServlet 'dispatcherServlet': initialization started
2019-06-04 17:47:24 -FrameworkServlet 'dispatcherServlet': initialization completed in 33 ms
2019-06-04 17:47:24 -Enabling session validation scheduler...
2019-06-04 17:47:24 -请求地址 : http://localhost:8888/login;JSESSIONID=9ae02e8a-a7fb-4406-9efb-5b407a52c14c
2019-06-04 17:47:24 -HTTP METHOD : GET
2019-06-04 17:47:24 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-06-04 17:47:24 -参数 : [{}]
2019-06-04 17:47:24 -耗时 : 1
2019-06-04 17:47:24 -返回值 : login
2019-06-04 17:47:26 -请求地址 : http://localhost:8888/login
2019-06-04 17:47:26 -HTTP METHOD : POST
2019-06-04 17:47:26 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-06-04 17:47:26 -参数 : [admin, 111111]
2019-06-04 17:47:26 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-06-04 17:47:26 -==> Parameters: admin(String)
2019-06-04 17:47:26 -<==      Total: 1
2019-06-04 17:47:26 -耗时 : 22
2019-06-04 17:47:26 -返回值 : {msg=操作成功, code=0}
2019-06-04 17:47:26 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-06-04 17:47:26 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-04 17:47:26 -==> Parameters: 1(Long), admin(String), 登录(String), 22(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-06-04 17:47:26.489(Timestamp)
2019-06-04 17:47:26 -请求地址 : http://localhost:8888/index
2019-06-04 17:47:26 -HTTP METHOD : GET
2019-06-04 17:47:26 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-06-04 17:47:26 -参数 : [{}]
2019-06-04 17:47:26 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-06-04 17:47:26 -==> Parameters: 1(Long)
2019-06-04 17:47:26 -<==      Total: 34
2019-06-04 17:47:26 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-06-04 17:47:26 -==> Parameters: 144(Long)
2019-06-04 17:47:26 -<==      Total: 1
2019-06-04 17:47:26 -耗时 : 32
2019-06-04 17:47:26 -返回值 : index_v1
2019-06-04 17:47:26 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-04 17:47:26 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 32(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-hotel","url":""},"checked":false,"children":[{"attributes":{"icon":"","url":"/xjbg/room/roomMng"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"105","text":"开房"},{"attributes":{"icon":"fa fa-bed","url":"/xjbg/room"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"106","parentId":"105","text":"房间管理"},{"attributes":{"icon":"","url":"/xjbg/product"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"105","text":"商品管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"欣吉宾馆"},{"attributes":{"icon":"fa fa-commenting","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user","url":"/weixin/weixinUser"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"109","text":"用户管理"}],"hasChildren":true,"hasParent":false,"id":"109","parentId":"0","text":"微信管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","text":"基础管理"},{"attributes":{"icon":"fa fa-desktop"},"checked":false,"children":[{"attributes":{"icon":"fa fa-user","url":"sys/user/"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"6","parentId":"3","text":"用户管理"},{"attributes":{"icon":"fa fa-paw","url":"sys/role"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"7","parentId":"3","text":"角色管理"},{"attributes":{"icon":"fa fa-th-list","url":"sys/menu/"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"3","text":"系统菜单"},{"attributes":{"icon":"fa fa-users","url":"/system/sysDept"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"73","parentId":"3","text":"部门管理"}],"hasChildren":true,"hasParent":false,"id":"3","parentId":"0","text":"系统管理"},{"attributes":{"icon":"fa fa-gear","url":""},"checked":false,"children":[{"attributes":{"icon":"","url":"/swagger-ui.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"104","parentId":"77","text":"swagger"},{"attributes":{"icon":"fa fa-code","url":"common/generator"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"48","parentId":"77","text":"代码生成"},{"attributes":{"icon":"fa fa-hourglass-1","url":"common/job"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"72","parentId":"77","text":"计划任务"}],"hasChildren":true,"hasParent":false,"id":"77","parentId":"0","text":"系统工具"},{"attributes":{"icon":"fa fa-video-camera","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user","url":"sys/online"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"92","parentId":"91","text":"在线用户"},{"attributes":{"icon":"fa fa-warning","url":"common/log"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"27","parentId":"91","text":"系统日志"},{"attributes":{"icon":"fa fa-caret-square-o-right","url":"/druid/index.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"57","parentId":"91","text":"运行监控"}],"hasChildren":true,"hasParent":false,"id":"91","parentId":"0","text":"系统监控"},{"attributes":{"icon":"fa fa-laptop","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-pencil-square","url":"oa/notify"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"85","parentId":"84","text":"通知公告"},{"attributes":{"icon":"fa fa-envelope-square","url":"oa/notify/selfNotify"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"90","parentId":"84","text":"我的通知"}],"hasChildren":true,"hasParent":false,"id":"84","parentId":"0","text":"办公管理"},{"attributes":{"icon":"fa fa-print","url":""},"checked":false,"children":[{"attributes":{"icon":"","url":"activiti/task/todo"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"101","parentId":"93","text":"待办任务"},{"attributes":{"icon":"fa fa-sort-amount-asc","url":"activiti/model"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"94","parentId":"93","text":"模型管理"},{"attributes":{"icon":"fa fa-flag","url":"activiti/process"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"96","parentId":"93","text":"流程管理"}],"hasChildren":true,"hasParent":false,"id":"93","parentId":"0","text":"工作流程"},{"attributes":{"icon":"fa fa-rss","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-edit","url":"/blog/bContent/add"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"68","parentId":"49","text":"发布文章"},{"(String), 127.0.0.1(String), 2019-06-04 17:47:26.584(Timestamp)
2019-06-04 17:47:26 -<==    Updates: 1
2019-06-04 17:47:26 -<==    Updates: 1
2019-06-04 17:47:26 -请求地址 : http://localhost:8888/main
2019-06-04 17:47:26 -HTTP METHOD : GET
2019-06-04 17:47:26 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-04 17:47:26 -参数 : []
2019-06-04 17:47:26 -耗时 : 1
2019-06-04 17:47:26 -返回值 : main
2019-06-04 17:47:26 -请求地址 : http://localhost:8888/oa/notify/message
2019-06-04 17:47:26 -HTTP METHOD : GET
2019-06-04 17:47:26 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-06-04 17:47:26 -参数 : []
2019-06-04 17:47:26 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-06-04 17:47:26 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-06-04 17:47:26 -<==      Total: 0
2019-06-04 17:47:26 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-06-04 17:47:26 -==> Parameters: 1(Long), 0(String)
2019-06-04 17:47:26 -<==      Total: 1
2019-06-04 17:47:26 -耗时 : 17
2019-06-04 17:47:26 -返回值 : com.bootdo.common.utils.PageUtils@5290aa33
2019-06-04 17:47:26 -请求地址 : http://localhost:8888/main
2019-06-04 17:47:26 -HTTP METHOD : GET
2019-06-04 17:47:26 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-04 17:47:26 -参数 : []
2019-06-04 17:47:26 -耗时 : 0
2019-06-04 17:47:26 -返回值 : main
2019-06-04 17:47:28 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-06-04 17:47:28 -==> Parameters: 1(Long)
2019-06-04 17:47:28 -<==      Total: 58
2019-06-04 17:47:28 -请求地址 : http://localhost:8888/xjbg/room/roomMng
2019-06-04 17:47:28 -HTTP METHOD : GET
2019-06-04 17:47:28 -CLASS_METHOD : com.bootdo.xjbg.controller.RoomController.roomMng
2019-06-04 17:47:28 -参数 : [{}]
2019-06-04 17:47:28 -==>  Preparing: select `id`,`room_no`,`room_type`,`floor`,`room_state`,`price`,`create_time`,`update_time`,`create_user`,`update_user` from xjbg_room 
2019-06-04 17:47:28 -==> Parameters: 
2019-06-04 17:47:28 -<==      Total: 8
2019-06-04 17:47:28 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 17:47:28 -==> Parameters: room_type(String)
2019-06-04 17:47:28 -<==      Total: 7
2019-06-04 17:47:28 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 17:47:28 -==> Parameters: floor(String)
2019-06-04 17:47:28 -<==      Total: 5
2019-06-04 17:47:28 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 17:47:28 -==> Parameters: room_state(String)
2019-06-04 17:47:28 -<==      Total: 2
2019-06-04 17:47:28 -==>  Preparing: select * from sys_user 
2019-06-04 17:47:28 -==> Parameters: 
2019-06-04 17:47:28 -<==      Total: 11
2019-06-04 17:47:28 -耗时 : 23
2019-06-04 17:47:28 -返回值 : xjbg/room/roomMng
2019-06-04 17:47:28 -请求地址 : http://localhost:8888/xjbg/room/operation/1
2019-06-04 17:47:28 -HTTP METHOD : GET
2019-06-04 17:47:28 -CLASS_METHOD : com.bootdo.xjbg.controller.RoomController.operation
2019-06-04 17:47:28 -参数 : [1, {}]
2019-06-04 17:47:28 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 17:47:28 -==> Parameters: room_type(String)
2019-06-04 17:47:28 -<==      Total: 7
2019-06-04 17:47:28 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 17:47:28 -==> Parameters: floor(String)
2019-06-04 17:47:28 -<==      Total: 5
2019-06-04 17:47:28 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 17:47:28 -==> Parameters: room_state(String)
2019-06-04 17:47:28 -<==      Total: 2
2019-06-04 17:47:28 -==>  Preparing: select * from sys_user 
2019-06-04 17:47:28 -==> Parameters: 
2019-06-04 17:47:28 -<==      Total: 11
2019-06-04 17:47:28 -==>  Preparing: select `id`,`product_name`,`purchase_price`,`selling_price`,`product_pic`,`create_time`,`create_user`,`update_time`,`update_user` from xjbg_product order by id desc 
2019-06-04 17:47:28 -==> Parameters: 
2019-06-04 17:47:28 -<==      Total: 5
2019-06-04 17:47:28 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 17:47:28 -==> Parameters: order_type(String)
2019-06-04 17:47:28 -<==      Total: 3
2019-06-04 17:47:28 -==>  Preparing: select `id`,`room_no`,`room_type`,`floor`,`room_state`,`price`,`create_time`,`update_time`,`create_user`,`update_user` from xjbg_room where id = ? 
2019-06-04 17:47:28 -==> Parameters: 1(Integer)
2019-06-04 17:47:28 -<==      Total: 1
2019-06-04 17:47:28 -耗时 : 24
2019-06-04 17:47:28 -返回值 : xjbg/room/operation
2019-06-04 17:47:33 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-04 17:47:33 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8888/xjbg/room/kaifan(String), java.lang.IllegalStateException: No primary or default constructor found for interface java.util.List(String), null, 2019-06-04 17:47:33.93(Timestamp)
2019-06-04 17:47:33 -No primary or default constructor found for interface java.util.List
java.lang.IllegalStateException: No primary or default constructor found for interface java.util.List
	at org.springframework.web.method.annotation.ModelAttributeMethodProcessor.createAttribute(ModelAttributeMethodProcessor.java:212)
	at org.springframework.web.servlet.mvc.method.annotation.ServletModelAttributeMethodProcessor.createAttribute(ServletModelAttributeMethodProcessor.java:84)
	at org.springframework.web.method.annotation.ModelAttributeMethodProcessor.resolveArgument(ModelAttributeMethodProcessor.java:132)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:124)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:161)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:131)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.NoSuchMethodException: java.util.List.<init>()
	at java.lang.Class.getConstructor0(Class.java:3082)
	at java.lang.Class.getDeclaredConstructor(Class.java:2178)
	at org.springframework.web.method.annotation.ModelAttributeMethodProcessor.createAttribute(ModelAttributeMethodProcessor.java:209)
	... 70 common frames omitted
2019-06-04 17:47:33 -Resolved exception caused by Handler execution: java.lang.IllegalStateException: No primary or default constructor found for interface java.util.List
2019-06-04 17:47:33 -请求地址 : http://localhost:8888/xjbg/room/operation/1
2019-06-04 17:47:33 -HTTP METHOD : GET
2019-06-04 17:47:33 -CLASS_METHOD : com.bootdo.xjbg.controller.RoomController.operation
2019-06-04 17:47:33 -参数 : [1, {}]
2019-06-04 17:47:33 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 17:47:33 -==> Parameters: room_type(String)
2019-06-04 17:47:33 -<==      Total: 7
2019-06-04 17:47:33 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 17:47:33 -==> Parameters: floor(String)
2019-06-04 17:47:33 -<==      Total: 5
2019-06-04 17:47:33 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 17:47:33 -==> Parameters: room_state(String)
2019-06-04 17:47:33 -<==      Total: 2
2019-06-04 17:47:33 -==>  Preparing: select * from sys_user 
2019-06-04 17:47:33 -==> Parameters: 
2019-06-04 17:47:33 -<==      Total: 11
2019-06-04 17:47:33 -==>  Preparing: select `id`,`product_name`,`purchase_price`,`selling_price`,`product_pic`,`create_time`,`create_user`,`update_time`,`update_user` from xjbg_product order by id desc 
2019-06-04 17:47:33 -==> Parameters: 
2019-06-04 17:47:33 -<==      Total: 5
2019-06-04 17:47:33 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 17:47:33 -==> Parameters: order_type(String)
2019-06-04 17:47:33 -<==      Total: 3
2019-06-04 17:47:33 -==>  Preparing: select `id`,`room_no`,`room_type`,`floor`,`room_state`,`price`,`create_time`,`update_time`,`create_user`,`update_user` from xjbg_room where id = ? 
2019-06-04 17:47:33 -==> Parameters: 1(Integer)
2019-06-04 17:47:33 -<==      Total: 1
2019-06-04 17:47:33 -耗时 : 16
2019-06-04 17:47:33 -返回值 : xjbg/room/operation
2019-06-04 17:47:34 -<==    Updates: 1
2019-06-04 17:48:12 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 1 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 9, active threads = 0, queued tasks = 0, completed tasks = 9], outboundChannelpool size = 1, active threads = 0, queued tasks = 0, completed tasks = 1], sockJsScheduler[pool size = 8, active threads = 1, queued tasks = 3, completed tasks = 11]
2019-06-04 17:49:03 -Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@34a70823: startup date [Tue Jun 04 17:47:04 CST 2019]; root of context hierarchy
2019-06-04 17:49:03 -Stopping beans in phase 2147483647
2019-06-04 17:49:03 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED paused.
2019-06-04 17:49:03 -Stopping...
2019-06-04 17:49:03 -BrokerAvailabilityEvent[available=false, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[1 sessions]]]]
2019-06-04 17:49:03 -Stopped.
2019-06-04 17:49:03 -Unregistering JMX-exposed beans on shutdown
2019-06-04 17:49:03 -Unregistering JMX-exposed beans
2019-06-04 17:49:03 -Shutting down ExecutorService 'brokerChannelExecutor'
2019-06-04 17:49:03 -Shutting down ExecutorService 'messageBrokerTaskScheduler'
2019-06-04 17:49:03 -Shutting down ExecutorService 'clientOutboundChannelExecutor'
2019-06-04 17:49:03 -Shutting down ExecutorService 'clientInboundChannelExecutor'
2019-06-04 17:49:03 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED shutting down.
2019-06-04 17:49:03 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED paused.
2019-06-04 17:49:03 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED shutdown complete.
2019-06-04 17:49:03 -Shutting down Quartz Scheduler
2019-06-04 17:49:03 -{dataSource-1} closed
2019-06-04 17:49:03 -Disabled session validation scheduler.
2019-06-04 17:49:04 -Starting BootdoApplication on LAPTOP-ELP5M68R with PID 4252 (D:\workspace\bootdo\bootdo\target\classes started by Lenovo in D:\workspace\bootdo\bootdo)
2019-06-04 17:49:04 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-06-04 17:49:04 -The following profiles are active: dev
2019-06-04 17:49:04 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@2c394f8b: startup date [Tue Jun 04 17:49:04 CST 2019]; root of context hierarchy
2019-06-04 17:49:05 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-06-04 17:49:05 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$e540caba] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-04 17:49:05 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$d799f961] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-04 17:49:05 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-04 17:49:05 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-04 17:49:05 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-04 17:49:05 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache.1' does not yet exist.  Creating now.
2019-06-04 17:49:05 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache.1]
2019-06-04 17:49:05 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-04 17:49:05 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-04 17:49:05 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-04 17:49:05 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-04 17:49:06 -Tomcat initialized with port(s): 8888 (http)
2019-06-04 17:49:06 -Initializing ProtocolHandler ["http-nio-8888"]
2019-06-04 17:49:06 -Starting service [Tomcat]
2019-06-04 17:49:06 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-06-04 17:49:06 -Initializing Spring embedded WebApplicationContext
2019-06-04 17:49:06 -Root WebApplicationContext: initialization completed in 1458 ms
2019-06-04 17:49:06 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-06-04 17:49:06 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-06-04 17:49:06 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-06-04 17:49:06 -Mapping filter: 'requestContextFilter' to: [/*]
2019-06-04 17:49:06 -Filter xssFilter was not registered (disabled)
2019-06-04 17:49:06 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-06-04 17:49:06 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-06-04 17:49:06 -Servlet statViewServlet mapped to [/druid/*]
2019-06-04 17:49:06 -Servlet dispatcherServlet mapped to [/]
2019-06-04 17:49:06 -{dataSource-2} inited
2019-06-04 17:49:06 -ProcessEngine default created
2019-06-04 17:49:06 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@2c394f8b: startup date [Tue Jun 04 17:49:04 CST 2019]; root of context hierarchy
2019-06-04 17:49:07 -Using default implementation for ThreadExecutor
2019-06-04 17:49:07 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-06-04 17:49:07 -Quartz Scheduler v.2.2.1 created.
2019-06-04 17:49:07 -RAMJobStore initialized.
2019-06-04 17:49:07 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-06-04 17:49:07 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-06-04 17:49:07 -Quartz scheduler version: 2.2.1
2019-06-04 17:49:07 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@2e282e4d
2019-06-04 17:49:07 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-06-04 17:49:07 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-06-04 17:49:08 -Mapped "{[/activiti/model/{id}],methods=[DELETE]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.ModelController.remove(java.lang.String)
2019-06-04 17:49:08 -Mapped "{[/activiti/model/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.activiti.controller.ModelController.list(int,int)
2019-06-04 17:49:08 -Mapped "{[/activiti/model/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.ModelController.batchRemove(java.lang.String[])
2019-06-04 17:49:08 -Mapped "{[/activiti/model],methods=[GET]}" onto org.springframework.web.servlet.ModelAndView com.bootdo.activiti.controller.ModelController.model()
2019-06-04 17:49:08 -Mapped "{[/activiti/model/add]}" onto public void com.bootdo.activiti.controller.ModelController.newModel(javax.servlet.http.HttpServletResponse) throws java.io.UnsupportedEncodingException
2019-06-04 17:49:08 -Mapped "{[/activiti/model/{modelId}/save],methods=[PUT]}" onto public void com.bootdo.activiti.controller.ModelController.saveModel(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2019-06-04 17:49:08 -Mapped "{[/activiti/model/deploy/{id}],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.ModelController.deploy(java.lang.String) throws java.lang.Exception
2019-06-04 17:49:08 -Mapped "{[/activiti/model/{modelId}/json],methods=[GET]}" onto public com.fasterxml.jackson.databind.node.ObjectNode com.bootdo.activiti.controller.ModelController.getEditorJson(java.lang.String)
2019-06-04 17:49:08 -Mapped "{[/activiti/editor/stencilset],methods=[GET],produces=[application/json;charset=utf-8]}" onto public java.lang.String com.bootdo.activiti.controller.ModelController.getStencilset()
2019-06-04 17:49:08 -Mapped "{[/activiti/model/export/{id}],methods=[GET]}" onto public void com.bootdo.activiti.controller.ModelController.exportToXml(java.lang.String,javax.servlet.http.HttpServletResponse)
2019-06-04 17:49:08 -Mapped "{[/activiti/model/edit/{id}],methods=[GET]}" onto public void com.bootdo.activiti.controller.ModelController.edit(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-06-04 17:49:08 -Mapped "{[/activiti/process/add],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.activiti.controller.ProcessController.add()
2019-06-04 17:49:08 -Mapped "{[/activiti/process/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.ProcessController.remove(java.lang.String)
2019-06-04 17:49:08 -Mapped "{[/activiti/process/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.activiti.controller.ProcessController.list(int,int)
2019-06-04 17:49:08 -Mapped "{[/activiti/process/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.ProcessController.batchRemove(java.lang.String[])
2019-06-04 17:49:08 -Mapped "{[/activiti/process],methods=[GET]}" onto org.springframework.web.servlet.ModelAndView com.bootdo.activiti.controller.ProcessController.process()
2019-06-04 17:49:08 -Mapped "{[/activiti/process/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.ProcessController.deploy(java.lang.String,java.lang.String,org.springframework.web.multipart.MultipartFile)
2019-06-04 17:49:08 -Mapped "{[/activiti/process/convertToModel/{procDefId}]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.ProcessController.convertToModel(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes) throws java.io.UnsupportedEncodingException,javax.xml.stream.XMLStreamException
2019-06-04 17:49:08 -Mapped "{[/activiti/process/resource/read/{xml}/{id}]}" onto public void com.bootdo.activiti.controller.ProcessController.resourceRead(java.lang.String,java.lang.String,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-06-04 17:49:08 -Mapped "{[/act/salary/form],methods=[GET]}" onto java.lang.String com.bootdo.activiti.controller.SalaryController.add()
2019-06-04 17:49:08 -Mapped "{[/act/salary/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.SalaryController.remove(java.lang.String)
2019-06-04 17:49:08 -Mapped "{[/act/salary/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.SalaryController.remove(java.lang.String[])
2019-06-04 17:49:08 -Mapped "{[/act/salary/update]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.SalaryController.update(com.bootdo.activiti.domain.SalaryDO)
2019-06-04 17:49:08 -Mapped "{[/act/salary/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.activiti.controller.SalaryController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-04 17:49:08 -Mapped "{[/act/salary/form/{taskId}],methods=[GET]}" onto java.lang.String com.bootdo.activiti.controller.SalaryController.edit(java.lang.String,org.springframework.ui.Model)
2019-06-04 17:49:08 -Mapped "{[/act/salary/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.SalaryController.saveOrUpdate(com.bootdo.activiti.domain.SalaryDO)
2019-06-04 17:49:08 -Mapped "{[/act/salary],methods=[GET]}" onto java.lang.String com.bootdo.activiti.controller.SalaryController.Salary()
2019-06-04 17:49:08 -Mapped "{[/activiti/task/form/{procDefId}/{taskId}],methods=[GET]}" onto public void com.bootdo.activiti.controller.TaskController.form(java.lang.String,java.lang.String,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-06-04 17:49:08 -Mapped "{[/activiti/task/gotoList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.activiti.controller.TaskController.list(int,int)
2019-06-04 17:49:08 -Mapped "{[/activiti/task/goto],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.activiti.controller.TaskController.gotoTask()
2019-06-04 17:49:08 -Mapped "{[/activiti/task/form/{procDefId}],methods=[GET]}" onto public void com.bootdo.activiti.controller.TaskController.startForm(java.lang.String,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-06-04 17:49:08 -Mapped "{[/activiti/task/todo],methods=[GET]}" onto org.springframework.web.servlet.ModelAndView com.bootdo.activiti.controller.TaskController.todo()
2019-06-04 17:49:08 -Mapped "{[/activiti/task/todoList],methods=[GET]}" onto java.util.List<com.bootdo.activiti.vo.TaskVO> com.bootdo.activiti.controller.TaskController.todoList()
2019-06-04 17:49:08 -Mapped "{[/activiti/task/trace/photo/{procDefId}/{execId}]}" onto public void com.bootdo.activiti.controller.TaskController.tracePhoto(java.lang.String,java.lang.String,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-06-04 17:49:08 -Mapped "{[/blog/open/post/{cid}],methods=[GET]}" onto java.lang.String com.bootdo.blog.controller.BlogController.post(java.lang.Long,org.springframework.ui.Model)
2019-06-04 17:49:08 -Mapped "{[/blog/open/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.blog.controller.BlogController.opentList(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-04 17:49:08 -Mapped "{[/blog],methods=[GET]}" onto java.lang.String com.bootdo.blog.controller.BlogController.blog()
2019-06-04 17:49:08 -Mapped "{[/blog/open/page/{categories}],methods=[GET]}" onto java.lang.String com.bootdo.blog.controller.BlogController.about(java.lang.String,org.springframework.ui.Model)
2019-06-04 17:49:08 -Mapped "{[/blog/bContent/add],methods=[GET]}" onto java.lang.String com.bootdo.blog.controller.ContentController.add()
2019-06-04 17:49:08 -Mapped "{[/blog/bContent/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.blog.controller.ContentController.remove(java.lang.Long)
2019-06-04 17:49:08 -Mapped "{[/blog/bContent/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.blog.controller.ContentController.remove(java.lang.Long[])
2019-06-04 17:49:08 -Mapped "{[/blog/bContent/update]}" onto public com.bootdo.common.utils.R com.bootdo.blog.controller.ContentController.update(com.bootdo.blog.domain.ContentDO)
2019-06-04 17:49:08 -Mapped "{[/blog/bContent/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.blog.controller.ContentController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-04 17:49:08 -Mapped "{[/blog/bContent/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.blog.controller.ContentController.save(com.bootdo.blog.domain.ContentDO)
2019-06-04 17:49:08 -Mapped "{[/blog/bContent],methods=[GET]}" onto java.lang.String com.bootdo.blog.controller.ContentController.bContent()
2019-06-04 17:49:08 -Mapped "{[/blog/bContent/edit/{cid}],methods=[GET]}" onto java.lang.String com.bootdo.blog.controller.ContentController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-04 17:49:08 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-06-04 17:49:08 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-06-04 17:49:08 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-06-04 17:49:08 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-06-04 17:49:08 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-04 17:49:08 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-06-04 17:49:08 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-06-04 17:49:08 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-06-04 17:49:08 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-06-04 17:49:08 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-06-04 17:49:08 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-04 17:49:08 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-06-04 17:49:08 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-06-04 17:49:08 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-06-04 17:49:08 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-06-04 17:49:08 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-04 17:49:08 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-06-04 17:49:08 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-06-04 17:49:08 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-06-04 17:49:08 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-06-04 17:49:08 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-04 17:49:08 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-04 17:49:08 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-06-04 17:49:08 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-06-04 17:49:08 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-06-04 17:49:08 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-06-04 17:49:08 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-06-04 17:49:08 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-06-04 17:49:08 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-06-04 17:49:08 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-06-04 17:49:08 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-06-04 17:49:08 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-04 17:49:08 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-06-04 17:49:08 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-06-04 17:49:08 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-06-04 17:49:08 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-06-04 17:49:08 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-04 17:49:08 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-06-04 17:49:08 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-06-04 17:49:08 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-04 17:49:08 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-06-04 17:49:08 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-06-04 17:49:08 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-06-04 17:49:08 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-06-04 17:49:08 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-06-04 17:49:08 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-06-04 17:49:08 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-06-04 17:49:08 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-06-04 17:49:08 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-04 17:49:08 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-06-04 17:49:08 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-06-04 17:49:08 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-04 17:49:08 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-06-04 17:49:08 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-06-04 17:49:08 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-04 17:49:08 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-06-04 17:49:08 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-06-04 17:49:08 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-06-04 17:49:08 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-06-04 17:49:08 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-06-04 17:49:08 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-06-04 17:49:08 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-06-04 17:49:08 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-04 17:49:08 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-06-04 17:49:08 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-06-04 17:49:08 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-06-04 17:49:08 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-06-04 17:49:08 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-06-04 17:49:08 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-06-04 17:49:08 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String)
2019-06-04 17:49:08 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-06-04 17:49:08 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-06-04 17:49:08 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-06-04 17:49:08 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-06-04 17:49:08 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-04 17:49:08 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-06-04 17:49:08 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-06-04 17:49:08 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-06-04 17:49:08 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-06-04 17:49:08 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-06-04 17:49:08 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-06-04 17:49:08 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-06-04 17:49:08 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-06-04 17:49:08 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-06-04 17:49:08 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-06-04 17:49:08 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-06-04 17:49:08 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-06-04 17:49:08 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-04 17:49:08 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-06-04 17:49:08 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-06-04 17:49:08 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-06-04 17:49:08 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-06-04 17:49:08 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-04 17:49:08 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-06-04 17:49:08 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-06-04 17:49:08 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-06-04 17:49:08 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-04 17:49:08 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-06-04 17:49:08 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-06-04 17:49:08 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-06-04 17:49:08 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-06-04 17:49:08 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-06-04 17:49:08 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-06-04 17:49:08 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-06-04 17:49:08 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-06-04 17:49:08 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-06-04 17:49:08 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-06-04 17:49:08 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-06-04 17:49:08 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-06-04 17:49:08 -Mapped "{[/wxServer],methods=[GET]}" onto public void org.weixin4j.spring.web.WeixinJieruController.get(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-06-04 17:49:08 -Mapped "{[/wxServer],methods=[POST]}" onto public void org.weixin4j.spring.web.WeixinJieruController.post(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-06-04 17:49:08 -Mapped "{[/weixin/weixinUser/add],methods=[GET]}" onto java.lang.String com.bootdo.weixin.controller.WeixinUserController.add()
2019-06-04 17:49:08 -Mapped "{[/weixin/weixinUser/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.weixin.controller.WeixinUserController.remove(java.lang.Long)
2019-06-04 17:49:08 -Mapped "{[/weixin/weixinUser/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.weixin.controller.WeixinUserController.remove(java.lang.Long[])
2019-06-04 17:49:08 -Mapped "{[/weixin/weixinUser/update]}" onto public com.bootdo.common.utils.R com.bootdo.weixin.controller.WeixinUserController.update(com.bootdo.weixin.domain.WeixinUserDO)
2019-06-04 17:49:08 -Mapped "{[/weixin/weixinUser/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.weixin.controller.WeixinUserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-04 17:49:08 -Mapped "{[/weixin/weixinUser/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.weixin.controller.WeixinUserController.save(com.bootdo.weixin.domain.WeixinUserDO)
2019-06-04 17:49:08 -Mapped "{[/weixin/weixinUser/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.weixin.controller.WeixinUserController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-04 17:49:08 -Mapped "{[/weixin/weixinUser],methods=[GET]}" onto java.lang.String com.bootdo.weixin.controller.WeixinUserController.WeixinUser()
2019-06-04 17:49:08 -Mapped "{[/xjbg/order/add],methods=[GET]}" onto java.lang.String com.bootdo.xjbg.controller.OrderController.add()
2019-06-04 17:49:08 -Mapped "{[/xjbg/order/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.xjbg.controller.OrderController.remove(java.lang.Long)
2019-06-04 17:49:08 -Mapped "{[/xjbg/order/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.xjbg.controller.OrderController.remove(java.lang.Long[])
2019-06-04 17:49:08 -Mapped "{[/xjbg/order/update]}" onto public com.bootdo.common.utils.R com.bootdo.xjbg.controller.OrderController.update(com.bootdo.xjbg.domain.OrderDO)
2019-06-04 17:49:08 -Mapped "{[/xjbg/order/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.xjbg.controller.OrderController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-04 17:49:08 -Mapped "{[/xjbg/order/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.xjbg.controller.OrderController.save(com.bootdo.xjbg.domain.OrderDO)
2019-06-04 17:49:08 -Mapped "{[/xjbg/order/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.xjbg.controller.OrderController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-04 17:49:08 -Mapped "{[/xjbg/order],methods=[GET]}" onto java.lang.String com.bootdo.xjbg.controller.OrderController.Order()
2019-06-04 17:49:08 -Mapped "{[/xjbg/orderItem/add],methods=[GET]}" onto java.lang.String com.bootdo.xjbg.controller.OrderItemController.add()
2019-06-04 17:49:08 -Mapped "{[/xjbg/orderItem/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.xjbg.controller.OrderItemController.remove(java.lang.Long)
2019-06-04 17:49:08 -Mapped "{[/xjbg/orderItem/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.xjbg.controller.OrderItemController.remove(java.lang.Long[])
2019-06-04 17:49:08 -Mapped "{[/xjbg/orderItem/update]}" onto public com.bootdo.common.utils.R com.bootdo.xjbg.controller.OrderItemController.update(com.bootdo.xjbg.domain.OrderItemDO)
2019-06-04 17:49:08 -Mapped "{[/xjbg/orderItem/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.xjbg.controller.OrderItemController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-04 17:49:08 -Mapped "{[/xjbg/orderItem/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.xjbg.controller.OrderItemController.save(com.bootdo.xjbg.domain.OrderItemDO)
2019-06-04 17:49:08 -Mapped "{[/xjbg/orderItem/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.xjbg.controller.OrderItemController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-04 17:49:08 -Mapped "{[/xjbg/orderItem],methods=[GET]}" onto java.lang.String com.bootdo.xjbg.controller.OrderItemController.OrderItem()
2019-06-04 17:49:08 -Mapped "{[/xjbg/product/add],methods=[GET]}" onto java.lang.String com.bootdo.xjbg.controller.ProductController.add()
2019-06-04 17:49:08 -Mapped "{[/xjbg/product/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.xjbg.controller.ProductController.remove(java.lang.Long)
2019-06-04 17:49:08 -Mapped "{[/xjbg/product/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.xjbg.controller.ProductController.remove(java.lang.Long[])
2019-06-04 17:49:08 -Mapped "{[/xjbg/product/update]}" onto public com.bootdo.common.utils.R com.bootdo.xjbg.controller.ProductController.update(com.bootdo.xjbg.domain.ProductDO,org.springframework.web.multipart.MultipartFile[])
2019-06-04 17:49:08 -Mapped "{[/xjbg/product/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.xjbg.controller.ProductController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-04 17:49:08 -Mapped "{[/xjbg/product/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.xjbg.controller.ProductController.save(com.bootdo.xjbg.domain.ProductDO,org.springframework.web.multipart.MultipartFile[])
2019-06-04 17:49:08 -Mapped "{[/xjbg/product/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.xjbg.controller.ProductController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-04 17:49:08 -Mapped "{[/xjbg/product],methods=[GET]}" onto java.lang.String com.bootdo.xjbg.controller.ProductController.Product()
2019-06-04 17:49:08 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-06-04 17:49:08 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-06-04 17:49:08 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-06-04 17:49:08 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-06-04 17:49:08 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-06-04 17:49:08 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-06-04 17:49:08 -Initializing ExecutorService  'brokerChannelExecutor'
2019-06-04 17:49:08 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-06-04 17:49:08 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@2c394f8b: startup date [Tue Jun 04 17:49:04 CST 2019]; root of context hierarchy
2019-06-04 17:49:08 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-06-04 17:49:08 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-06-04 17:49:08 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-06-04 17:49:08 -Mapped URL path [/productPic/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-06-04 17:49:08 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-06-04 17:49:08 -[THYMELEAF][restartedMain] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-06-04 17:49:09 -LiveReload server is running on port 35729
2019-06-04 17:49:09 -Registering beans for JMX exposure on startup
2019-06-04 17:49:09 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-06-04 17:49:09 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-06-04 17:49:09 -Starting beans in phase 2147483647
2019-06-04 17:49:09 -Context refreshed
2019-06-04 17:49:09 -Found 1 custom documentation plugin(s)
2019-06-04 17:49:09 -Scanning for api listing references
2019-06-04 17:49:09 -Generating unique operation named: removeUsingPOST_1
2019-06-04 17:49:09 -Generating unique operation named: addUsingGET_1
2019-06-04 17:49:09 -Generating unique operation named: editUsingGET_1
2019-06-04 17:49:09 -Generating unique operation named: listUsingGET_1
2019-06-04 17:49:09 -Generating unique operation named: removeUsingPOST_2
2019-06-04 17:49:09 -Generating unique operation named: removeUsingPOST_3
2019-06-04 17:49:09 -Generating unique operation named: saveUsingPOST_1
2019-06-04 17:49:09 -Generating unique operation named: updateUsingGET_1
2019-06-04 17:49:09 -Generating unique operation named: updateUsingHEAD_1
2019-06-04 17:49:09 -Generating unique operation named: updateUsingPOST_1
2019-06-04 17:49:09 -Generating unique operation named: updateUsingPUT_1
2019-06-04 17:49:09 -Generating unique operation named: updateUsingPATCH_1
2019-06-04 17:49:09 -Generating unique operation named: updateUsingDELETE_1
2019-06-04 17:49:09 -Generating unique operation named: updateUsingOPTIONS_1
2019-06-04 17:49:09 -Generating unique operation named: updateUsingTRACE_1
2019-06-04 17:49:09 -Generating unique operation named: addUsingGET_2
2019-06-04 17:49:09 -Generating unique operation named: editUsingGET_2
2019-06-04 17:49:09 -Generating unique operation named: listUsingGET_2
2019-06-04 17:49:09 -Generating unique operation named: removeUsingPOST_4
2019-06-04 17:49:09 -Generating unique operation named: removeUsingPOST_5
2019-06-04 17:49:09 -Generating unique operation named: saveUsingPOST_2
2019-06-04 17:49:10 -Generating unique operation named: updateUsingGET_2
2019-06-04 17:49:10 -Generating unique operation named: updateUsingHEAD_2
2019-06-04 17:49:10 -Generating unique operation named: updateUsingPOST_2
2019-06-04 17:49:10 -Generating unique operation named: updateUsingPUT_2
2019-06-04 17:49:10 -Generating unique operation named: updateUsingPATCH_2
2019-06-04 17:49:10 -Generating unique operation named: updateUsingDELETE_2
2019-06-04 17:49:10 -Generating unique operation named: updateUsingOPTIONS_2
2019-06-04 17:49:10 -Generating unique operation named: updateUsingTRACE_2
2019-06-04 17:49:10 -Generating unique operation named: addUsingGET_3
2019-06-04 17:49:10 -Generating unique operation named: editUsingGET_3
2019-06-04 17:49:10 -Generating unique operation named: listUsingGET_3
2019-06-04 17:49:10 -Generating unique operation named: removeUsingPOST_6
2019-06-04 17:49:10 -Generating unique operation named: removeUsingPOST_7
2019-06-04 17:49:10 -Generating unique operation named: saveUsingPOST_3
2019-06-04 17:49:10 -Generating unique operation named: updateUsingGET_3
2019-06-04 17:49:10 -Generating unique operation named: updateUsingHEAD_3
2019-06-04 17:49:10 -Generating unique operation named: updateUsingPOST_3
2019-06-04 17:49:10 -Generating unique operation named: updateUsingPUT_3
2019-06-04 17:49:10 -Generating unique operation named: updateUsingPATCH_3
2019-06-04 17:49:10 -Generating unique operation named: updateUsingDELETE_3
2019-06-04 17:49:10 -Generating unique operation named: updateUsingOPTIONS_3
2019-06-04 17:49:10 -Generating unique operation named: updateUsingTRACE_3
2019-06-04 17:49:10 -Generating unique operation named: editUsingGET_4
2019-06-04 17:49:10 -Generating unique operation named: listUsingGET_4
2019-06-04 17:49:10 -Generating unique operation named: updateUsingPOST_4
2019-06-04 17:49:10 -Generating unique operation named: addUsingGET_4
2019-06-04 17:49:10 -Generating unique operation named: editUsingGET_5
2019-06-04 17:49:10 -Generating unique operation named: infoUsingGET_1
2019-06-04 17:49:10 -Generating unique operation named: infoUsingHEAD_1
2019-06-04 17:49:10 -Generating unique operation named: infoUsingPOST_1
2019-06-04 17:49:10 -Generating unique operation named: infoUsingPUT_1
2019-06-04 17:49:10 -Generating unique operation named: infoUsingPATCH_1
2019-06-04 17:49:10 -Generating unique operation named: infoUsingDELETE_1
2019-06-04 17:49:10 -Generating unique operation named: infoUsingOPTIONS_1
2019-06-04 17:49:10 -Generating unique operation named: infoUsingTRACE_1
2019-06-04 17:49:10 -Generating unique operation named: listUsingGET_5
2019-06-04 17:49:10 -Generating unique operation named: removeUsingPOST_8
2019-06-04 17:49:10 -Generating unique operation named: removeUsingPOST_9
2019-06-04 17:49:10 -Generating unique operation named: saveUsingPOST_4
2019-06-04 17:49:10 -Generating unique operation named: updateUsingPOST_5
2019-06-04 17:49:10 -Generating unique operation named: listUsingGET_6
2019-06-04 17:49:10 -Generating unique operation named: removeUsingPOST_10
2019-06-04 17:49:10 -Generating unique operation named: welcomeUsingGET_1
2019-06-04 17:49:10 -Generating unique operation named: addUsingGET_5
2019-06-04 17:49:10 -Generating unique operation named: editUsingGET_6
2019-06-04 17:49:10 -Generating unique operation named: listUsingGET_7
2019-06-04 17:49:10 -Generating unique operation named: removeUsingPOST_11
2019-06-04 17:49:10 -Generating unique operation named: saveUsingPOST_5
2019-06-04 17:49:10 -Generating unique operation named: treeUsingGET_1
2019-06-04 17:49:10 -Generating unique operation named: treeUsingGET_2
2019-06-04 17:49:10 -Generating unique operation named: updateUsingPOST_6
2019-06-04 17:49:10 -Generating unique operation named: batchRemoveUsingPOST_1
2019-06-04 17:49:10 -Generating unique operation named: editUsingGET_7
2019-06-04 17:49:10 -Generating unique operation named: listUsingGET_8
2019-06-04 17:49:10 -Generating unique operation named: addUsingGET_6
2019-06-04 17:49:10 -Generating unique operation named: editUsingGET_8
2019-06-04 17:49:10 -Generating unique operation named: listUsingGET_9
2019-06-04 17:49:10 -Generating unique operation named: removeUsingPOST_12
2019-06-04 17:49:10 -Generating unique operation named: removeUsingPOST_13
2019-06-04 17:49:10 -Generating unique operation named: saveUsingPOST_6
2019-06-04 17:49:10 -Generating unique operation named: updateUsingGET_4
2019-06-04 17:49:10 -Generating unique operation named: updateUsingHEAD_4
2019-06-04 17:49:10 -Generating unique operation named: updateUsingPOST_7
2019-06-04 17:49:10 -Generating unique operation named: updateUsingPUT_4
2019-06-04 17:49:10 -Generating unique operation named: updateUsingPATCH_4
2019-06-04 17:49:10 -Generating unique operation named: updateUsingDELETE_4
2019-06-04 17:49:10 -Generating unique operation named: updateUsingOPTIONS_4
2019-06-04 17:49:10 -Generating unique operation named: updateUsingTRACE_4
2019-06-04 17:49:10 -Generating unique operation named: addUsingGET_7
2019-06-04 17:49:10 -Generating unique operation named: editUsingGET_9
2019-06-04 17:49:10 -Generating unique operation named: listUsingGET_10
2019-06-04 17:49:10 -Generating unique operation named: removeUsingPOST_14
2019-06-04 17:49:10 -Generating unique operation named: removeUsingPOST_15
2019-06-04 17:49:10 -Generating unique operation named: saveUsingPOST_7
2019-06-04 17:49:10 -Generating unique operation named: updateUsingGET_5
2019-06-04 17:49:10 -Generating unique operation named: updateUsingHEAD_5
2019-06-04 17:49:10 -Generating unique operation named: updateUsingPOST_8
2019-06-04 17:49:10 -Generating unique operation named: updateUsingPUT_5
2019-06-04 17:49:10 -Generating unique operation named: updateUsingPATCH_5
2019-06-04 17:49:10 -Generating unique operation named: updateUsingDELETE_5
2019-06-04 17:49:10 -Generating unique operation named: updateUsingOPTIONS_5
2019-06-04 17:49:10 -Generating unique operation named: updateUsingTRACE_5
2019-06-04 17:49:10 -Generating unique operation named: addUsingGET_8
2019-06-04 17:49:10 -Generating unique operation named: editUsingGET_10
2019-06-04 17:49:10 -Generating unique operation named: listUsingGET_11
2019-06-04 17:49:10 -Generating unique operation named: removeUsingPOST_16
2019-06-04 17:49:10 -Generating unique operation named: removeUsingPOST_17
2019-06-04 17:49:10 -Generating unique operation named: saveUsingPOST_8
2019-06-04 17:49:10 -Generating unique operation named: updateUsingGET_6
2019-06-04 17:49:10 -Generating unique operation named: updateUsingHEAD_6
2019-06-04 17:49:10 -Generating unique operation named: updateUsingPOST_9
2019-06-04 17:49:10 -Generating unique operation named: updateUsingPUT_6
2019-06-04 17:49:10 -Generating unique operation named: updateUsingPATCH_6
2019-06-04 17:49:10 -Generating unique operation named: updateUsingDELETE_6
2019-06-04 17:49:10 -Generating unique operation named: updateUsingOPTIONS_6
2019-06-04 17:49:10 -Generating unique operation named: updateUsingTRACE_6
2019-06-04 17:49:10 -Generating unique operation named: addUsingGET_9
2019-06-04 17:49:10 -Generating unique operation named: batchRemoveUsingPOST_2
2019-06-04 17:49:10 -Generating unique operation named: deployUsingPOST_1
2019-06-04 17:49:10 -Generating unique operation named: listUsingGET_12
2019-06-04 17:49:10 -Generating unique operation named: removeUsingPOST_18
2019-06-04 17:49:10 -Generating unique operation named: addUsingGET_10
2019-06-04 17:49:10 -Generating unique operation named: editUsingGET_11
2019-06-04 17:49:10 -Generating unique operation named: listUsingGET_13
2019-06-04 17:49:10 -Generating unique operation named: removeUsingPOST_19
2019-06-04 17:49:10 -Generating unique operation named: removeUsingPOST_20
2019-06-04 17:49:10 -Trying to infer dataType org.springframework.web.multipart.MultipartFile[]
2019-06-04 17:49:10 -Generating unique operation named: saveUsingPOST_9
2019-06-04 17:49:10 -Trying to infer dataType org.springframework.web.multipart.MultipartFile[]
2019-06-04 17:49:10 -Generating unique operation named: updateUsingGET_7
2019-06-04 17:49:10 -Trying to infer dataType org.springframework.web.multipart.MultipartFile[]
2019-06-04 17:49:10 -Generating unique operation named: updateUsingHEAD_7
2019-06-04 17:49:10 -Trying to infer dataType org.springframework.web.multipart.MultipartFile[]
2019-06-04 17:49:10 -Generating unique operation named: updateUsingPOST_10
2019-06-04 17:49:10 -Trying to infer dataType org.springframework.web.multipart.MultipartFile[]
2019-06-04 17:49:10 -Generating unique operation named: updateUsingPUT_7
2019-06-04 17:49:10 -Trying to infer dataType org.springframework.web.multipart.MultipartFile[]
2019-06-04 17:49:10 -Generating unique operation named: updateUsingPATCH_7
2019-06-04 17:49:10 -Trying to infer dataType org.springframework.web.multipart.MultipartFile[]
2019-06-04 17:49:10 -Generating unique operation named: updateUsingDELETE_7
2019-06-04 17:49:10 -Trying to infer dataType org.springframework.web.multipart.MultipartFile[]
2019-06-04 17:49:10 -Generating unique operation named: updateUsingOPTIONS_7
2019-06-04 17:49:10 -Trying to infer dataType org.springframework.web.multipart.MultipartFile[]
2019-06-04 17:49:10 -Generating unique operation named: updateUsingTRACE_7
2019-06-04 17:49:10 -Generating unique operation named: addUsingGET_11
2019-06-04 17:49:10 -Generating unique operation named: batchRemoveUsingPOST_3
2019-06-04 17:49:10 -Generating unique operation named: editUsingGET_12
2019-06-04 17:49:10 -Generating unique operation named: listUsingGET_14
2019-06-04 17:49:10 -Generating unique operation named: saveUsingPOST_10
2019-06-04 17:49:10 -Generating unique operation named: saveUsingPOST_11
2019-06-04 17:49:10 -Generating unique operation named: updateUsingPOST_11
2019-06-04 17:49:10 -Generating unique operation named: addUsingGET_12
2019-06-04 17:49:10 -Generating unique operation named: editUsingGET_13
2019-06-04 17:49:10 -Generating unique operation named: listUsingGET_15
2019-06-04 17:49:10 -Generating unique operation named: removeUsingPOST_21
2019-06-04 17:49:10 -Generating unique operation named: removeUsingPOST_22
2019-06-04 17:49:11 -Generating unique operation named: updateUsingGET_8
2019-06-04 17:49:11 -Generating unique operation named: updateUsingHEAD_8
2019-06-04 17:49:11 -Generating unique operation named: updateUsingPOST_12
2019-06-04 17:49:11 -Generating unique operation named: updateUsingPUT_8
2019-06-04 17:49:11 -Generating unique operation named: updateUsingPATCH_8
2019-06-04 17:49:11 -Generating unique operation named: updateUsingDELETE_8
2019-06-04 17:49:11 -Generating unique operation named: updateUsingOPTIONS_8
2019-06-04 17:49:11 -Generating unique operation named: updateUsingTRACE_8
2019-06-04 17:49:11 -Generating unique operation named: listUsingGET_16
2019-06-04 17:49:11 -Generating unique operation named: listUsingHEAD_1
2019-06-04 17:49:11 -Generating unique operation named: listUsingPOST_1
2019-06-04 17:49:11 -Generating unique operation named: listUsingPUT_1
2019-06-04 17:49:11 -Generating unique operation named: listUsingPATCH_1
2019-06-04 17:49:11 -Generating unique operation named: listUsingDELETE_1
2019-06-04 17:49:11 -Generating unique operation named: listUsingOPTIONS_1
2019-06-04 17:49:11 -Generating unique operation named: listUsingTRACE_1
2019-06-04 17:49:11 -Generating unique operation named: listUsingGET_17
2019-06-04 17:49:11 -Generating unique operation named: addUsingGET_13
2019-06-04 17:49:11 -Generating unique operation named: batchRemoveUsingPOST_4
2019-06-04 17:49:11 -Generating unique operation named: editUsingGET_14
2019-06-04 17:49:11 -Generating unique operation named: listUsingGET_18
2019-06-04 17:49:11 -Generating unique operation named: removeUsingPOST_23
2019-06-04 17:49:11 -Generating unique operation named: saveUsingPOST_12
2019-06-04 17:49:11 -Generating unique operation named: treeUsingGET_3
2019-06-04 17:49:11 -Generating unique operation named: treeViewUsingGET_1
2019-06-04 17:49:11 -Generating unique operation named: updateUsingPOST_13
2019-06-04 17:49:11 -Generating unique operation named: addUsingGET_14
2019-06-04 17:49:11 -Generating unique operation named: editUsingGET_15
2019-06-04 17:49:11 -Generating unique operation named: listUsingGET_19
2019-06-04 17:49:11 -Generating unique operation named: removeUsingPOST_24
2019-06-04 17:49:11 -Generating unique operation named: removeUsingPOST_25
2019-06-04 17:49:11 -Generating unique operation named: saveUsingPOST_13
2019-06-04 17:49:11 -Generating unique operation named: updateUsingGET_9
2019-06-04 17:49:11 -Generating unique operation named: updateUsingHEAD_9
2019-06-04 17:49:11 -Generating unique operation named: updateUsingPOST_14
2019-06-04 17:49:11 -Generating unique operation named: updateUsingPUT_9
2019-06-04 17:49:11 -Generating unique operation named: updateUsingPATCH_9
2019-06-04 17:49:11 -Generating unique operation named: updateUsingDELETE_9
2019-06-04 17:49:11 -Generating unique operation named: updateUsingOPTIONS_9
2019-06-04 17:49:11 -Generating unique operation named: updateUsingTRACE_9
2019-06-04 17:49:11 -Starting Quartz Scheduler now
2019-06-04 17:49:11 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-06-04 17:49:11 -Starting...
2019-06-04 17:49:11 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-06-04 17:49:11 -Started.
2019-06-04 17:49:11 -Starting ProtocolHandler ["http-nio-8888"]
2019-06-04 17:49:11 -Using a shared selector for servlet write/read
2019-06-04 17:49:11 -Tomcat started on port(s): 8888 (http) with context path ''
2019-06-04 17:49:11 -Started BootdoApplication in 6.732 seconds (JVM running for 128.329)
2019-06-04 17:49:11 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-06-04 17:49:11 -==> Parameters: 
2019-06-04 17:49:11 -<==      Total: 1
2019-06-04 17:49:11 -Condition evaluation unchanged
2019-06-04 17:49:15 -Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@2c394f8b: startup date [Tue Jun 04 17:49:04 CST 2019]; root of context hierarchy
2019-06-04 17:49:15 -Stopping beans in phase 2147483647
2019-06-04 17:49:15 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED paused.
2019-06-04 17:49:15 -Stopping...
2019-06-04 17:49:15 -BrokerAvailabilityEvent[available=false, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-06-04 17:49:15 -Stopped.
2019-06-04 17:49:15 -Unregistering JMX-exposed beans on shutdown
2019-06-04 17:49:15 -Unregistering JMX-exposed beans
2019-06-04 17:49:15 -Shutting down ExecutorService 'brokerChannelExecutor'
2019-06-04 17:49:15 -Shutting down ExecutorService 'messageBrokerTaskScheduler'
2019-06-04 17:49:15 -Shutting down ExecutorService 'clientOutboundChannelExecutor'
2019-06-04 17:49:15 -Shutting down ExecutorService 'clientInboundChannelExecutor'
2019-06-04 17:49:15 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED shutting down.
2019-06-04 17:49:15 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED paused.
2019-06-04 17:49:15 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED shutdown complete.
2019-06-04 17:49:15 -Shutting down Quartz Scheduler
2019-06-04 17:49:15 -{dataSource-2} closed
2019-06-04 17:49:16 -Starting BootdoApplication on LAPTOP-ELP5M68R with PID 4252 (D:\workspace\bootdo\bootdo\target\classes started by Lenovo in D:\workspace\bootdo\bootdo)
2019-06-04 17:49:16 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-06-04 17:49:16 -The following profiles are active: dev
2019-06-04 17:49:16 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@431865a1: startup date [Tue Jun 04 17:49:16 CST 2019]; root of context hierarchy
2019-06-04 17:49:17 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-06-04 17:49:18 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$e540caba] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-04 17:49:18 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$d799f961] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-04 17:49:18 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-04 17:49:18 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-04 17:49:18 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-04 17:49:18 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache.2' does not yet exist.  Creating now.
2019-06-04 17:49:18 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache.2]
2019-06-04 17:49:18 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-04 17:49:18 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-04 17:49:18 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-04 17:49:18 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-04 17:49:18 -Tomcat initialized with port(s): 8888 (http)
2019-06-04 17:49:18 -Initializing ProtocolHandler ["http-nio-8888"]
2019-06-04 17:49:18 -Starting service [Tomcat]
2019-06-04 17:49:18 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-06-04 17:49:18 -Initializing Spring embedded WebApplicationContext
2019-06-04 17:49:18 -Root WebApplicationContext: initialization completed in 1665 ms
2019-06-04 17:49:18 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-06-04 17:49:18 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-06-04 17:49:18 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-06-04 17:49:18 -Mapping filter: 'requestContextFilter' to: [/*]
2019-06-04 17:49:18 -Filter xssFilter was not registered (disabled)
2019-06-04 17:49:18 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-06-04 17:49:18 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-06-04 17:49:18 -Servlet statViewServlet mapped to [/druid/*]
2019-06-04 17:49:18 -Servlet dispatcherServlet mapped to [/]
2019-06-04 17:49:18 -{dataSource-3} inited
2019-06-04 17:49:18 -ProcessEngine default created
2019-06-04 17:49:19 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@431865a1: startup date [Tue Jun 04 17:49:16 CST 2019]; root of context hierarchy
2019-06-04 17:49:19 -Using default implementation for ThreadExecutor
2019-06-04 17:49:19 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-06-04 17:49:19 -Quartz Scheduler v.2.2.1 created.
2019-06-04 17:49:19 -RAMJobStore initialized.
2019-06-04 17:49:19 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-06-04 17:49:19 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-06-04 17:49:19 -Quartz scheduler version: 2.2.1
2019-06-04 17:49:19 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@5252ad26
2019-06-04 17:49:19 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-06-04 17:49:19 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-06-04 17:49:20 -Mapped "{[/activiti/model/{id}],methods=[DELETE]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.ModelController.remove(java.lang.String)
2019-06-04 17:49:20 -Mapped "{[/activiti/model/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.activiti.controller.ModelController.list(int,int)
2019-06-04 17:49:20 -Mapped "{[/activiti/model/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.ModelController.batchRemove(java.lang.String[])
2019-06-04 17:49:20 -Mapped "{[/activiti/model],methods=[GET]}" onto org.springframework.web.servlet.ModelAndView com.bootdo.activiti.controller.ModelController.model()
2019-06-04 17:49:20 -Mapped "{[/activiti/model/add]}" onto public void com.bootdo.activiti.controller.ModelController.newModel(javax.servlet.http.HttpServletResponse) throws java.io.UnsupportedEncodingException
2019-06-04 17:49:20 -Mapped "{[/activiti/model/{modelId}/save],methods=[PUT]}" onto public void com.bootdo.activiti.controller.ModelController.saveModel(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2019-06-04 17:49:20 -Mapped "{[/activiti/model/deploy/{id}],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.ModelController.deploy(java.lang.String) throws java.lang.Exception
2019-06-04 17:49:20 -Mapped "{[/activiti/model/{modelId}/json],methods=[GET]}" onto public com.fasterxml.jackson.databind.node.ObjectNode com.bootdo.activiti.controller.ModelController.getEditorJson(java.lang.String)
2019-06-04 17:49:20 -Mapped "{[/activiti/editor/stencilset],methods=[GET],produces=[application/json;charset=utf-8]}" onto public java.lang.String com.bootdo.activiti.controller.ModelController.getStencilset()
2019-06-04 17:49:20 -Mapped "{[/activiti/model/export/{id}],methods=[GET]}" onto public void com.bootdo.activiti.controller.ModelController.exportToXml(java.lang.String,javax.servlet.http.HttpServletResponse)
2019-06-04 17:49:20 -Mapped "{[/activiti/model/edit/{id}],methods=[GET]}" onto public void com.bootdo.activiti.controller.ModelController.edit(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-06-04 17:49:20 -Mapped "{[/activiti/process/add],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.activiti.controller.ProcessController.add()
2019-06-04 17:49:20 -Mapped "{[/activiti/process/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.ProcessController.remove(java.lang.String)
2019-06-04 17:49:20 -Mapped "{[/activiti/process/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.activiti.controller.ProcessController.list(int,int)
2019-06-04 17:49:20 -Mapped "{[/activiti/process/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.ProcessController.batchRemove(java.lang.String[])
2019-06-04 17:49:20 -Mapped "{[/activiti/process],methods=[GET]}" onto org.springframework.web.servlet.ModelAndView com.bootdo.activiti.controller.ProcessController.process()
2019-06-04 17:49:20 -Mapped "{[/activiti/process/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.ProcessController.deploy(java.lang.String,java.lang.String,org.springframework.web.multipart.MultipartFile)
2019-06-04 17:49:20 -Mapped "{[/activiti/process/convertToModel/{procDefId}]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.ProcessController.convertToModel(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes) throws java.io.UnsupportedEncodingException,javax.xml.stream.XMLStreamException
2019-06-04 17:49:20 -Mapped "{[/activiti/process/resource/read/{xml}/{id}]}" onto public void com.bootdo.activiti.controller.ProcessController.resourceRead(java.lang.String,java.lang.String,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-06-04 17:49:20 -Mapped "{[/act/salary/form],methods=[GET]}" onto java.lang.String com.bootdo.activiti.controller.SalaryController.add()
2019-06-04 17:49:20 -Mapped "{[/act/salary/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.SalaryController.remove(java.lang.String)
2019-06-04 17:49:20 -Mapped "{[/act/salary/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.SalaryController.remove(java.lang.String[])
2019-06-04 17:49:20 -Mapped "{[/act/salary/update]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.SalaryController.update(com.bootdo.activiti.domain.SalaryDO)
2019-06-04 17:49:20 -Mapped "{[/act/salary/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.activiti.controller.SalaryController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-04 17:49:20 -Mapped "{[/act/salary/form/{taskId}],methods=[GET]}" onto java.lang.String com.bootdo.activiti.controller.SalaryController.edit(java.lang.String,org.springframework.ui.Model)
2019-06-04 17:49:20 -Mapped "{[/act/salary/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.SalaryController.saveOrUpdate(com.bootdo.activiti.domain.SalaryDO)
2019-06-04 17:49:20 -Mapped "{[/act/salary],methods=[GET]}" onto java.lang.String com.bootdo.activiti.controller.SalaryController.Salary()
2019-06-04 17:49:20 -Mapped "{[/activiti/task/form/{procDefId}/{taskId}],methods=[GET]}" onto public void com.bootdo.activiti.controller.TaskController.form(java.lang.String,java.lang.String,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-06-04 17:49:20 -Mapped "{[/activiti/task/gotoList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.activiti.controller.TaskController.list(int,int)
2019-06-04 17:49:20 -Mapped "{[/activiti/task/goto],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.activiti.controller.TaskController.gotoTask()
2019-06-04 17:49:20 -Mapped "{[/activiti/task/form/{procDefId}],methods=[GET]}" onto public void com.bootdo.activiti.controller.TaskController.startForm(java.lang.String,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-06-04 17:49:20 -Mapped "{[/activiti/task/todo],methods=[GET]}" onto org.springframework.web.servlet.ModelAndView com.bootdo.activiti.controller.TaskController.todo()
2019-06-04 17:49:20 -Mapped "{[/activiti/task/todoList],methods=[GET]}" onto java.util.List<com.bootdo.activiti.vo.TaskVO> com.bootdo.activiti.controller.TaskController.todoList()
2019-06-04 17:49:20 -Mapped "{[/activiti/task/trace/photo/{procDefId}/{execId}]}" onto public void com.bootdo.activiti.controller.TaskController.tracePhoto(java.lang.String,java.lang.String,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-06-04 17:49:20 -Mapped "{[/blog/open/post/{cid}],methods=[GET]}" onto java.lang.String com.bootdo.blog.controller.BlogController.post(java.lang.Long,org.springframework.ui.Model)
2019-06-04 17:49:20 -Mapped "{[/blog/open/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.blog.controller.BlogController.opentList(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-04 17:49:20 -Mapped "{[/blog],methods=[GET]}" onto java.lang.String com.bootdo.blog.controller.BlogController.blog()
2019-06-04 17:49:20 -Mapped "{[/blog/open/page/{categories}],methods=[GET]}" onto java.lang.String com.bootdo.blog.controller.BlogController.about(java.lang.String,org.springframework.ui.Model)
2019-06-04 17:49:20 -Mapped "{[/blog/bContent/add],methods=[GET]}" onto java.lang.String com.bootdo.blog.controller.ContentController.add()
2019-06-04 17:49:20 -Mapped "{[/blog/bContent/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.blog.controller.ContentController.remove(java.lang.Long)
2019-06-04 17:49:20 -Mapped "{[/blog/bContent/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.blog.controller.ContentController.remove(java.lang.Long[])
2019-06-04 17:49:20 -Mapped "{[/blog/bContent/update]}" onto public com.bootdo.common.utils.R com.bootdo.blog.controller.ContentController.update(com.bootdo.blog.domain.ContentDO)
2019-06-04 17:49:20 -Mapped "{[/blog/bContent/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.blog.controller.ContentController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-04 17:49:20 -Mapped "{[/blog/bContent/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.blog.controller.ContentController.save(com.bootdo.blog.domain.ContentDO)
2019-06-04 17:49:20 -Mapped "{[/blog/bContent],methods=[GET]}" onto java.lang.String com.bootdo.blog.controller.ContentController.bContent()
2019-06-04 17:49:20 -Mapped "{[/blog/bContent/edit/{cid}],methods=[GET]}" onto java.lang.String com.bootdo.blog.controller.ContentController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-04 17:49:20 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-06-04 17:49:20 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-06-04 17:49:20 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-06-04 17:49:20 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-06-04 17:49:20 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-04 17:49:20 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-06-04 17:49:20 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-06-04 17:49:20 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-06-04 17:49:20 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-06-04 17:49:20 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-06-04 17:49:20 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-04 17:49:20 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-06-04 17:49:20 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-06-04 17:49:20 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-06-04 17:49:20 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-06-04 17:49:20 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-04 17:49:20 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-06-04 17:49:20 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-06-04 17:49:20 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-06-04 17:49:20 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-06-04 17:49:20 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-04 17:49:20 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-04 17:49:20 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-06-04 17:49:20 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-06-04 17:49:20 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-06-04 17:49:20 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-06-04 17:49:20 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-06-04 17:49:20 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-06-04 17:49:20 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-06-04 17:49:20 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-06-04 17:49:20 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-06-04 17:49:20 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-04 17:49:20 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-06-04 17:49:20 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-06-04 17:49:20 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-06-04 17:49:20 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-06-04 17:49:20 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-04 17:49:20 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-06-04 17:49:20 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-06-04 17:49:20 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-04 17:49:20 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-06-04 17:49:20 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-06-04 17:49:20 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-06-04 17:49:20 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-06-04 17:49:20 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-06-04 17:49:20 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-06-04 17:49:20 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-06-04 17:49:20 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-06-04 17:49:20 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-04 17:49:20 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-06-04 17:49:20 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-06-04 17:49:20 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-04 17:49:20 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-06-04 17:49:20 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-06-04 17:49:20 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-04 17:49:20 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-06-04 17:49:20 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-06-04 17:49:20 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-06-04 17:49:20 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-06-04 17:49:20 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-06-04 17:49:20 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-06-04 17:49:20 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-06-04 17:49:20 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-04 17:49:20 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-06-04 17:49:20 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-06-04 17:49:20 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-06-04 17:49:20 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-06-04 17:49:20 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-06-04 17:49:20 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-06-04 17:49:20 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String)
2019-06-04 17:49:20 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-06-04 17:49:20 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-06-04 17:49:20 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-06-04 17:49:20 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-06-04 17:49:20 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-04 17:49:20 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-06-04 17:49:20 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-06-04 17:49:20 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-06-04 17:49:20 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-06-04 17:49:20 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-06-04 17:49:20 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-06-04 17:49:20 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-06-04 17:49:20 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-06-04 17:49:20 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-06-04 17:49:20 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-06-04 17:49:20 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-06-04 17:49:20 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-06-04 17:49:20 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-04 17:49:20 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-06-04 17:49:20 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-06-04 17:49:20 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-06-04 17:49:20 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-06-04 17:49:20 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-04 17:49:20 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-06-04 17:49:20 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-06-04 17:49:20 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-06-04 17:49:20 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-04 17:49:20 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-06-04 17:49:20 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-06-04 17:49:20 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-06-04 17:49:20 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-06-04 17:49:20 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-06-04 17:49:20 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-06-04 17:49:20 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-06-04 17:49:20 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-06-04 17:49:20 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-06-04 17:49:20 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-06-04 17:49:20 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-06-04 17:49:20 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-06-04 17:49:20 -Mapped "{[/wxServer],methods=[GET]}" onto public void org.weixin4j.spring.web.WeixinJieruController.get(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-06-04 17:49:20 -Mapped "{[/wxServer],methods=[POST]}" onto public void org.weixin4j.spring.web.WeixinJieruController.post(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-06-04 17:49:20 -Mapped "{[/weixin/weixinUser/add],methods=[GET]}" onto java.lang.String com.bootdo.weixin.controller.WeixinUserController.add()
2019-06-04 17:49:20 -Mapped "{[/weixin/weixinUser/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.weixin.controller.WeixinUserController.remove(java.lang.Long)
2019-06-04 17:49:20 -Mapped "{[/weixin/weixinUser/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.weixin.controller.WeixinUserController.remove(java.lang.Long[])
2019-06-04 17:49:20 -Mapped "{[/weixin/weixinUser/update]}" onto public com.bootdo.common.utils.R com.bootdo.weixin.controller.WeixinUserController.update(com.bootdo.weixin.domain.WeixinUserDO)
2019-06-04 17:49:20 -Mapped "{[/weixin/weixinUser/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.weixin.controller.WeixinUserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-04 17:49:20 -Mapped "{[/weixin/weixinUser/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.weixin.controller.WeixinUserController.save(com.bootdo.weixin.domain.WeixinUserDO)
2019-06-04 17:49:20 -Mapped "{[/weixin/weixinUser/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.weixin.controller.WeixinUserController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-04 17:49:20 -Mapped "{[/weixin/weixinUser],methods=[GET]}" onto java.lang.String com.bootdo.weixin.controller.WeixinUserController.WeixinUser()
2019-06-04 17:49:20 -Mapped "{[/xjbg/order/add],methods=[GET]}" onto java.lang.String com.bootdo.xjbg.controller.OrderController.add()
2019-06-04 17:49:20 -Mapped "{[/xjbg/order/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.xjbg.controller.OrderController.remove(java.lang.Long)
2019-06-04 17:49:20 -Mapped "{[/xjbg/order/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.xjbg.controller.OrderController.remove(java.lang.Long[])
2019-06-04 17:49:20 -Mapped "{[/xjbg/order/update]}" onto public com.bootdo.common.utils.R com.bootdo.xjbg.controller.OrderController.update(com.bootdo.xjbg.domain.OrderDO)
2019-06-04 17:49:20 -Mapped "{[/xjbg/order/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.xjbg.controller.OrderController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-04 17:49:20 -Mapped "{[/xjbg/order/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.xjbg.controller.OrderController.save(com.bootdo.xjbg.domain.OrderDO)
2019-06-04 17:49:20 -Mapped "{[/xjbg/order/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.xjbg.controller.OrderController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-04 17:49:20 -Mapped "{[/xjbg/order],methods=[GET]}" onto java.lang.String com.bootdo.xjbg.controller.OrderController.Order()
2019-06-04 17:49:20 -Mapped "{[/xjbg/orderItem/add],methods=[GET]}" onto java.lang.String com.bootdo.xjbg.controller.OrderItemController.add()
2019-06-04 17:49:20 -Mapped "{[/xjbg/orderItem/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.xjbg.controller.OrderItemController.remove(java.lang.Long)
2019-06-04 17:49:20 -Mapped "{[/xjbg/orderItem/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.xjbg.controller.OrderItemController.remove(java.lang.Long[])
2019-06-04 17:49:20 -Mapped "{[/xjbg/orderItem/update]}" onto public com.bootdo.common.utils.R com.bootdo.xjbg.controller.OrderItemController.update(com.bootdo.xjbg.domain.OrderItemDO)
2019-06-04 17:49:20 -Mapped "{[/xjbg/orderItem/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.xjbg.controller.OrderItemController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-04 17:49:20 -Mapped "{[/xjbg/orderItem/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.xjbg.controller.OrderItemController.save(com.bootdo.xjbg.domain.OrderItemDO)
2019-06-04 17:49:20 -Mapped "{[/xjbg/orderItem/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.xjbg.controller.OrderItemController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-04 17:49:20 -Mapped "{[/xjbg/orderItem],methods=[GET]}" onto java.lang.String com.bootdo.xjbg.controller.OrderItemController.OrderItem()
2019-06-04 17:49:20 -Mapped "{[/xjbg/product/add],methods=[GET]}" onto java.lang.String com.bootdo.xjbg.controller.ProductController.add()
2019-06-04 17:49:20 -Mapped "{[/xjbg/product/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.xjbg.controller.ProductController.remove(java.lang.Long)
2019-06-04 17:49:20 -Mapped "{[/xjbg/product/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.xjbg.controller.ProductController.remove(java.lang.Long[])
2019-06-04 17:49:20 -Mapped "{[/xjbg/product/update]}" onto public com.bootdo.common.utils.R com.bootdo.xjbg.controller.ProductController.update(com.bootdo.xjbg.domain.ProductDO,org.springframework.web.multipart.MultipartFile[])
2019-06-04 17:49:20 -Mapped "{[/xjbg/product/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.xjbg.controller.ProductController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-04 17:49:20 -Mapped "{[/xjbg/product/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.xjbg.controller.ProductController.save(com.bootdo.xjbg.domain.ProductDO,org.springframework.web.multipart.MultipartFile[])
2019-06-04 17:49:20 -Mapped "{[/xjbg/product/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.xjbg.controller.ProductController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-04 17:49:20 -Mapped "{[/xjbg/product],methods=[GET]}" onto java.lang.String com.bootdo.xjbg.controller.ProductController.Product()
2019-06-04 17:49:20 -Mapped "{[/xjbg/room/add],methods=[GET]}" onto java.lang.String com.bootdo.xjbg.controller.RoomController.add(org.springframework.ui.Model)
2019-06-04 17:49:20 -Mapped "{[/xjbg/room/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.xjbg.controller.RoomController.remove(java.lang.Integer[])
2019-06-04 17:49:20 -Mapped "{[/xjbg/room/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.xjbg.controller.RoomController.remove(java.lang.Integer)
2019-06-04 17:49:20 -Mapped "{[/xjbg/room/update]}" onto public com.bootdo.common.utils.R com.bootdo.xjbg.controller.RoomController.update(com.bootdo.xjbg.domain.RoomDO)
2019-06-04 17:49:20 -Mapped "{[/xjbg/room/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.xjbg.controller.RoomController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-04 17:49:20 -Mapped "{[/xjbg/room/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.xjbg.controller.RoomController.save(com.bootdo.xjbg.domain.RoomDO)
2019-06-04 17:49:20 -Mapped "{[/xjbg/room/operation/{roomId}],methods=[GET]}" onto java.lang.String com.bootdo.xjbg.controller.RoomController.operation(java.lang.Integer,org.springframework.ui.Model)
2019-06-04 17:49:20 -Mapped "{[/xjbg/room/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.xjbg.controller.RoomController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-06-04 17:49:20 -Mapped "{[/xjbg/room/roomMng],methods=[GET]}" onto java.lang.String com.bootdo.xjbg.controller.RoomController.roomMng(org.springframework.ui.Model)
2019-06-04 17:49:20 -Mapped "{[/xjbg/room],methods=[GET]}" onto java.lang.String com.bootdo.xjbg.controller.RoomController.Room(org.springframework.ui.Model)
2019-06-04 17:49:20 -Mapped "{[/xjbg/room/kaifan],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.xjbg.controller.RoomController.kaifan(com.bootdo.xjbg.domain.OrderDO,java.util.List<com.bootdo.xjbg.domain.OrderItemDO>)
2019-06-04 17:49:20 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-06-04 17:49:20 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-06-04 17:49:20 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-06-04 17:49:20 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-06-04 17:49:20 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-06-04 17:49:20 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-06-04 17:49:20 -Initializing ExecutorService  'brokerChannelExecutor'
2019-06-04 17:49:20 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-06-04 17:49:20 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@431865a1: startup date [Tue Jun 04 17:49:16 CST 2019]; root of context hierarchy
2019-06-04 17:49:20 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-06-04 17:49:20 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-06-04 17:49:20 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-06-04 17:49:20 -Mapped URL path [/productPic/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-06-04 17:49:20 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-06-04 17:49:20 -[THYMELEAF][restartedMain] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-06-04 17:49:21 -LiveReload server is running on port 35729
2019-06-04 17:49:21 -Registering beans for JMX exposure on startup
2019-06-04 17:49:21 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-06-04 17:49:21 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-06-04 17:49:21 -Starting beans in phase 2147483647
2019-06-04 17:49:21 -Context refreshed
2019-06-04 17:49:21 -Found 1 custom documentation plugin(s)
2019-06-04 17:49:21 -Scanning for api listing references
2019-06-04 17:49:21 -Generating unique operation named: removeUsingPOST_1
2019-06-04 17:49:21 -Generating unique operation named: addUsingGET_1
2019-06-04 17:49:21 -Generating unique operation named: editUsingGET_1
2019-06-04 17:49:21 -Generating unique operation named: listUsingGET_1
2019-06-04 17:49:21 -Generating unique operation named: removeUsingPOST_2
2019-06-04 17:49:21 -Generating unique operation named: removeUsingPOST_3
2019-06-04 17:49:21 -Generating unique operation named: saveUsingPOST_1
2019-06-04 17:49:21 -Generating unique operation named: updateUsingGET_1
2019-06-04 17:49:21 -Generating unique operation named: updateUsingHEAD_1
2019-06-04 17:49:21 -Generating unique operation named: updateUsingPOST_1
2019-06-04 17:49:21 -Generating unique operation named: updateUsingPUT_1
2019-06-04 17:49:21 -Generating unique operation named: updateUsingPATCH_1
2019-06-04 17:49:21 -Generating unique operation named: updateUsingDELETE_1
2019-06-04 17:49:21 -Generating unique operation named: updateUsingOPTIONS_1
2019-06-04 17:49:21 -Generating unique operation named: updateUsingTRACE_1
2019-06-04 17:49:21 -Generating unique operation named: addUsingGET_2
2019-06-04 17:49:21 -Generating unique operation named: editUsingGET_2
2019-06-04 17:49:21 -Generating unique operation named: listUsingGET_2
2019-06-04 17:49:21 -Generating unique operation named: removeUsingPOST_4
2019-06-04 17:49:21 -Generating unique operation named: removeUsingPOST_5
2019-06-04 17:49:21 -Generating unique operation named: saveUsingPOST_2
2019-06-04 17:49:21 -Generating unique operation named: updateUsingGET_2
2019-06-04 17:49:21 -Generating unique operation named: updateUsingHEAD_2
2019-06-04 17:49:21 -Generating unique operation named: updateUsingPOST_2
2019-06-04 17:49:21 -Generating unique operation named: updateUsingPUT_2
2019-06-04 17:49:21 -Generating unique operation named: updateUsingPATCH_2
2019-06-04 17:49:21 -Generating unique operation named: updateUsingDELETE_2
2019-06-04 17:49:21 -Generating unique operation named: updateUsingOPTIONS_2
2019-06-04 17:49:21 -Generating unique operation named: updateUsingTRACE_2
2019-06-04 17:49:21 -Generating unique operation named: addUsingGET_3
2019-06-04 17:49:21 -Generating unique operation named: editUsingGET_3
2019-06-04 17:49:21 -Generating unique operation named: listUsingGET_3
2019-06-04 17:49:21 -Generating unique operation named: removeUsingPOST_6
2019-06-04 17:49:21 -Generating unique operation named: removeUsingPOST_7
2019-06-04 17:49:21 -Generating unique operation named: saveUsingPOST_3
2019-06-04 17:49:21 -Generating unique operation named: updateUsingGET_3
2019-06-04 17:49:21 -Generating unique operation named: updateUsingHEAD_3
2019-06-04 17:49:21 -Generating unique operation named: updateUsingPOST_3
2019-06-04 17:49:21 -Generating unique operation named: updateUsingPUT_3
2019-06-04 17:49:21 -Generating unique operation named: updateUsingPATCH_3
2019-06-04 17:49:21 -Generating unique operation named: updateUsingDELETE_3
2019-06-04 17:49:21 -Generating unique operation named: updateUsingOPTIONS_3
2019-06-04 17:49:21 -Generating unique operation named: updateUsingTRACE_3
2019-06-04 17:49:21 -Generating unique operation named: editUsingGET_4
2019-06-04 17:49:21 -Generating unique operation named: listUsingGET_4
2019-06-04 17:49:21 -Generating unique operation named: updateUsingPOST_4
2019-06-04 17:49:21 -Generating unique operation named: addUsingGET_4
2019-06-04 17:49:21 -Generating unique operation named: editUsingGET_5
2019-06-04 17:49:21 -Generating unique operation named: infoUsingGET_1
2019-06-04 17:49:21 -Generating unique operation named: infoUsingHEAD_1
2019-06-04 17:49:21 -Generating unique operation named: infoUsingPOST_1
2019-06-04 17:49:21 -Generating unique operation named: infoUsingPUT_1
2019-06-04 17:49:21 -Generating unique operation named: infoUsingPATCH_1
2019-06-04 17:49:21 -Generating unique operation named: infoUsingDELETE_1
2019-06-04 17:49:21 -Generating unique operation named: infoUsingOPTIONS_1
2019-06-04 17:49:21 -Generating unique operation named: infoUsingTRACE_1
2019-06-04 17:49:21 -Generating unique operation named: listUsingGET_5
2019-06-04 17:49:21 -Generating unique operation named: removeUsingPOST_8
2019-06-04 17:49:21 -Generating unique operation named: removeUsingPOST_9
2019-06-04 17:49:21 -Generating unique operation named: saveUsingPOST_4
2019-06-04 17:49:22 -Generating unique operation named: updateUsingPOST_5
2019-06-04 17:49:22 -Generating unique operation named: listUsingGET_6
2019-06-04 17:49:22 -Generating unique operation named: removeUsingPOST_10
2019-06-04 17:49:22 -Generating unique operation named: welcomeUsingGET_1
2019-06-04 17:49:22 -Generating unique operation named: addUsingGET_5
2019-06-04 17:49:22 -Generating unique operation named: editUsingGET_6
2019-06-04 17:49:22 -Generating unique operation named: listUsingGET_7
2019-06-04 17:49:22 -Generating unique operation named: removeUsingPOST_11
2019-06-04 17:49:22 -Generating unique operation named: saveUsingPOST_5
2019-06-04 17:49:22 -Generating unique operation named: treeUsingGET_1
2019-06-04 17:49:22 -Generating unique operation named: treeUsingGET_2
2019-06-04 17:49:22 -Generating unique operation named: updateUsingPOST_6
2019-06-04 17:49:22 -Generating unique operation named: batchRemoveUsingPOST_1
2019-06-04 17:49:22 -Generating unique operation named: editUsingGET_7
2019-06-04 17:49:22 -Generating unique operation named: listUsingGET_8
2019-06-04 17:49:22 -Generating unique operation named: addUsingGET_6
2019-06-04 17:49:22 -Generating unique operation named: editUsingGET_8
2019-06-04 17:49:22 -Generating unique operation named: listUsingGET_9
2019-06-04 17:49:22 -Generating unique operation named: removeUsingPOST_12
2019-06-04 17:49:22 -Generating unique operation named: removeUsingPOST_13
2019-06-04 17:49:22 -Generating unique operation named: saveUsingPOST_6
2019-06-04 17:49:22 -Generating unique operation named: updateUsingGET_4
2019-06-04 17:49:22 -Generating unique operation named: updateUsingHEAD_4
2019-06-04 17:49:22 -Generating unique operation named: updateUsingPOST_7
2019-06-04 17:49:22 -Generating unique operation named: updateUsingPUT_4
2019-06-04 17:49:22 -Generating unique operation named: updateUsingPATCH_4
2019-06-04 17:49:22 -Generating unique operation named: updateUsingDELETE_4
2019-06-04 17:49:22 -Generating unique operation named: updateUsingOPTIONS_4
2019-06-04 17:49:22 -Generating unique operation named: updateUsingTRACE_4
2019-06-04 17:49:22 -Generating unique operation named: addUsingGET_7
2019-06-04 17:49:22 -Generating unique operation named: editUsingGET_9
2019-06-04 17:49:22 -Generating unique operation named: listUsingGET_10
2019-06-04 17:49:22 -Generating unique operation named: removeUsingPOST_14
2019-06-04 17:49:22 -Generating unique operation named: removeUsingPOST_15
2019-06-04 17:49:22 -Generating unique operation named: saveUsingPOST_7
2019-06-04 17:49:22 -Generating unique operation named: updateUsingGET_5
2019-06-04 17:49:22 -Generating unique operation named: updateUsingHEAD_5
2019-06-04 17:49:22 -Generating unique operation named: updateUsingPOST_8
2019-06-04 17:49:22 -Generating unique operation named: updateUsingPUT_5
2019-06-04 17:49:22 -Generating unique operation named: updateUsingPATCH_5
2019-06-04 17:49:22 -Generating unique operation named: updateUsingDELETE_5
2019-06-04 17:49:22 -Generating unique operation named: updateUsingOPTIONS_5
2019-06-04 17:49:22 -Generating unique operation named: updateUsingTRACE_5
2019-06-04 17:49:22 -Generating unique operation named: addUsingGET_8
2019-06-04 17:49:22 -Generating unique operation named: editUsingGET_10
2019-06-04 17:49:22 -Generating unique operation named: listUsingGET_11
2019-06-04 17:49:22 -Generating unique operation named: removeUsingPOST_16
2019-06-04 17:49:22 -Generating unique operation named: removeUsingPOST_17
2019-06-04 17:49:22 -Generating unique operation named: saveUsingPOST_8
2019-06-04 17:49:22 -Generating unique operation named: updateUsingGET_6
2019-06-04 17:49:22 -Generating unique operation named: updateUsingHEAD_6
2019-06-04 17:49:22 -Generating unique operation named: updateUsingPOST_9
2019-06-04 17:49:22 -Generating unique operation named: updateUsingPUT_6
2019-06-04 17:49:22 -Generating unique operation named: updateUsingPATCH_6
2019-06-04 17:49:22 -Generating unique operation named: updateUsingDELETE_6
2019-06-04 17:49:22 -Generating unique operation named: updateUsingOPTIONS_6
2019-06-04 17:49:22 -Generating unique operation named: updateUsingTRACE_6
2019-06-04 17:49:22 -Generating unique operation named: addUsingGET_9
2019-06-04 17:49:22 -Generating unique operation named: batchRemoveUsingPOST_2
2019-06-04 17:49:22 -Generating unique operation named: deployUsingPOST_1
2019-06-04 17:49:22 -Generating unique operation named: listUsingGET_12
2019-06-04 17:49:22 -Generating unique operation named: removeUsingPOST_18
2019-06-04 17:49:22 -Generating unique operation named: addUsingGET_10
2019-06-04 17:49:22 -Generating unique operation named: editUsingGET_11
2019-06-04 17:49:22 -Generating unique operation named: listUsingGET_13
2019-06-04 17:49:22 -Generating unique operation named: removeUsingPOST_19
2019-06-04 17:49:22 -Generating unique operation named: removeUsingPOST_20
2019-06-04 17:49:22 -Trying to infer dataType org.springframework.web.multipart.MultipartFile[]
2019-06-04 17:49:22 -Generating unique operation named: saveUsingPOST_9
2019-06-04 17:49:22 -Trying to infer dataType org.springframework.web.multipart.MultipartFile[]
2019-06-04 17:49:22 -Generating unique operation named: updateUsingGET_7
2019-06-04 17:49:22 -Trying to infer dataType org.springframework.web.multipart.MultipartFile[]
2019-06-04 17:49:22 -Generating unique operation named: updateUsingHEAD_7
2019-06-04 17:49:22 -Trying to infer dataType org.springframework.web.multipart.MultipartFile[]
2019-06-04 17:49:22 -Generating unique operation named: updateUsingPOST_10
2019-06-04 17:49:22 -Trying to infer dataType org.springframework.web.multipart.MultipartFile[]
2019-06-04 17:49:22 -Generating unique operation named: updateUsingPUT_7
2019-06-04 17:49:22 -Trying to infer dataType org.springframework.web.multipart.MultipartFile[]
2019-06-04 17:49:22 -Generating unique operation named: updateUsingPATCH_7
2019-06-04 17:49:22 -Trying to infer dataType org.springframework.web.multipart.MultipartFile[]
2019-06-04 17:49:22 -Generating unique operation named: updateUsingDELETE_7
2019-06-04 17:49:22 -Trying to infer dataType org.springframework.web.multipart.MultipartFile[]
2019-06-04 17:49:22 -Generating unique operation named: updateUsingOPTIONS_7
2019-06-04 17:49:22 -Trying to infer dataType org.springframework.web.multipart.MultipartFile[]
2019-06-04 17:49:22 -Generating unique operation named: updateUsingTRACE_7
2019-06-04 17:49:22 -Generating unique operation named: addUsingGET_11
2019-06-04 17:49:22 -Generating unique operation named: batchRemoveUsingPOST_3
2019-06-04 17:49:22 -Generating unique operation named: editUsingGET_12
2019-06-04 17:49:22 -Generating unique operation named: listUsingGET_14
2019-06-04 17:49:22 -Generating unique operation named: saveUsingPOST_10
2019-06-04 17:49:22 -Generating unique operation named: saveUsingPOST_11
2019-06-04 17:49:22 -Generating unique operation named: updateUsingPOST_11
2019-06-04 17:49:22 -Generating unique operation named: addUsingGET_12
2019-06-04 17:49:22 -Generating unique operation named: editUsingGET_13
2019-06-04 17:49:22 -Generating unique operation named: listUsingGET_15
2019-06-04 17:49:22 -Generating unique operation named: removeUsingPOST_21
2019-06-04 17:49:22 -Generating unique operation named: removeUsingPOST_22
2019-06-04 17:49:22 -Generating unique operation named: saveUsingPOST_12
2019-06-04 17:49:22 -Generating unique operation named: updateUsingGET_8
2019-06-04 17:49:22 -Generating unique operation named: updateUsingHEAD_8
2019-06-04 17:49:22 -Generating unique operation named: updateUsingPOST_12
2019-06-04 17:49:22 -Generating unique operation named: updateUsingPUT_8
2019-06-04 17:49:22 -Generating unique operation named: updateUsingPATCH_8
2019-06-04 17:49:22 -Generating unique operation named: updateUsingDELETE_8
2019-06-04 17:49:22 -Generating unique operation named: updateUsingOPTIONS_8
2019-06-04 17:49:22 -Generating unique operation named: updateUsingTRACE_8
2019-06-04 17:49:22 -Generating unique operation named: addUsingGET_13
2019-06-04 17:49:22 -Generating unique operation named: editUsingGET_14
2019-06-04 17:49:22 -Generating unique operation named: listUsingGET_16
2019-06-04 17:49:22 -Generating unique operation named: removeUsingPOST_23
2019-06-04 17:49:22 -Generating unique operation named: removeUsingPOST_24
2019-06-04 17:49:22 -Generating unique operation named: updateUsingGET_9
2019-06-04 17:49:22 -Generating unique operation named: updateUsingHEAD_9
2019-06-04 17:49:22 -Generating unique operation named: updateUsingPOST_13
2019-06-04 17:49:22 -Generating unique operation named: updateUsingPUT_9
2019-06-04 17:49:22 -Generating unique operation named: updateUsingPATCH_9
2019-06-04 17:49:22 -Generating unique operation named: updateUsingDELETE_9
2019-06-04 17:49:22 -Generating unique operation named: updateUsingOPTIONS_9
2019-06-04 17:49:22 -Generating unique operation named: updateUsingTRACE_9
2019-06-04 17:49:22 -Generating unique operation named: listUsingGET_17
2019-06-04 17:49:22 -Generating unique operation named: listUsingHEAD_1
2019-06-04 17:49:22 -Generating unique operation named: listUsingPOST_1
2019-06-04 17:49:22 -Generating unique operation named: listUsingPUT_1
2019-06-04 17:49:22 -Generating unique operation named: listUsingPATCH_1
2019-06-04 17:49:22 -Generating unique operation named: listUsingDELETE_1
2019-06-04 17:49:22 -Generating unique operation named: listUsingOPTIONS_1
2019-06-04 17:49:22 -Generating unique operation named: listUsingTRACE_1
2019-06-04 17:49:22 -Generating unique operation named: listUsingGET_18
2019-06-04 17:49:22 -Generating unique operation named: addUsingGET_14
2019-06-04 17:49:22 -Generating unique operation named: batchRemoveUsingPOST_4
2019-06-04 17:49:22 -Generating unique operation named: editUsingGET_15
2019-06-04 17:49:22 -Generating unique operation named: listUsingGET_19
2019-06-04 17:49:22 -Generating unique operation named: removeUsingPOST_25
2019-06-04 17:49:22 -Generating unique operation named: saveUsingPOST_13
2019-06-04 17:49:22 -Generating unique operation named: treeUsingGET_3
2019-06-04 17:49:22 -Generating unique operation named: treeViewUsingGET_1
2019-06-04 17:49:22 -Generating unique operation named: updateUsingPOST_14
2019-06-04 17:49:22 -Generating unique operation named: addUsingGET_15
2019-06-04 17:49:22 -Generating unique operation named: editUsingGET_16
2019-06-04 17:49:22 -Generating unique operation named: listUsingGET_20
2019-06-04 17:49:22 -Generating unique operation named: removeUsingPOST_26
2019-06-04 17:49:22 -Generating unique operation named: removeUsingPOST_27
2019-06-04 17:49:22 -Generating unique operation named: saveUsingPOST_14
2019-06-04 17:49:22 -Generating unique operation named: updateUsingGET_10
2019-06-04 17:49:22 -Generating unique operation named: updateUsingHEAD_10
2019-06-04 17:49:22 -Generating unique operation named: updateUsingPOST_15
2019-06-04 17:49:22 -Generating unique operation named: updateUsingPUT_10
2019-06-04 17:49:22 -Generating unique operation named: updateUsingPATCH_10
2019-06-04 17:49:22 -Generating unique operation named: updateUsingDELETE_10
2019-06-04 17:49:22 -Generating unique operation named: updateUsingOPTIONS_10
2019-06-04 17:49:22 -Generating unique operation named: updateUsingTRACE_10
2019-06-04 17:49:22 -Starting Quartz Scheduler now
2019-06-04 17:49:22 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-06-04 17:49:22 -Starting...
2019-06-04 17:49:22 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-06-04 17:49:22 -Started.
2019-06-04 17:49:22 -Starting ProtocolHandler ["http-nio-8888"]
2019-06-04 17:49:22 -Using a shared selector for servlet write/read
2019-06-04 17:49:22 -Tomcat started on port(s): 8888 (http) with context path ''
2019-06-04 17:49:22 -Started BootdoApplication in 6.254 seconds (JVM running for 139.765)
2019-06-04 17:49:22 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-06-04 17:49:22 -==> Parameters: 
2019-06-04 17:49:22 -<==      Total: 1
2019-06-04 17:49:22 -Condition evaluation unchanged
2019-06-04 17:49:26 -Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@431865a1: startup date [Tue Jun 04 17:49:16 CST 2019]; root of context hierarchy
2019-06-04 17:49:26 -Stopping beans in phase 2147483647
2019-06-04 17:49:26 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED paused.
2019-06-04 17:49:26 -Stopping...
2019-06-04 17:49:26 -BrokerAvailabilityEvent[available=false, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-06-04 17:49:26 -Stopped.
2019-06-04 17:49:26 -Unregistering JMX-exposed beans on shutdown
2019-06-04 17:49:26 -Unregistering JMX-exposed beans
2019-06-04 17:49:26 -Shutting down ExecutorService 'brokerChannelExecutor'
2019-06-04 17:49:26 -Shutting down ExecutorService 'messageBrokerTaskScheduler'
2019-06-04 17:49:26 -Shutting down ExecutorService 'clientOutboundChannelExecutor'
2019-06-04 17:49:26 -Shutting down ExecutorService 'clientInboundChannelExecutor'
2019-06-04 17:49:26 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED shutting down.
2019-06-04 17:49:26 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED paused.
2019-06-04 17:49:26 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED shutdown complete.
2019-06-04 17:49:26 -Shutting down Quartz Scheduler
2019-06-04 17:49:26 -{dataSource-3} closed
2019-06-04 17:49:27 -Starting BootdoApplication on LAPTOP-ELP5M68R with PID 4252 (D:\workspace\bootdo\bootdo\target\classes started by Lenovo in D:\workspace\bootdo\bootdo)
2019-06-04 17:49:27 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-06-04 17:49:27 -The following profiles are active: dev
2019-06-04 17:49:27 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1a8e8a97: startup date [Tue Jun 04 17:49:27 CST 2019]; root of context hierarchy
2019-06-04 17:49:28 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-06-04 17:49:28 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$e540caba] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-04 17:49:28 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$d799f961] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-04 17:49:28 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-04 17:49:28 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-04 17:49:28 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-04 17:49:28 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache.3' does not yet exist.  Creating now.
2019-06-04 17:49:28 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache.3]
2019-06-04 17:49:28 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-04 17:49:28 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-04 17:49:28 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-04 17:49:28 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-04 17:49:28 -Tomcat initialized with port(s): 8888 (http)
2019-06-04 17:49:28 -Initializing ProtocolHandler ["http-nio-8888"]
2019-06-04 17:49:28 -Starting service [Tomcat]
2019-06-04 17:49:28 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-06-04 17:49:28 -Initializing Spring embedded WebApplicationContext
2019-06-04 17:49:28 -Root WebApplicationContext: initialization completed in 1363 ms
2019-06-04 17:49:28 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-06-04 17:49:28 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-06-04 17:49:28 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-06-04 17:49:28 -Mapping filter: 'requestContextFilter' to: [/*]
2019-06-04 17:49:28 -Filter xssFilter was not registered (disabled)
2019-06-04 17:49:28 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-06-04 17:49:28 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-06-04 17:49:28 -Servlet statViewServlet mapped to [/druid/*]
2019-06-04 17:49:28 -Servlet dispatcherServlet mapped to [/]
2019-06-04 17:49:28 -{dataSource-4} inited
2019-06-04 17:49:29 -ProcessEngine default created
2019-06-04 17:49:29 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1a8e8a97: startup date [Tue Jun 04 17:49:27 CST 2019]; root of context hierarchy
2019-06-04 17:49:29 -Using default implementation for ThreadExecutor
2019-06-04 17:49:29 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-06-04 17:49:29 -Quartz Scheduler v.2.2.1 created.
2019-06-04 17:49:29 -RAMJobStore initialized.
2019-06-04 17:49:29 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-06-04 17:49:29 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-06-04 17:49:29 -Quartz scheduler version: 2.2.1
2019-06-04 17:49:29 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@101cd545
2019-06-04 17:49:29 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-06-04 17:49:29 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-06-04 17:49:30 -Mapped "{[/activiti/model/{id}],methods=[DELETE]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.ModelController.remove(java.lang.String)
2019-06-04 17:49:30 -Mapped "{[/activiti/model/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.activiti.controller.ModelController.list(int,int)
2019-06-04 17:49:30 -Mapped "{[/activiti/model/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.ModelController.batchRemove(java.lang.String[])
2019-06-04 17:49:30 -Mapped "{[/activiti/model],methods=[GET]}" onto org.springframework.web.servlet.ModelAndView com.bootdo.activiti.controller.ModelController.model()
2019-06-04 17:49:30 -Mapped "{[/activiti/model/add]}" onto public void com.bootdo.activiti.controller.ModelController.newModel(javax.servlet.http.HttpServletResponse) throws java.io.UnsupportedEncodingException
2019-06-04 17:49:30 -Mapped "{[/activiti/model/{modelId}/save],methods=[PUT]}" onto public void com.bootdo.activiti.controller.ModelController.saveModel(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2019-06-04 17:49:30 -Mapped "{[/activiti/model/deploy/{id}],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.ModelController.deploy(java.lang.String) throws java.lang.Exception
2019-06-04 17:49:30 -Mapped "{[/activiti/model/{modelId}/json],methods=[GET]}" onto public com.fasterxml.jackson.databind.node.ObjectNode com.bootdo.activiti.controller.ModelController.getEditorJson(java.lang.String)
2019-06-04 17:49:30 -Mapped "{[/activiti/editor/stencilset],methods=[GET],produces=[application/json;charset=utf-8]}" onto public java.lang.String com.bootdo.activiti.controller.ModelController.getStencilset()
2019-06-04 17:49:30 -Mapped "{[/activiti/model/export/{id}],methods=[GET]}" onto public void com.bootdo.activiti.controller.ModelController.exportToXml(java.lang.String,javax.servlet.http.HttpServletResponse)
2019-06-04 17:49:30 -Mapped "{[/activiti/model/edit/{id}],methods=[GET]}" onto public void com.bootdo.activiti.controller.ModelController.edit(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-06-04 17:49:30 -Mapped "{[/activiti/process/add],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.activiti.controller.ProcessController.add()
2019-06-04 17:49:30 -Mapped "{[/activiti/process/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.ProcessController.remove(java.lang.String)
2019-06-04 17:49:30 -Mapped "{[/activiti/process/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.activiti.controller.ProcessController.list(int,int)
2019-06-04 17:49:30 -Mapped "{[/activiti/process/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.ProcessController.batchRemove(java.lang.String[])
2019-06-04 17:49:30 -Mapped "{[/activiti/process],methods=[GET]}" onto org.springframework.web.servlet.ModelAndView com.bootdo.activiti.controller.ProcessController.process()
2019-06-04 17:49:30 -Mapped "{[/activiti/process/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.ProcessController.deploy(java.lang.String,java.lang.String,org.springframework.web.multipart.MultipartFile)
2019-06-04 17:49:30 -Mapped "{[/activiti/process/convertToModel/{procDefId}]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.ProcessController.convertToModel(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes) throws java.io.UnsupportedEncodingException,javax.xml.stream.XMLStreamException
2019-06-04 17:49:30 -Mapped "{[/activiti/process/resource/read/{xml}/{id}]}" onto public void com.bootdo.activiti.controller.ProcessController.resourceRead(java.lang.String,java.lang.String,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-06-04 17:49:30 -Mapped "{[/act/salary/form],methods=[GET]}" onto java.lang.String com.bootdo.activiti.controller.SalaryController.add()
2019-06-04 17:49:30 -Mapped "{[/act/salary/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.SalaryController.remove(java.lang.String)
2019-06-04 17:49:30 -Mapped "{[/act/salary/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.SalaryController.remove(java.lang.String[])
2019-06-04 17:49:30 -Mapped "{[/act/salary/update]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.SalaryController.update(com.bootdo.activiti.domain.SalaryDO)
2019-06-04 17:49:30 -Mapped "{[/act/salary/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.activiti.controller.SalaryController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-04 17:49:30 -Mapped "{[/act/salary/form/{taskId}],methods=[GET]}" onto java.lang.String com.bootdo.activiti.controller.SalaryController.edit(java.lang.String,org.springframework.ui.Model)
2019-06-04 17:49:30 -Mapped "{[/act/salary/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.SalaryController.saveOrUpdate(com.bootdo.activiti.domain.SalaryDO)
2019-06-04 17:49:30 -Mapped "{[/act/salary],methods=[GET]}" onto java.lang.String com.bootdo.activiti.controller.SalaryController.Salary()
2019-06-04 17:49:30 -Mapped "{[/activiti/task/form/{procDefId}/{taskId}],methods=[GET]}" onto public void com.bootdo.activiti.controller.TaskController.form(java.lang.String,java.lang.String,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-06-04 17:49:30 -Mapped "{[/activiti/task/gotoList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.activiti.controller.TaskController.list(int,int)
2019-06-04 17:49:30 -Mapped "{[/activiti/task/goto],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.activiti.controller.TaskController.gotoTask()
2019-06-04 17:49:30 -Mapped "{[/activiti/task/form/{procDefId}],methods=[GET]}" onto public void com.bootdo.activiti.controller.TaskController.startForm(java.lang.String,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-06-04 17:49:30 -Mapped "{[/activiti/task/todo],methods=[GET]}" onto org.springframework.web.servlet.ModelAndView com.bootdo.activiti.controller.TaskController.todo()
2019-06-04 17:49:30 -Mapped "{[/activiti/task/todoList],methods=[GET]}" onto java.util.List<com.bootdo.activiti.vo.TaskVO> com.bootdo.activiti.controller.TaskController.todoList()
2019-06-04 17:49:30 -Mapped "{[/activiti/task/trace/photo/{procDefId}/{execId}]}" onto public void com.bootdo.activiti.controller.TaskController.tracePhoto(java.lang.String,java.lang.String,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-06-04 17:49:30 -Mapped "{[/blog/open/post/{cid}],methods=[GET]}" onto java.lang.String com.bootdo.blog.controller.BlogController.post(java.lang.Long,org.springframework.ui.Model)
2019-06-04 17:49:30 -Mapped "{[/blog/open/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.blog.controller.BlogController.opentList(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-04 17:49:30 -Mapped "{[/blog],methods=[GET]}" onto java.lang.String com.bootdo.blog.controller.BlogController.blog()
2019-06-04 17:49:30 -Mapped "{[/blog/open/page/{categories}],methods=[GET]}" onto java.lang.String com.bootdo.blog.controller.BlogController.about(java.lang.String,org.springframework.ui.Model)
2019-06-04 17:49:30 -Mapped "{[/blog/bContent/add],methods=[GET]}" onto java.lang.String com.bootdo.blog.controller.ContentController.add()
2019-06-04 17:49:30 -Mapped "{[/blog/bContent/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.blog.controller.ContentController.remove(java.lang.Long)
2019-06-04 17:49:30 -Mapped "{[/blog/bContent/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.blog.controller.ContentController.remove(java.lang.Long[])
2019-06-04 17:49:30 -Mapped "{[/blog/bContent/update]}" onto public com.bootdo.common.utils.R com.bootdo.blog.controller.ContentController.update(com.bootdo.blog.domain.ContentDO)
2019-06-04 17:49:30 -Mapped "{[/blog/bContent/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.blog.controller.ContentController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-04 17:49:30 -Mapped "{[/blog/bContent/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.blog.controller.ContentController.save(com.bootdo.blog.domain.ContentDO)
2019-06-04 17:49:30 -Mapped "{[/blog/bContent],methods=[GET]}" onto java.lang.String com.bootdo.blog.controller.ContentController.bContent()
2019-06-04 17:49:30 -Mapped "{[/blog/bContent/edit/{cid}],methods=[GET]}" onto java.lang.String com.bootdo.blog.controller.ContentController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-04 17:49:30 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-06-04 17:49:30 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-06-04 17:49:30 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-06-04 17:49:30 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-06-04 17:49:30 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-04 17:49:30 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-06-04 17:49:30 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-06-04 17:49:30 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-06-04 17:49:30 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-06-04 17:49:30 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-06-04 17:49:30 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-04 17:49:30 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-06-04 17:49:30 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-06-04 17:49:30 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-06-04 17:49:30 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-06-04 17:49:30 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-04 17:49:30 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-06-04 17:49:30 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-06-04 17:49:30 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-06-04 17:49:30 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-06-04 17:49:30 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-04 17:49:30 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-04 17:49:30 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-06-04 17:49:30 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-06-04 17:49:30 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-06-04 17:49:30 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-06-04 17:49:30 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-06-04 17:49:30 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-06-04 17:49:30 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-06-04 17:49:30 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-06-04 17:49:30 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-06-04 17:49:30 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-04 17:49:30 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-06-04 17:49:30 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-06-04 17:49:30 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-06-04 17:49:30 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-06-04 17:49:30 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-04 17:49:30 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-06-04 17:49:30 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-06-04 17:49:30 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-04 17:49:30 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-06-04 17:49:30 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-06-04 17:49:30 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-06-04 17:49:30 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-06-04 17:49:30 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-06-04 17:49:30 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-06-04 17:49:30 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-06-04 17:49:30 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-06-04 17:49:30 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-04 17:49:30 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-06-04 17:49:30 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-06-04 17:49:30 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-04 17:49:30 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-06-04 17:49:30 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-06-04 17:49:30 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-04 17:49:30 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-06-04 17:49:30 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-06-04 17:49:30 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-06-04 17:49:30 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-06-04 17:49:30 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-06-04 17:49:30 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-06-04 17:49:30 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-06-04 17:49:30 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-04 17:49:30 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-06-04 17:49:30 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-06-04 17:49:30 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-06-04 17:49:30 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-06-04 17:49:30 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-06-04 17:49:30 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-06-04 17:49:30 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String)
2019-06-04 17:49:30 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-06-04 17:49:30 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-06-04 17:49:30 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-06-04 17:49:30 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-06-04 17:49:30 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-04 17:49:30 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-06-04 17:49:30 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-06-04 17:49:30 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-06-04 17:49:30 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-06-04 17:49:30 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-06-04 17:49:30 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-06-04 17:49:30 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-06-04 17:49:30 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-06-04 17:49:30 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-06-04 17:49:30 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-06-04 17:49:30 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-06-04 17:49:30 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-06-04 17:49:30 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-04 17:49:30 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-06-04 17:49:30 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-06-04 17:49:30 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-06-04 17:49:30 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-06-04 17:49:30 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-04 17:49:30 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-06-04 17:49:30 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-06-04 17:49:30 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-06-04 17:49:30 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-04 17:49:30 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-06-04 17:49:30 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-06-04 17:49:30 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-06-04 17:49:30 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-06-04 17:49:30 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-06-04 17:49:30 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-06-04 17:49:30 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-06-04 17:49:30 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-06-04 17:49:30 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-06-04 17:49:30 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-06-04 17:49:30 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-06-04 17:49:30 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-06-04 17:49:30 -Mapped "{[/wxServer],methods=[GET]}" onto public void org.weixin4j.spring.web.WeixinJieruController.get(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-06-04 17:49:30 -Mapped "{[/wxServer],methods=[POST]}" onto public void org.weixin4j.spring.web.WeixinJieruController.post(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-06-04 17:49:30 -Mapped "{[/weixin/weixinUser/add],methods=[GET]}" onto java.lang.String com.bootdo.weixin.controller.WeixinUserController.add()
2019-06-04 17:49:30 -Mapped "{[/weixin/weixinUser/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.weixin.controller.WeixinUserController.remove(java.lang.Long)
2019-06-04 17:49:30 -Mapped "{[/weixin/weixinUser/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.weixin.controller.WeixinUserController.remove(java.lang.Long[])
2019-06-04 17:49:30 -Mapped "{[/weixin/weixinUser/update]}" onto public com.bootdo.common.utils.R com.bootdo.weixin.controller.WeixinUserController.update(com.bootdo.weixin.domain.WeixinUserDO)
2019-06-04 17:49:30 -Mapped "{[/weixin/weixinUser/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.weixin.controller.WeixinUserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-04 17:49:30 -Mapped "{[/weixin/weixinUser/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.weixin.controller.WeixinUserController.save(com.bootdo.weixin.domain.WeixinUserDO)
2019-06-04 17:49:30 -Mapped "{[/weixin/weixinUser/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.weixin.controller.WeixinUserController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-04 17:49:30 -Mapped "{[/weixin/weixinUser],methods=[GET]}" onto java.lang.String com.bootdo.weixin.controller.WeixinUserController.WeixinUser()
2019-06-04 17:49:30 -Mapped "{[/xjbg/order/add],methods=[GET]}" onto java.lang.String com.bootdo.xjbg.controller.OrderController.add()
2019-06-04 17:49:30 -Mapped "{[/xjbg/order/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.xjbg.controller.OrderController.remove(java.lang.Long)
2019-06-04 17:49:30 -Mapped "{[/xjbg/order/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.xjbg.controller.OrderController.remove(java.lang.Long[])
2019-06-04 17:49:30 -Mapped "{[/xjbg/order/update]}" onto public com.bootdo.common.utils.R com.bootdo.xjbg.controller.OrderController.update(com.bootdo.xjbg.domain.OrderDO)
2019-06-04 17:49:30 -Mapped "{[/xjbg/order/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.xjbg.controller.OrderController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-04 17:49:30 -Mapped "{[/xjbg/order/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.xjbg.controller.OrderController.save(com.bootdo.xjbg.domain.OrderDO)
2019-06-04 17:49:30 -Mapped "{[/xjbg/order/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.xjbg.controller.OrderController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-04 17:49:30 -Mapped "{[/xjbg/order],methods=[GET]}" onto java.lang.String com.bootdo.xjbg.controller.OrderController.Order()
2019-06-04 17:49:30 -Mapped "{[/xjbg/orderItem/add],methods=[GET]}" onto java.lang.String com.bootdo.xjbg.controller.OrderItemController.add()
2019-06-04 17:49:30 -Mapped "{[/xjbg/orderItem/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.xjbg.controller.OrderItemController.remove(java.lang.Long)
2019-06-04 17:49:30 -Mapped "{[/xjbg/orderItem/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.xjbg.controller.OrderItemController.remove(java.lang.Long[])
2019-06-04 17:49:30 -Mapped "{[/xjbg/orderItem/update]}" onto public com.bootdo.common.utils.R com.bootdo.xjbg.controller.OrderItemController.update(com.bootdo.xjbg.domain.OrderItemDO)
2019-06-04 17:49:30 -Mapped "{[/xjbg/orderItem/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.xjbg.controller.OrderItemController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-04 17:49:30 -Mapped "{[/xjbg/orderItem/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.xjbg.controller.OrderItemController.save(com.bootdo.xjbg.domain.OrderItemDO)
2019-06-04 17:49:30 -Mapped "{[/xjbg/orderItem/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.xjbg.controller.OrderItemController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-04 17:49:30 -Mapped "{[/xjbg/orderItem],methods=[GET]}" onto java.lang.String com.bootdo.xjbg.controller.OrderItemController.OrderItem()
2019-06-04 17:49:30 -Mapped "{[/xjbg/product/add],methods=[GET]}" onto java.lang.String com.bootdo.xjbg.controller.ProductController.add()
2019-06-04 17:49:30 -Mapped "{[/xjbg/product/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.xjbg.controller.ProductController.remove(java.lang.Long)
2019-06-04 17:49:30 -Mapped "{[/xjbg/product/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.xjbg.controller.ProductController.remove(java.lang.Long[])
2019-06-04 17:49:30 -Mapped "{[/xjbg/product/update]}" onto public com.bootdo.common.utils.R com.bootdo.xjbg.controller.ProductController.update(com.bootdo.xjbg.domain.ProductDO,org.springframework.web.multipart.MultipartFile[])
2019-06-04 17:49:30 -Mapped "{[/xjbg/product/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.xjbg.controller.ProductController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-04 17:49:30 -Mapped "{[/xjbg/product/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.xjbg.controller.ProductController.save(com.bootdo.xjbg.domain.ProductDO,org.springframework.web.multipart.MultipartFile[])
2019-06-04 17:49:30 -Mapped "{[/xjbg/product/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.xjbg.controller.ProductController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-04 17:49:30 -Mapped "{[/xjbg/product],methods=[GET]}" onto java.lang.String com.bootdo.xjbg.controller.ProductController.Product()
2019-06-04 17:49:30 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-06-04 17:49:30 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-06-04 17:49:30 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-06-04 17:49:30 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-06-04 17:49:30 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-06-04 17:49:30 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-06-04 17:49:30 -Initializing ExecutorService  'brokerChannelExecutor'
2019-06-04 17:49:30 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-06-04 17:49:30 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1a8e8a97: startup date [Tue Jun 04 17:49:27 CST 2019]; root of context hierarchy
2019-06-04 17:49:30 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-06-04 17:49:30 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-06-04 17:49:30 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-06-04 17:49:30 -Mapped URL path [/productPic/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-06-04 17:49:30 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-06-04 17:49:30 -[THYMELEAF][restartedMain] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-06-04 17:49:31 -LiveReload server is running on port 35729
2019-06-04 17:49:31 -Registering beans for JMX exposure on startup
2019-06-04 17:49:31 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-06-04 17:49:31 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-06-04 17:49:31 -Starting beans in phase 2147483647
2019-06-04 17:49:31 -Context refreshed
2019-06-04 17:49:31 -Found 1 custom documentation plugin(s)
2019-06-04 17:49:31 -Scanning for api listing references
2019-06-04 17:49:31 -Generating unique operation named: removeUsingPOST_1
2019-06-04 17:49:31 -Generating unique operation named: addUsingGET_1
2019-06-04 17:49:31 -Generating unique operation named: editUsingGET_1
2019-06-04 17:49:31 -Generating unique operation named: listUsingGET_1
2019-06-04 17:49:31 -Generating unique operation named: removeUsingPOST_2
2019-06-04 17:49:31 -Generating unique operation named: removeUsingPOST_3
2019-06-04 17:49:31 -Generating unique operation named: saveUsingPOST_1
2019-06-04 17:49:31 -Generating unique operation named: updateUsingGET_1
2019-06-04 17:49:31 -Generating unique operation named: updateUsingHEAD_1
2019-06-04 17:49:31 -Generating unique operation named: updateUsingPOST_1
2019-06-04 17:49:31 -Generating unique operation named: updateUsingPUT_1
2019-06-04 17:49:31 -Generating unique operation named: updateUsingPATCH_1
2019-06-04 17:49:31 -Generating unique operation named: updateUsingDELETE_1
2019-06-04 17:49:31 -Generating unique operation named: updateUsingOPTIONS_1
2019-06-04 17:49:31 -Generating unique operation named: updateUsingTRACE_1
2019-06-04 17:49:31 -Generating unique operation named: addUsingGET_2
2019-06-04 17:49:31 -Generating unique operation named: editUsingGET_2
2019-06-04 17:49:31 -Generating unique operation named: listUsingGET_2
2019-06-04 17:49:31 -Generating unique operation named: removeUsingPOST_4
2019-06-04 17:49:31 -Generating unique operation named: removeUsingPOST_5
2019-06-04 17:49:31 -Generating unique operation named: saveUsingPOST_2
2019-06-04 17:49:31 -Generating unique operation named: updateUsingGET_2
2019-06-04 17:49:31 -Generating unique operation named: updateUsingHEAD_2
2019-06-04 17:49:31 -Generating unique operation named: updateUsingPOST_2
2019-06-04 17:49:31 -Generating unique operation named: updateUsingPUT_2
2019-06-04 17:49:31 -Generating unique operation named: updateUsingPATCH_2
2019-06-04 17:49:31 -Generating unique operation named: updateUsingDELETE_2
2019-06-04 17:49:31 -Generating unique operation named: updateUsingOPTIONS_2
2019-06-04 17:49:31 -Generating unique operation named: updateUsingTRACE_2
2019-06-04 17:49:31 -Generating unique operation named: addUsingGET_3
2019-06-04 17:49:31 -Generating unique operation named: editUsingGET_3
2019-06-04 17:49:31 -Generating unique operation named: listUsingGET_3
2019-06-04 17:49:31 -Generating unique operation named: removeUsingPOST_6
2019-06-04 17:49:31 -Generating unique operation named: removeUsingPOST_7
2019-06-04 17:49:31 -Generating unique operation named: saveUsingPOST_3
2019-06-04 17:49:31 -Generating unique operation named: updateUsingGET_3
2019-06-04 17:49:31 -Generating unique operation named: updateUsingHEAD_3
2019-06-04 17:49:31 -Generating unique operation named: updateUsingPOST_3
2019-06-04 17:49:31 -Generating unique operation named: updateUsingPUT_3
2019-06-04 17:49:31 -Generating unique operation named: updateUsingPATCH_3
2019-06-04 17:49:31 -Generating unique operation named: updateUsingDELETE_3
2019-06-04 17:49:31 -Generating unique operation named: updateUsingOPTIONS_3
2019-06-04 17:49:31 -Generating unique operation named: updateUsingTRACE_3
2019-06-04 17:49:31 -Generating unique operation named: editUsingGET_4
2019-06-04 17:49:31 -Generating unique operation named: listUsingGET_4
2019-06-04 17:49:31 -Generating unique operation named: updateUsingPOST_4
2019-06-04 17:49:31 -Generating unique operation named: addUsingGET_4
2019-06-04 17:49:31 -Generating unique operation named: editUsingGET_5
2019-06-04 17:49:31 -Generating unique operation named: infoUsingGET_1
2019-06-04 17:49:32 -Generating unique operation named: infoUsingHEAD_1
2019-06-04 17:49:32 -Generating unique operation named: infoUsingPOST_1
2019-06-04 17:49:32 -Generating unique operation named: infoUsingPUT_1
2019-06-04 17:49:32 -Generating unique operation named: infoUsingPATCH_1
2019-06-04 17:49:32 -Generating unique operation named: infoUsingDELETE_1
2019-06-04 17:49:32 -Generating unique operation named: infoUsingOPTIONS_1
2019-06-04 17:49:32 -Generating unique operation named: infoUsingTRACE_1
2019-06-04 17:49:32 -Generating unique operation named: listUsingGET_5
2019-06-04 17:49:32 -Generating unique operation named: removeUsingPOST_8
2019-06-04 17:49:32 -Generating unique operation named: removeUsingPOST_9
2019-06-04 17:49:32 -Generating unique operation named: saveUsingPOST_4
2019-06-04 17:49:32 -Generating unique operation named: updateUsingPOST_5
2019-06-04 17:49:32 -Generating unique operation named: listUsingGET_6
2019-06-04 17:49:32 -Generating unique operation named: removeUsingPOST_10
2019-06-04 17:49:32 -Generating unique operation named: welcomeUsingGET_1
2019-06-04 17:49:32 -Generating unique operation named: addUsingGET_5
2019-06-04 17:49:32 -Generating unique operation named: editUsingGET_6
2019-06-04 17:49:32 -Generating unique operation named: listUsingGET_7
2019-06-04 17:49:32 -Generating unique operation named: removeUsingPOST_11
2019-06-04 17:49:32 -Generating unique operation named: saveUsingPOST_5
2019-06-04 17:49:32 -Generating unique operation named: treeUsingGET_1
2019-06-04 17:49:32 -Generating unique operation named: treeUsingGET_2
2019-06-04 17:49:32 -Generating unique operation named: updateUsingPOST_6
2019-06-04 17:49:32 -Generating unique operation named: batchRemoveUsingPOST_1
2019-06-04 17:49:32 -Generating unique operation named: editUsingGET_7
2019-06-04 17:49:32 -Generating unique operation named: listUsingGET_8
2019-06-04 17:49:32 -Generating unique operation named: addUsingGET_6
2019-06-04 17:49:32 -Generating unique operation named: editUsingGET_8
2019-06-04 17:49:32 -Generating unique operation named: listUsingGET_9
2019-06-04 17:49:32 -Generating unique operation named: removeUsingPOST_12
2019-06-04 17:49:32 -Generating unique operation named: removeUsingPOST_13
2019-06-04 17:49:32 -Generating unique operation named: saveUsingPOST_6
2019-06-04 17:49:32 -Generating unique operation named: updateUsingGET_4
2019-06-04 17:49:32 -Generating unique operation named: updateUsingHEAD_4
2019-06-04 17:49:32 -Generating unique operation named: updateUsingPOST_7
2019-06-04 17:49:32 -Generating unique operation named: updateUsingPUT_4
2019-06-04 17:49:32 -Generating unique operation named: updateUsingPATCH_4
2019-06-04 17:49:32 -Generating unique operation named: updateUsingDELETE_4
2019-06-04 17:49:32 -Generating unique operation named: updateUsingOPTIONS_4
2019-06-04 17:49:32 -Generating unique operation named: updateUsingTRACE_4
2019-06-04 17:49:32 -Generating unique operation named: addUsingGET_7
2019-06-04 17:49:32 -Generating unique operation named: editUsingGET_9
2019-06-04 17:49:32 -Generating unique operation named: listUsingGET_10
2019-06-04 17:49:32 -Generating unique operation named: removeUsingPOST_14
2019-06-04 17:49:32 -Generating unique operation named: removeUsingPOST_15
2019-06-04 17:49:32 -Generating unique operation named: saveUsingPOST_7
2019-06-04 17:49:32 -Generating unique operation named: updateUsingGET_5
2019-06-04 17:49:32 -Generating unique operation named: updateUsingHEAD_5
2019-06-04 17:49:32 -Generating unique operation named: updateUsingPOST_8
2019-06-04 17:49:32 -Generating unique operation named: updateUsingPUT_5
2019-06-04 17:49:32 -Generating unique operation named: updateUsingPATCH_5
2019-06-04 17:49:32 -Generating unique operation named: updateUsingDELETE_5
2019-06-04 17:49:32 -Generating unique operation named: updateUsingOPTIONS_5
2019-06-04 17:49:32 -Generating unique operation named: updateUsingTRACE_5
2019-06-04 17:49:32 -Generating unique operation named: addUsingGET_8
2019-06-04 17:49:32 -Generating unique operation named: editUsingGET_10
2019-06-04 17:49:32 -Generating unique operation named: listUsingGET_11
2019-06-04 17:49:32 -Generating unique operation named: removeUsingPOST_16
2019-06-04 17:49:32 -Generating unique operation named: removeUsingPOST_17
2019-06-04 17:49:32 -Generating unique operation named: saveUsingPOST_8
2019-06-04 17:49:32 -Generating unique operation named: updateUsingGET_6
2019-06-04 17:49:32 -Generating unique operation named: updateUsingHEAD_6
2019-06-04 17:49:32 -Generating unique operation named: updateUsingPOST_9
2019-06-04 17:49:32 -Generating unique operation named: updateUsingPUT_6
2019-06-04 17:49:32 -Generating unique operation named: updateUsingPATCH_6
2019-06-04 17:49:32 -Generating unique operation named: updateUsingDELETE_6
2019-06-04 17:49:32 -Generating unique operation named: updateUsingOPTIONS_6
2019-06-04 17:49:32 -Generating unique operation named: updateUsingTRACE_6
2019-06-04 17:49:32 -Generating unique operation named: addUsingGET_9
2019-06-04 17:49:32 -Generating unique operation named: batchRemoveUsingPOST_2
2019-06-04 17:49:32 -Generating unique operation named: deployUsingPOST_1
2019-06-04 17:49:32 -Generating unique operation named: listUsingGET_12
2019-06-04 17:49:32 -Generating unique operation named: removeUsingPOST_18
2019-06-04 17:49:32 -Generating unique operation named: addUsingGET_10
2019-06-04 17:49:32 -Generating unique operation named: editUsingGET_11
2019-06-04 17:49:32 -Generating unique operation named: listUsingGET_13
2019-06-04 17:49:32 -Generating unique operation named: removeUsingPOST_19
2019-06-04 17:49:32 -Generating unique operation named: removeUsingPOST_20
2019-06-04 17:49:32 -Trying to infer dataType org.springframework.web.multipart.MultipartFile[]
2019-06-04 17:49:32 -Generating unique operation named: saveUsingPOST_9
2019-06-04 17:49:32 -Trying to infer dataType org.springframework.web.multipart.MultipartFile[]
2019-06-04 17:49:32 -Generating unique operation named: updateUsingGET_7
2019-06-04 17:49:32 -Trying to infer dataType org.springframework.web.multipart.MultipartFile[]
2019-06-04 17:49:32 -Generating unique operation named: updateUsingHEAD_7
2019-06-04 17:49:32 -Trying to infer dataType org.springframework.web.multipart.MultipartFile[]
2019-06-04 17:49:32 -Generating unique operation named: updateUsingPOST_10
2019-06-04 17:49:32 -Trying to infer dataType org.springframework.web.multipart.MultipartFile[]
2019-06-04 17:49:32 -Generating unique operation named: updateUsingPUT_7
2019-06-04 17:49:32 -Trying to infer dataType org.springframework.web.multipart.MultipartFile[]
2019-06-04 17:49:32 -Generating unique operation named: updateUsingPATCH_7
2019-06-04 17:49:32 -Trying to infer dataType org.springframework.web.multipart.MultipartFile[]
2019-06-04 17:49:32 -Generating unique operation named: updateUsingDELETE_7
2019-06-04 17:49:32 -Trying to infer dataType org.springframework.web.multipart.MultipartFile[]
2019-06-04 17:49:32 -Generating unique operation named: updateUsingOPTIONS_7
2019-06-04 17:49:32 -Trying to infer dataType org.springframework.web.multipart.MultipartFile[]
2019-06-04 17:49:32 -Generating unique operation named: updateUsingTRACE_7
2019-06-04 17:49:32 -Generating unique operation named: addUsingGET_11
2019-06-04 17:49:32 -Generating unique operation named: batchRemoveUsingPOST_3
2019-06-04 17:49:32 -Generating unique operation named: editUsingGET_12
2019-06-04 17:49:32 -Generating unique operation named: listUsingGET_14
2019-06-04 17:49:32 -Generating unique operation named: saveUsingPOST_10
2019-06-04 17:49:32 -Generating unique operation named: saveUsingPOST_11
2019-06-04 17:49:32 -Generating unique operation named: updateUsingPOST_11
2019-06-04 17:49:32 -Generating unique operation named: addUsingGET_12
2019-06-04 17:49:32 -Generating unique operation named: editUsingGET_13
2019-06-04 17:49:32 -Generating unique operation named: listUsingGET_15
2019-06-04 17:49:32 -Generating unique operation named: removeUsingPOST_21
2019-06-04 17:49:32 -Generating unique operation named: removeUsingPOST_22
2019-06-04 17:49:32 -Generating unique operation named: updateUsingGET_8
2019-06-04 17:49:32 -Generating unique operation named: updateUsingHEAD_8
2019-06-04 17:49:32 -Generating unique operation named: updateUsingPOST_12
2019-06-04 17:49:32 -Generating unique operation named: updateUsingPUT_8
2019-06-04 17:49:32 -Generating unique operation named: updateUsingPATCH_8
2019-06-04 17:49:32 -Generating unique operation named: updateUsingDELETE_8
2019-06-04 17:49:32 -Generating unique operation named: updateUsingOPTIONS_8
2019-06-04 17:49:32 -Generating unique operation named: updateUsingTRACE_8
2019-06-04 17:49:32 -Generating unique operation named: listUsingGET_16
2019-06-04 17:49:32 -Generating unique operation named: listUsingHEAD_1
2019-06-04 17:49:32 -Generating unique operation named: listUsingPOST_1
2019-06-04 17:49:32 -Generating unique operation named: listUsingPUT_1
2019-06-04 17:49:32 -Generating unique operation named: listUsingPATCH_1
2019-06-04 17:49:32 -Generating unique operation named: listUsingDELETE_1
2019-06-04 17:49:32 -Generating unique operation named: listUsingOPTIONS_1
2019-06-04 17:49:32 -Generating unique operation named: listUsingTRACE_1
2019-06-04 17:49:32 -Generating unique operation named: listUsingGET_17
2019-06-04 17:49:32 -Generating unique operation named: addUsingGET_13
2019-06-04 17:49:32 -Generating unique operation named: batchRemoveUsingPOST_4
2019-06-04 17:49:32 -Generating unique operation named: editUsingGET_14
2019-06-04 17:49:32 -Generating unique operation named: listUsingGET_18
2019-06-04 17:49:32 -Generating unique operation named: removeUsingPOST_23
2019-06-04 17:49:32 -Generating unique operation named: saveUsingPOST_12
2019-06-04 17:49:32 -Generating unique operation named: treeUsingGET_3
2019-06-04 17:49:32 -Generating unique operation named: treeViewUsingGET_1
2019-06-04 17:49:32 -Generating unique operation named: updateUsingPOST_13
2019-06-04 17:49:32 -Generating unique operation named: addUsingGET_14
2019-06-04 17:49:32 -Generating unique operation named: editUsingGET_15
2019-06-04 17:49:32 -Generating unique operation named: listUsingGET_19
2019-06-04 17:49:32 -Generating unique operation named: removeUsingPOST_24
2019-06-04 17:49:32 -Generating unique operation named: removeUsingPOST_25
2019-06-04 17:49:32 -Generating unique operation named: saveUsingPOST_13
2019-06-04 17:49:32 -Generating unique operation named: updateUsingGET_9
2019-06-04 17:49:32 -Generating unique operation named: updateUsingHEAD_9
2019-06-04 17:49:32 -Generating unique operation named: updateUsingPOST_14
2019-06-04 17:49:32 -Generating unique operation named: updateUsingPUT_9
2019-06-04 17:49:32 -Generating unique operation named: updateUsingPATCH_9
2019-06-04 17:49:32 -Generating unique operation named: updateUsingDELETE_9
2019-06-04 17:49:32 -Generating unique operation named: updateUsingOPTIONS_9
2019-06-04 17:49:32 -Generating unique operation named: updateUsingTRACE_9
2019-06-04 17:49:32 -Starting Quartz Scheduler now
2019-06-04 17:49:32 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-06-04 17:49:32 -Starting...
2019-06-04 17:49:32 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-06-04 17:49:32 -Started.
2019-06-04 17:49:33 -Starting ProtocolHandler ["http-nio-8888"]
2019-06-04 17:49:33 -Using a shared selector for servlet write/read
2019-06-04 17:49:33 -Tomcat started on port(s): 8888 (http) with context path ''
2019-06-04 17:49:33 -Started BootdoApplication in 5.783 seconds (JVM running for 149.919)
2019-06-04 17:49:33 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-06-04 17:49:33 -==> Parameters: 
2019-06-04 17:49:33 -<==      Total: 1
2019-06-04 17:49:33 -Condition evaluation unchanged
2019-06-04 17:49:38 -Starting BootdoApplication on LAPTOP-ELP5M68R with PID 3200 (D:\workspace\bootdo\bootdo\target\classes started by Lenovo in D:\workspace\bootdo\bootdo)
2019-06-04 17:49:38 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-06-04 17:49:38 -The following profiles are active: dev
2019-06-04 17:49:38 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@384980c5: startup date [Tue Jun 04 17:49:38 CST 2019]; root of context hierarchy
2019-06-04 17:49:39 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-06-04 17:49:40 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$72bef4e9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-04 17:49:40 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$65182390] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-04 17:49:40 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-04 17:49:41 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-04 17:49:41 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-04 17:49:41 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-06-04 17:49:41 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-06-04 17:49:41 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-04 17:49:41 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-04 17:49:41 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-04 17:49:41 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-04 17:49:41 -Tomcat initialized with port(s): 8888 (http)
2019-06-04 17:49:41 -Initializing ProtocolHandler ["http-nio-8888"]
2019-06-04 17:49:41 -Starting service [Tomcat]
2019-06-04 17:49:41 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-06-04 17:49:41 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [F:\yff\jdk1.8\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;D:\app\Lenovo\product\11.2.0\dbhome_1\bin;\bin;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\iCLS\;C:\Program Files\Intel\Intel(R) Management Engine Components\iCLS\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;F:\yff\jdk1.8\BIN;D:\Program Files\develop\apache-maven-3.3.9\BIN;D:\Program Files\matlab\v81\runtime\win64;D:\Program Files\matlab\v81\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;F:\yff\redis64;D:\Program Files\Notepad++;D:\Program Files\mysql-5.7.24-winx64\BIN;D:\Program Files\matlab\v81\bin\win64;D:\Program Files\matlab\v81\runtime\win64;D:\Program Files\develop\SVN\bin;D:\Program Files\develop\apache-tomcat-8.5.8-ltcins-common-4280\bin;D:\Program Files\develop\apache-tomcat-8.5.8-ltcins-common-4080\bin;D:\Program Files\develop\zookeeper-3.4.10\BIN;D:\Program Files\develop\Git\cmd;C:\Users\Lenovo\AppData\Local\Microsoft\WindowsApps;C:\Users\Lenovo\AppData\Local\GitHubDesktop\bin;.]
2019-06-04 17:49:41 -Initializing Spring embedded WebApplicationContext
2019-06-04 17:49:41 -Root WebApplicationContext: initialization completed in 3169 ms
2019-06-04 17:49:41 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-06-04 17:49:41 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-06-04 17:49:41 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-06-04 17:49:41 -Mapping filter: 'requestContextFilter' to: [/*]
2019-06-04 17:49:41 -Filter xssFilter was not registered (disabled)
2019-06-04 17:49:41 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-06-04 17:49:41 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-06-04 17:49:41 -Servlet statViewServlet mapped to [/druid/*]
2019-06-04 17:49:41 -Servlet dispatcherServlet mapped to [/]
2019-06-04 17:49:42 -{dataSource-1} inited
2019-06-04 17:49:42 -ProcessEngine default created
2019-06-04 17:49:43 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@384980c5: startup date [Tue Jun 04 17:49:38 CST 2019]; root of context hierarchy
2019-06-04 17:49:43 -Using default implementation for ThreadExecutor
2019-06-04 17:49:43 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-06-04 17:49:43 -Quartz Scheduler v.2.2.1 created.
2019-06-04 17:49:43 -RAMJobStore initialized.
2019-06-04 17:49:43 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-06-04 17:49:43 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-06-04 17:49:43 -Quartz scheduler version: 2.2.1
2019-06-04 17:49:43 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@20866672
2019-06-04 17:49:43 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-06-04 17:49:43 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-06-04 17:49:44 -Mapped "{[/activiti/model/{id}],methods=[DELETE]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.ModelController.remove(java.lang.String)
2019-06-04 17:49:44 -Mapped "{[/activiti/model/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.activiti.controller.ModelController.list(int,int)
2019-06-04 17:49:44 -Mapped "{[/activiti/model/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.ModelController.batchRemove(java.lang.String[])
2019-06-04 17:49:44 -Mapped "{[/activiti/model],methods=[GET]}" onto org.springframework.web.servlet.ModelAndView com.bootdo.activiti.controller.ModelController.model()
2019-06-04 17:49:44 -Mapped "{[/activiti/model/add]}" onto public void com.bootdo.activiti.controller.ModelController.newModel(javax.servlet.http.HttpServletResponse) throws java.io.UnsupportedEncodingException
2019-06-04 17:49:44 -Mapped "{[/activiti/model/{modelId}/save],methods=[PUT]}" onto public void com.bootdo.activiti.controller.ModelController.saveModel(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2019-06-04 17:49:44 -Mapped "{[/activiti/model/export/{id}],methods=[GET]}" onto public void com.bootdo.activiti.controller.ModelController.exportToXml(java.lang.String,javax.servlet.http.HttpServletResponse)
2019-06-04 17:49:44 -Mapped "{[/activiti/model/{modelId}/json],methods=[GET]}" onto public com.fasterxml.jackson.databind.node.ObjectNode com.bootdo.activiti.controller.ModelController.getEditorJson(java.lang.String)
2019-06-04 17:49:44 -Mapped "{[/activiti/model/deploy/{id}],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.ModelController.deploy(java.lang.String) throws java.lang.Exception
2019-06-04 17:49:44 -Mapped "{[/activiti/editor/stencilset],methods=[GET],produces=[application/json;charset=utf-8]}" onto public java.lang.String com.bootdo.activiti.controller.ModelController.getStencilset()
2019-06-04 17:49:44 -Mapped "{[/activiti/model/edit/{id}],methods=[GET]}" onto public void com.bootdo.activiti.controller.ModelController.edit(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-06-04 17:49:44 -Mapped "{[/activiti/process/add],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.activiti.controller.ProcessController.add()
2019-06-04 17:49:44 -Mapped "{[/activiti/process/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.ProcessController.remove(java.lang.String)
2019-06-04 17:49:44 -Mapped "{[/activiti/process/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.activiti.controller.ProcessController.list(int,int)
2019-06-04 17:49:44 -Mapped "{[/activiti/process/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.ProcessController.batchRemove(java.lang.String[])
2019-06-04 17:49:44 -Mapped "{[/activiti/process],methods=[GET]}" onto org.springframework.web.servlet.ModelAndView com.bootdo.activiti.controller.ProcessController.process()
2019-06-04 17:49:44 -Mapped "{[/activiti/process/convertToModel/{procDefId}]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.ProcessController.convertToModel(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes) throws java.io.UnsupportedEncodingException,javax.xml.stream.XMLStreamException
2019-06-04 17:49:44 -Mapped "{[/activiti/process/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.ProcessController.deploy(java.lang.String,java.lang.String,org.springframework.web.multipart.MultipartFile)
2019-06-04 17:49:44 -Mapped "{[/activiti/process/resource/read/{xml}/{id}]}" onto public void com.bootdo.activiti.controller.ProcessController.resourceRead(java.lang.String,java.lang.String,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-06-04 17:49:44 -Mapped "{[/act/salary/form],methods=[GET]}" onto java.lang.String com.bootdo.activiti.controller.SalaryController.add()
2019-06-04 17:49:44 -Mapped "{[/act/salary/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.SalaryController.remove(java.lang.String)
2019-06-04 17:49:44 -Mapped "{[/act/salary/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.SalaryController.remove(java.lang.String[])
2019-06-04 17:49:44 -Mapped "{[/act/salary/update]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.SalaryController.update(com.bootdo.activiti.domain.SalaryDO)
2019-06-04 17:49:44 -Mapped "{[/act/salary/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.activiti.controller.SalaryController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-04 17:49:44 -Mapped "{[/act/salary/form/{taskId}],methods=[GET]}" onto java.lang.String com.bootdo.activiti.controller.SalaryController.edit(java.lang.String,org.springframework.ui.Model)
2019-06-04 17:49:44 -Mapped "{[/act/salary],methods=[GET]}" onto java.lang.String com.bootdo.activiti.controller.SalaryController.Salary()
2019-06-04 17:49:44 -Mapped "{[/act/salary/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.activiti.controller.SalaryController.saveOrUpdate(com.bootdo.activiti.domain.SalaryDO)
2019-06-04 17:49:44 -Mapped "{[/activiti/task/form/{procDefId}/{taskId}],methods=[GET]}" onto public void com.bootdo.activiti.controller.TaskController.form(java.lang.String,java.lang.String,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-06-04 17:49:44 -Mapped "{[/activiti/task/gotoList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.activiti.controller.TaskController.list(int,int)
2019-06-04 17:49:44 -Mapped "{[/activiti/task/form/{procDefId}],methods=[GET]}" onto public void com.bootdo.activiti.controller.TaskController.startForm(java.lang.String,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-06-04 17:49:44 -Mapped "{[/activiti/task/todo],methods=[GET]}" onto org.springframework.web.servlet.ModelAndView com.bootdo.activiti.controller.TaskController.todo()
2019-06-04 17:49:44 -Mapped "{[/activiti/task/trace/photo/{procDefId}/{execId}]}" onto public void com.bootdo.activiti.controller.TaskController.tracePhoto(java.lang.String,java.lang.String,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-06-04 17:49:44 -Mapped "{[/activiti/task/goto],methods=[GET]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.activiti.controller.TaskController.gotoTask()
2019-06-04 17:49:44 -Mapped "{[/activiti/task/todoList],methods=[GET]}" onto java.util.List<com.bootdo.activiti.vo.TaskVO> com.bootdo.activiti.controller.TaskController.todoList()
2019-06-04 17:49:44 -Mapped "{[/blog/open/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.blog.controller.BlogController.opentList(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-04 17:49:44 -Mapped "{[/blog],methods=[GET]}" onto java.lang.String com.bootdo.blog.controller.BlogController.blog()
2019-06-04 17:49:44 -Mapped "{[/blog/open/page/{categories}],methods=[GET]}" onto java.lang.String com.bootdo.blog.controller.BlogController.about(java.lang.String,org.springframework.ui.Model)
2019-06-04 17:49:44 -Mapped "{[/blog/open/post/{cid}],methods=[GET]}" onto java.lang.String com.bootdo.blog.controller.BlogController.post(java.lang.Long,org.springframework.ui.Model)
2019-06-04 17:49:44 -Mapped "{[/blog/bContent/add],methods=[GET]}" onto java.lang.String com.bootdo.blog.controller.ContentController.add()
2019-06-04 17:49:44 -Mapped "{[/blog/bContent/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.blog.controller.ContentController.remove(java.lang.Long)
2019-06-04 17:49:44 -Mapped "{[/blog/bContent/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.blog.controller.ContentController.remove(java.lang.Long[])
2019-06-04 17:49:44 -Mapped "{[/blog/bContent/update]}" onto public com.bootdo.common.utils.R com.bootdo.blog.controller.ContentController.update(com.bootdo.blog.domain.ContentDO)
2019-06-04 17:49:44 -Mapped "{[/blog/bContent/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.blog.controller.ContentController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-04 17:49:44 -Mapped "{[/blog/bContent/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.blog.controller.ContentController.save(com.bootdo.blog.domain.ContentDO)
2019-06-04 17:49:44 -Mapped "{[/blog/bContent],methods=[GET]}" onto java.lang.String com.bootdo.blog.controller.ContentController.bContent()
2019-06-04 17:49:44 -Mapped "{[/blog/bContent/edit/{cid}],methods=[GET]}" onto java.lang.String com.bootdo.blog.controller.ContentController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-04 17:49:44 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-06-04 17:49:44 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-06-04 17:49:44 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-06-04 17:49:44 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-06-04 17:49:44 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-04 17:49:44 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-06-04 17:49:44 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-06-04 17:49:44 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-04 17:49:44 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-06-04 17:49:44 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-06-04 17:49:44 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-06-04 17:49:44 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-06-04 17:49:44 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-06-04 17:49:44 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-06-04 17:49:44 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-06-04 17:49:44 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-04 17:49:44 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-06-04 17:49:44 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-06-04 17:49:44 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-04 17:49:44 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-06-04 17:49:44 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-06-04 17:49:44 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-04 17:49:44 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-06-04 17:49:44 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-06-04 17:49:44 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-06-04 17:49:44 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-06-04 17:49:44 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-06-04 17:49:44 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-06-04 17:49:44 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-06-04 17:49:44 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-06-04 17:49:44 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-06-04 17:49:44 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-04 17:49:44 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-06-04 17:49:44 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-06-04 17:49:44 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-04 17:49:44 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-06-04 17:49:44 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-06-04 17:49:44 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-06-04 17:49:44 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-06-04 17:49:44 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-04 17:49:44 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-06-04 17:49:44 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-06-04 17:49:44 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-06-04 17:49:44 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-06-04 17:49:44 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-06-04 17:49:44 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-06-04 17:49:44 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-06-04 17:49:44 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-06-04 17:49:44 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-04 17:49:44 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-06-04 17:49:44 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-06-04 17:49:44 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-04 17:49:44 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-06-04 17:49:44 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-06-04 17:49:44 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-04 17:49:44 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-06-04 17:49:44 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-06-04 17:49:44 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-06-04 17:49:44 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-06-04 17:49:44 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-06-04 17:49:44 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-06-04 17:49:44 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-06-04 17:49:44 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-04 17:49:44 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-06-04 17:49:44 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-06-04 17:49:44 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-06-04 17:49:44 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-06-04 17:49:44 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-06-04 17:49:44 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-06-04 17:49:44 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-06-04 17:49:44 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String)
2019-06-04 17:49:44 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-06-04 17:49:44 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-06-04 17:49:44 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-06-04 17:49:44 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-04 17:49:44 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-06-04 17:49:44 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-06-04 17:49:44 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-06-04 17:49:44 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-06-04 17:49:44 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-06-04 17:49:44 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-06-04 17:49:44 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-06-04 17:49:44 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-06-04 17:49:44 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-06-04 17:49:44 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-06-04 17:49:44 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-06-04 17:49:44 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-06-04 17:49:44 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-04 17:49:44 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-06-04 17:49:44 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-06-04 17:49:44 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-06-04 17:49:44 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-06-04 17:49:44 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-04 17:49:44 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-06-04 17:49:44 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-06-04 17:49:44 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-06-04 17:49:44 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-04 17:49:44 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-06-04 17:49:44 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-06-04 17:49:44 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-06-04 17:49:44 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-06-04 17:49:44 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-06-04 17:49:44 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-06-04 17:49:44 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-06-04 17:49:44 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-06-04 17:49:44 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-06-04 17:49:44 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-06-04 17:49:44 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-06-04 17:49:44 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-06-04 17:49:44 -Mapped "{[/wxServer],methods=[GET]}" onto public void org.weixin4j.spring.web.WeixinJieruController.get(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-06-04 17:49:44 -Mapped "{[/wxServer],methods=[POST]}" onto public void org.weixin4j.spring.web.WeixinJieruController.post(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException
2019-06-04 17:49:44 -Mapped "{[/weixin/weixinUser/add],methods=[GET]}" onto java.lang.String com.bootdo.weixin.controller.WeixinUserController.add()
2019-06-04 17:49:44 -Mapped "{[/weixin/weixinUser/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.weixin.controller.WeixinUserController.remove(java.lang.Long)
2019-06-04 17:49:44 -Mapped "{[/weixin/weixinUser/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.weixin.controller.WeixinUserController.remove(java.lang.Long[])
2019-06-04 17:49:44 -Mapped "{[/weixin/weixinUser/update]}" onto public com.bootdo.common.utils.R com.bootdo.weixin.controller.WeixinUserController.update(com.bootdo.weixin.domain.WeixinUserDO)
2019-06-04 17:49:44 -Mapped "{[/weixin/weixinUser/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.weixin.controller.WeixinUserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-04 17:49:44 -Mapped "{[/weixin/weixinUser/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.weixin.controller.WeixinUserController.save(com.bootdo.weixin.domain.WeixinUserDO)
2019-06-04 17:49:44 -Mapped "{[/weixin/weixinUser/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.weixin.controller.WeixinUserController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-04 17:49:44 -Mapped "{[/weixin/weixinUser],methods=[GET]}" onto java.lang.String com.bootdo.weixin.controller.WeixinUserController.WeixinUser()
2019-06-04 17:49:44 -Mapped "{[/xjbg/order/add],methods=[GET]}" onto java.lang.String com.bootdo.xjbg.controller.OrderController.add()
2019-06-04 17:49:44 -Mapped "{[/xjbg/order/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.xjbg.controller.OrderController.remove(java.lang.Long)
2019-06-04 17:49:44 -Mapped "{[/xjbg/order/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.xjbg.controller.OrderController.remove(java.lang.Long[])
2019-06-04 17:49:44 -Mapped "{[/xjbg/order/update]}" onto public com.bootdo.common.utils.R com.bootdo.xjbg.controller.OrderController.update(com.bootdo.xjbg.domain.OrderDO)
2019-06-04 17:49:44 -Mapped "{[/xjbg/order/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.xjbg.controller.OrderController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-04 17:49:44 -Mapped "{[/xjbg/order/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.xjbg.controller.OrderController.save(com.bootdo.xjbg.domain.OrderDO)
2019-06-04 17:49:44 -Mapped "{[/xjbg/order/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.xjbg.controller.OrderController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-04 17:49:44 -Mapped "{[/xjbg/order],methods=[GET]}" onto java.lang.String com.bootdo.xjbg.controller.OrderController.Order()
2019-06-04 17:49:44 -Mapped "{[/xjbg/orderItem/add],methods=[GET]}" onto java.lang.String com.bootdo.xjbg.controller.OrderItemController.add()
2019-06-04 17:49:44 -Mapped "{[/xjbg/orderItem/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.xjbg.controller.OrderItemController.remove(java.lang.Long)
2019-06-04 17:49:44 -Mapped "{[/xjbg/orderItem/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.xjbg.controller.OrderItemController.remove(java.lang.Long[])
2019-06-04 17:49:44 -Mapped "{[/xjbg/orderItem/update]}" onto public com.bootdo.common.utils.R com.bootdo.xjbg.controller.OrderItemController.update(com.bootdo.xjbg.domain.OrderItemDO)
2019-06-04 17:49:44 -Mapped "{[/xjbg/orderItem/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.xjbg.controller.OrderItemController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-04 17:49:44 -Mapped "{[/xjbg/orderItem/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.xjbg.controller.OrderItemController.save(com.bootdo.xjbg.domain.OrderItemDO)
2019-06-04 17:49:44 -Mapped "{[/xjbg/orderItem/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.xjbg.controller.OrderItemController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-04 17:49:44 -Mapped "{[/xjbg/orderItem],methods=[GET]}" onto java.lang.String com.bootdo.xjbg.controller.OrderItemController.OrderItem()
2019-06-04 17:49:44 -Mapped "{[/xjbg/product/add],methods=[GET]}" onto java.lang.String com.bootdo.xjbg.controller.ProductController.add()
2019-06-04 17:49:44 -Mapped "{[/xjbg/product/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.xjbg.controller.ProductController.remove(java.lang.Long)
2019-06-04 17:49:44 -Mapped "{[/xjbg/product/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.xjbg.controller.ProductController.remove(java.lang.Long[])
2019-06-04 17:49:44 -Mapped "{[/xjbg/product/update]}" onto public com.bootdo.common.utils.R com.bootdo.xjbg.controller.ProductController.update(com.bootdo.xjbg.domain.ProductDO,org.springframework.web.multipart.MultipartFile[])
2019-06-04 17:49:44 -Mapped "{[/xjbg/product/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.xjbg.controller.ProductController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-04 17:49:44 -Mapped "{[/xjbg/product/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.xjbg.controller.ProductController.save(com.bootdo.xjbg.domain.ProductDO,org.springframework.web.multipart.MultipartFile[])
2019-06-04 17:49:44 -Mapped "{[/xjbg/product/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.xjbg.controller.ProductController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-04 17:49:44 -Mapped "{[/xjbg/product],methods=[GET]}" onto java.lang.String com.bootdo.xjbg.controller.ProductController.Product()
2019-06-04 17:49:44 -Mapped "{[/xjbg/room/add],methods=[GET]}" onto java.lang.String com.bootdo.xjbg.controller.RoomController.add(org.springframework.ui.Model)
2019-06-04 17:49:44 -Mapped "{[/xjbg/room/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.xjbg.controller.RoomController.remove(java.lang.Integer[])
2019-06-04 17:49:44 -Mapped "{[/xjbg/room/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.xjbg.controller.RoomController.remove(java.lang.Integer)
2019-06-04 17:49:44 -Mapped "{[/xjbg/room/update]}" onto public com.bootdo.common.utils.R com.bootdo.xjbg.controller.RoomController.update(com.bootdo.xjbg.domain.RoomDO)
2019-06-04 17:49:44 -Mapped "{[/xjbg/room/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.xjbg.controller.RoomController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-04 17:49:44 -Mapped "{[/xjbg/room/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.xjbg.controller.RoomController.save(com.bootdo.xjbg.domain.RoomDO)
2019-06-04 17:49:44 -Mapped "{[/xjbg/room/operation/{roomId}],methods=[GET]}" onto java.lang.String com.bootdo.xjbg.controller.RoomController.operation(java.lang.Integer,org.springframework.ui.Model)
2019-06-04 17:49:44 -Mapped "{[/xjbg/room/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.xjbg.controller.RoomController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-06-04 17:49:44 -Mapped "{[/xjbg/room],methods=[GET]}" onto java.lang.String com.bootdo.xjbg.controller.RoomController.Room(org.springframework.ui.Model)
2019-06-04 17:49:44 -Mapped "{[/xjbg/room/kaifan],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.xjbg.controller.RoomController.kaifan(com.bootdo.xjbg.domain.OrderDO,java.util.List<com.bootdo.xjbg.domain.OrderItemDO>)
2019-06-04 17:49:44 -Mapped "{[/xjbg/room/roomMng],methods=[GET]}" onto java.lang.String com.bootdo.xjbg.controller.RoomController.roomMng(org.springframework.ui.Model)
2019-06-04 17:49:44 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-06-04 17:49:44 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-06-04 17:49:44 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-06-04 17:49:44 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-06-04 17:49:45 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-06-04 17:49:45 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-06-04 17:49:45 -Initializing ExecutorService  'brokerChannelExecutor'
2019-06-04 17:49:45 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-06-04 17:49:45 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@384980c5: startup date [Tue Jun 04 17:49:38 CST 2019]; root of context hierarchy
2019-06-04 17:49:45 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-06-04 17:49:45 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-06-04 17:49:45 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-06-04 17:49:45 -Mapped URL path [/productPic/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-06-04 17:49:45 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-06-04 17:49:45 -[THYMELEAF][restartedMain] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-06-04 17:49:46 -LiveReload server is running on port 35729
2019-06-04 17:49:46 -Registering beans for JMX exposure on startup
2019-06-04 17:49:46 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-06-04 17:49:46 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-06-04 17:49:46 -Starting beans in phase 2147483647
2019-06-04 17:49:46 -Context refreshed
2019-06-04 17:49:46 -Found 1 custom documentation plugin(s)
2019-06-04 17:49:46 -Scanning for api listing references
2019-06-04 17:49:46 -Generating unique operation named: removeUsingPOST_1
2019-06-04 17:49:46 -Generating unique operation named: addUsingGET_1
2019-06-04 17:49:46 -Generating unique operation named: editUsingGET_1
2019-06-04 17:49:46 -Generating unique operation named: listUsingGET_1
2019-06-04 17:49:46 -Generating unique operation named: removeUsingPOST_2
2019-06-04 17:49:46 -Generating unique operation named: removeUsingPOST_3
2019-06-04 17:49:46 -Generating unique operation named: saveUsingPOST_1
2019-06-04 17:49:46 -Generating unique operation named: updateUsingGET_1
2019-06-04 17:49:46 -Generating unique operation named: updateUsingHEAD_1
2019-06-04 17:49:46 -Generating unique operation named: updateUsingPOST_1
2019-06-04 17:49:46 -Generating unique operation named: updateUsingPUT_1
2019-06-04 17:49:46 -Generating unique operation named: updateUsingPATCH_1
2019-06-04 17:49:46 -Generating unique operation named: updateUsingDELETE_1
2019-06-04 17:49:46 -Generating unique operation named: updateUsingOPTIONS_1
2019-06-04 17:49:46 -Generating unique operation named: updateUsingTRACE_1
2019-06-04 17:49:46 -Generating unique operation named: addUsingGET_2
2019-06-04 17:49:46 -Generating unique operation named: editUsingGET_2
2019-06-04 17:49:46 -Generating unique operation named: listUsingGET_2
2019-06-04 17:49:46 -Generating unique operation named: removeUsingPOST_4
2019-06-04 17:49:46 -Generating unique operation named: removeUsingPOST_5
2019-06-04 17:49:46 -Generating unique operation named: saveUsingPOST_2
2019-06-04 17:49:46 -Generating unique operation named: updateUsingGET_2
2019-06-04 17:49:46 -Generating unique operation named: updateUsingHEAD_2
2019-06-04 17:49:46 -Generating unique operation named: updateUsingPOST_2
2019-06-04 17:49:46 -Generating unique operation named: updateUsingPUT_2
2019-06-04 17:49:46 -Generating unique operation named: updateUsingPATCH_2
2019-06-04 17:49:46 -Generating unique operation named: updateUsingDELETE_2
2019-06-04 17:49:46 -Generating unique operation named: updateUsingOPTIONS_2
2019-06-04 17:49:46 -Generating unique operation named: updateUsingTRACE_2
2019-06-04 17:49:46 -Generating unique operation named: addUsingGET_3
2019-06-04 17:49:46 -Generating unique operation named: editUsingGET_3
2019-06-04 17:49:46 -Generating unique operation named: listUsingGET_3
2019-06-04 17:49:46 -Generating unique operation named: removeUsingPOST_6
2019-06-04 17:49:46 -Generating unique operation named: removeUsingPOST_7
2019-06-04 17:49:46 -Generating unique operation named: saveUsingPOST_3
2019-06-04 17:49:46 -Generating unique operation named: updateUsingGET_3
2019-06-04 17:49:46 -Generating unique operation named: updateUsingHEAD_3
2019-06-04 17:49:46 -Generating unique operation named: updateUsingPOST_3
2019-06-04 17:49:46 -Generating unique operation named: updateUsingPUT_3
2019-06-04 17:49:46 -Generating unique operation named: updateUsingPATCH_3
2019-06-04 17:49:46 -Generating unique operation named: updateUsingDELETE_3
2019-06-04 17:49:46 -Generating unique operation named: updateUsingOPTIONS_3
2019-06-04 17:49:46 -Generating unique operation named: updateUsingTRACE_3
2019-06-04 17:49:47 -Generating unique operation named: editUsingGET_4
2019-06-04 17:49:47 -Generating unique operation named: listUsingGET_4
2019-06-04 17:49:47 -Generating unique operation named: updateUsingPOST_4
2019-06-04 17:49:47 -Generating unique operation named: addUsingGET_4
2019-06-04 17:49:47 -Generating unique operation named: editUsingGET_5
2019-06-04 17:49:47 -Generating unique operation named: infoUsingGET_1
2019-06-04 17:49:47 -Generating unique operation named: infoUsingHEAD_1
2019-06-04 17:49:47 -Generating unique operation named: infoUsingPOST_1
2019-06-04 17:49:47 -Generating unique operation named: infoUsingPUT_1
2019-06-04 17:49:47 -Generating unique operation named: infoUsingPATCH_1
2019-06-04 17:49:47 -Generating unique operation named: infoUsingDELETE_1
2019-06-04 17:49:47 -Generating unique operation named: infoUsingOPTIONS_1
2019-06-04 17:49:47 -Generating unique operation named: infoUsingTRACE_1
2019-06-04 17:49:47 -Generating unique operation named: listUsingGET_5
2019-06-04 17:49:47 -Generating unique operation named: removeUsingPOST_8
2019-06-04 17:49:47 -Generating unique operation named: removeUsingPOST_9
2019-06-04 17:49:47 -Generating unique operation named: saveUsingPOST_4
2019-06-04 17:49:47 -Generating unique operation named: updateUsingPOST_5
2019-06-04 17:49:47 -Generating unique operation named: listUsingGET_6
2019-06-04 17:49:47 -Generating unique operation named: removeUsingPOST_10
2019-06-04 17:49:47 -Generating unique operation named: welcomeUsingGET_1
2019-06-04 17:49:47 -Generating unique operation named: addUsingGET_5
2019-06-04 17:49:47 -Generating unique operation named: editUsingGET_6
2019-06-04 17:49:47 -Generating unique operation named: listUsingGET_7
2019-06-04 17:49:47 -Generating unique operation named: removeUsingPOST_11
2019-06-04 17:49:47 -Generating unique operation named: saveUsingPOST_5
2019-06-04 17:49:47 -Generating unique operation named: treeUsingGET_1
2019-06-04 17:49:47 -Generating unique operation named: treeUsingGET_2
2019-06-04 17:49:47 -Generating unique operation named: updateUsingPOST_6
2019-06-04 17:49:47 -Generating unique operation named: batchRemoveUsingPOST_1
2019-06-04 17:49:47 -Generating unique operation named: editUsingGET_7
2019-06-04 17:49:47 -Generating unique operation named: listUsingGET_8
2019-06-04 17:49:47 -Generating unique operation named: addUsingGET_6
2019-06-04 17:49:47 -Generating unique operation named: editUsingGET_8
2019-06-04 17:49:47 -Generating unique operation named: listUsingGET_9
2019-06-04 17:49:47 -Generating unique operation named: removeUsingPOST_12
2019-06-04 17:49:47 -Generating unique operation named: removeUsingPOST_13
2019-06-04 17:49:47 -Generating unique operation named: saveUsingPOST_6
2019-06-04 17:49:47 -Generating unique operation named: updateUsingGET_4
2019-06-04 17:49:47 -Generating unique operation named: updateUsingHEAD_4
2019-06-04 17:49:47 -Generating unique operation named: updateUsingPOST_7
2019-06-04 17:49:47 -Generating unique operation named: updateUsingPUT_4
2019-06-04 17:49:47 -Generating unique operation named: updateUsingPATCH_4
2019-06-04 17:49:47 -Generating unique operation named: updateUsingDELETE_4
2019-06-04 17:49:47 -Generating unique operation named: updateUsingOPTIONS_4
2019-06-04 17:49:47 -Generating unique operation named: updateUsingTRACE_4
2019-06-04 17:49:47 -Generating unique operation named: addUsingGET_7
2019-06-04 17:49:47 -Generating unique operation named: editUsingGET_9
2019-06-04 17:49:47 -Generating unique operation named: listUsingGET_10
2019-06-04 17:49:47 -Generating unique operation named: removeUsingPOST_14
2019-06-04 17:49:47 -Generating unique operation named: removeUsingPOST_15
2019-06-04 17:49:47 -Generating unique operation named: saveUsingPOST_7
2019-06-04 17:49:47 -Generating unique operation named: updateUsingGET_5
2019-06-04 17:49:47 -Generating unique operation named: updateUsingHEAD_5
2019-06-04 17:49:47 -Generating unique operation named: updateUsingPOST_8
2019-06-04 17:49:47 -Generating unique operation named: updateUsingPUT_5
2019-06-04 17:49:47 -Generating unique operation named: updateUsingPATCH_5
2019-06-04 17:49:47 -Generating unique operation named: updateUsingDELETE_5
2019-06-04 17:49:47 -Generating unique operation named: updateUsingOPTIONS_5
2019-06-04 17:49:47 -Generating unique operation named: updateUsingTRACE_5
2019-06-04 17:49:47 -Generating unique operation named: addUsingGET_8
2019-06-04 17:49:47 -Generating unique operation named: editUsingGET_10
2019-06-04 17:49:47 -Generating unique operation named: listUsingGET_11
2019-06-04 17:49:47 -Generating unique operation named: removeUsingPOST_16
2019-06-04 17:49:47 -Generating unique operation named: removeUsingPOST_17
2019-06-04 17:49:47 -Generating unique operation named: saveUsingPOST_8
2019-06-04 17:49:47 -Generating unique operation named: updateUsingGET_6
2019-06-04 17:49:47 -Generating unique operation named: updateUsingHEAD_6
2019-06-04 17:49:47 -Generating unique operation named: updateUsingPOST_9
2019-06-04 17:49:47 -Generating unique operation named: updateUsingPUT_6
2019-06-04 17:49:47 -Generating unique operation named: updateUsingPATCH_6
2019-06-04 17:49:47 -Generating unique operation named: updateUsingDELETE_6
2019-06-04 17:49:47 -Generating unique operation named: updateUsingOPTIONS_6
2019-06-04 17:49:47 -Generating unique operation named: updateUsingTRACE_6
2019-06-04 17:49:47 -Generating unique operation named: addUsingGET_9
2019-06-04 17:49:47 -Generating unique operation named: batchRemoveUsingPOST_2
2019-06-04 17:49:47 -Generating unique operation named: deployUsingPOST_1
2019-06-04 17:49:47 -Generating unique operation named: listUsingGET_12
2019-06-04 17:49:47 -Generating unique operation named: removeUsingPOST_18
2019-06-04 17:49:47 -Generating unique operation named: addUsingGET_10
2019-06-04 17:49:47 -Generating unique operation named: editUsingGET_11
2019-06-04 17:49:47 -Generating unique operation named: listUsingGET_13
2019-06-04 17:49:47 -Generating unique operation named: removeUsingPOST_19
2019-06-04 17:49:47 -Generating unique operation named: removeUsingPOST_20
2019-06-04 17:49:47 -Trying to infer dataType org.springframework.web.multipart.MultipartFile[]
2019-06-04 17:49:47 -Generating unique operation named: saveUsingPOST_9
2019-06-04 17:49:47 -Trying to infer dataType org.springframework.web.multipart.MultipartFile[]
2019-06-04 17:49:47 -Generating unique operation named: updateUsingGET_7
2019-06-04 17:49:47 -Trying to infer dataType org.springframework.web.multipart.MultipartFile[]
2019-06-04 17:49:47 -Generating unique operation named: updateUsingHEAD_7
2019-06-04 17:49:47 -Trying to infer dataType org.springframework.web.multipart.MultipartFile[]
2019-06-04 17:49:47 -Generating unique operation named: updateUsingPOST_10
2019-06-04 17:49:47 -Trying to infer dataType org.springframework.web.multipart.MultipartFile[]
2019-06-04 17:49:47 -Generating unique operation named: updateUsingPUT_7
2019-06-04 17:49:47 -Trying to infer dataType org.springframework.web.multipart.MultipartFile[]
2019-06-04 17:49:47 -Generating unique operation named: updateUsingPATCH_7
2019-06-04 17:49:47 -Trying to infer dataType org.springframework.web.multipart.MultipartFile[]
2019-06-04 17:49:47 -Generating unique operation named: updateUsingDELETE_7
2019-06-04 17:49:47 -Trying to infer dataType org.springframework.web.multipart.MultipartFile[]
2019-06-04 17:49:47 -Generating unique operation named: updateUsingOPTIONS_7
2019-06-04 17:49:47 -Trying to infer dataType org.springframework.web.multipart.MultipartFile[]
2019-06-04 17:49:47 -Generating unique operation named: updateUsingTRACE_7
2019-06-04 17:49:47 -Generating unique operation named: addUsingGET_11
2019-06-04 17:49:47 -Generating unique operation named: batchRemoveUsingPOST_3
2019-06-04 17:49:47 -Generating unique operation named: editUsingGET_12
2019-06-04 17:49:47 -Generating unique operation named: listUsingGET_14
2019-06-04 17:49:47 -Generating unique operation named: saveUsingPOST_10
2019-06-04 17:49:47 -Generating unique operation named: saveUsingPOST_11
2019-06-04 17:49:47 -Generating unique operation named: updateUsingPOST_11
2019-06-04 17:49:47 -Generating unique operation named: addUsingGET_12
2019-06-04 17:49:47 -Generating unique operation named: editUsingGET_13
2019-06-04 17:49:47 -Generating unique operation named: listUsingGET_15
2019-06-04 17:49:47 -Generating unique operation named: removeUsingPOST_21
2019-06-04 17:49:47 -Generating unique operation named: removeUsingPOST_22
2019-06-04 17:49:47 -Generating unique operation named: saveUsingPOST_12
2019-06-04 17:49:47 -Generating unique operation named: updateUsingGET_8
2019-06-04 17:49:47 -Generating unique operation named: updateUsingHEAD_8
2019-06-04 17:49:47 -Generating unique operation named: updateUsingPOST_12
2019-06-04 17:49:47 -Generating unique operation named: updateUsingPUT_8
2019-06-04 17:49:47 -Generating unique operation named: updateUsingPATCH_8
2019-06-04 17:49:47 -Generating unique operation named: updateUsingDELETE_8
2019-06-04 17:49:47 -Generating unique operation named: updateUsingOPTIONS_8
2019-06-04 17:49:47 -Generating unique operation named: updateUsingTRACE_8
2019-06-04 17:49:47 -Generating unique operation named: addUsingGET_13
2019-06-04 17:49:47 -Generating unique operation named: editUsingGET_14
2019-06-04 17:49:47 -Generating unique operation named: listUsingGET_16
2019-06-04 17:49:47 -Generating unique operation named: removeUsingPOST_23
2019-06-04 17:49:47 -Generating unique operation named: removeUsingPOST_24
2019-06-04 17:49:47 -Generating unique operation named: updateUsingGET_9
2019-06-04 17:49:47 -Generating unique operation named: updateUsingHEAD_9
2019-06-04 17:49:47 -Generating unique operation named: updateUsingPOST_13
2019-06-04 17:49:47 -Generating unique operation named: updateUsingPUT_9
2019-06-04 17:49:47 -Generating unique operation named: updateUsingPATCH_9
2019-06-04 17:49:47 -Generating unique operation named: updateUsingDELETE_9
2019-06-04 17:49:47 -Generating unique operation named: updateUsingOPTIONS_9
2019-06-04 17:49:47 -Generating unique operation named: updateUsingTRACE_9
2019-06-04 17:49:47 -Generating unique operation named: listUsingGET_17
2019-06-04 17:49:47 -Generating unique operation named: listUsingHEAD_1
2019-06-04 17:49:47 -Generating unique operation named: listUsingPOST_1
2019-06-04 17:49:47 -Generating unique operation named: listUsingPUT_1
2019-06-04 17:49:47 -Generating unique operation named: listUsingPATCH_1
2019-06-04 17:49:47 -Generating unique operation named: listUsingDELETE_1
2019-06-04 17:49:47 -Generating unique operation named: listUsingOPTIONS_1
2019-06-04 17:49:47 -Generating unique operation named: listUsingTRACE_1
2019-06-04 17:49:47 -Generating unique operation named: listUsingGET_18
2019-06-04 17:49:47 -Generating unique operation named: addUsingGET_14
2019-06-04 17:49:47 -Generating unique operation named: batchRemoveUsingPOST_4
2019-06-04 17:49:47 -Generating unique operation named: editUsingGET_15
2019-06-04 17:49:47 -Generating unique operation named: listUsingGET_19
2019-06-04 17:49:47 -Generating unique operation named: removeUsingPOST_25
2019-06-04 17:49:47 -Generating unique operation named: saveUsingPOST_13
2019-06-04 17:49:47 -Generating unique operation named: treeUsingGET_3
2019-06-04 17:49:47 -Generating unique operation named: treeViewUsingGET_1
2019-06-04 17:49:47 -Generating unique operation named: updateUsingPOST_14
2019-06-04 17:49:47 -Generating unique operation named: addUsingGET_15
2019-06-04 17:49:47 -Generating unique operation named: editUsingGET_16
2019-06-04 17:49:47 -Generating unique operation named: listUsingGET_20
2019-06-04 17:49:47 -Generating unique operation named: removeUsingPOST_26
2019-06-04 17:49:47 -Generating unique operation named: removeUsingPOST_27
2019-06-04 17:49:47 -Generating unique operation named: saveUsingPOST_14
2019-06-04 17:49:47 -Generating unique operation named: updateUsingGET_10
2019-06-04 17:49:47 -Generating unique operation named: updateUsingHEAD_10
2019-06-04 17:49:47 -Generating unique operation named: updateUsingPOST_15
2019-06-04 17:49:47 -Generating unique operation named: updateUsingPUT_10
2019-06-04 17:49:47 -Generating unique operation named: updateUsingPATCH_10
2019-06-04 17:49:47 -Generating unique operation named: updateUsingDELETE_10
2019-06-04 17:49:47 -Generating unique operation named: updateUsingOPTIONS_10
2019-06-04 17:49:47 -Generating unique operation named: updateUsingTRACE_10
2019-06-04 17:49:47 -Starting Quartz Scheduler now
2019-06-04 17:49:47 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-06-04 17:49:47 -Starting...
2019-06-04 17:49:47 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-06-04 17:49:47 -Started.
2019-06-04 17:49:47 -Starting ProtocolHandler ["http-nio-8888"]
2019-06-04 17:49:47 -Using a shared selector for servlet write/read
2019-06-04 17:49:47 -Tomcat started on port(s): 8888 (http) with context path ''
2019-06-04 17:49:47 -Started BootdoApplication in 9.837 seconds (JVM running for 11.763)
2019-06-04 17:49:47 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-06-04 17:49:47 -==> Parameters: 
2019-06-04 17:49:47 -<==      Total: 1
2019-06-04 17:50:45 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 2, active threads = 1, queued tasks = 1, completed tasks = 0]
2019-06-04 17:50:47 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-06-04 17:50:47 -FrameworkServlet 'dispatcherServlet': initialization started
2019-06-04 17:50:47 -FrameworkServlet 'dispatcherServlet': initialization completed in 35 ms
2019-06-04 17:50:47 -Enabling session validation scheduler...
2019-06-04 17:50:47 -请求地址 : http://localhost:8888/login;JSESSIONID=b7b7a062-3833-4a6a-b2ca-ec4327ad5055
2019-06-04 17:50:47 -HTTP METHOD : GET
2019-06-04 17:50:47 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-06-04 17:50:47 -参数 : [{}]
2019-06-04 17:50:47 -耗时 : 2
2019-06-04 17:50:47 -返回值 : login
2019-06-04 17:50:48 -请求地址 : http://localhost:8888/login
2019-06-04 17:50:48 -HTTP METHOD : POST
2019-06-04 17:50:48 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-06-04 17:50:48 -参数 : [admin, 111111]
2019-06-04 17:50:48 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-06-04 17:50:48 -==> Parameters: admin(String)
2019-06-04 17:50:48 -<==      Total: 1
2019-06-04 17:50:48 -耗时 : 17
2019-06-04 17:50:48 -返回值 : {msg=操作成功, code=0}
2019-06-04 17:50:48 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-06-04 17:50:48 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-04 17:50:49 -==> Parameters: 1(Long), admin(String), 登录(String), 17(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-06-04 17:50:48.994(Timestamp)
2019-06-04 17:50:49 -请求地址 : http://localhost:8888/index
2019-06-04 17:50:49 -HTTP METHOD : GET
2019-06-04 17:50:49 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-06-04 17:50:49 -参数 : [{}]
2019-06-04 17:50:49 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-06-04 17:50:49 -==> Parameters: 1(Long)
2019-06-04 17:50:49 -<==      Total: 34
2019-06-04 17:50:49 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-06-04 17:50:49 -==> Parameters: 144(Long)
2019-06-04 17:50:49 -<==      Total: 1
2019-06-04 17:50:49 -耗时 : 30
2019-06-04 17:50:49 -返回值 : index_v1
2019-06-04 17:50:49 -<==    Updates: 1
2019-06-04 17:50:49 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-04 17:50:49 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 30(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-hotel","url":""},"checked":false,"children":[{"attributes":{"icon":"","url":"/xjbg/room/roomMng"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"105","text":"开房"},{"attributes":{"icon":"fa fa-bed","url":"/xjbg/room"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"106","parentId":"105","text":"房间管理"},{"attributes":{"icon":"","url":"/xjbg/product"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"105","text":"商品管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"欣吉宾馆"},{"attributes":{"icon":"fa fa-commenting","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user","url":"/weixin/weixinUser"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"109","text":"用户管理"}],"hasChildren":true,"hasParent":false,"id":"109","parentId":"0","text":"微信管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","text":"基础管理"},{"attributes":{"icon":"fa fa-desktop"},"checked":false,"children":[{"attributes":{"icon":"fa fa-user","url":"sys/user/"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"6","parentId":"3","text":"用户管理"},{"attributes":{"icon":"fa fa-paw","url":"sys/role"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"7","parentId":"3","text":"角色管理"},{"attributes":{"icon":"fa fa-th-list","url":"sys/menu/"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"3","text":"系统菜单"},{"attributes":{"icon":"fa fa-users","url":"/system/sysDept"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"73","parentId":"3","text":"部门管理"}],"hasChildren":true,"hasParent":false,"id":"3","parentId":"0","text":"系统管理"},{"attributes":{"icon":"fa fa-gear","url":""},"checked":false,"children":[{"attributes":{"icon":"","url":"/swagger-ui.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"104","parentId":"77","text":"swagger"},{"attributes":{"icon":"fa fa-code","url":"common/generator"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"48","parentId":"77","text":"代码生成"},{"attributes":{"icon":"fa fa-hourglass-1","url":"common/job"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"72","parentId":"77","text":"计划任务"}],"hasChildren":true,"hasParent":false,"id":"77","parentId":"0","text":"系统工具"},{"attributes":{"icon":"fa fa-video-camera","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user","url":"sys/online"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"92","parentId":"91","text":"在线用户"},{"attributes":{"icon":"fa fa-warning","url":"common/log"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"27","parentId":"91","text":"系统日志"},{"attributes":{"icon":"fa fa-caret-square-o-right","url":"/druid/index.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"57","parentId":"91","text":"运行监控"}],"hasChildren":true,"hasParent":false,"id":"91","parentId":"0","text":"系统监控"},{"attributes":{"icon":"fa fa-laptop","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-pencil-square","url":"oa/notify"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"85","parentId":"84","text":"通知公告"},{"attributes":{"icon":"fa fa-envelope-square","url":"oa/notify/selfNotify"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"90","parentId":"84","text":"我的通知"}],"hasChildren":true,"hasParent":false,"id":"84","parentId":"0","text":"办公管理"},{"attributes":{"icon":"fa fa-print","url":""},"checked":false,"children":[{"attributes":{"icon":"","url":"activiti/task/todo"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"101","parentId":"93","text":"待办任务"},{"attributes":{"icon":"fa fa-sort-amount-asc","url":"activiti/model"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"94","parentId":"93","text":"模型管理"},{"attributes":{"icon":"fa fa-flag","url":"activiti/process"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"96","parentId":"93","text":"流程管理"}],"hasChildren":true,"hasParent":false,"id":"93","parentId":"0","text":"工作流程"},{"attributes":{"icon":"fa fa-rss","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-edit","url":"/blog/bContent/add"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"68","parentId":"49","text":"发布文章"},{"(String), 127.0.0.1(String), 2019-06-04 17:50:49.089(Timestamp)
2019-06-04 17:50:49 -<==    Updates: 1
2019-06-04 17:50:49 -请求地址 : http://localhost:8888/main
2019-06-04 17:50:49 -HTTP METHOD : GET
2019-06-04 17:50:49 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-04 17:50:49 -参数 : []
2019-06-04 17:50:49 -耗时 : 1
2019-06-04 17:50:49 -返回值 : main
2019-06-04 17:50:49 -请求地址 : http://localhost:8888/oa/notify/message
2019-06-04 17:50:49 -HTTP METHOD : GET
2019-06-04 17:50:49 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-06-04 17:50:49 -参数 : []
2019-06-04 17:50:49 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-06-04 17:50:49 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-06-04 17:50:49 -<==      Total: 0
2019-06-04 17:50:49 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-06-04 17:50:49 -==> Parameters: 1(Long), 0(String)
2019-06-04 17:50:49 -<==      Total: 1
2019-06-04 17:50:49 -耗时 : 15
2019-06-04 17:50:49 -返回值 : com.bootdo.common.utils.PageUtils@485be24e
2019-06-04 17:50:49 -请求地址 : http://localhost:8888/main
2019-06-04 17:50:49 -HTTP METHOD : GET
2019-06-04 17:50:49 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-04 17:50:49 -参数 : []
2019-06-04 17:50:49 -耗时 : 0
2019-06-04 17:50:49 -返回值 : main
2019-06-04 17:50:50 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-06-04 17:50:50 -==> Parameters: 1(Long)
2019-06-04 17:50:50 -<==      Total: 58
2019-06-04 17:50:50 -请求地址 : http://localhost:8888/xjbg/room/roomMng
2019-06-04 17:50:50 -HTTP METHOD : GET
2019-06-04 17:50:50 -CLASS_METHOD : com.bootdo.xjbg.controller.RoomController.roomMng
2019-06-04 17:50:50 -参数 : [{}]
2019-06-04 17:50:50 -==>  Preparing: select `id`,`room_no`,`room_type`,`floor`,`room_state`,`price`,`create_time`,`update_time`,`create_user`,`update_user` from xjbg_room 
2019-06-04 17:50:50 -==> Parameters: 
2019-06-04 17:50:50 -<==      Total: 8
2019-06-04 17:50:50 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 17:50:50 -==> Parameters: room_type(String)
2019-06-04 17:50:50 -<==      Total: 7
2019-06-04 17:50:50 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 17:50:50 -==> Parameters: floor(String)
2019-06-04 17:50:50 -<==      Total: 5
2019-06-04 17:50:50 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 17:50:50 -==> Parameters: room_state(String)
2019-06-04 17:50:50 -<==      Total: 2
2019-06-04 17:50:50 -==>  Preparing: select * from sys_user 
2019-06-04 17:50:50 -==> Parameters: 
2019-06-04 17:50:50 -<==      Total: 11
2019-06-04 17:50:50 -耗时 : 19
2019-06-04 17:50:50 -返回值 : xjbg/room/roomMng
2019-06-04 17:50:51 -请求地址 : http://localhost:8888/xjbg/room/operation/1
2019-06-04 17:50:51 -HTTP METHOD : GET
2019-06-04 17:50:51 -CLASS_METHOD : com.bootdo.xjbg.controller.RoomController.operation
2019-06-04 17:50:51 -参数 : [1, {}]
2019-06-04 17:50:51 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 17:50:51 -==> Parameters: room_type(String)
2019-06-04 17:50:51 -<==      Total: 7
2019-06-04 17:50:51 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 17:50:51 -==> Parameters: floor(String)
2019-06-04 17:50:51 -<==      Total: 5
2019-06-04 17:50:51 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 17:50:51 -==> Parameters: room_state(String)
2019-06-04 17:50:51 -<==      Total: 2
2019-06-04 17:50:51 -==>  Preparing: select * from sys_user 
2019-06-04 17:50:51 -==> Parameters: 
2019-06-04 17:50:51 -<==      Total: 11
2019-06-04 17:50:51 -==>  Preparing: select `id`,`product_name`,`purchase_price`,`selling_price`,`product_pic`,`create_time`,`create_user`,`update_time`,`update_user` from xjbg_product order by id desc 
2019-06-04 17:50:51 -==> Parameters: 
2019-06-04 17:50:51 -<==      Total: 5
2019-06-04 17:50:51 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 17:50:51 -==> Parameters: order_type(String)
2019-06-04 17:50:51 -<==      Total: 3
2019-06-04 17:50:51 -==>  Preparing: select `id`,`room_no`,`room_type`,`floor`,`room_state`,`price`,`create_time`,`update_time`,`create_user`,`update_user` from xjbg_room where id = ? 
2019-06-04 17:50:51 -==> Parameters: 1(Integer)
2019-06-04 17:50:51 -<==      Total: 1
2019-06-04 17:50:51 -耗时 : 25
2019-06-04 17:50:51 -返回值 : xjbg/room/operation
2019-06-04 17:50:55 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-04 17:50:55 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8888/xjbg/room/kaifan(String), org.springframework.web.bind.MissingServletRequestParameterException: Required OrderDO parameter 'order' is not present(String), null, 2019-06-04 17:50:55.715(Timestamp)
2019-06-04 17:50:55 -Required OrderDO parameter 'order' is not present
org.springframework.web.bind.MissingServletRequestParameterException: Required OrderDO parameter 'order' is not present
	at org.springframework.web.method.annotation.RequestParamMethodArgumentResolver.handleMissingValue(RequestParamMethodArgumentResolver.java:204)
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:112)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:124)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:161)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:131)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2019-06-04 17:50:55 -Resolved exception caused by Handler execution: org.springframework.web.bind.MissingServletRequestParameterException: Required OrderDO parameter 'order' is not present
2019-06-04 17:50:55 -请求地址 : http://localhost:8888/xjbg/room/operation/1
2019-06-04 17:50:55 -HTTP METHOD : GET
2019-06-04 17:50:55 -CLASS_METHOD : com.bootdo.xjbg.controller.RoomController.operation
2019-06-04 17:50:55 -参数 : [1, {}]
2019-06-04 17:50:55 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 17:50:55 -==> Parameters: room_type(String)
2019-06-04 17:50:55 -<==      Total: 7
2019-06-04 17:50:55 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 17:50:55 -==> Parameters: floor(String)
2019-06-04 17:50:55 -<==      Total: 5
2019-06-04 17:50:55 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 17:50:55 -==> Parameters: room_state(String)
2019-06-04 17:50:55 -<==      Total: 2
2019-06-04 17:50:55 -==>  Preparing: select * from sys_user 
2019-06-04 17:50:55 -==> Parameters: 
2019-06-04 17:50:55 -<==      Total: 11
2019-06-04 17:50:55 -==>  Preparing: select `id`,`product_name`,`purchase_price`,`selling_price`,`product_pic`,`create_time`,`create_user`,`update_time`,`update_user` from xjbg_product order by id desc 
2019-06-04 17:50:55 -==> Parameters: 
2019-06-04 17:50:55 -<==      Total: 5
2019-06-04 17:50:55 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 17:50:55 -==> Parameters: order_type(String)
2019-06-04 17:50:55 -<==      Total: 3
2019-06-04 17:50:55 -==>  Preparing: select `id`,`room_no`,`room_type`,`floor`,`room_state`,`price`,`create_time`,`update_time`,`create_user`,`update_user` from xjbg_room where id = ? 
2019-06-04 17:50:55 -==> Parameters: 1(Integer)
2019-06-04 17:50:55 -<==      Total: 1
2019-06-04 17:50:55 -耗时 : 14
2019-06-04 17:50:55 -返回值 : xjbg/room/operation
2019-06-04 17:50:55 -<==    Updates: 1
2019-06-04 17:51:18 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-04 17:51:18 -Required OrderDO parameter 'order' is not present
org.springframework.web.bind.MissingServletRequestParameterException: Required OrderDO parameter 'order' is not present
	at org.springframework.web.method.annotation.RequestParamMethodArgumentResolver.handleMissingValue(RequestParamMethodArgumentResolver.java:204)
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:112)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:124)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:161)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:131)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2019-06-04 17:51:18 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8888/xjbg/room/kaifan(String), org.springframework.web.bind.MissingServletRequestParameterException: Required OrderDO parameter 'order' is not present(String), null, 2019-06-04 17:51:18.128(Timestamp)
2019-06-04 17:51:18 -Resolved exception caused by Handler execution: org.springframework.web.bind.MissingServletRequestParameterException: Required OrderDO parameter 'order' is not present
2019-06-04 17:51:18 -<==    Updates: 1
2019-06-04 17:53:15 -请求地址 : http://localhost:8888/index
2019-06-04 17:53:15 -HTTP METHOD : GET
2019-06-04 17:53:15 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-06-04 17:53:15 -参数 : [{}]
2019-06-04 17:53:15 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-06-04 17:53:15 -==> Parameters: 1(Long)
2019-06-04 17:53:15 -<==      Total: 34
2019-06-04 17:53:15 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-06-04 17:53:15 -==> Parameters: 144(Long)
2019-06-04 17:53:15 -<==      Total: 1
2019-06-04 17:53:15 -耗时 : 10
2019-06-04 17:53:15 -返回值 : index_v1
2019-06-04 17:53:15 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-04 17:53:15 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 10(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-hotel","url":""},"checked":false,"children":[{"attributes":{"icon":"","url":"/xjbg/room/roomMng"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"105","text":"开房"},{"attributes":{"icon":"fa fa-bed","url":"/xjbg/room"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"106","parentId":"105","text":"房间管理"},{"attributes":{"icon":"","url":"/xjbg/product"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"105","text":"商品管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"欣吉宾馆"},{"attributes":{"icon":"fa fa-commenting","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user","url":"/weixin/weixinUser"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"109","text":"用户管理"}],"hasChildren":true,"hasParent":false,"id":"109","parentId":"0","text":"微信管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","text":"基础管理"},{"attributes":{"icon":"fa fa-desktop"},"checked":false,"children":[{"attributes":{"icon":"fa fa-user","url":"sys/user/"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"6","parentId":"3","text":"用户管理"},{"attributes":{"icon":"fa fa-paw","url":"sys/role"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"7","parentId":"3","text":"角色管理"},{"attributes":{"icon":"fa fa-th-list","url":"sys/menu/"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"3","text":"系统菜单"},{"attributes":{"icon":"fa fa-users","url":"/system/sysDept"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"73","parentId":"3","text":"部门管理"}],"hasChildren":true,"hasParent":false,"id":"3","parentId":"0","text":"系统管理"},{"attributes":{"icon":"fa fa-gear","url":""},"checked":false,"children":[{"attributes":{"icon":"","url":"/swagger-ui.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"104","parentId":"77","text":"swagger"},{"attributes":{"icon":"fa fa-code","url":"common/generator"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"48","parentId":"77","text":"代码生成"},{"attributes":{"icon":"fa fa-hourglass-1","url":"common/job"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"72","parentId":"77","text":"计划任务"}],"hasChildren":true,"hasParent":false,"id":"77","parentId":"0","text":"系统工具"},{"attributes":{"icon":"fa fa-video-camera","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user","url":"sys/online"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"92","parentId":"91","text":"在线用户"},{"attributes":{"icon":"fa fa-warning","url":"common/log"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"27","parentId":"91","text":"系统日志"},{"attributes":{"icon":"fa fa-caret-square-o-right","url":"/druid/index.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"57","parentId":"91","text":"运行监控"}],"hasChildren":true,"hasParent":false,"id":"91","parentId":"0","text":"系统监控"},{"attributes":{"icon":"fa fa-laptop","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-pencil-square","url":"oa/notify"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"85","parentId":"84","text":"通知公告"},{"attributes":{"icon":"fa fa-envelope-square","url":"oa/notify/selfNotify"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"90","parentId":"84","text":"我的通知"}],"hasChildren":true,"hasParent":false,"id":"84","parentId":"0","text":"办公管理"},{"attributes":{"icon":"fa fa-print","url":""},"checked":false,"children":[{"attributes":{"icon":"","url":"activiti/task/todo"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"101","parentId":"93","text":"待办任务"},{"attributes":{"icon":"fa fa-sort-amount-asc","url":"activiti/model"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"94","parentId":"93","text":"模型管理"},{"attributes":{"icon":"fa fa-flag","url":"activiti/process"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"96","parentId":"93","text":"流程管理"}],"hasChildren":true,"hasParent":false,"id":"93","parentId":"0","text":"工作流程"},{"attributes":{"icon":"fa fa-rss","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-edit","url":"/blog/bContent/add"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"68","parentId":"49","text":"发布文章"},{"(String), 127.0.0.1(String), 2019-06-04 17:53:15.876(Timestamp)
2019-06-04 17:53:15 -请求地址 : http://localhost:8888/main
2019-06-04 17:53:15 -HTTP METHOD : GET
2019-06-04 17:53:15 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-04 17:53:15 -参数 : []
2019-06-04 17:53:15 -耗时 : 0
2019-06-04 17:53:15 -返回值 : main
2019-06-04 17:53:15 -<==    Updates: 1
2019-06-04 17:53:16 -请求地址 : http://localhost:8888/oa/notify/message
2019-06-04 17:53:16 -HTTP METHOD : GET
2019-06-04 17:53:16 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-06-04 17:53:16 -参数 : []
2019-06-04 17:53:16 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-06-04 17:53:16 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-06-04 17:53:16 -<==      Total: 0
2019-06-04 17:53:16 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-06-04 17:53:16 -==> Parameters: 1(Long), 0(String)
2019-06-04 17:53:16 -<==      Total: 1
2019-06-04 17:53:16 -耗时 : 7
2019-06-04 17:53:16 -返回值 : com.bootdo.common.utils.PageUtils@23c07bed
2019-06-04 17:53:16 -请求地址 : http://localhost:8888/main
2019-06-04 17:53:16 -HTTP METHOD : GET
2019-06-04 17:53:16 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-04 17:53:16 -参数 : []
2019-06-04 17:53:16 -耗时 : 1
2019-06-04 17:53:16 -返回值 : main
2019-06-04 17:53:17 -请求地址 : http://localhost:8888/xjbg/room/roomMng
2019-06-04 17:53:17 -HTTP METHOD : GET
2019-06-04 17:53:17 -CLASS_METHOD : com.bootdo.xjbg.controller.RoomController.roomMng
2019-06-04 17:53:17 -参数 : [{}]
2019-06-04 17:53:17 -==>  Preparing: select `id`,`room_no`,`room_type`,`floor`,`room_state`,`price`,`create_time`,`update_time`,`create_user`,`update_user` from xjbg_room 
2019-06-04 17:53:17 -==> Parameters: 
2019-06-04 17:53:17 -<==      Total: 8
2019-06-04 17:53:17 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 17:53:17 -==> Parameters: room_type(String)
2019-06-04 17:53:17 -<==      Total: 7
2019-06-04 17:53:17 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 17:53:17 -==> Parameters: floor(String)
2019-06-04 17:53:17 -<==      Total: 5
2019-06-04 17:53:17 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 17:53:17 -==> Parameters: room_state(String)
2019-06-04 17:53:17 -<==      Total: 2
2019-06-04 17:53:17 -==>  Preparing: select * from sys_user 
2019-06-04 17:53:17 -==> Parameters: 
2019-06-04 17:53:17 -<==      Total: 11
2019-06-04 17:53:17 -耗时 : 17
2019-06-04 17:53:17 -返回值 : xjbg/room/roomMng
2019-06-04 17:53:17 -请求地址 : http://localhost:8888/xjbg/room/operation/1
2019-06-04 17:53:17 -HTTP METHOD : GET
2019-06-04 17:53:17 -CLASS_METHOD : com.bootdo.xjbg.controller.RoomController.operation
2019-06-04 17:53:17 -参数 : [1, {}]
2019-06-04 17:53:17 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 17:53:17 -==> Parameters: room_type(String)
2019-06-04 17:53:17 -<==      Total: 7
2019-06-04 17:53:17 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 17:53:17 -==> Parameters: floor(String)
2019-06-04 17:53:17 -<==      Total: 5
2019-06-04 17:53:17 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 17:53:17 -==> Parameters: room_state(String)
2019-06-04 17:53:17 -<==      Total: 2
2019-06-04 17:53:17 -==>  Preparing: select * from sys_user 
2019-06-04 17:53:17 -==> Parameters: 
2019-06-04 17:53:17 -<==      Total: 11
2019-06-04 17:53:17 -==>  Preparing: select `id`,`product_name`,`purchase_price`,`selling_price`,`product_pic`,`create_time`,`create_user`,`update_time`,`update_user` from xjbg_product order by id desc 
2019-06-04 17:53:17 -==> Parameters: 
2019-06-04 17:53:17 -<==      Total: 5
2019-06-04 17:53:17 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 17:53:17 -==> Parameters: order_type(String)
2019-06-04 17:53:17 -<==      Total: 3
2019-06-04 17:53:17 -==>  Preparing: select `id`,`room_no`,`room_type`,`floor`,`room_state`,`price`,`create_time`,`update_time`,`create_user`,`update_user` from xjbg_room where id = ? 
2019-06-04 17:53:17 -==> Parameters: 1(Integer)
2019-06-04 17:53:17 -<==      Total: 1
2019-06-04 17:53:17 -耗时 : 12
2019-06-04 17:53:17 -返回值 : xjbg/room/operation
2019-06-04 17:54:19 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-04 17:54:19 -Required OrderDO parameter 'order' is not present
org.springframework.web.bind.MissingServletRequestParameterException: Required OrderDO parameter 'order' is not present
	at org.springframework.web.method.annotation.RequestParamMethodArgumentResolver.handleMissingValue(RequestParamMethodArgumentResolver.java:204)
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:112)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:124)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:161)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:131)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2019-06-04 17:54:19 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8888/xjbg/room/kaifan(String), org.springframework.web.bind.MissingServletRequestParameterException: Required OrderDO parameter 'order' is not present(String), null, 2019-06-04 17:54:19.778(Timestamp)
2019-06-04 17:54:19 -Resolved exception caused by Handler execution: org.springframework.web.bind.MissingServletRequestParameterException: Required OrderDO parameter 'order' is not present
2019-06-04 17:54:19 -请求地址 : http://localhost:8888/xjbg/room/operation/1
2019-06-04 17:54:19 -HTTP METHOD : GET
2019-06-04 17:54:19 -CLASS_METHOD : com.bootdo.xjbg.controller.RoomController.operation
2019-06-04 17:54:19 -参数 : [1, {}]
2019-06-04 17:54:19 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 17:54:19 -==> Parameters: room_type(String)
2019-06-04 17:54:19 -<==      Total: 7
2019-06-04 17:54:19 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 17:54:19 -==> Parameters: floor(String)
2019-06-04 17:54:19 -<==      Total: 5
2019-06-04 17:54:19 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 17:54:19 -==> Parameters: room_state(String)
2019-06-04 17:54:19 -<==      Total: 2
2019-06-04 17:54:19 -==>  Preparing: select * from sys_user 
2019-06-04 17:54:19 -==> Parameters: 
2019-06-04 17:54:19 -<==      Total: 11
2019-06-04 17:54:19 -==>  Preparing: select `id`,`product_name`,`purchase_price`,`selling_price`,`product_pic`,`create_time`,`create_user`,`update_time`,`update_user` from xjbg_product order by id desc 
2019-06-04 17:54:19 -==> Parameters: 
2019-06-04 17:54:19 -<==      Total: 5
2019-06-04 17:54:19 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 17:54:19 -==> Parameters: order_type(String)
2019-06-04 17:54:19 -<==      Total: 3
2019-06-04 17:54:19 -==>  Preparing: select `id`,`room_no`,`room_type`,`floor`,`room_state`,`price`,`create_time`,`update_time`,`create_user`,`update_user` from xjbg_room where id = ? 
2019-06-04 17:54:19 -==> Parameters: 1(Integer)
2019-06-04 17:54:19 -<==      Total: 1
2019-06-04 17:54:19 -耗时 : 15
2019-06-04 17:54:19 -返回值 : xjbg/room/operation
2019-06-04 17:54:19 -<==    Updates: 1
2019-06-04 17:57:16 -请求地址 : http://localhost:8888/index
2019-06-04 17:57:16 -HTTP METHOD : GET
2019-06-04 17:57:16 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-06-04 17:57:16 -参数 : [{}]
2019-06-04 17:57:16 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-06-04 17:57:16 -==> Parameters: 1(Long)
2019-06-04 17:57:16 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-04 17:57:16 -Required OrderDO parameter 'order' is not present
org.springframework.web.bind.MissingServletRequestParameterException: Required OrderDO parameter 'order' is not present
	at org.springframework.web.method.annotation.RequestParamMethodArgumentResolver.handleMissingValue(RequestParamMethodArgumentResolver.java:204)
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:112)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:124)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:161)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:131)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2019-06-04 17:57:16 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8888/xjbg/room/kaifan(String), org.springframework.web.bind.MissingServletRequestParameterException: Required OrderDO parameter 'order' is not present(String), null, 2019-06-04 17:57:16.005(Timestamp)
2019-06-04 17:57:16 -Resolved exception caused by Handler execution: org.springframework.web.bind.MissingServletRequestParameterException: Required OrderDO parameter 'order' is not present
2019-06-04 17:57:16 -<==      Total: 34
2019-06-04 17:57:16 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-06-04 17:57:16 -==> Parameters: 144(Long)
2019-06-04 17:57:16 -<==      Total: 1
2019-06-04 17:57:16 -耗时 : 8
2019-06-04 17:57:16 -返回值 : index_v1
2019-06-04 17:57:16 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-04 17:57:16 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 8(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-hotel","url":""},"checked":false,"children":[{"attributes":{"icon":"","url":"/xjbg/room/roomMng"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"105","text":"开房"},{"attributes":{"icon":"fa fa-bed","url":"/xjbg/room"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"106","parentId":"105","text":"房间管理"},{"attributes":{"icon":"","url":"/xjbg/product"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"105","text":"商品管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"欣吉宾馆"},{"attributes":{"icon":"fa fa-commenting","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user","url":"/weixin/weixinUser"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"109","text":"用户管理"}],"hasChildren":true,"hasParent":false,"id":"109","parentId":"0","text":"微信管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","text":"基础管理"},{"attributes":{"icon":"fa fa-desktop"},"checked":false,"children":[{"attributes":{"icon":"fa fa-user","url":"sys/user/"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"6","parentId":"3","text":"用户管理"},{"attributes":{"icon":"fa fa-paw","url":"sys/role"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"7","parentId":"3","text":"角色管理"},{"attributes":{"icon":"fa fa-th-list","url":"sys/menu/"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"3","text":"系统菜单"},{"attributes":{"icon":"fa fa-users","url":"/system/sysDept"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"73","parentId":"3","text":"部门管理"}],"hasChildren":true,"hasParent":false,"id":"3","parentId":"0","text":"系统管理"},{"attributes":{"icon":"fa fa-gear","url":""},"checked":false,"children":[{"attributes":{"icon":"","url":"/swagger-ui.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"104","parentId":"77","text":"swagger"},{"attributes":{"icon":"fa fa-code","url":"common/generator"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"48","parentId":"77","text":"代码生成"},{"attributes":{"icon":"fa fa-hourglass-1","url":"common/job"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"72","parentId":"77","text":"计划任务"}],"hasChildren":true,"hasParent":false,"id":"77","parentId":"0","text":"系统工具"},{"attributes":{"icon":"fa fa-video-camera","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user","url":"sys/online"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"92","parentId":"91","text":"在线用户"},{"attributes":{"icon":"fa fa-warning","url":"common/log"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"27","parentId":"91","text":"系统日志"},{"attributes":{"icon":"fa fa-caret-square-o-right","url":"/druid/index.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"57","parentId":"91","text":"运行监控"}],"hasChildren":true,"hasParent":false,"id":"91","parentId":"0","text":"系统监控"},{"attributes":{"icon":"fa fa-laptop","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-pencil-square","url":"oa/notify"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"85","parentId":"84","text":"通知公告"},{"attributes":{"icon":"fa fa-envelope-square","url":"oa/notify/selfNotify"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"90","parentId":"84","text":"我的通知"}],"hasChildren":true,"hasParent":false,"id":"84","parentId":"0","text":"办公管理"},{"attributes":{"icon":"fa fa-print","url":""},"checked":false,"children":[{"attributes":{"icon":"","url":"activiti/task/todo"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"101","parentId":"93","text":"待办任务"},{"attributes":{"icon":"fa fa-sort-amount-asc","url":"activiti/model"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"94","parentId":"93","text":"模型管理"},{"attributes":{"icon":"fa fa-flag","url":"activiti/process"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"96","parentId":"93","text":"流程管理"}],"hasChildren":true,"hasParent":false,"id":"93","parentId":"0","text":"工作流程"},{"attributes":{"icon":"fa fa-rss","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-edit","url":"/blog/bContent/add"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"68","parentId":"49","text":"发布文章"},{"(String), 127.0.0.1(String), 2019-06-04 17:57:16.013(Timestamp)
2019-06-04 17:57:16 -<==    Updates: 1
2019-06-04 17:57:16 -<==    Updates: 1
2019-06-04 17:57:16 -请求地址 : http://localhost:8888/main
2019-06-04 17:57:16 -HTTP METHOD : GET
2019-06-04 17:57:16 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-04 17:57:16 -参数 : []
2019-06-04 17:57:16 -耗时 : 0
2019-06-04 17:57:16 -返回值 : main
2019-06-04 17:57:16 -请求地址 : http://localhost:8888/oa/notify/message
2019-06-04 17:57:16 -HTTP METHOD : GET
2019-06-04 17:57:16 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-06-04 17:57:16 -参数 : []
2019-06-04 17:57:16 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-06-04 17:57:16 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-06-04 17:57:16 -<==      Total: 0
2019-06-04 17:57:16 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-06-04 17:57:16 -==> Parameters: 1(Long), 0(String)
2019-06-04 17:57:16 -<==      Total: 1
2019-06-04 17:57:16 -耗时 : 4
2019-06-04 17:57:16 -返回值 : com.bootdo.common.utils.PageUtils@4745efa7
2019-06-04 17:57:16 -请求地址 : http://localhost:8888/main
2019-06-04 17:57:16 -HTTP METHOD : GET
2019-06-04 17:57:16 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-04 17:57:16 -参数 : []
2019-06-04 17:57:16 -耗时 : 0
2019-06-04 17:57:16 -返回值 : main
2019-06-04 17:57:18 -请求地址 : http://localhost:8888/xjbg/room/roomMng
2019-06-04 17:57:18 -HTTP METHOD : GET
2019-06-04 17:57:18 -CLASS_METHOD : com.bootdo.xjbg.controller.RoomController.roomMng
2019-06-04 17:57:18 -参数 : [{}]
2019-06-04 17:57:18 -==>  Preparing: select `id`,`room_no`,`room_type`,`floor`,`room_state`,`price`,`create_time`,`update_time`,`create_user`,`update_user` from xjbg_room 
2019-06-04 17:57:18 -==> Parameters: 
2019-06-04 17:57:18 -<==      Total: 8
2019-06-04 17:57:18 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 17:57:18 -==> Parameters: room_type(String)
2019-06-04 17:57:18 -<==      Total: 7
2019-06-04 17:57:18 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 17:57:18 -==> Parameters: floor(String)
2019-06-04 17:57:18 -<==      Total: 5
2019-06-04 17:57:18 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 17:57:18 -==> Parameters: room_state(String)
2019-06-04 17:57:18 -<==      Total: 2
2019-06-04 17:57:18 -==>  Preparing: select * from sys_user 
2019-06-04 17:57:18 -==> Parameters: 
2019-06-04 17:57:18 -<==      Total: 11
2019-06-04 17:57:18 -耗时 : 7
2019-06-04 17:57:18 -返回值 : xjbg/room/roomMng
2019-06-04 17:57:19 -请求地址 : http://localhost:8888/xjbg/room/operation/1
2019-06-04 17:57:19 -HTTP METHOD : GET
2019-06-04 17:57:19 -CLASS_METHOD : com.bootdo.xjbg.controller.RoomController.operation
2019-06-04 17:57:19 -参数 : [1, {}]
2019-06-04 17:57:19 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 17:57:19 -==> Parameters: room_type(String)
2019-06-04 17:57:19 -<==      Total: 7
2019-06-04 17:57:19 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 17:57:19 -==> Parameters: floor(String)
2019-06-04 17:57:19 -<==      Total: 5
2019-06-04 17:57:19 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 17:57:19 -==> Parameters: room_state(String)
2019-06-04 17:57:19 -<==      Total: 2
2019-06-04 17:57:19 -==>  Preparing: select * from sys_user 
2019-06-04 17:57:19 -==> Parameters: 
2019-06-04 17:57:19 -<==      Total: 11
2019-06-04 17:57:19 -==>  Preparing: select `id`,`product_name`,`purchase_price`,`selling_price`,`product_pic`,`create_time`,`create_user`,`update_time`,`update_user` from xjbg_product order by id desc 
2019-06-04 17:57:19 -==> Parameters: 
2019-06-04 17:57:19 -<==      Total: 5
2019-06-04 17:57:19 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 17:57:19 -==> Parameters: order_type(String)
2019-06-04 17:57:19 -<==      Total: 3
2019-06-04 17:57:19 -==>  Preparing: select `id`,`room_no`,`room_type`,`floor`,`room_state`,`price`,`create_time`,`update_time`,`create_user`,`update_user` from xjbg_room where id = ? 
2019-06-04 17:57:19 -==> Parameters: 1(Integer)
2019-06-04 17:57:19 -<==      Total: 1
2019-06-04 17:57:19 -耗时 : 13
2019-06-04 17:57:19 -返回值 : xjbg/room/operation
2019-06-04 17:57:29 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-04 17:57:29 -Required OrderDO parameter 'order' is not present
org.springframework.web.bind.MissingServletRequestParameterException: Required OrderDO parameter 'order' is not present
	at org.springframework.web.method.annotation.RequestParamMethodArgumentResolver.handleMissingValue(RequestParamMethodArgumentResolver.java:204)
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:112)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:124)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:161)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:131)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2019-06-04 17:57:29 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8888/xjbg/room/kaifan(String), org.springframework.web.bind.MissingServletRequestParameterException: Required OrderDO parameter 'order' is not present(String), null, 2019-06-04 17:57:29.412(Timestamp)
2019-06-04 17:57:29 -Resolved exception caused by Handler execution: org.springframework.web.bind.MissingServletRequestParameterException: Required OrderDO parameter 'order' is not present
2019-06-04 17:57:29 -请求地址 : http://localhost:8888/xjbg/room/operation/1
2019-06-04 17:57:29 -HTTP METHOD : GET
2019-06-04 17:57:29 -CLASS_METHOD : com.bootdo.xjbg.controller.RoomController.operation
2019-06-04 17:57:29 -参数 : [1, {}]
2019-06-04 17:57:29 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 17:57:29 -==> Parameters: room_type(String)
2019-06-04 17:57:29 -<==      Total: 7
2019-06-04 17:57:29 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 17:57:29 -==> Parameters: floor(String)
2019-06-04 17:57:29 -<==      Total: 5
2019-06-04 17:57:29 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 17:57:29 -==> Parameters: room_state(String)
2019-06-04 17:57:29 -<==      Total: 2
2019-06-04 17:57:29 -==>  Preparing: select * from sys_user 
2019-06-04 17:57:29 -==> Parameters: 
2019-06-04 17:57:29 -<==      Total: 11
2019-06-04 17:57:29 -==>  Preparing: select `id`,`product_name`,`purchase_price`,`selling_price`,`product_pic`,`create_time`,`create_user`,`update_time`,`update_user` from xjbg_product order by id desc 
2019-06-04 17:57:29 -==> Parameters: 
2019-06-04 17:57:29 -<==      Total: 5
2019-06-04 17:57:29 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 17:57:29 -==> Parameters: order_type(String)
2019-06-04 17:57:29 -<==      Total: 3
2019-06-04 17:57:29 -==>  Preparing: select `id`,`room_no`,`room_type`,`floor`,`room_state`,`price`,`create_time`,`update_time`,`create_user`,`update_user` from xjbg_room where id = ? 
2019-06-04 17:57:29 -==> Parameters: 1(Integer)
2019-06-04 17:57:29 -<==      Total: 1
2019-06-04 17:57:29 -耗时 : 13
2019-06-04 17:57:29 -返回值 : xjbg/room/operation
2019-06-04 17:57:30 -<==    Updates: 1
2019-06-04 18:05:25 -请求地址 : http://localhost:8888/index
2019-06-04 18:05:25 -HTTP METHOD : GET
2019-06-04 18:05:25 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-06-04 18:05:25 -参数 : [{}]
2019-06-04 18:05:25 -Required OrderDO parameter 'order' is not present
org.springframework.web.bind.MissingServletRequestParameterException: Required OrderDO parameter 'order' is not present
	at org.springframework.web.method.annotation.RequestParamMethodArgumentResolver.handleMissingValue(RequestParamMethodArgumentResolver.java:204)
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:112)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:124)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:161)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:131)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2019-06-04 18:05:25 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-04 18:05:25 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-06-04 18:05:25 -==> Parameters: 1(Long)
2019-06-04 18:05:25 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8888/xjbg/room/kaifan(String), org.springframework.web.bind.MissingServletRequestParameterException: Required OrderDO parameter 'order' is not present(String), null, 2019-06-04 18:05:25.365(Timestamp)
2019-06-04 18:05:25 -Resolved exception caused by Handler execution: org.springframework.web.bind.MissingServletRequestParameterException: Required OrderDO parameter 'order' is not present
2019-06-04 18:05:25 -<==      Total: 34
2019-06-04 18:05:25 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-06-04 18:05:25 -==> Parameters: 144(Long)
2019-06-04 18:05:25 -<==      Total: 1
2019-06-04 18:05:25 -耗时 : 9
2019-06-04 18:05:25 -返回值 : index_v1
2019-06-04 18:05:25 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-04 18:05:25 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 9(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-hotel","url":""},"checked":false,"children":[{"attributes":{"icon":"","url":"/xjbg/room/roomMng"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"105","text":"开房"},{"attributes":{"icon":"fa fa-bed","url":"/xjbg/room"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"106","parentId":"105","text":"房间管理"},{"attributes":{"icon":"","url":"/xjbg/product"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"105","text":"商品管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"欣吉宾馆"},{"attributes":{"icon":"fa fa-commenting","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user","url":"/weixin/weixinUser"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"109","text":"用户管理"}],"hasChildren":true,"hasParent":false,"id":"109","parentId":"0","text":"微信管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","text":"基础管理"},{"attributes":{"icon":"fa fa-desktop"},"checked":false,"children":[{"attributes":{"icon":"fa fa-user","url":"sys/user/"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"6","parentId":"3","text":"用户管理"},{"attributes":{"icon":"fa fa-paw","url":"sys/role"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"7","parentId":"3","text":"角色管理"},{"attributes":{"icon":"fa fa-th-list","url":"sys/menu/"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"3","text":"系统菜单"},{"attributes":{"icon":"fa fa-users","url":"/system/sysDept"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"73","parentId":"3","text":"部门管理"}],"hasChildren":true,"hasParent":false,"id":"3","parentId":"0","text":"系统管理"},{"attributes":{"icon":"fa fa-gear","url":""},"checked":false,"children":[{"attributes":{"icon":"","url":"/swagger-ui.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"104","parentId":"77","text":"swagger"},{"attributes":{"icon":"fa fa-code","url":"common/generator"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"48","parentId":"77","text":"代码生成"},{"attributes":{"icon":"fa fa-hourglass-1","url":"common/job"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"72","parentId":"77","text":"计划任务"}],"hasChildren":true,"hasParent":false,"id":"77","parentId":"0","text":"系统工具"},{"attributes":{"icon":"fa fa-video-camera","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user","url":"sys/online"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"92","parentId":"91","text":"在线用户"},{"attributes":{"icon":"fa fa-warning","url":"common/log"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"27","parentId":"91","text":"系统日志"},{"attributes":{"icon":"fa fa-caret-square-o-right","url":"/druid/index.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"57","parentId":"91","text":"运行监控"}],"hasChildren":true,"hasParent":false,"id":"91","parentId":"0","text":"系统监控"},{"attributes":{"icon":"fa fa-laptop","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-pencil-square","url":"oa/notify"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"85","parentId":"84","text":"通知公告"},{"attributes":{"icon":"fa fa-envelope-square","url":"oa/notify/selfNotify"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"90","parentId":"84","text":"我的通知"}],"hasChildren":true,"hasParent":false,"id":"84","parentId":"0","text":"办公管理"},{"attributes":{"icon":"fa fa-print","url":""},"checked":false,"children":[{"attributes":{"icon":"","url":"activiti/task/todo"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"101","parentId":"93","text":"待办任务"},{"attributes":{"icon":"fa fa-sort-amount-asc","url":"activiti/model"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"94","parentId":"93","text":"模型管理"},{"attributes":{"icon":"fa fa-flag","url":"activiti/process"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"96","parentId":"93","text":"流程管理"}],"hasChildren":true,"hasParent":false,"id":"93","parentId":"0","text":"工作流程"},{"attributes":{"icon":"fa fa-rss","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-edit","url":"/blog/bContent/add"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"68","parentId":"49","text":"发布文章"},{"(String), 127.0.0.1(String), 2019-06-04 18:05:25.375(Timestamp)
2019-06-04 18:05:25 -<==    Updates: 1
2019-06-04 18:05:25 -<==    Updates: 1
2019-06-04 18:05:25 -请求地址 : http://localhost:8888/main
2019-06-04 18:05:25 -HTTP METHOD : GET
2019-06-04 18:05:25 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-04 18:05:25 -参数 : []
2019-06-04 18:05:25 -耗时 : 0
2019-06-04 18:05:25 -返回值 : main
2019-06-04 18:05:25 -请求地址 : http://localhost:8888/oa/notify/message
2019-06-04 18:05:25 -HTTP METHOD : GET
2019-06-04 18:05:25 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-06-04 18:05:25 -参数 : []
2019-06-04 18:05:25 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-06-04 18:05:25 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-06-04 18:05:25 -<==      Total: 0
2019-06-04 18:05:25 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-06-04 18:05:25 -==> Parameters: 1(Long), 0(String)
2019-06-04 18:05:25 -<==      Total: 1
2019-06-04 18:05:25 -耗时 : 3
2019-06-04 18:05:25 -返回值 : com.bootdo.common.utils.PageUtils@378991ba
2019-06-04 18:05:25 -请求地址 : http://localhost:8888/main
2019-06-04 18:05:25 -HTTP METHOD : GET
2019-06-04 18:05:25 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-04 18:05:25 -参数 : []
2019-06-04 18:05:25 -耗时 : 1
2019-06-04 18:05:25 -返回值 : main
2019-06-04 18:05:29 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-06-04 18:05:29 -==> Parameters: 1(Long)
2019-06-04 18:05:29 -<==      Total: 58
2019-06-04 18:05:29 -请求地址 : http://localhost:8888/xjbg/room
2019-06-04 18:05:29 -HTTP METHOD : GET
2019-06-04 18:05:29 -CLASS_METHOD : com.bootdo.xjbg.controller.RoomController.Room
2019-06-04 18:05:29 -参数 : [{}]
2019-06-04 18:05:29 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 18:05:29 -==> Parameters: room_type(String)
2019-06-04 18:05:29 -<==      Total: 7
2019-06-04 18:05:29 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 18:05:29 -==> Parameters: floor(String)
2019-06-04 18:05:29 -<==      Total: 5
2019-06-04 18:05:29 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 18:05:29 -==> Parameters: room_state(String)
2019-06-04 18:05:29 -<==      Total: 2
2019-06-04 18:05:29 -==>  Preparing: select * from sys_user 
2019-06-04 18:05:29 -==> Parameters: 
2019-06-04 18:05:29 -<==      Total: 11
2019-06-04 18:05:29 -耗时 : 5
2019-06-04 18:05:29 -返回值 : xjbg/room/room
2019-06-04 18:05:29 -请求地址 : http://localhost:8888/xjbg/room/list
2019-06-04 18:05:29 -HTTP METHOD : GET
2019-06-04 18:05:29 -CLASS_METHOD : com.bootdo.xjbg.controller.RoomController.list
2019-06-04 18:05:29 -参数 : [{limit=10, offset=0}]
2019-06-04 18:05:29 -==>  Preparing: select `id`,`room_no`,`room_type`,`floor`,`room_state`,`price`,`create_time`,`update_time`,`create_user`,`update_user` from xjbg_room order by room_no desc limit ?, ? 
2019-06-04 18:05:29 -==> Parameters: 0(Integer), 10(Integer)
2019-06-04 18:05:29 -<==      Total: 8
2019-06-04 18:05:29 -==>  Preparing: select count(*) from xjbg_room 
2019-06-04 18:05:29 -==> Parameters: 
2019-06-04 18:05:29 -<==      Total: 1
2019-06-04 18:05:29 -耗时 : 10
2019-06-04 18:05:29 -返回值 : com.bootdo.common.utils.PageUtils@24e91af3
2019-06-04 18:05:29 -请求地址 : http://localhost:8888/xjbg/room/roomMng
2019-06-04 18:05:29 -HTTP METHOD : GET
2019-06-04 18:05:29 -CLASS_METHOD : com.bootdo.xjbg.controller.RoomController.roomMng
2019-06-04 18:05:29 -参数 : [{}]
2019-06-04 18:05:29 -==>  Preparing: select `id`,`room_no`,`room_type`,`floor`,`room_state`,`price`,`create_time`,`update_time`,`create_user`,`update_user` from xjbg_room 
2019-06-04 18:05:29 -==> Parameters: 
2019-06-04 18:05:29 -<==      Total: 8
2019-06-04 18:05:29 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 18:05:29 -==> Parameters: room_type(String)
2019-06-04 18:05:29 -<==      Total: 7
2019-06-04 18:05:29 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 18:05:29 -==> Parameters: floor(String)
2019-06-04 18:05:29 -<==      Total: 5
2019-06-04 18:05:29 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 18:05:29 -==> Parameters: room_state(String)
2019-06-04 18:05:29 -<==      Total: 2
2019-06-04 18:05:29 -==>  Preparing: select * from sys_user 
2019-06-04 18:05:29 -==> Parameters: 
2019-06-04 18:05:29 -<==      Total: 11
2019-06-04 18:05:29 -耗时 : 26
2019-06-04 18:05:29 -返回值 : xjbg/room/roomMng
2019-06-04 18:05:30 -请求地址 : http://localhost:8888/xjbg/room/operation/1
2019-06-04 18:05:30 -HTTP METHOD : GET
2019-06-04 18:05:30 -CLASS_METHOD : com.bootdo.xjbg.controller.RoomController.operation
2019-06-04 18:05:30 -参数 : [1, {}]
2019-06-04 18:05:30 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 18:05:30 -==> Parameters: room_type(String)
2019-06-04 18:05:30 -<==      Total: 7
2019-06-04 18:05:30 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 18:05:30 -==> Parameters: floor(String)
2019-06-04 18:05:30 -<==      Total: 5
2019-06-04 18:05:30 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 18:05:30 -==> Parameters: room_state(String)
2019-06-04 18:05:30 -<==      Total: 2
2019-06-04 18:05:30 -==>  Preparing: select * from sys_user 
2019-06-04 18:05:30 -==> Parameters: 
2019-06-04 18:05:30 -<==      Total: 11
2019-06-04 18:05:30 -==>  Preparing: select `id`,`product_name`,`purchase_price`,`selling_price`,`product_pic`,`create_time`,`create_user`,`update_time`,`update_user` from xjbg_product order by id desc 
2019-06-04 18:05:30 -==> Parameters: 
2019-06-04 18:05:30 -<==      Total: 5
2019-06-04 18:05:30 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 18:05:30 -==> Parameters: order_type(String)
2019-06-04 18:05:30 -<==      Total: 3
2019-06-04 18:05:30 -==>  Preparing: select `id`,`room_no`,`room_type`,`floor`,`room_state`,`price`,`create_time`,`update_time`,`create_user`,`update_user` from xjbg_room where id = ? 
2019-06-04 18:05:30 -==> Parameters: 1(Integer)
2019-06-04 18:05:30 -<==      Total: 1
2019-06-04 18:05:30 -耗时 : 22
2019-06-04 18:05:30 -返回值 : xjbg/room/operation
2019-06-04 18:05:50 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-04 18:05:50 -Required OrderDO parameter 'order' is not present
org.springframework.web.bind.MissingServletRequestParameterException: Required OrderDO parameter 'order' is not present
	at org.springframework.web.method.annotation.RequestParamMethodArgumentResolver.handleMissingValue(RequestParamMethodArgumentResolver.java:204)
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:112)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:124)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:161)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:131)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2019-06-04 18:05:50 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8888/xjbg/room/kaifan(String), org.springframework.web.bind.MissingServletRequestParameterException: Required OrderDO parameter 'order' is not present(String), null, 2019-06-04 18:05:50.656(Timestamp)
2019-06-04 18:05:50 -Resolved exception caused by Handler execution: org.springframework.web.bind.MissingServletRequestParameterException: Required OrderDO parameter 'order' is not present
2019-06-04 18:05:50 -请求地址 : http://localhost:8888/xjbg/room/operation/1
2019-06-04 18:05:50 -HTTP METHOD : GET
2019-06-04 18:05:50 -CLASS_METHOD : com.bootdo.xjbg.controller.RoomController.operation
2019-06-04 18:05:50 -参数 : [1, {}]
2019-06-04 18:05:50 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 18:05:50 -==> Parameters: room_type(String)
2019-06-04 18:05:50 -<==      Total: 7
2019-06-04 18:05:50 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 18:05:50 -==> Parameters: floor(String)
2019-06-04 18:05:50 -<==      Total: 5
2019-06-04 18:05:50 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 18:05:50 -==> Parameters: room_state(String)
2019-06-04 18:05:50 -<==      Total: 2
2019-06-04 18:05:50 -==>  Preparing: select * from sys_user 
2019-06-04 18:05:50 -==> Parameters: 
2019-06-04 18:05:50 -<==      Total: 11
2019-06-04 18:05:50 -==>  Preparing: select `id`,`product_name`,`purchase_price`,`selling_price`,`product_pic`,`create_time`,`create_user`,`update_time`,`update_user` from xjbg_product order by id desc 
2019-06-04 18:05:50 -==> Parameters: 
2019-06-04 18:05:50 -<==      Total: 5
2019-06-04 18:05:50 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 18:05:50 -==> Parameters: order_type(String)
2019-06-04 18:05:50 -<==      Total: 3
2019-06-04 18:05:50 -==>  Preparing: select `id`,`room_no`,`room_type`,`floor`,`room_state`,`price`,`create_time`,`update_time`,`create_user`,`update_user` from xjbg_room where id = ? 
2019-06-04 18:05:50 -==> Parameters: 1(Integer)
2019-06-04 18:05:50 -<==      Total: 1
2019-06-04 18:05:50 -耗时 : 14
2019-06-04 18:05:50 -返回值 : xjbg/room/operation
2019-06-04 18:05:50 -<==    Updates: 1
2019-06-04 18:06:02 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-04 18:06:02 -Required OrderDO parameter 'order' is not present
org.springframework.web.bind.MissingServletRequestParameterException: Required OrderDO parameter 'order' is not present
	at org.springframework.web.method.annotation.RequestParamMethodArgumentResolver.handleMissingValue(RequestParamMethodArgumentResolver.java:204)
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:112)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:124)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:161)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:131)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2019-06-04 18:06:02 -Resolved exception caused by Handler execution: org.springframework.web.bind.MissingServletRequestParameterException: Required OrderDO parameter 'order' is not present
2019-06-04 18:06:02 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8888/xjbg/room/kaifan(String), org.springframework.web.bind.MissingServletRequestParameterException: Required OrderDO parameter 'order' is not present(String), null, 2019-06-04 18:06:02.368(Timestamp)
2019-06-04 18:06:02 -<==    Updates: 1
2019-06-04 18:06:10 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-04 18:06:10 -Required OrderDO parameter 'order' is not present
org.springframework.web.bind.MissingServletRequestParameterException: Required OrderDO parameter 'order' is not present
	at org.springframework.web.method.annotation.RequestParamMethodArgumentResolver.handleMissingValue(RequestParamMethodArgumentResolver.java:204)
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:112)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:124)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:161)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:131)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2019-06-04 18:06:10 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8888/xjbg/room/kaifan(String), org.springframework.web.bind.MissingServletRequestParameterException: Required OrderDO parameter 'order' is not present(String), null, 2019-06-04 18:06:10.797(Timestamp)
2019-06-04 18:06:10 -Resolved exception caused by Handler execution: org.springframework.web.bind.MissingServletRequestParameterException: Required OrderDO parameter 'order' is not present
2019-06-04 18:06:10 -<==    Updates: 1
2019-06-04 18:06:58 -请求地址 : http://localhost:8888/index
2019-06-04 18:06:58 -HTTP METHOD : GET
2019-06-04 18:06:58 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-06-04 18:06:58 -参数 : [{}]
2019-06-04 18:06:58 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-06-04 18:06:58 -==> Parameters: 1(Long)
2019-06-04 18:06:58 -<==      Total: 34
2019-06-04 18:06:58 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-06-04 18:06:58 -==> Parameters: 144(Long)
2019-06-04 18:06:58 -<==      Total: 1
2019-06-04 18:06:58 -耗时 : 4
2019-06-04 18:06:58 -返回值 : index_v1
2019-06-04 18:06:58 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-04 18:06:58 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 4(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-hotel","url":""},"checked":false,"children":[{"attributes":{"icon":"","url":"/xjbg/room/roomMng"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"105","text":"开房"},{"attributes":{"icon":"fa fa-bed","url":"/xjbg/room"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"106","parentId":"105","text":"房间管理"},{"attributes":{"icon":"","url":"/xjbg/product"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"105","text":"商品管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"欣吉宾馆"},{"attributes":{"icon":"fa fa-commenting","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user","url":"/weixin/weixinUser"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"109","text":"用户管理"}],"hasChildren":true,"hasParent":false,"id":"109","parentId":"0","text":"微信管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","text":"基础管理"},{"attributes":{"icon":"fa fa-desktop"},"checked":false,"children":[{"attributes":{"icon":"fa fa-user","url":"sys/user/"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"6","parentId":"3","text":"用户管理"},{"attributes":{"icon":"fa fa-paw","url":"sys/role"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"7","parentId":"3","text":"角色管理"},{"attributes":{"icon":"fa fa-th-list","url":"sys/menu/"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"3","text":"系统菜单"},{"attributes":{"icon":"fa fa-users","url":"/system/sysDept"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"73","parentId":"3","text":"部门管理"}],"hasChildren":true,"hasParent":false,"id":"3","parentId":"0","text":"系统管理"},{"attributes":{"icon":"fa fa-gear","url":""},"checked":false,"children":[{"attributes":{"icon":"","url":"/swagger-ui.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"104","parentId":"77","text":"swagger"},{"attributes":{"icon":"fa fa-code","url":"common/generator"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"48","parentId":"77","text":"代码生成"},{"attributes":{"icon":"fa fa-hourglass-1","url":"common/job"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"72","parentId":"77","text":"计划任务"}],"hasChildren":true,"hasParent":false,"id":"77","parentId":"0","text":"系统工具"},{"attributes":{"icon":"fa fa-video-camera","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user","url":"sys/online"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"92","parentId":"91","text":"在线用户"},{"attributes":{"icon":"fa fa-warning","url":"common/log"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"27","parentId":"91","text":"系统日志"},{"attributes":{"icon":"fa fa-caret-square-o-right","url":"/druid/index.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"57","parentId":"91","text":"运行监控"}],"hasChildren":true,"hasParent":false,"id":"91","parentId":"0","text":"系统监控"},{"attributes":{"icon":"fa fa-laptop","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-pencil-square","url":"oa/notify"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"85","parentId":"84","text":"通知公告"},{"attributes":{"icon":"fa fa-envelope-square","url":"oa/notify/selfNotify"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"90","parentId":"84","text":"我的通知"}],"hasChildren":true,"hasParent":false,"id":"84","parentId":"0","text":"办公管理"},{"attributes":{"icon":"fa fa-print","url":""},"checked":false,"children":[{"attributes":{"icon":"","url":"activiti/task/todo"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"101","parentId":"93","text":"待办任务"},{"attributes":{"icon":"fa fa-sort-amount-asc","url":"activiti/model"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"94","parentId":"93","text":"模型管理"},{"attributes":{"icon":"fa fa-flag","url":"activiti/process"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"96","parentId":"93","text":"流程管理"}],"hasChildren":true,"hasParent":false,"id":"93","parentId":"0","text":"工作流程"},{"attributes":{"icon":"fa fa-rss","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-edit","url":"/blog/bContent/add"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"68","parentId":"49","text":"发布文章"},{"(String), 127.0.0.1(String), 2019-06-04 18:06:58.858(Timestamp)
2019-06-04 18:06:58 -请求地址 : http://localhost:8888/main
2019-06-04 18:06:58 -HTTP METHOD : GET
2019-06-04 18:06:58 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-04 18:06:58 -参数 : []
2019-06-04 18:06:58 -耗时 : 0
2019-06-04 18:06:58 -返回值 : main
2019-06-04 18:06:58 -<==    Updates: 1
2019-06-04 18:06:59 -请求地址 : http://localhost:8888/oa/notify/message
2019-06-04 18:06:59 -HTTP METHOD : GET
2019-06-04 18:06:59 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-06-04 18:06:59 -参数 : []
2019-06-04 18:06:59 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-06-04 18:06:59 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-06-04 18:06:59 -<==      Total: 0
2019-06-04 18:06:59 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-06-04 18:06:59 -==> Parameters: 1(Long), 0(String)
2019-06-04 18:06:59 -<==      Total: 1
2019-06-04 18:06:59 -耗时 : 3
2019-06-04 18:06:59 -返回值 : com.bootdo.common.utils.PageUtils@1df2381c
2019-06-04 18:06:59 -请求地址 : http://localhost:8888/main
2019-06-04 18:06:59 -HTTP METHOD : GET
2019-06-04 18:06:59 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-04 18:06:59 -参数 : []
2019-06-04 18:06:59 -耗时 : 1
2019-06-04 18:06:59 -返回值 : main
2019-06-04 18:07:01 -请求地址 : http://localhost:8888/xjbg/room/roomMng
2019-06-04 18:07:01 -HTTP METHOD : GET
2019-06-04 18:07:01 -CLASS_METHOD : com.bootdo.xjbg.controller.RoomController.roomMng
2019-06-04 18:07:01 -参数 : [{}]
2019-06-04 18:07:01 -==>  Preparing: select `id`,`room_no`,`room_type`,`floor`,`room_state`,`price`,`create_time`,`update_time`,`create_user`,`update_user` from xjbg_room 
2019-06-04 18:07:01 -==> Parameters: 
2019-06-04 18:07:01 -<==      Total: 8
2019-06-04 18:07:01 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 18:07:01 -==> Parameters: room_type(String)
2019-06-04 18:07:01 -<==      Total: 7
2019-06-04 18:07:01 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 18:07:01 -==> Parameters: floor(String)
2019-06-04 18:07:01 -<==      Total: 5
2019-06-04 18:07:01 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 18:07:01 -==> Parameters: room_state(String)
2019-06-04 18:07:01 -<==      Total: 2
2019-06-04 18:07:01 -==>  Preparing: select * from sys_user 
2019-06-04 18:07:01 -==> Parameters: 
2019-06-04 18:07:01 -<==      Total: 11
2019-06-04 18:07:01 -耗时 : 8
2019-06-04 18:07:01 -返回值 : xjbg/room/roomMng
2019-06-04 18:07:01 -请求地址 : http://localhost:8888/xjbg/room/operation/1
2019-06-04 18:07:01 -HTTP METHOD : GET
2019-06-04 18:07:01 -CLASS_METHOD : com.bootdo.xjbg.controller.RoomController.operation
2019-06-04 18:07:01 -参数 : [1, {}]
2019-06-04 18:07:01 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 18:07:01 -==> Parameters: room_type(String)
2019-06-04 18:07:01 -<==      Total: 7
2019-06-04 18:07:01 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 18:07:01 -==> Parameters: floor(String)
2019-06-04 18:07:01 -<==      Total: 5
2019-06-04 18:07:01 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 18:07:01 -==> Parameters: room_state(String)
2019-06-04 18:07:01 -<==      Total: 2
2019-06-04 18:07:01 -==>  Preparing: select * from sys_user 
2019-06-04 18:07:01 -==> Parameters: 
2019-06-04 18:07:01 -<==      Total: 11
2019-06-04 18:07:01 -==>  Preparing: select `id`,`product_name`,`purchase_price`,`selling_price`,`product_pic`,`create_time`,`create_user`,`update_time`,`update_user` from xjbg_product order by id desc 
2019-06-04 18:07:01 -==> Parameters: 
2019-06-04 18:07:01 -<==      Total: 5
2019-06-04 18:07:01 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 18:07:01 -==> Parameters: order_type(String)
2019-06-04 18:07:01 -<==      Total: 3
2019-06-04 18:07:01 -==>  Preparing: select `id`,`room_no`,`room_type`,`floor`,`room_state`,`price`,`create_time`,`update_time`,`create_user`,`update_user` from xjbg_room where id = ? 
2019-06-04 18:07:01 -==> Parameters: 1(Integer)
2019-06-04 18:07:01 -<==      Total: 1
2019-06-04 18:07:01 -耗时 : 11
2019-06-04 18:07:01 -返回值 : xjbg/room/operation
2019-06-04 18:07:10 -Required OrderDO parameter 'order' is not present
org.springframework.web.bind.MissingServletRequestParameterException: Required OrderDO parameter 'order' is not present
	at org.springframework.web.method.annotation.RequestParamMethodArgumentResolver.handleMissingValue(RequestParamMethodArgumentResolver.java:204)
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:112)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:124)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:161)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:131)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2019-06-04 18:07:10 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-04 18:07:10 -Resolved exception caused by Handler execution: org.springframework.web.bind.MissingServletRequestParameterException: Required OrderDO parameter 'order' is not present
2019-06-04 18:07:10 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8888/xjbg/room/kaifan(String), org.springframework.web.bind.MissingServletRequestParameterException: Required OrderDO parameter 'order' is not present(String), null, 2019-06-04 18:07:10.329(Timestamp)
2019-06-04 18:07:10 -请求地址 : http://localhost:8888/xjbg/room/operation/1
2019-06-04 18:07:10 -HTTP METHOD : GET
2019-06-04 18:07:10 -CLASS_METHOD : com.bootdo.xjbg.controller.RoomController.operation
2019-06-04 18:07:10 -参数 : [1, {}]
2019-06-04 18:07:10 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 18:07:10 -==> Parameters: room_type(String)
2019-06-04 18:07:10 -<==      Total: 7
2019-06-04 18:07:10 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 18:07:10 -==> Parameters: floor(String)
2019-06-04 18:07:10 -<==      Total: 5
2019-06-04 18:07:10 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 18:07:10 -==> Parameters: room_state(String)
2019-06-04 18:07:10 -<==      Total: 2
2019-06-04 18:07:10 -==>  Preparing: select * from sys_user 
2019-06-04 18:07:10 -==> Parameters: 
2019-06-04 18:07:10 -<==      Total: 11
2019-06-04 18:07:10 -==>  Preparing: select `id`,`product_name`,`purchase_price`,`selling_price`,`product_pic`,`create_time`,`create_user`,`update_time`,`update_user` from xjbg_product order by id desc 
2019-06-04 18:07:10 -==> Parameters: 
2019-06-04 18:07:10 -<==      Total: 5
2019-06-04 18:07:10 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 18:07:10 -==> Parameters: order_type(String)
2019-06-04 18:07:10 -<==      Total: 3
2019-06-04 18:07:10 -==>  Preparing: select `id`,`room_no`,`room_type`,`floor`,`room_state`,`price`,`create_time`,`update_time`,`create_user`,`update_user` from xjbg_room where id = ? 
2019-06-04 18:07:10 -==> Parameters: 1(Integer)
2019-06-04 18:07:10 -<==      Total: 1
2019-06-04 18:07:10 -耗时 : 8
2019-06-04 18:07:10 -返回值 : xjbg/room/operation
2019-06-04 18:07:10 -<==    Updates: 1
2019-06-04 18:07:19 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-04 18:07:19 -Required OrderDO parameter 'order' is not present
org.springframework.web.bind.MissingServletRequestParameterException: Required OrderDO parameter 'order' is not present
	at org.springframework.web.method.annotation.RequestParamMethodArgumentResolver.handleMissingValue(RequestParamMethodArgumentResolver.java:204)
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:112)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:124)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:161)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:131)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2019-06-04 18:07:19 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8888/xjbg/room/kaifan(String), org.springframework.web.bind.MissingServletRequestParameterException: Required OrderDO parameter 'order' is not present(String), null, 2019-06-04 18:07:19.07(Timestamp)
2019-06-04 18:07:19 -Resolved exception caused by Handler execution: org.springframework.web.bind.MissingServletRequestParameterException: Required OrderDO parameter 'order' is not present
2019-06-04 18:07:19 -<==    Updates: 1
2019-06-04 18:07:28 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-04 18:07:28 -Required OrderDO parameter 'order' is not present
org.springframework.web.bind.MissingServletRequestParameterException: Required OrderDO parameter 'order' is not present
	at org.springframework.web.method.annotation.RequestParamMethodArgumentResolver.handleMissingValue(RequestParamMethodArgumentResolver.java:204)
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:112)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:124)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:161)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:131)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2019-06-04 18:07:28 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8888/xjbg/room/kaifan(String), org.springframework.web.bind.MissingServletRequestParameterException: Required OrderDO parameter 'order' is not present(String), null, 2019-06-04 18:07:28.476(Timestamp)
2019-06-04 18:07:28 -Resolved exception caused by Handler execution: org.springframework.web.bind.MissingServletRequestParameterException: Required OrderDO parameter 'order' is not present
2019-06-04 18:07:28 -<==    Updates: 1
2019-06-04 18:07:34 -请求地址 : http://localhost:8888/index
2019-06-04 18:07:34 -HTTP METHOD : GET
2019-06-04 18:07:34 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-06-04 18:07:34 -参数 : [{}]
2019-06-04 18:07:34 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-06-04 18:07:34 -==> Parameters: 1(Long)
2019-06-04 18:07:34 -<==      Total: 34
2019-06-04 18:07:34 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-06-04 18:07:34 -==> Parameters: 144(Long)
2019-06-04 18:07:34 -<==      Total: 1
2019-06-04 18:07:34 -耗时 : 6
2019-06-04 18:07:34 -返回值 : index_v1
2019-06-04 18:07:34 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-04 18:07:34 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 6(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-hotel","url":""},"checked":false,"children":[{"attributes":{"icon":"","url":"/xjbg/room/roomMng"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"105","text":"开房"},{"attributes":{"icon":"fa fa-bed","url":"/xjbg/room"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"106","parentId":"105","text":"房间管理"},{"attributes":{"icon":"","url":"/xjbg/product"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"105","text":"商品管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"欣吉宾馆"},{"attributes":{"icon":"fa fa-commenting","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user","url":"/weixin/weixinUser"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"109","text":"用户管理"}],"hasChildren":true,"hasParent":false,"id":"109","parentId":"0","text":"微信管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","text":"基础管理"},{"attributes":{"icon":"fa fa-desktop"},"checked":false,"children":[{"attributes":{"icon":"fa fa-user","url":"sys/user/"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"6","parentId":"3","text":"用户管理"},{"attributes":{"icon":"fa fa-paw","url":"sys/role"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"7","parentId":"3","text":"角色管理"},{"attributes":{"icon":"fa fa-th-list","url":"sys/menu/"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"3","text":"系统菜单"},{"attributes":{"icon":"fa fa-users","url":"/system/sysDept"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"73","parentId":"3","text":"部门管理"}],"hasChildren":true,"hasParent":false,"id":"3","parentId":"0","text":"系统管理"},{"attributes":{"icon":"fa fa-gear","url":""},"checked":false,"children":[{"attributes":{"icon":"","url":"/swagger-ui.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"104","parentId":"77","text":"swagger"},{"attributes":{"icon":"fa fa-code","url":"common/generator"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"48","parentId":"77","text":"代码生成"},{"attributes":{"icon":"fa fa-hourglass-1","url":"common/job"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"72","parentId":"77","text":"计划任务"}],"hasChildren":true,"hasParent":false,"id":"77","parentId":"0","text":"系统工具"},{"attributes":{"icon":"fa fa-video-camera","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user","url":"sys/online"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"92","parentId":"91","text":"在线用户"},{"attributes":{"icon":"fa fa-warning","url":"common/log"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"27","parentId":"91","text":"系统日志"},{"attributes":{"icon":"fa fa-caret-square-o-right","url":"/druid/index.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"57","parentId":"91","text":"运行监控"}],"hasChildren":true,"hasParent":false,"id":"91","parentId":"0","text":"系统监控"},{"attributes":{"icon":"fa fa-laptop","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-pencil-square","url":"oa/notify"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"85","parentId":"84","text":"通知公告"},{"attributes":{"icon":"fa fa-envelope-square","url":"oa/notify/selfNotify"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"90","parentId":"84","text":"我的通知"}],"hasChildren":true,"hasParent":false,"id":"84","parentId":"0","text":"办公管理"},{"attributes":{"icon":"fa fa-print","url":""},"checked":false,"children":[{"attributes":{"icon":"","url":"activiti/task/todo"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"101","parentId":"93","text":"待办任务"},{"attributes":{"icon":"fa fa-sort-amount-asc","url":"activiti/model"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"94","parentId":"93","text":"模型管理"},{"attributes":{"icon":"fa fa-flag","url":"activiti/process"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"96","parentId":"93","text":"流程管理"}],"hasChildren":true,"hasParent":false,"id":"93","parentId":"0","text":"工作流程"},{"attributes":{"icon":"fa fa-rss","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-edit","url":"/blog/bContent/add"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"68","parentId":"49","text":"发布文章"},{"(String), 127.0.0.1(String), 2019-06-04 18:07:34.707(Timestamp)
2019-06-04 18:07:34 -请求地址 : http://localhost:8888/main
2019-06-04 18:07:34 -HTTP METHOD : GET
2019-06-04 18:07:34 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-04 18:07:34 -参数 : []
2019-06-04 18:07:34 -耗时 : 0
2019-06-04 18:07:34 -返回值 : main
2019-06-04 18:07:34 -<==    Updates: 1
2019-06-04 18:07:35 -请求地址 : http://localhost:8888/oa/notify/message
2019-06-04 18:07:35 -HTTP METHOD : GET
2019-06-04 18:07:35 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-06-04 18:07:35 -参数 : []
2019-06-04 18:07:35 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-06-04 18:07:35 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-06-04 18:07:35 -<==      Total: 0
2019-06-04 18:07:35 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-06-04 18:07:35 -==> Parameters: 1(Long), 0(String)
2019-06-04 18:07:35 -<==      Total: 1
2019-06-04 18:07:35 -耗时 : 2
2019-06-04 18:07:35 -返回值 : com.bootdo.common.utils.PageUtils@77ed8d6f
2019-06-04 18:07:35 -请求地址 : http://localhost:8888/main
2019-06-04 18:07:35 -HTTP METHOD : GET
2019-06-04 18:07:35 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-04 18:07:35 -参数 : []
2019-06-04 18:07:35 -耗时 : 0
2019-06-04 18:07:35 -返回值 : main
2019-06-04 18:07:37 -请求地址 : http://localhost:8888/xjbg/room/roomMng
2019-06-04 18:07:37 -HTTP METHOD : GET
2019-06-04 18:07:37 -CLASS_METHOD : com.bootdo.xjbg.controller.RoomController.roomMng
2019-06-04 18:07:37 -参数 : [{}]
2019-06-04 18:07:37 -==>  Preparing: select `id`,`room_no`,`room_type`,`floor`,`room_state`,`price`,`create_time`,`update_time`,`create_user`,`update_user` from xjbg_room 
2019-06-04 18:07:37 -==> Parameters: 
2019-06-04 18:07:37 -<==      Total: 8
2019-06-04 18:07:37 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 18:07:37 -==> Parameters: room_type(String)
2019-06-04 18:07:37 -<==      Total: 7
2019-06-04 18:07:37 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 18:07:37 -==> Parameters: floor(String)
2019-06-04 18:07:37 -<==      Total: 5
2019-06-04 18:07:37 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 18:07:37 -==> Parameters: room_state(String)
2019-06-04 18:07:37 -<==      Total: 2
2019-06-04 18:07:37 -==>  Preparing: select * from sys_user 
2019-06-04 18:07:37 -==> Parameters: 
2019-06-04 18:07:37 -<==      Total: 11
2019-06-04 18:07:37 -耗时 : 7
2019-06-04 18:07:37 -返回值 : xjbg/room/roomMng
2019-06-04 18:07:37 -请求地址 : http://localhost:8888/xjbg/room/operation/1
2019-06-04 18:07:37 -HTTP METHOD : GET
2019-06-04 18:07:37 -CLASS_METHOD : com.bootdo.xjbg.controller.RoomController.operation
2019-06-04 18:07:37 -参数 : [1, {}]
2019-06-04 18:07:37 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 18:07:37 -==> Parameters: room_type(String)
2019-06-04 18:07:37 -<==      Total: 7
2019-06-04 18:07:37 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 18:07:37 -==> Parameters: floor(String)
2019-06-04 18:07:37 -<==      Total: 5
2019-06-04 18:07:37 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 18:07:37 -==> Parameters: room_state(String)
2019-06-04 18:07:37 -<==      Total: 2
2019-06-04 18:07:37 -==>  Preparing: select * from sys_user 
2019-06-04 18:07:37 -==> Parameters: 
2019-06-04 18:07:37 -<==      Total: 11
2019-06-04 18:07:37 -==>  Preparing: select `id`,`product_name`,`purchase_price`,`selling_price`,`product_pic`,`create_time`,`create_user`,`update_time`,`update_user` from xjbg_product order by id desc 
2019-06-04 18:07:37 -==> Parameters: 
2019-06-04 18:07:37 -<==      Total: 5
2019-06-04 18:07:37 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 18:07:37 -==> Parameters: order_type(String)
2019-06-04 18:07:37 -<==      Total: 3
2019-06-04 18:07:37 -==>  Preparing: select `id`,`room_no`,`room_type`,`floor`,`room_state`,`price`,`create_time`,`update_time`,`create_user`,`update_user` from xjbg_room where id = ? 
2019-06-04 18:07:37 -==> Parameters: 1(Integer)
2019-06-04 18:07:37 -<==      Total: 1
2019-06-04 18:07:37 -耗时 : 10
2019-06-04 18:07:37 -返回值 : xjbg/room/operation
2019-06-04 18:07:44 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-04 18:07:44 -Required OrderDO parameter 'order' is not present
org.springframework.web.bind.MissingServletRequestParameterException: Required OrderDO parameter 'order' is not present
	at org.springframework.web.method.annotation.RequestParamMethodArgumentResolver.handleMissingValue(RequestParamMethodArgumentResolver.java:204)
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:112)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:124)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:161)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:131)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2019-06-04 18:07:44 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8888/xjbg/room/kaifan(String), org.springframework.web.bind.MissingServletRequestParameterException: Required OrderDO parameter 'order' is not present(String), null, 2019-06-04 18:07:44.304(Timestamp)
2019-06-04 18:07:44 -Resolved exception caused by Handler execution: org.springframework.web.bind.MissingServletRequestParameterException: Required OrderDO parameter 'order' is not present
2019-06-04 18:07:44 -请求地址 : http://localhost:8888/xjbg/room/operation/1
2019-06-04 18:07:44 -HTTP METHOD : GET
2019-06-04 18:07:44 -CLASS_METHOD : com.bootdo.xjbg.controller.RoomController.operation
2019-06-04 18:07:44 -参数 : [1, {}]
2019-06-04 18:07:44 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 18:07:44 -==> Parameters: room_type(String)
2019-06-04 18:07:44 -<==      Total: 7
2019-06-04 18:07:44 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 18:07:44 -==> Parameters: floor(String)
2019-06-04 18:07:44 -<==      Total: 5
2019-06-04 18:07:44 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 18:07:44 -==> Parameters: room_state(String)
2019-06-04 18:07:44 -<==      Total: 2
2019-06-04 18:07:44 -==>  Preparing: select * from sys_user 
2019-06-04 18:07:44 -==> Parameters: 
2019-06-04 18:07:44 -<==      Total: 11
2019-06-04 18:07:44 -==>  Preparing: select `id`,`product_name`,`purchase_price`,`selling_price`,`product_pic`,`create_time`,`create_user`,`update_time`,`update_user` from xjbg_product order by id desc 
2019-06-04 18:07:44 -==> Parameters: 
2019-06-04 18:07:44 -<==      Total: 5
2019-06-04 18:07:44 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 18:07:44 -==> Parameters: order_type(String)
2019-06-04 18:07:44 -<==      Total: 3
2019-06-04 18:07:44 -==>  Preparing: select `id`,`room_no`,`room_type`,`floor`,`room_state`,`price`,`create_time`,`update_time`,`create_user`,`update_user` from xjbg_room where id = ? 
2019-06-04 18:07:44 -==> Parameters: 1(Integer)
2019-06-04 18:07:44 -<==      Total: 1
2019-06-04 18:07:44 -耗时 : 9
2019-06-04 18:07:44 -返回值 : xjbg/room/operation
2019-06-04 18:07:44 -<==    Updates: 1
2019-06-04 18:08:04 -请求地址 : http://localhost:8888/index
2019-06-04 18:08:04 -HTTP METHOD : GET
2019-06-04 18:08:04 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-06-04 18:08:04 -参数 : [{}]
2019-06-04 18:08:04 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-06-04 18:08:04 -==> Parameters: 1(Long)
2019-06-04 18:08:04 -<==      Total: 34
2019-06-04 18:08:04 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-06-04 18:08:04 -==> Parameters: 144(Long)
2019-06-04 18:08:04 -<==      Total: 1
2019-06-04 18:08:04 -耗时 : 4
2019-06-04 18:08:04 -返回值 : index_v1
2019-06-04 18:08:04 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-04 18:08:04 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 4(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-hotel","url":""},"checked":false,"children":[{"attributes":{"icon":"","url":"/xjbg/room/roomMng"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"105","text":"开房"},{"attributes":{"icon":"fa fa-bed","url":"/xjbg/room"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"106","parentId":"105","text":"房间管理"},{"attributes":{"icon":"","url":"/xjbg/product"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"105","text":"商品管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"欣吉宾馆"},{"attributes":{"icon":"fa fa-commenting","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user","url":"/weixin/weixinUser"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"109","text":"用户管理"}],"hasChildren":true,"hasParent":false,"id":"109","parentId":"0","text":"微信管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","text":"基础管理"},{"attributes":{"icon":"fa fa-desktop"},"checked":false,"children":[{"attributes":{"icon":"fa fa-user","url":"sys/user/"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"6","parentId":"3","text":"用户管理"},{"attributes":{"icon":"fa fa-paw","url":"sys/role"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"7","parentId":"3","text":"角色管理"},{"attributes":{"icon":"fa fa-th-list","url":"sys/menu/"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"3","text":"系统菜单"},{"attributes":{"icon":"fa fa-users","url":"/system/sysDept"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"73","parentId":"3","text":"部门管理"}],"hasChildren":true,"hasParent":false,"id":"3","parentId":"0","text":"系统管理"},{"attributes":{"icon":"fa fa-gear","url":""},"checked":false,"children":[{"attributes":{"icon":"","url":"/swagger-ui.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"104","parentId":"77","text":"swagger"},{"attributes":{"icon":"fa fa-code","url":"common/generator"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"48","parentId":"77","text":"代码生成"},{"attributes":{"icon":"fa fa-hourglass-1","url":"common/job"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"72","parentId":"77","text":"计划任务"}],"hasChildren":true,"hasParent":false,"id":"77","parentId":"0","text":"系统工具"},{"attributes":{"icon":"fa fa-video-camera","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user","url":"sys/online"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"92","parentId":"91","text":"在线用户"},{"attributes":{"icon":"fa fa-warning","url":"common/log"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"27","parentId":"91","text":"系统日志"},{"attributes":{"icon":"fa fa-caret-square-o-right","url":"/druid/index.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"57","parentId":"91","text":"运行监控"}],"hasChildren":true,"hasParent":false,"id":"91","parentId":"0","text":"系统监控"},{"attributes":{"icon":"fa fa-laptop","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-pencil-square","url":"oa/notify"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"85","parentId":"84","text":"通知公告"},{"attributes":{"icon":"fa fa-envelope-square","url":"oa/notify/selfNotify"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"90","parentId":"84","text":"我的通知"}],"hasChildren":true,"hasParent":false,"id":"84","parentId":"0","text":"办公管理"},{"attributes":{"icon":"fa fa-print","url":""},"checked":false,"children":[{"attributes":{"icon":"","url":"activiti/task/todo"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"101","parentId":"93","text":"待办任务"},{"attributes":{"icon":"fa fa-sort-amount-asc","url":"activiti/model"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"94","parentId":"93","text":"模型管理"},{"attributes":{"icon":"fa fa-flag","url":"activiti/process"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"96","parentId":"93","text":"流程管理"}],"hasChildren":true,"hasParent":false,"id":"93","parentId":"0","text":"工作流程"},{"attributes":{"icon":"fa fa-rss","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-edit","url":"/blog/bContent/add"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"68","parentId":"49","text":"发布文章"},{"(String), 127.0.0.1(String), 2019-06-04 18:08:04.826(Timestamp)
2019-06-04 18:08:04 -<==    Updates: 1
2019-06-04 18:08:05 -请求地址 : http://localhost:8888/main
2019-06-04 18:08:05 -HTTP METHOD : GET
2019-06-04 18:08:05 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-04 18:08:05 -参数 : []
2019-06-04 18:08:05 -耗时 : 0
2019-06-04 18:08:05 -返回值 : main
2019-06-04 18:08:05 -请求地址 : http://localhost:8888/oa/notify/message
2019-06-04 18:08:05 -HTTP METHOD : GET
2019-06-04 18:08:05 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-06-04 18:08:05 -参数 : []
2019-06-04 18:08:05 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-06-04 18:08:05 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-06-04 18:08:05 -<==      Total: 0
2019-06-04 18:08:05 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-06-04 18:08:05 -==> Parameters: 1(Long), 0(String)
2019-06-04 18:08:05 -<==      Total: 1
2019-06-04 18:08:05 -耗时 : 3
2019-06-04 18:08:05 -返回值 : com.bootdo.common.utils.PageUtils@13a3f111
2019-06-04 18:08:05 -请求地址 : http://localhost:8888/main
2019-06-04 18:08:05 -HTTP METHOD : GET
2019-06-04 18:08:05 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-04 18:08:05 -参数 : []
2019-06-04 18:08:05 -耗时 : 1
2019-06-04 18:08:05 -返回值 : main
2019-06-04 18:08:06 -请求地址 : http://localhost:8888/xjbg/room/roomMng
2019-06-04 18:08:06 -HTTP METHOD : GET
2019-06-04 18:08:06 -CLASS_METHOD : com.bootdo.xjbg.controller.RoomController.roomMng
2019-06-04 18:08:06 -参数 : [{}]
2019-06-04 18:08:06 -==>  Preparing: select `id`,`room_no`,`room_type`,`floor`,`room_state`,`price`,`create_time`,`update_time`,`create_user`,`update_user` from xjbg_room 
2019-06-04 18:08:06 -==> Parameters: 
2019-06-04 18:08:06 -<==      Total: 8
2019-06-04 18:08:06 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 18:08:06 -==> Parameters: room_type(String)
2019-06-04 18:08:06 -<==      Total: 7
2019-06-04 18:08:06 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 18:08:06 -==> Parameters: floor(String)
2019-06-04 18:08:06 -<==      Total: 5
2019-06-04 18:08:06 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 18:08:06 -==> Parameters: room_state(String)
2019-06-04 18:08:06 -<==      Total: 2
2019-06-04 18:08:06 -==>  Preparing: select * from sys_user 
2019-06-04 18:08:06 -==> Parameters: 
2019-06-04 18:08:06 -<==      Total: 11
2019-06-04 18:08:06 -耗时 : 9
2019-06-04 18:08:06 -返回值 : xjbg/room/roomMng
2019-06-04 18:08:06 -请求地址 : http://localhost:8888/xjbg/room/operation/1
2019-06-04 18:08:06 -HTTP METHOD : GET
2019-06-04 18:08:06 -CLASS_METHOD : com.bootdo.xjbg.controller.RoomController.operation
2019-06-04 18:08:06 -参数 : [1, {}]
2019-06-04 18:08:06 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 18:08:06 -==> Parameters: room_type(String)
2019-06-04 18:08:06 -<==      Total: 7
2019-06-04 18:08:06 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 18:08:06 -==> Parameters: floor(String)
2019-06-04 18:08:06 -<==      Total: 5
2019-06-04 18:08:06 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 18:08:06 -==> Parameters: room_state(String)
2019-06-04 18:08:06 -<==      Total: 2
2019-06-04 18:08:06 -==>  Preparing: select * from sys_user 
2019-06-04 18:08:06 -==> Parameters: 
2019-06-04 18:08:06 -<==      Total: 11
2019-06-04 18:08:06 -==>  Preparing: select `id`,`product_name`,`purchase_price`,`selling_price`,`product_pic`,`create_time`,`create_user`,`update_time`,`update_user` from xjbg_product order by id desc 
2019-06-04 18:08:06 -==> Parameters: 
2019-06-04 18:08:06 -<==      Total: 5
2019-06-04 18:08:06 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by 'value' desc 
2019-06-04 18:08:06 -==> Parameters: order_type(String)
2019-06-04 18:08:06 -<==      Total: 3
2019-06-04 18:08:06 -==>  Preparing: select `id`,`room_no`,`room_type`,`floor`,`room_state`,`price`,`create_time`,`update_time`,`create_user`,`update_user` from xjbg_room where id = ? 
2019-06-04 18:08:06 -==> Parameters: 1(Integer)
2019-06-04 18:08:06 -<==      Total: 1
2019-06-04 18:08:06 -耗时 : 14
2019-06-04 18:08:06 -返回值 : xjbg/room/operation
